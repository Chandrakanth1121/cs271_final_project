rcr
jg
pusha
into
(bad)
cli
xor
xor
fildll
xchg
and
adc
leave
jns
jle
cmpsl
out
imull
and
push
jns
dec
test
pop
iret
xchg
mov
add
out
mov
cmpsb
dec
push
(bad)
jp
(bad)
xor
cmpsb
push
dec
mov
or
add
xchg
fwait
pop
sbb
pop
sahf
movb
nop
mov
and
push
mov
cmp
xchg
xchg
pop
jae
ljmp
aaa
xchg
push
dec
mov
cli
aam
sub
mov
pop
mov
add
fistpll
cmp
xor
in
ficompl
inc
inc
or
sub
xchg
sbb
jnp
aad
fmuls
push
in
and
test
xor
arpl
aaa
mov
movsl
or
add
fildl
adc
shlb
cltd
mov
rcrl
pushf
push
pusha
out
mov
data16
jb
adc
addr16
push
aam
ja
gs
jle
jno
out
sbb
mov
xchg
stc
mov
gs
mov
stos
jae
pop
cltd
in
(bad)
cmpsl
add
adc
push
cmp
cmpsl
pushf
push
jg
push
sahf
es
add
xor
sbb
lods
leave
cwtl
xchg
(bad)
movsl
mov
mov
notb
fs
push
das
pushf
or
inc
push
add
xor
loopne
mov
out
xchg
daa
aam
cmpsb
scas
loopne
push
test
outsl
xor
cmp
or
dec
dec
add
(bad)
sub
shll
jo
mov
int
shl
pop
imul
aad
(bad)
sbb
mov
cmpsb
inc
inc
jbe
sub
push
leave
shlb
pusha
outsl
pop
int
rclb
jle
jnp
cmpb
out
les
cmp
mov
push
adc
jle
pop
out
testl
imul
stos
les
loopne
jne
lret
push
jle
stos
or
(bad)
lea
(bad)
sahf
int
clc
into
lods
or
iret
xchg
and
int1
adc
lcall
stc
in
out
push
nop
mov
jge
sub
aaa
aas
jmp
int
push
mov
loop
adc
rcl
cli
test
rolb
daa
imul
mov
or
lea
or
lret
push
ret
add
mov
jp
into
mov
push
cmpsl
sub
cs
subl
shr
inc
mov
gs
add
loopne
(bad)
sub
scas
gs
cmp
adc
in
popa
xor
push
enter
hlt
stc
cmpsl
push
sub
jecxz
sti
or
stc
lahf
cmc
int
ljmp
lea
cwtl
or
sarl
sub
and
aam
xor
call
dec
imul
mov
dec
pop
hlt
daa
add
pushf
add
push
jge
cli
lret
mov
mov
rol
aaa
fnstenv
cmpsb
sbb
cmp
and
cmpsl
enter
mov
(bad)
aad
sbb
xor
fdivrs
mov
inc
mov
shlb
xchg
sbbl
and
mov
add
mov
jp
pop
add
in
in
xor
pand
push
scas
xchg
ret
mov
int3
shr
repz
push
arpl
enter
mov
pop
in
rcrb
or
shl
fdivl
int1
cltd
sbb
sarb
clc
out
push
ret
or
cmp
pop
pop
in
in
add
jg
mov
rorb
fisubl
and
out
mov
iret
cmp
sti
adcb
inc
push
sbb
push
xchg
std
enter
mov
mov
push
clc
adc
and
jge
bound
cs
nop
mov
daa
sbb
ss
jne
xchg
outsb
jp
(bad)
fildll
adc
lahf
mov
xchg
dec
or
(bad)
mov
push
loope
mov
jmp
aad
repnz
and
adc
aam
(bad)
and
int1
jns
sbb
cmp
aad
jmp
es
outsl
scas
pop
push
mov
(bad)
jne
or
jge
std
pop
xchg
jnp
sbb
inc
pusha
mov
filds
stos
(bad)
ljmp
inc
fs
es
(bad)
lret
pop
pusha
push
add
sub
jb
mov
stos
aaa
aad
inc
rcr
inc
and
(bad)
cltd
and
dec
jns
mov
sahf
outsl
inc
jge
stos
les
gs
cli
jl
hlt
jnp
adc
mov
cltd
cmp
(bad)
sub
test
cmpsb
dec
bound
lock
dec
add
inc
ret
lret
mov
dec
sti
cmp
aad
arpl
(bad)
sti
lock
mov
cmc
lret
xorb
dec
xchg
push
leave
out
or
shrb
and
mov
loopne
mov
loopne
int3
add
jmp
and
mov
loopne
in
dec
scas
cmp
add
imul
dec
sub
add
push
ljmp
sahf
cmp
sub
push
mov
mov
mov
push
pusha
(bad)
rcrb
aam
shll
add
inc
pop
sub
lcall
(bad)
adc
inc
mov
or
push
xchg
rcrl
sbb
mov
sub
dec
imul
xlat
pop
ss
rorl
sub
adc
mov
mov
sub
(bad)
cltd
xor
jae
movsl
pusha
pop
inc
cmp
and
add
sub
dec
mov
push
sub
inc
and
(bad)
sbb
xlat
rcrb
fnstenv
xor
xchg
lock
mov
lods
inc
popa
adc
popf
pop
cmp
mov
negl
jp
popf
mov
(bad)
(bad)
jmp
jno
andl
jmp
jmp
arpl
incb
mov
ret
or
cwtl
(bad)
mov
mov
or
or
out
scas
xor
loopne
inc
pop
sti
dec
stos
inc
stos
(bad)
lock
jno
lret
mov
popa
add
movsb
test
or
push
in
dec
inc
inc
rcll
loop
sbb
adc
lret
fadds
out
outsl
jg
cli
add
or
mov
mov
mov
sbb
dec
push
sbbb
loop
jns
push
inc
sub
sbb
pusha
andl
cmc
pop
enter
mov
pop
out
sbb
lods
or
or
mov
ds
xor
adc
sbb
insb
testl
mov
ficompl
xor
mov
sub
sahf
jle
sbb
jae
xchg
ret
das
add
mov
dec
in
lcall
data16
pop
or
push
mov
mov
ficomps
lret
rcrb
push
shrb
xchg
andl
sbb
jge
repnz
or
xchg
mov
lods
and
imulb
sub
sarl
sub
lret
mov
mov
pop
mov
sub
loop
jmp
inc
test
test
clc
dec
stos
xchg
popf
shlb
mov
lock
lahf
sub
adc
mov
int1
(bad)
cld
cmp
mov
sub
add
fwait
ljmp
bound
out
daa
fcmovnb
scas
push
inc
cmpsb
cmp
iret
dec
sbb
pop
sahf
push
xchg
mov
aam
lcall
(bad)
jnp
mov
mov
nop
fbld
inc
mov
mov
and
stos
orb
add
pop
subb
and
adc
dec
xchg
outsb
aas
sbb
insl
insl
dec
mov
insb
fwait
dec
(bad)
add
sti
stos
inc
repz
jbe
loope
cmc
mov
jno
cmc
in
cmp
mov
fwait
cmpsb
in
xchg
inc
cmp
ja
cmp
frstor
movsb
push
adc
jge
push
fidivrl
cwtl
lret
dec
jns
test
bound
sub
mov
mov
cmp
dec
pop
cmc
cmp
test
dec
jo
adc
jbe
popf
or
sbb
push
sub
mov
add
mov
pop
cmp
mov
shrb
leave
push
add
xchg
mov
jns
lods
and
sbbl
mov
cli
sbb
sbbb
test
mov
jno
xchg
sar
leave
xor
push
or
sbb
mov
mov
sub
xchg
sbb
inc
aad
mov
movsb
or
les
test
mov
ficoml
int3
rclb
pop
inc
int3
push
out
sbb
ret
cmpsb
rcll
ret
xor
sub
push
jno
mov
cmc
arpl
xor
mov
sbb
push
(bad)
xchg
lahf
xchg
