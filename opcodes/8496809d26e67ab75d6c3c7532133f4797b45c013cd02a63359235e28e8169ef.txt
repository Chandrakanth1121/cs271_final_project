in
rcr
mov
push
iret
bnd
jno
out
add
aaa
pop
inc
daa
dec
(bad)
gs
mov
sbb
xchg
mov
rcr
cwtl
jge
jno
sbb
jns
orb
aam
cmp
or
shlb
(bad)
jecxz
fsts
fwait
adc
xor
push
lods
ja
ffreep
in
xor
loop
xlat
xchg
inc
das
pushf
jp
pusha
ret
in
fs
into
cmp
cld
lds
orb
(bad)
cmp
int1
lcall
xchg
cld
pop
es
jp
jne
cltd
sbb
(bad)
in
andl
dec
insl
jge
js
sarl
test
mov
inc
pop
pusha
test
pop
leave
nop
mov
mov
mov
xor
int
cld
mov
shrb
int
pop
gs
add
call
call
mov
cli
fs
out
mov
lods
shlb
mov
cmp
mov
fs
mov
aaa
xor
xor
stos
shr
mov
ds
mov
stos
in
cmp
sbb
xchg
les
inc
outsl
pop
adc
sub
hlt
cli
mov
int
rcr
outsl
stos
rolb
xlat
ret
add
pop
mov
dec
push
js
pushf
sti
cmp
enter
xor
mov
xor
mov
aaa
sbb
inc
xlat
xchg
pop
pop
enter
mov
orl
dec
adc
sbb
les
in
jl
xor
pushf
aaa
pop
mov
push
arpl
sbb
in
adc
push
jg
inc
xchg
inc
testl
das
in
cli
fdivrs
xchg
jmp
add
fwait
lds
jnp
push
cld
imul
(bad)
pop
mov
dec
addl
cli
(bad)
and
push
fldt
add
xchg
clc
mov
les
mov
dec
rorb
lahf
pop
cwtl
fldt
sbb
daa
int1
cltd
pusha
inc
shlb
fucomip
js
stos
std
div
std
lea
shlb
xchg
(bad)
dec
sar
and
push
iret
inc
jb
inc
xchg
push
mov
adc
fnstenv
jne
lea
mov
jb
adc
cli
out
daa
out
push
cmp
les
cltd
and
clc
dec
or
sub
inc
mov
test
fstps
jp
push
xor
push
and
push
lods
xor
sub
jecxz
fs
repnz
pop
cli
in
in
adc
pop
shlb
je
cs
sub
lods
int1
data16
xor
fidivs
rorb
in
lds
scas
xor
mov
cmc
mov
ds
inc
fsts
addr16
mov
mov
sbb
aad
mov
stc
inc
scas
add
in
and
popa
or
imul
jecxz
movsl
lds
and
mov
push
inc
jo
movsl
(bad)
in
ljmp
popf
ljmp
pop
sbb
sbb
iret
(bad)
loopne
popa
sub
pop
xchg
and
out
push
inc
mov
push
xchg
dec
sub
mov
pop
rol
out
stos
pop
popa
sub
in
mov
movsl
(bad)
mov
inc
mov
pop
mov
mov
ljmp
popf
lock
cld
fwait
cltd
popf
adc
inc
loope
shll
dec
std
xor
lds
inc
cmp
cmpb
lret
cmc
loopne
sbb
xchg
int3
jnp
je
fwait
shl
mov
or
mov
jnp
cli
pop
pop
arpl
pop
mov
mov
mov
adc
arpl
int
jle
test
(bad)
test
jl
jg
sbb
pop
mov
push
js
rcll
sarb
sbb
jge
inc
jg
fcoml
dec
gs
fistpll
scas
sti
in
cli
insl
fsubs
push
ret
jnp
mov
cltd
pop
in
aaa
sbb
dec
and
stos
mov
(bad)
shlb
mov
sub
or
sbb
sbb
lcall
xchg
int
inc
ficoml
stos
sub
incl
ljmp
addr16
sti
imul
hlt
mov
pusha
sub
stos
push
repz
imul
test
jge
pop
xchg
out
ficomps
mov
push
sahf
inc
jns
dec
mov
mov
movsl
test
int1
cmp
movsl
inc
fistps
xorb
pop
sbb
inc
jg
int3
inc
int1
jo
repz
(bad)
std
adc
call
out
(bad)
mov
add
xor
pop
das
stos
call
in
inc
into
jle
push
xchg
hlt
sahf
push
stos
loopne
loop
mov
sbb
fisubrl
jns
(bad)
jbe
stc
or
mov
gs
jg
cli
mov
test
out
(bad)
xchg
movsb
xchg
int1
xchg
in
int1
shl
(bad)
cmp
inc
dec
movsl
add
(bad)
nop
(bad)
dec
js
cmp
test
or
mov
inc
cmpsb
mov
or
imul
insl
cli
pusha
pop
xor
mov
sbb
mov
arpl
xchg
out
cmp
ficoms
imul
and
mov
movsb
push
int1
mov
pusha
imul
shlb
(bad)
mov
jno
jb
jge
(bad)
xchg
std
fstpt
jl
lds
ljmp
cld
mov
test
or
xor
xor
cld
insb
sti
sbb
shll
dec
jg
xlat
out
adc
push
jmp
jg
shlb
push
inc
in
dec
and
pop
(bad)
cld
sbb
cmp
aam
jle
fsubrl
sbb
push
rclb
int1
inc
rclb
add
orb
mov
mov
cltd
orb
xor
cmp
fcoml
dec
lahf
adc
cli
jl
push
or
pop
imul
loop,pn
scas
(bad)
repz
adc
jecxz
xchg
pop
pusha
enter
pop
mov
roll
push
repz
pop
mov
movsl
popa
add
fisubrs
or
loop
push
or
enter
cli
xchg
jp
mov
test
imul
mov
add
mov
(bad)
js
cld
ss
decl
or
adc
sbb
ret
dec
out
fsubrl
out
xor
inc
cltd
push
divb
pop
jbe
repnz
pop
(bad)
dec
sbb
fs
pop
push
add
aaa
push
lahf
popa
lods
xchg
sahf
dec
pop
mov
inc
js
rcl
cmp
ja
push
xchg
out
cmp
sub
(bad)
push
inc
add
or
popf
imul
mov
(bad)
pop
mov
jb
mov
jbe
mov
and
arpl
mov
cmp
lods
jne
mov
fwait
mov
mov
push
(bad)
xor
mov
mov
inc
sub
aam
popf
mov
pop
sti
in
pusha
pop
sahf
xchg
lds
xchg
out
je
xchg
clc
sub
insl
fs
filds
mov
aam
pushf
(bad)
sbbb
scas
mov
dec
fwait
sub
push
xchg
outsl
daa
rcl
jmp
xor
lods
movsb
pop
jbe
mov
mov
dec
and
mov
loop
xlat
xor
imul
push
jno
es
xchg
aaa
les
insl
sub
xchg
sbb
push
cmpsb
cld
outsb
xchg
jae
in
mov
jo
lock
test
pop
outsl
mov
mov
dec
imul
pop
mov
adc
mov
xchg
int1
mov
int1
stc
aas
mov
loop
lock
adc
jbe
mov
xor
lds
loopne
scas
(bad)
mov
mov
add
fidivs
sti
add
mov
xchg
test
and
add
adc
jp
shll
ja
dec
xchg
mov
aam
mov
outsl
mov
cmc
in
mov
mov
sub
shlb
into
lds
cmp
out
loope
xchg
nop
popa
fwait
(bad)
mov
pop
fbld
pop
sahf
or
inc
int
or
jne
push
dec
pop
sti
fstps
hlt
loope
ss
ret
adc
scas
adc
lahf
inc
xchg
ljmp
sbb
mov
dec
cmp
out
dec
aad
mov
cwtl
mov
mov
jle
popa
sub
mov
pushf
adc
enter
inc
cmp
mov
insb
xlat
movsl
ja
sub
roll
push
shr
fsubl
and
sbb
cmp
sub
int
in
shl
arpl
scas
(bad)
