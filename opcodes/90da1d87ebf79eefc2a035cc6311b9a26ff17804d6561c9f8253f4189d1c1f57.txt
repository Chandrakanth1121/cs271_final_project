out
adc
xchg
ret
loop
dec
xchg
loop
dec
lea
push
test
and
fdivrs
int3
rorb
jecxz
popa
inc
mov
rcrb
adc
dec
adc
or
jmp
outsl
dec
shl
sbb
into
jnp
js
add
xor
sarl
(bad)
pop
or
inc
push
adc
daa
inc
(bad)
xchg
shrl
insl
or
add
mov
jo
adc
jb,pt
pop
fcmove
cld
mov
fisttpll
dec
repnz
(bad)
addr16
lea
into
shll
stos
fidivl
test
adc
insl
mov
inc
adc
call
or
xchg
adc
cmp
pop
call
or
push
pop
(bad)
xor
into
and
jne
lahf
adc
push
sub
out
sub
(bad)
adc
mov
adc
pop
insb
inc
dec
loope
jp
jo
dec
xor
shlb
push
fucomip
pop
nop
xor
add
cmp
ret
lock
clc
and
mov
or
ror
ss
mov
mov
arpl
push
pushf
cwtl
rcrl
pushf
sub
dec
sbb
lahf
lods
mov
in
inc
test
push
sbb
add
inc
fs
jae
pop
push
sbb
cmp
out
adc
lock
pop
sub
es
(bad)
loopne
lea
sbb
js
jbe
pusha
imul
test
outsb
xchg
out
cmpsl
jle
lock
jle
loop
addr16
mov
in
and
mov
out
mov
repnz
scas
inc
popa
insb
jp
lock
inc
jl
pop
adc
fnstsw
pop
xchg
jo
ss
jecxz
dec
pushf
lock
mov
mov
and
mov
mov
iret
ss
jb
into
adc
and
pop
dec
(bad)
cltd
sub
and
pop
dec
call
inc
movsb
push
mov
xchg
aaa
xor
aas
mov
ficompl
ss
and
jo
jb
xchg
cmp
ficomps
insl
push
xor
inc
mov
fdivrp
jae
xchg
arpl
stos
fildll
paddusb
andnps
xchg
xor
test
cltd
hlt
adc
fs
pop
es
enter
sbb
dec
fsubrs
mov
sub
push
push
jne
imul
rorb
pop
xor
push
in
es
clc
nop
push
pop
sub
xor
lods
lds
xchg
cmp
jnp
cmpsl
lret
pop
mov
js
xchg
in
jb
dec
push
in
lahf
dec
pop
add
aaa
xchg
push
pushf
sbb
pop
inc
xchg
into
das
and
pusha
stos
scas
cmc
ja
les
test
pop
hlt
mov
outsb
mov
cli
pop
test
add
push
fmuls
pop
push
into
or
out
addr16
adc
jae
(bad)
inc
add
faddl
sbb
dec
mov
jne
xor
arpl
cmpsl
mov
mov
push
popf
rcl
push
inc
jns
cmpsl
leave
adc
ds
cmp
push
xchg
adc
adc
inc
sarb
mov
imul
mov
test
push
adc
jno
(bad)
push
aaa
das
inc
jne
pop
jns
pop
xchg
jbe
cs
mov
test
and
mov
add
test
xor
mov
xchg
jle
pop
add
insl
roll
pusha
mov
mov
sub
bound
push
xchg
xlat
aaa
cmp
ret
push
in
xchg
push
xor
aad
sbb
inc
adc
cmp
pop
call
xchg
pop
push
jnp
test
divb
les
push
mov
aad
push
mov
adc
and
fstps
fisubs
ror
inc
xchg
repnz
jb
call
dec
insb
pop
(bad)
xchg
dec
jbe
mov
jmp
push
pop
mov
sbb
cmc
dec
xchg
inc
inc
lods
repz
push
int3
cli
lods
mov
mov
repz
push
out
xchg
call
inc
mov
mov
sahf
dec
das
inc
not
ret
rclb
das
lret
sub
push
hlt
pop
popa
pop
les
and
lds
nop
adc
fnstenv
fiaddl
jle
add
inc
pop
push
fdivs
addr16
mov
lea
int
and
xchg
in
mov
sbb
cltd
sbb
and
lods
test
push
movsb
add
into
stos
or
xchg
inc
iret
cmc
xor
shl
xchg
cmpsb
(bad)
mov
cmpsl
lahf
lds
iret
jnp
bound
(bad)
and
imul
ja
adc
cmovne
cld
pop
nop
stos
rolb
inc
mov
mov
or
mov
push
mov
sar
cmp
jmp
and
popa
into
jmp
loope
test
xor
pop
(bad)
repnz
sahf
repz
out
xchg
add
popa
cmpsb
mov
hlt
mov
(bad)
addb
add
cmpsl
fldt
mov
nop
lods
les
je
lea
insb
lea
pop
arpl
insl
in
mulb
add
in
pop
scas
push
cld
sbb
xchg
stos
or
jge
add
std
dec
std
lea
ds
sahf
and
fstl
pop
xor
mov
push
jmp
and
inc
fwait
ds
jae
lea
rolb
orb
add
xchg
sbb
inc
test
cmp
sbb
mov
mov
outsb
nop
cmp
add
push
popf
inc
ret
push
jg
lret
(bad)
in
dec
xchg
cmpsl
sbb
fists
push
sarl
mov
in
cmpsb
bound
xchg
adc
jl
loop
outsb
and
dec
push
aam
pushf
or
cli
fisttps
(bad)
pop
(bad)
(bad)
adc
sahf
int3
fimuls
push
cwtl
ljmp
add
mov
mov
cmp
inc
sahf
adc
xchg
test
int
ror
movsb
lret
jae
insb
fsubrl
lahf
mov
xchg
pop
jns
in
mov
cmpsb
cmp
iret
adc
push
gs
movb
mov
cmp
mov
or
test
add
cmp
in
nop
or
test
insb
pop
jo
cmp
sub
dec
pop
adc
aaa
and
mov
cmp
insb
mov
enter
ds
inc
(bad)
push
add
xor
or
push
add
insl
bound
xor
sub
sub
cmp
clc
dec
mov
cltd
xlat
mov
fmuls
test
mov
mov
pop
lods
mov
popa
stos
jno
aaa
sub
(bad)
jle
adc
jno
out
test
cmp
sub
add
jg
jbe
fdivrs
jp
cmp
js
ds
lods
jg
sbb
mov
sub
test
push
cmp
pop
insl
mov
inc
sbb
notb
add
push
pop
ljmp
pop
sahf
xchg
jo
xchg
test
sbb
cmp
testl
aas
das
inc
lea
aad
inc
inc
lcall
adc
lock
movsl
mov
es
fbld
test
mov
test
call
addb
push
pusha
pop
sub
mov
addl
dec
fdivr
jbe
stos
mov
lcall
outsb
pop
nop
shl
loop
sub
push
xchg
dec
adc
or
push
(bad)
leave
es
mov
jmp
push
dec
pop
pusha
fucomp
addr16
and
lret
enter
push
outsl
(bad)
sahf
xchg
mov
adc
push
and
jecxz
inc
or
mov
mov
(bad)
push
pop
js
in
rol
push
je
movsl
out
xlat
scas
scas
xchg
cmc
pop
xchg
inc
mov
lods
jo
mov
sbb
inc
or
pop
mov
popa
cmc
arpl
fadds
add
int3
fdivrs
push
lods
in
xor
mov
mov
add
xor
mov
jnp
stos
inc
loop
mov
adcl
xor
fnstcw
or
clc
push
int3
stos
add
xchg
sti
pop
pop
jmp
mov
inc
cmp
js
add
jmp
sub
scas
inc
jle
adc
es
sub
mov
fst
jns
fwait
xor
clc
push
sub
insb
or
dec
mov
lods
repz
sbb
mov
cmpsb
sbb
in
inc
lcall
or
je
or
and
mov
sub
das
