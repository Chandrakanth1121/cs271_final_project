push
out
or
sub
mov
sbbb
inc
(bad)
xchg
sbb
add
int1
punpckhbw
dec
int1
sbb
mov
and
in
xchg
mov
nop
test
dec
sbbb
dec
sbbb
dec
sbbb
dec
sbbb
inc
rclb
cwtl
int1
punpckhbw
mov
inc
add
jg
in
inc
int3
mov
mov
les
pop
aas
push
cmp
lock
and
mov
and
sbb
mov
fxch
sbb
aam
hlt
cmpsb
in
imul
les
mov
subb
push
imul
push
cwtl
insl
mov
dec
xor
nop
test
dec
sbbb
dec
sbbb
dec
sbbb
dec
sbbb
inc
(bad)
xchg
jb
movsb
test
mov
(bad)
adc
pop
(bad)
lock
in
dec
pop
mov
ljmp
andl
jmp
aaa
mov
pop
jge
mov
add
dec
jmp
adc
test
iret
push
test
mov
mov
push
pop
mov
ljmp
andl
jmp
outsl
mov
pop
(bad)
sub
inc
fwait
add
dec
jmp
adc
test
iret
push
imul
or
sub
push
mov
cmp
cmpsl
imul
popw
subl
test
mov
mov
subb
or
(bad)
in
cmp
je
jle
cwtl
insb
mov
sub
sub
ljmp
stc
dec
sbbb
dec
sbbb
dec
sbbb
inc
(bad)
xchg
sbb
add
int1
pcmpgtd
aas
fldcw
cmp
cmpsl
imul
or
dec
sbb
push
mov
add
sub
adc
jb
sbb
data16
and
adc
mov
mov
pop
mov
mov
imul
jno
in
leave
push
imul
lea
and
pop
popf
in
insl
push
test
aas
push
movsb
or
lea
sti
mov
stos
mov
mov
push
lahf
cmpsw
xchg
push
je
imul
movsl
stos
incb
cmpsl
imul
shr
call
cmp
stos
imul
adc
jb
stos
stos
imul
aam
mov
jmp
adc
test
iret
adc
add
rcrl
and
fwait
add
cmpsl
cmp
je
inc
cmp
test
pop
cmp
je
in
in
jle
and
rcll
hlt
add
pop
sub
mov
sbbb
dec
sbbb
dec
sbbb
fwait
mov
xchg
cld
aad
mov
(bad)
push
test
dec
sbb
stc
dec
sbbb
dec
sbbb
dec
sbbb
inc
fsts
mov
add
arpl
sbb
dec
sbbb
dec
subb
fwait
add
sbb
rorl
pop
xor
adc
out
or
mov
scas
inc
push
pop
roll
imul
test
std
mov
dec
adc
jno
sbbb
dec
sbbb
inc
fcoms
mov
lds
data16
shr
adc
movsb
hlt
cli
sub
lock
mov
mov
nop
pop
push
test
cmp
popf
in
loope
test
dec
dec
les
dec
les
shlb
dec
les
dec
les
dec
les
rclb
(bad)
adc
imul
sbb
dec
sbbb
dec
sbbb
fwait
mov
xchg
or
test
cmp
popf
in
aad
test
dec
or
stc
dec
sbbb
dec
sbbb
dec
subb
dec
in
(bad)
sub
and
(bad)
jmp
pop
adc
fcmovnb
(bad)
out
inc
fsts
scas
int1
add
arpl
sbb
dec
sbbb
dec
sbbb
fwait
mov
out
or
in
mov
adc
stc
dec
sbbb
dec
sbbb
inc
fsts
scas
int1
add
arpl
sbb
dec
sbbb
dec
subb
fwait
add
sbb
cmpsl
xchg
mov
dec
cmp
jno
add
das
rorl
mov
out
or
and
ljmp
out
rolb
test
lcall
dec
sbb
mov
sub
sbb
dec
sbbb
dec
sbbb
dec
sbbb
inc
fcoms
mov
lds
data16
add
push
les
pop
pushf
mov
add
imul
mov
imul
shl
fcmovnu
dec
inc
sbb
jmp
nop
fwait
aam
mov
push
(bad)
fdivl
sub
in
insb
pop
xchg
out
mov
mov
dec
inc
mov
out
or
insb
adc
mov
mov
or
test
mov
lea
rorl
sbb
call
sub
mov
dec
mov
stos
cld
or
imul
dec
cwtl
hlt
push
aad
mov
cld
clc
and
movl
in
or
cltd
cmp
jae
adc
and
mov
pop
repz
pop
adc
nop
lock
imul
leave
je
dec
inc
cwtl
out
shrb
lahf
mov
clc
jmp
mov
les
dec
inc
les
shlb
mov
and
and
or
nop
in
insb
pop
(bad)
out
repnz
stc
dec
adcb
add
sub
test
jp
and
(bad)
lea
negb
push
mov
inc
push
rclb
push
cmp
xchg
mov
cs
in
out
test
dec
inc
les
mov
lea
ficompl
addr16
xchg
call
int3
movsb
lock
jae
dec
aad
jns
adc
mov
js
lock
adc
lds
imul
lret
pop
cmpsb
imul
add
mov
pop
xchg
inc
dec
les
lcall
xchg
dec
pop
pop
fwait
xchg
lea
call
imul
sub
sub
das
adc
mov
repnz
lock
out
stc
dec
sbbb
dec
sbbb
inc
xor
push
dec
sbb
jb
or
xchg
mov
je
inc
inc
cmpsl
lock
inc
in
sub
sub
mov
inc
dec
into
in
aas
popf
ljmp
sbb
pop
dec
test
shl
stc
dec
subb
adc
pop
fwait
mov
nop
xor
test
cmp
popf
in
adc
test
dec
add
hlt
movlps
jge
add
jo
pop
sub
dec
mov
and
dec
xchg
mov
dec
mov
out
(bad)
jmp
test
mov
stc
dec
sbbb
dec
sbbb
dec
sbbb
dec
andb
inc
loopne
mov
inc
push
xchg
xor
test
inc
int3
mov
push
iret
adc
out
ljmp
mov
dec
andb
fwait
test
dec
cld
les
or
rorb
cmpsb
shl
out
ret
cmp
mov
or
sub
orl
in
test
mov
jmp
and
test
dec
add
jb
adc
es
insb
push
lret
push
lret
push
add
sub
mov
insb
(bad)
fwait
push
fsubs
ret
shr
leave
pop
lret
or
or
les
shrl
mov
sub
shlb
mov
imul
or
fs
pop
(bad)
out
cli
sub
insl
ss
sub
push
fbld
dec
dec
les
jae
stos
cli
sub
shlb
mov
imul
rolb
jne
in
fwait
or
mov
popf
mov
call
cli
sub
mov
nop
out
push
std
pop
test
rorl
jno
shrl
mov
mov
inc
mov
mov
popf
mov
call
cli
sub
mov
nop
repnz
std
pop
scas
ds
or
imul
sub
mov
mov
pushf
push
fwait
cld
pop
xor
lds
fdivs
mov
sub
push
lds
fsubs
add
loop
sub
or
into
sbb
mov
rol
ja
test
mov
lea
fldt
adc
sub
push
cmpsb
inc
(bad)
lea
lds
adc
sub
mov
(bad)
lea
mov
sbb
rcll
in
jle
and
rclb
lock
clc
dec
mov
adc
push
mov
dec
les
mov
(bad)
ja
int3
push
mov
shrl
outsl
dec
shll
mov
test
rol
test
adc
mov
nop
loop
inc
lcall
scas
jg
pushf
jmp
mov
sub
jmp
mov
fwait
adc
mov
iret
lcall
shr
stos
roll
stos
roll
push
je
in
stos
rorl
dec
je
in
or
je
fisttpll
and
adc
pop
aad
mov
mov
repnz
mov
jg
