leave
mov
mov
in
lea
cmpsb
mov
xchg
pop
mulb
mov
pushf
add
pushf
sbb
jmp
mov
(bad)
data16
xchg
aaa
mov
sub
outsb
(bad)
imul
sub
jmp
mov
cld
in
andb
pop
cld
mov
rcr
test
imul
hlt
push
jne
mov
test
push
ljmp
jb
dec
out
fildl
xchg
cmp
push
inc
aam
loopne
out
imul
imul
clc
dec
mov
push
ds
bound
push
add
push
sbb
xchg
push
and
jae
pop
(bad)
cmp
fwait
mov
push
mov
loope
daa
or
mov
or
push
fistps
mov
(bad)
aam
push
cmp
cmp
stos
inc
out
sahf
push
enter
sub
test
or
loop
xlat
jle
sub
mov
adc
shlb
sbb
test
ljmp
mov
aaa
adc
dec
mov
lret
lret
lds
cmp
cmovs
jb
loopne
jecxz
inc
in
pop
inc
in
and
jo
xchg
push
cld
in
fidivl
sbb
inc
sub
dec
sub
pop
incb
mov
lds
out
mov
dec
idivb
in
jnp
xchg
lock
jg
in
ret
int3
mov
popa
ret
jecxz
push
cmp
sub
jg
dec
in
jo
jo
in
cmpb
fimull
mov
out
loop
push
lock
lss
test
test
sbb
test
lods
mov
test
enter
fnstcw
fisttpll
xlat
mov
jne
jne
dec
cltd
out
inc
push
mov
mov
push
xchg
pop
jge
fchs
sbb
movsb
inc
int3
jle
int3
xor
fildl
cmp
nop
in
mov
gs
pop
push
stc
adc
js
pop
and
(bad)
jle
sti
out
sub
movsb
loopne
test
sbb
xlat
int
inc
jmpw
lret
push
add
arpl
aas
(bad)
lcall
loopne
xlat
ror
push
inc
cmpsb
cmpsb
int1
lahf
mov
fwait
cmpsl
lcall
add
add
and
mov
pop
subl
mov
adc
push
push
xor
lret
lock
imul
stos
add
add
jecxz
lret
fnstsw
ror
sub
loopne
rorb
jmp
sbb
adc
jge
lock
fsts
mov
ret
or
cmpsl
and
lds
jne
pop
fincstp
mov
cmp
pop
xor
and
test
pop
jno
nop
add
pop
addr16
mov
and
(bad)
fdivp
mov
and
addl
subl
enter
xor
xlat
lods
popf
aad
and
gs
ret
insb
mov
lret
je
enter
mov
push
(bad)
jge
jmp
lods
add
rcrb
dec
(bad)
jmp
shl
popf
push
dec
(bad)
cmp
mov
cmp
push
daa
jbe
mov
sbb
cmpsb
sysret
leave
hlt
push
ljmp
popa
mov
int3
inc
mov
nop
int3
xchg
(bad)
mov
add
fnsave
idivb
(bad)
and
or
push
mov
stc
sarb
xor
gs
add
les
je
int1
rol
popf
ja
xchg
scas
sub
pop
divl
movsl
popa
jl
mov
jmp
push
stos
mov
inc
jae
(bad)
pop
adc
popf
inc
rcll
and
js
test
add
mov
outsl
xlat
hlt
jno
sub
movl
fimuls
and
(bad)
mov
sub
sbb
mov
outsl
loop
fcom
mov
xor
pop
jo
cmp
push
gs
mov
lahf
xor
js
dec
imul
leave
xor
mov
jecxz
dec
bnd
stos
and
insb
mov
mov
js
jp
enter
sbb
cwtl
jl
out
mov
call
je
cs
repz
sbb
movsl
add
pushf
inc
jae
scas
(bad)
int3
and
dec
mov
push
enter
mov
push
cmp
pop
xor
sbbl
adc
pop
mov
pop
mov
xchg
mov
fildl
pop
and
inc
add
bound
test
jae
pushf
dec
xchg
adc
cmp
jbe
out
pop
mov
jae
sub
aas
das
in
dec
aad
adc
add
adc
cmp
je
cmp
dec
sbb
jmp
and
std
xor
pusha
xor
(bad)
and
pop
adc
xchg
pushf
mov
adc
aas
adcb
sti
incl
mov
mov
sbbb
push
adc
into
ret
mov
jae
dec
pop
push
lea
jl
fstp
pop
xorb
xchg
mov
mov
dec
aad
and
dec
stos
and
and
aas
dec
or
cmp
cli
mov
and
inc
leave
cmp
ljmp
push
pushf
jno
ret
scas
inc
add
rcrb
add
fs
or
inc
sahf
push
xchg
push
dec
loope
add
cmp
sbb
shll
jbe
mov
insl
or
mov
jg
test
or
mov
adc
in
push
(bad)
and
movsb
xor
xchg
subb
mov
into
jge
jo
lcall
aam
adc
push
repnz
aam
jecxz
or
pusha
les
rcrb
andl
shll
mov
sub
jns
addr16
and
xor
mov
or
pushf
subb
(bad)
sbb
xchg
xchg
outsl
jne
orl
addr16
jb
imul
xor
aad
pop
lea
testb
mov
mov
jg
add
adc
repnz
adc
cmpsl
orb
or
addl
mov
(bad)
dec
(bad)
add
dec
dec
(bad)
addr16
mov
out
jb
cmp
sub
(bad)
mov
dec
adc
lock
push
cmpps
imul
dec
adc
mov
xor
sub
push
mov
shlb
jp,pt
cs
xlat
cltd
pop
(bad)
loop
lods
or
ds
das
jae
pop
dec
in
(bad)
cltd
pusha
mov
pop
jno
mov
in
mov
or
lret
ret
cmp
es
int1
sbb
lods
repz
out
mov
mov
test
int1
xor
xchg
mov
aam
or
leave
adc
cwtl
aaa
mov
imulb
(bad)
mov
enter
rorl
stos
adc
and
dec
sub
xor
jns
mov
push
mov
push
sub
add
imul
aam
(bad)
push
mov
push
aad
adc
mov
ss
mov
cld
push
lods
inc
test
jne
imul
adc
adc
push
push
popa
scas
xor
mov
ficompl
and
jge
mov
test
xor
push
xchg
mov
sarl
(bad)
mov
int1
add
xlat
scas
pop
lea
push
fimuls
push
or
push
jnp
pusha
adc
add
pop
adc
or
pop
push
jae
aaa
repnz
mov
mov
inc
out
mov
popa
lods
xor
lcall
stc
ja
insb
popf
sub
cmp
int
push
add
jnp
dec
jb
repz
mov
push
adc
dec
lock
pop
fstpl
sbb
cmp
imul
andl
(bad)
mov
sub
mov
testb
(bad)
mov
inc
(bad)
or
push
stos
and
sbb
push
mov
das
rorb
push
out
fs
(bad)
mov
aad
scas
sub
push
push
mov
jle
xchg
push
incb
mov
mov
inc
fmuls
push
push
fildll
mov
adc
(bad)
stos
push
jp
push
mov
mov
xchg
js
adc
jmp
dec
or
cmpsb
push
iret
push
mov
mov
aas
cmpsb
subb
sub
add
mov
scas
jp
in
dec
xchg
push
aas
push
sub
pop
sete
in
pop
(bad)
add
std
push
push
and
jno
push
jp
mov
inc
int1
xchg
pop
adc
cmp
pop
out
xlat
sbb
aam
in
je
(bad)
scas
xor
mov
mov
mov
xchg
rcrb
aam
jne
cmc
mov
fildl
jle
dec
push
shl
mov
fidivrs
pop
dec
inc
mov
mov
adc
stc
popa
adc
push
or
popa
sbb
