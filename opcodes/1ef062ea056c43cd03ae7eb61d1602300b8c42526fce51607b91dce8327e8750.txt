notb
push
or
push
dec
mov
ret
loope
sub
jecxz
sub
loope
xor
xor
out
add
rorl
subl
fs
out
int1
cli
pop
pop
push
and
mulb
int3
sub
test
jo
pop
push
pop
dec
mov
pop
dec
decl
negb
sub
out
loopne
in
outsb
mov
int1
push
inc
loopne
imulb
fsubrs
negb
or
cmpsb
bound
dec
xchg
jl
jbe
loopne
or
pop
inc
inc
dec
pop
push
loopne
mov
test
aas
cld
hlt
insl
or
sub
sub
pop
scas
sbb
jno
and
jnp
push
push
push
inc
pop
aam
sub
call
addr16
sbb
cmp
data16
inc
jns
mov
xor
loope
jmp
movsb
lock
fs
adc
insb
push
dec
pop
inc
lcall
aas
(bad)
bound
jge
outsl
mov
in
hlt
pop
add
push
inc
push
rcrl
loopne
push
cld
shrb
ds
pop
test
loop
(bad)
jecxz
push
pop
lret
lret
lock
faddl
fisubrl
xlat
stc
xor
aas
jg
sub
cld
sub
mov
adc
mov
adc
mov
sti
movsl
sub
and
ficomps
pop
inc
inc
xorb
pop
mov
push
es
out
je
repnz
out
xor
jnp
addb
mov
stos
adc
cmpsl
sbb
lds
adcl
dec
push
adc
lods
je
cmp
int
pop
dec
aam
and
aas
push
inc
movsb
cli
mov
pop
int
loop
pop
mov
jmp
mov
sub
cld
enter
push
in
psllw
or
das
int1
gs
inc
inc
rcrb
dec
push
cmp
mov
xor
in
mov
xor
sbb
into
call
pop
ja
mov
push
js
push
push
test
dec
and
(bad)
(bad)
imul
push
imulb
(bad)
pop
dec
fists
push
jne
aam
cld
outsl
push
loope
(bad)
jno
push
aam
lds
fisttps
daa
clc
or
jae
cmp
les
add
sub
xor
inc
push
mov
repnz
lea
shlb
jg
pop
xor
in
inc
imul
btr
sbb
jnp
cmpsl
shll
daa
lds
add
xor
test
inc
sbb
ret
ss
xor
mov
shll
mov
jo
xor
sub
mov
andb
cld
shrb
add
test
xor
pop
and
mov
jbe
cltd
jne
cltd
loop
xor
out
lahf
mov
(bad)
outsb
fiaddl
(bad)
sub
xor
loopne
adc
enter
call
cmpsl
add
scas
das
dec
(bad)
mov
out
(bad)
mov
add
sbb
cmc
jg
dec
das
ja
pop
dec
and
ljmp
fs
mul
into
cmp
add
imul
xor
push
fcomps
insb
mov
inc
cmp
mulb
sarl
in
pop
push
or
or
ja
in
scas
inc
(bad)
xchg
adc
adc
loop
mov
cli
mov
fwait
inc
fcompl
fdivrs
mov
or
aaa
leave
pop
subb
push
int3
cmpsb
or
fdivl
negl
mov
cmp
jnp
loop
int3
bound
jmp
xor
mov
fldt
sbb
sbb
lahf
push
xchg
add
jl
test
cmp
popa
adc
cwtl
push
cmc
sub
adc
inc
sub
jge
pop
jg
movsl
pop
iret
xor
cs
xor
jno
mov
loop
adc
cwtl
xchg
nop
popa
push
aad
cs
aas
pop
mov
fs
mov
and
inc
fsubs
mov
mov
add
imul
loope
inc
in
fwait
dec
leave
lock
call
fcomps
pop
inc
out
dec
add
add
loope
sahf
sub
movsb
sbb
cmc
push
mov
lea
ds
fucomip
lcall
in
mov
jae
(bad)
mov
pop
sahf
add
repz
cmpl
out
pop
std
in
sbbb
or
fisubrl
(bad)
mov
xor
inc
test
cmp
add
inc
push
rcll
dec
(bad)
loopne
dec
adcl
xchg
adc
cmp
clc
jmp
insl
or
and
ds
test
test
dec
fildl
cwtl
loop
js
and
int1
mov
push
pusha
sarb
fsubr
dec
imul
jp
xor
inc
pop
add
popf
insl
sub
xor
push
push
(bad)
mov
jg
adc
or
mov
sbb
sbb
sbb
cwtl
jb
int1
xor
xchg
fwait
adc
sub
lret
lahf
mov
popf
or
push
push
ficoml
mov
dec
jo
inc
cs
sub
loope
sbb
adc
adc
aad
mov
fidivs
adc
in
lods
aas
sti
push
jne
cmp
dec
cmpl
(bad)
jecxz
sbb
pop
sub
aas
push
flds
push
sbb
sar
outsb
outsb
jbe
movsl
popa
xlat
push
insb
movsl
std
xchg
dec
mov
cmp
dec
xlat
ret
xor
adc
repz
adc
dec
in
ja
(bad)
test
inc
pop
mov
(bad)
jns
imul
jle
int1
arpl
fidivl
bound
arpl
lock
sub
popa
fmull
mov
mov
jne
in
sbb
add
adc
xor
fistl
adc
stc
daa
popa
xchg
ds
int
adc
imul
sub
sbb
sub
sahf
call
push
mov
addr16
pushf
cmpsb
sbb
adcl
inc
push
cmp
les
out
roll
add
rolb
repnz
int1
jg
push
loope
das
int1
adc
or
pop
adc
jb
gs
mov
int1
pop
stc
pop
aas
dec
push
pop
add
je
aas
adcl
in
jo
adc
inc
dec
das
and
dec
sbb
sub
mov
sbb
or
push
add
incb
and
or
(bad)
mull
jb
jg
mov
bound
(bad)
dec
lods
mov
cmp
dec
mov
cld
push
add
or
jb
sub
je
test
inc
movb
pop
sarb
mov
movsl
lods
int
fsub
fwait
push
ljmp
loopne
xchg
addb
mov
ret
mov
stos
in
push
cli
out
push
test
in
int
pop
stos
inc
sbb
aam
popa
sub
adc
out
les
mov
loop
cmpsl
xchg
into
jne
call
lods
stos
ss
out
add
cmp
ss
je
movb
push
popa
mov
xchg
bound
imul
clc
fnsave
pop
jecxz
(bad)
mov
loope
pop
xchg
mov
add
jg
sbb
add
cwtl
push
ret
(bad)
rcrl
(bad)
jns
xor
loope
orb
sarl
jmp
lret
dec
jge
fwait
std
fsub
ret
mov
adcl
and
ljmp
sbb
fstpl
into
sti
lahf
fwait
jmp
inc
and
cmp
dec
lods
sbb
cwtl
shll
inc
push
mulb
repnz
inc
ljmp
add
fcmove
lea
mov
aam
xchg
in
(bad)
lahf
adc
movsb
push
cmp
ss
mov
push
inc
test
inc
sbb
rcr
repnz
dec
pop
xchg
ret
push
mov
jae
push
sub
dec
inc
std
adc
in
dec
adc
mov
mov
fmul
aas
shr
cltd
pusha
mov
xchg
(bad)
lahf
pop
xor
xchg
push
(bad)
(bad)
mov
mov
(bad)
xchg
fists
sbb
data16
(bad)
cld
enter
mov
mov
(bad)
cmp
add
add
std
sbb
sub
enter
jb
call
call
adc
fsubp
push
call
cmp
fnsave
imul
xor
sbb
xor
cwtl
leave
and
add
popf
aas
outsb
(bad)
in
inc
jecxz
push
outsb
or
(bad)
out
push
cmovge
mov
push
and
fisubs
or
fdivrs
aas
das
insb
or
dec
call
xchg
les
add
