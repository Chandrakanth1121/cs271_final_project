into
mov
int3
sub
cli
add
sbb
divl
xchg
mov
mov
xchg
mov
es
lods
in
push
push
insl
rolb
ret
shl
cs
imul
or
stos
xchg
adc
mov
imul
mov
mov
stos
in
pop
scas
pop
push
mov
out
jmp
aam
mov
sbb
call
lret
sub
jmp
cmp
xlat
dec
adc
int
into
push
mov
xor
sub
shll
adc
stos
jbe,pn
mov
jbe
adc
movsl
andb
mov
aad
data16
lahf
dec
xchg
sub
xor
and
dec
into
jne
add
xor
lea
jecxz
sbb
lods
xchg
mov
test
xchg
dec
sub
test
xchg
mov
stos
push
sbb
testl
in
jo
sbb
jns
mov
sbb
test
mov
mov
mov
cmp
into
pop
add
jno
sti
xlat
mov
loop
or
sbb
sub
and
dec
or
movsl
jno
xor
push
and
push
mov
jmp
cwtl
adc
mov
sbb
lods
xor
mov
mov
bound
inc
lods
in
dec
repz
lods
sub
jae
shll
jb
in
mov
or
lods
lods
ja
popa
jbe
push
and
ja
sbb
dec
dec
aaa
dec
xor
lock
movsl
cwtl
sub
xor
sub
inc
in
aaa
sub
cltd
fildll
mov
xchg
xchg
push
cmp
std
pop
std
inc
cltd
cmc
lock
into
(bad)
inc
mov
mov
inc
repz
ja
repz
dec
mov
dec
and
stc
int1
stos
(bad)
sbb
inc
adc
push
and
clc
mov
fsubs
arpl
adc
mov
cmp
jmp
mov
in
imul
int1
sub
je
jl
jne
mov
das
loop
sub
flds
shrl
xor
int
aam
pop
lret
mov
neg
shrb
test
repnz
cmpsb
adc
cmp
lods
inc
in
mov
pop
or
int1
nop
insb
or
adcb
push
lahf
sbb
into
out
loopne
and
(bad)
mov
sub
inc
cmp
push
gs
xchg
imull
pop
mov
test
add
dec
inc
roll
cmp
and
insl
loopne
ljmp
cmp
sub
in
adc
fldt
push
cli
fdivr
in
into
int1
mov
pop
stc
scas
jmp
test
lea
fnstenv
ret
dec
out
cmp
fnstcw
jg
cmp
add
pop
lret
movsl
movsl
pop
es
xor
aas
fpatan
stos
adc
lret
cmp
or
ret
dec
push
push
sbb
das
cmp
push
out
addb
xor
jns
add
sbbl
pop
mov
out
insb
int3
xor
cld
xor
aaa
popa
xor
in
les
xchg
test
aaa
adc
jmp
out
mov
repnz
and
dec
xor
sbb
pop
dec
cmp
iret
jle
and
inc
xor
out
or
in
orl
repnz
ljmp
aas
shl
cmp
out
jb
and
xor
insl
repnz
mov
mov
stos
(bad)
enter
sbb
fwait
in
jb
xor
lods
cmpsb
jl
or
rcrl
dec
out
adc
imul
push
push
jb
cmc
in
notl
push
mov
dec
adc
inc
mov
pop
imul
gs
or
fdivrl
repz
mov
push
cmp
jmp
cmp
lret
jb
je
pop
inc
fcmove
adc
stos
pop
or
sub
add
jmp
cmp
mov
push
xlat
nop
out
adc
jge
ja
test
rolb
out
dec
ss
das
jmp
sub
mov
pop
xchg
jg
push
mov
and
mov
lock
cmpsl
and
mov
pop
add
add
xchg
inc
dec
mov
ljmp
repnz
add
addr16
sbb
xchg
xchg
xchg
add
inc
mov
lea
(bad)
insl
negl
push
or
out
sbb
ficomps
jb
movsb
pop
xor
pushf
push
rcrl
movsl
int1
aaa
int1
inc
ds
sub
jns
xor
add
sub
sbb
gs
daa
sbb
es
insl
cmc
adc
mov
and
sub
lods
in
fnsave
in
xor
jg
xchg
jno
imul
fstpl
cltd
mul
aaa
repz
adc
xor
insb
mov
lock
clc
cmpsb
jo
or
push
or
imul
nop
faddl
xchg
stos
xchg
int3
cmp
and
shl
jmp
or
sub
and
repnz
lock
cmpsl
insb
imul
mov
add
inc
scas
push
mov
inc
(bad)
mov
scas
ljmp
push
sbb
mov
sbb
mov
stos
pop
add
imulb
and
es
sub
mov
mov
inc
loop
mov
jno
sbb
ds
pop
es
or
push
push
hlt
cmp
adc
inc
fsubrs
sub
cmpsb
mov
mulb
sub
cmp
mov
mov
aas
sbb
xchg
pop
adc
mov
or
sub
movsb
push
clc
mov
push
fcoms
hlt
das
imul
(bad)
sbb
mov
xor
stc
ss
xor
jmp
pop
sub
sahf
aam
rcl
in
pop
fsubrs
cmp
add
xlat
clc
xor
cmp
jne
jno
sbb
xlat
enter
aaa
movsl
or
loop
mov
popa
adc
cmp
(bad)
push
out
xor
xchg
jns
push
mov
push
dec
fs
mov
(bad)
imul
mov
lcall
lahf
and
add
gs
push
push
out
frstor
or
xchg
dec
jl
cwtl
test
xor
mov
jnp
xchg
int3
push
add
test
adc
mov
adc
inc
in
mov
add
fcomps
ret
cli
loope
mov
push
cmpsl
add
adc
cmp
je
mov
out
dec
cmp
(bad)
ja
pop
fs
lret
ror
(bad)
roll
repnz
jmp
ss
ret
and
rcrl
imul
mul
aam
inc
jns
add
mov
in
out
add
add
add
mov
lock
lcall
and
repnz
jnp
leave
int1
lods
lds
int3
add
xor
push
sub
ljmp
test
push
xchg
mov
inc
(bad)
je
xchg
aas
push
push
sysexit
scas
mov
mov
mov
movups
test
mov
xchg
sahf
cltd
rcrl
sbb
insb
or
xor
int1
sub
xchg
push
test
mov
daa
cmp
inc
sub
pusha
pop
sbb
xor
pop
std
jmp
je
lods
lods
addl
push
es
insl
mov
sbb
stos
or
mov
out
cmp
mov
mov
xchg
or
dec
push
push
das
add
add
dec
xor
sti
add
mov
mov
sub
push
in
out
cltd
stc
push
or
xor
push
mov
js
mov
xor
jle
sahf
lods
xor
fidivs
dec
cltd
sbb
sub
pusha
or
mov
push
mov
push
je
movsl
push
sbb
in
sbb
xchg
xor
adc
sub
bound
mov
mov
mov
mov
xchg
(bad)
mov
bswap
adc
stc
in
in
(bad)
xchg
xabort
sub
pop
loopne
push
je
sub
pop
pop
or
xchg
cmp
mov
mov
mov
mov
pop
test
insl
xor
fdivs
pop
idiv
push
sub
push
mov
pop
mov
ficoml
dec
outsl
mov
lods
push
leave
mov
(bad)
in
push
stc
jae
dec
jno
xchg
aas
or
into
stos
mov
shll
pop
cli
stos
popa
lahf
pop
ss
(bad)
xor
cmp
stos
mov
repz
cli
lods
stos
lds
push
mov
cmc
mov
mov
lods
test
xor
mov
in
cltd
push
mov
and
mov
roll
sarl
cmp
loop
mov
scas
in
out
pop
nop
and
ret
