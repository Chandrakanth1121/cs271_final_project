jg
mov
pop
dec
adc
sub
xchg
bound
add
filds
and
or
push
imul
sub
jge
cwtl
push
jo
xor
ret
repz
cmp
lea
(bad)
mov
add
mov
popf
flds
and
std
incl
in
fcmove
push
xchg
jle
pop
out
shlb
push
jno
subb
sbb
cltd
adc
gs
mov
scas
lock
pushf
fildl
testb
mov
push
inc
arpl
xrelease
and
or
std
xorl
aas
xor
test
mov
pop
mov
lds
jp
lret
(bad)
and
xor
aad
and
xor
sahf
ljmp
mov
sbb
out
leave
lea
cwtl
or
xchg
mov
xchg
jmp
inc
lahf
insb
movsb
(bad)
dec
jne
pop
cmp
flds
stos
dec
gs
adc
and
mov
mov
xchg
cmp
mov
in
inc
xchg
adc
xor
jg
cmp
shll
adc
fcom
inc
adc
push
and
dec
ret
leave
fnstcw
xor
sti
cmp
mov
lds
in
mov
or
jo
mov
jle
cli
inc
hlt
inc
insl
xchg
and
jecxz
jo
mov
mov
mov
inc
pop
in
push
testb
adc
pusha
filds
mov
add
jecxz
sub
je
divb
loop
insl
cmp
or
add
or
jle
dec
jl
int
popf
arpl
adc
mov
ret
sbb
lods
or
mov
sbb
je
jge
rcrl
cs
pop
dec
add
mov
dec
imul
in
xor
mov
(bad)
mov
dec
gs
lea
jg
jno
add
fimuls
loopne
in
les
sbb
dec
xchg
or
int1
addr16
mov
or
lret
mov
cmp
dec
add
mov
xchg
push
xor
or
gs
and
loope
push
lock
int
jnp
cmp
pop
std
push
pop
jb
dec
or
dec
call
jmp
sub
dec
rorl
out
ficompl
je
xchg
sub
dec
xchg
push
outsb
dec
mov
add
sub
adc
mov
mov
arpl
or
cld
lahf
cmp
mov
loope
jmp
mov
inc
outsb
push
push
jecxz
pop
shrb
push
rclb
into
mov
inc
inc
or
cwtl
das
jmp
in
sub
jl
sti
popf
jg
jmp
and
mov
pop
ret
jmp
aam
loopne
sbb
mov
push
jp
das
push
xor
pop
outsb
pusha
mov
das
and
js
int1
das
xchg
out
cmpsw
add
movsb
jg
bound
mov
ret
inc
sbb
rorb
xor
push
(bad)
pusha
mov
dec
mov
lret
loope
mov
or
sub
movsb
sti
push
insl
fisttps
lret
sbb
cmp
jmp
xor
cmp
pushf
add
ljmp
pushf
mov
outsl
adc
(bad)
cli
jb
jns
outsl
and
cmp
push
push
mov
int3
push
shr
push
jb
cmp
jecxz
xor
rolb
test
insb
jecxz
ret
add
mov
push
sub
push
jl
mov
dec
xlat
lods
addb
push
int3
pop
lret
enter
pop
push
xchg
sub
mov
stos
cmovle
arpl
add
xorb
cmp
xchg
sub
call
lods
mov
out
out
sbb
insb
leave
addb
dec
mov
ror
xchg
mov
faddl
imul
pop
inc
mov
test
imul
sub
iret
loope
imul
push
sub
leave
mov
int1
xchg
sbb
sub
xor
push
leave
mov
pop
jbe
lods
into
lds
jbe
bound
cld
or
or
bound
cs
push
fmull
movsl
loopne
xchg
mov
lds
mov
test
popa
or
(bad)
sub
push
lods
cmc
push
jno
add
cmp
mov
andl
faddp
(bad)
out
pop
gs
outsl
mov
sbb
xchg
sahf
pop
cmp
imul
pmulhw
adc
pop
xorb
cmp
push
mov
jb
aad
lret
cmp
sbb
adc
cld
pop
mov
(bad)
in
aaa
test
jne
adc
mov
lods
int1
shll
addr16
dec
mov
scas
push
insl
and
or
add
insb
in
in
(bad)
out
sbb
sbb
fcoms
cli
insb
repnz
jbe
add
pop
aas
jbe
fnstenv
pop
inc
lret
adc
jg
ljmp
mov
cli
loop
and
lret
(bad)
cmp
fldz
dec
jg
mov
mov
int3
insb
push
cld
ljmp
jno
xorl
rorb
fiaddl
pop
jge
or
push
in
sahf
xchg
adc
push
cmpsl
daa
pop
repz
repz
xor
add
fstl
gs
hlt
daa
sub
mov
mov
popf
push
jo
xchg
and
cmp
int1
cmp
or
mov
fsubl
xor
push
and
loop
xor
je
sub
mov
lret
dec
sbb
mov
outsb
enter
xor
or
ret
mov
pushf
mov
push
and
push
iret
clc
loope
pop
lret
xor
mov
adc
dec
iret
or
iret
jo
sahf
or
inc
daa
cs
cmp
or
and
add
or
add
pinsrw
data16
mov
pushf
mov
daa
lock
negb
mov
jb
mov
fs
adc
pop
dec
popa
push
cli
les
insb
mov
fs
repnz
mov
in
out
dec
add
inc
sub
loope
sbb
sub
inc
cmpsl
in
lds
mov
leave
lret
iret
jecxz
loope
lea
jno
xor
pop
or
in
xlat
sub
push
adc
and
ficoms
test
mov
dec
daa
fimull
cmpsl
and
xchg
and
fwait
outsb
mov
(bad)
dec
adc
je
xor
test
aaa
jns
sbb
sahf
and
and
les
sbb
mov
sub
lods
dec
add
shll
jno
(bad)
xlat
jnp
mov
lret
out
out
cs
jno
push
jl
arpl
std
cmp
and
mov
stc
sub
xor
inc
xor
fldl
pushf
ret
sarl
popf
inc
add
mov
xlat
mov
daa
mov
cwtl
mov
inc
and
xchg
pop
pop
rcrb
loope
jle
repz
inc
ror
sbb
sub
stos
or
jo
inc
ret
pop
clc
in
dec
mov
int
int
sub
mov
mov
xor
rclb
jge
add
jg
rorb
or
sbb
pop
fwait
and
les
movl
cmp
pop
popa
push
sub
push
and
cmpl
data16
pop
push
and
add
movsb
xchg
xchg
mov
stc
add
bound
sbb
and
loop
and
adc
or
(bad)
loope
adc
push
and
cmp
and
sbb
pop
sarb
xchg
and
inc
jns
stc
fadds
test
add
sarl
fwait
cli
mov
mov
enter
fs
and
loopne
and
cs
in
push
enter
or
xor
std
cmp
bound
sub
xrstors
xchg
pop
or
hlt
push
hlt
pop
xor
dec
pop
sbb
je
and
es
jo
(bad)
imull
(bad)
mov
dec
leave
xor
aad
out
loope
aas
cmp
sahf
add
loop
push
sbbb
ja
sbb
aaa
rcll
xor
mov
lods
inc
es
out
and
loop
adc
js
lds
sti
jo
and
out
ret
ja
stc
jo
fucomi
add
add
js
xchg
or
sub
sub
push
xor
gs
hlt
leave
jle
rcrl
dec
sahf
pop
push
inc
cli
mov
aaa
arpl
test
pop
pop
roll
leave
testb
mov
loope
pop
cmp
mov
add
mov
pop
stc
pop
xchg
fiadds
mov
cltd
shl
jle
out
inc
push
fwait
mov
pop
fwait
addr16
(bad)
pop
