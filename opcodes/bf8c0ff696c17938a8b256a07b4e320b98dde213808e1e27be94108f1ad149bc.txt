xor
daa
add
add
add
add
add
add
add
add
lea
add
cld
dec
add
inc
lock
xor
xor
xor
sarl
add
add
add
sarb
lcall
aas
xor
xor
xor
ret
aas
lcall
aas
lcall
aas
xor
xor
xor
ret
aas
lcall
aas
xor
xor
xor
sarl
xor
xor
xor
jecxz
lcall
aas
lcall
aas
xor
xor
xor
sarl
add
add
add
loopne
add
add
add
loopne
xor
xor
xor
sarl
xor
xor
xor
ret
aas
lcall
aas
add
add
add
add
or
add
adc
add
iret
or
sbb
aaa
in
das
enter
lret
aad
push
xchg
pop
mov
mov
imul
out
xchg
mov
lret
or
nop
xchg
adc
xor
mov
inc
ret
(bad)
sub
test
out
stc
push
aaa
fbld
sti
mov
mov
js
dec
pop
bound
sub
pusha
and
lret
(bad)
push
inc
sub
mov
xchg
dec
mov
insb
shrb
dec
ds
ja
pop
pop
mov
orl
cld
cmp
push
enter
imull
jle
sbb
lcall
(bad)
js
bound
hlt
or
notl
imul
push
add
clc
xlat
popf
mov
scas
sarl
aas
pop
(bad)
gs
mov
mov
(bad)
push
or
test
and
xorl
lret
cmp
aam
jp
jbe
push
push
adc
sub
lds
and
add
fisubs
jle
(bad)
xor
xchg
adc
sbb
(bad)
adc
push
pop
enter
mov
add
ret
bound
and
insl
and
daa
outsb
stos
out
ret
orb
sub
inc
fsubl
sbb
fldl
pop
mov
inc
xorl
pop
sti
or
adc
(bad)
sbb
dec
or
push
mov
xchg
or
xchg
pushf
add
cmpsl
sbb
out
sarb
jg
out
adc
and
stc
in
mov
push
imul
pop
scas
or
inc
pop
rcrl
sti
mov
stos
cwtl
add
das
repz
jmp
movsb
loope
jge
jb
add
xchg
and
add
push
add
sbbb
das
jmp
nop
daa
nop
push
pop
jmp
insb
shll
scas
or
mov
in
xchg
mull
push
jns
mov
mov
in
pop
aaa
jno
repz
jno
jbe
sbb
adc
es
rol
inc
sar
inc
hlt
in
adc
add
dec
dec
jne
cmp
movsl
mov
sbbl
dec
mov
mov
dec
imul
sub
ja
imul
lcall
int1
popf
jo
xor
addr16
stos
das
mov
inc
inc
inc
pop
dec
xchg
in
cmc
mov
enter
(bad)
stos
bound
xchg
ret
dec
scas
aad
loopne
test
xchg
out
mov
clc
xor
testl
push
outsb
rcrl
push
(bad)
fnstcw
mov
out
cmc
(bad)
push
fistl
loop
cmc
xor
sbb
(bad)
(bad)
scas
adc
pop
and
orl
test
aad
or
popa
enter
mov
sbb
mov
lahf
(bad)
test
dec
sbb
xchg
add
jecxz
push
cld
mov
jns
mov
dec
sub
bound
sub
lret
imul
cmp
ds
or
sbb
shrl
and
mov
or
int3
cmp
inc
movsb
mov
jle
les
in
pop
cmc
dec
daa
push
fs
mov
ja
je
xor
push
lahf
mov
xchg
mov
cmp
adc
(bad)
cmc
out
adc
push
add
popf
(bad)
mov
out
les
adc
push
add
sahf
test
movsb
cmp
out
xchg
adc
jmp
inc
mov
mov
push
in
repz
insb
sbb
inc
outsb
loopne
and
or
cmpl
or
jmp
dec
mov
ret
or
pop
bound
imul
outsl
sbb
pop
sbb
aas
repnz
add
mov
adc
mov
dec
in
add
xchg
popf
jbe
lods
test
mov
inc
jecxz
jmp
add
mov
das
stos
sub
pop
lds
cmp
fimuls
push
fucomip
add
cltd
jp
xchg
insl
fisttpll
and
xchg
xor
jmp
es
lret
es
xor
ja
aam
int1
and
xor
xchg
dec
ret
adc
pop
or
jnp
dec
xlat
loope
pop
xor
nop
aas
adc
fadds
cld
int1
sbb
sbb
rcrl
push
pop
clc
cmpsl
ret
fsubs
fidivrl
jmp
lahf
jmp
mov
scas
jmp
out
popf
addl
push
push
iret
pop
int1
sbb
mov
mov
cmc
aam
stos
xchg
mov
pop
xchg
aam
sbb
xchg
popa
(bad)
mov
mov
inc
loopne
gs
xchg
outsl
hlt
xor
(bad)
imul
bound
adc
mov
cltd
or
push
cmp
fwait
mov
aaa
xchg
pop
test
jg
int3
sbb
xor
mov
and
jmp
js
testl
or
xchg
repnz
xchg
jle
inc
orl
or
iret
call
ja
jo
cmp
mov
sub
dec
push
lcall
add
xchg
sub
bound
xchg
jbe
jle
xorb
push
mov
sub
mov
sub
orl
stos
bound
outsb
inc
iret
push
push
jno
inc
jecxz
xor
pushf
mov
xor
sbb
cmp
mov
in
mov
les
cmp
adc
addr16
iret
pop
cmp
test
jns
push
sub
loope
jle
nop
adc
adc
andb
iret
or
cld
cmp
in
jo
push
stos
cmp
inc
test
and
in
cmc
arpl
mov
scas
aam
notl
cli
test
push
mov
cmp
add
add
mov
mov
lock
(bad)
jmp
and
repz
lock
repz
enter
jecxz
out
pop
sahf
pop
xchg
pop
ljmp
dec
movsb
push
movsb
jbe
push
add
pop
les
dec
lock
cmpsl
push
mov
pop
std
pop
leave
dec
in
hlt
dec
mov
push
test
incl
repz
cmpsb
mov
xor
in
out
nop
loopne
mov
lea
cmp
(bad)
xchg
fcoms
movsb
test
lea
sbb
int
jecxz
rcll
ficompl
or
push
(bad)
push
idivl
sar
fcompl
fnstcw
int3
adc
dec
int3
push
(bad)
pop
divl
shr
fcompl
fnstcw
int3
push
(bad)
mov
lods
sub
sub
sub
das
in
sarb
sarl
mov
mov
(bad)
and
sub
cmp
add
and
sub
cmp
cmp
and
cs
lock
xchg
cmp
add
sub
xabort
shlb
faddl
mov
sub
lahf
cmp
and
add
sub
xabort
frstor
int
mov
sub
mov
movsl
daa
mov
mov
xor
xor
das
ds
and
xor
popf
or
das
ds
and
xor
xor
xor
sbb
sbb
sbb
xor
adc
rdmsr
or
sysexit
adc
mov
push
fs
or
comiss
cltd
pop
pusha
sbb
aas
or
(bad)
adc
push
repz
repz
sti
shl
lock
in
out
in
(bad)
cmp
sbb
mov
popa
lock
cmp
xor
jnp
arpl
add
(bad)
lock
shll
xor
push
xlat
pop
int
in
jo
gs
pop
ret
jno
adc
pop
int
in
cmp
ret
push
aam
xlat
add
adc
push
ret
push
aam
xlat
or
adc
outsl
leave
movsl
(bad)
je
jnp
arpl
pop
sbb
dec
cmovl
dec
lcall
pop
pop
pop
insl
dec
cmovl
adc
je
push
out
adc
dec
push
dec
or
je
push
(bad)
pop
push
lahf
add
jno
inc
mov
jo
add
cmpb
cmp
