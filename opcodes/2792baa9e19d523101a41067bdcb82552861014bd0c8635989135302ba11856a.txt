rcrb
xchg
addr16
and
pop
dec
test
shl
push
and
lcall
cmc
gs
out
cwtl
(bad)
add
pop
insl
lahf
enter
mov
pop
cmp
(bad)
add
lahf
push
(bad)
sub
rcrb
or
stos
into
and
and
mov
xchg
jb
add
sub
ss
test
add
cwtl
or
and
cmpsb
imul
sub
pushf
je
aad
movsl
cwtl
loop
mov
movsb
ret
push
mov
jb
mov
aaa
stos
lret
or
outsl
adc
inc
(bad)
adc
push
pop
sbb
stos
arpl
pushf
inc
fisubrl
pop
pop
add
mov
es
sahf
sub
adc
cmp
ret
jg
pusha
push
xchg
sbb
jle
and
in
ficoms
shlb
ret
pop
int3
mov
dec
scas
addr16
fcompl
inc
push
enter
push
add
je
xor
add
sbbb
jmp
movsb
ja
mov
into
mov
outsb
push
pop
pop
bound
je
andb
xor
add
xor
sahf
and
shlb
add
jno
fisubs
cwtl
jecxz
mov
int
sub
mov
imul
inc
xlat
push
rorb
gs
push
lock
das
push
mov
jle
int1
mov
pop
leave
arpl
insl
cmpsl
ja
add
or
inc
push
sbb
loop
call
push
sahf
sub
sbb
xor
ret
jg
outsb
push
xchg
adc
mov
push
or
idivl
cmpl
in
push
jmp
incl
cmc
lcall
daa
lahf
push
(bad)
sub
xor
pop
insb
mov
dec
push
rcrl
dec
xlat
push
mov
lds
jg
sahf
and
pop
out
insl
lock
add
inc
xchg
jno
out
mov
movsb
fstl
push
test
xchg
andl
in
pop
inc
hlt
mov
iret
lcall
and
in
movsb
jge
push
and
call
in
or
ret
in
ljmp
aaa
rcrb
test
xor
in
and
cmp
(bad)
insl
add
jle
call
lcall
xor
imul
sub
jg
cwtl
in
push
sbb
incl
jmp
lea
xchg
cs
cmpsb
insb
add
int1
mov
outsl
lock
jbe
ja
jp
dec
push
in
ljmp
pop
loop
xchg
xor
pop
outsb
jg
dec
hlt
xor
sarl
fadds
jae
out
adc
cmpsl
xchg
in
sbb
bound
jecxz
mov
int
pop
fs
ja
adc
hlt
in
push
xor
cmp
mov
aaa
enter
insb
lcall
lea
call
push
pop
mov
xchg
mov
insb
lods
pop
push
xlat
push
lret
adc
add
hlt
inc
popf
and
mov
jle
xor
jle
lret
mov
push
imul
inc
imull
xor
add
add
mov
in
sbb
dec
xor
inc
jb
lret
xchg
test
ljmp
push
ja
cwtl
push
or
push
push
call
push
loop
xor
push
hlt
xor
mov
push
bound
pusha
call
out
adc
movsb
xchg
fmull
mov
xor
fisttpll
jge
pusha
aaa
call
push
mov
xchg
call
movsb
sbb
dec
enter
movsb
movsl
jo
cltd
ret
int1
enter
push
push
outsl
jmp
cmpsl
ja
jo
inc
insl
ljmp
das
dec
jge
sub
imul
aam
data16
out
stos
std
ja
adc
popf
sbb
push
jecxz
mov
movsb
neg
dec
pop
xchg
lods
dec
xor
inc
mov
loopne
xor
hlt
pushf
ret
leave
in
sbb
dec
aaa
shlb
or
push
add
mov
push
lock
cwtl
pop
test
adc
or
loop
test
jb,pt
es
xchg
call
push
push
and
cmc
lret
insl
mov
adc
push
pop
pop
pop
push
fstps
sub
mov
aas
cmp
pop
shr
push
xor
sarb
add
and
lret
pop
enter
xchg
subb
ret
inc
pop
push
in
mov
xor
imul
dec
je
dec
pop
add
cmpsl
dec
lds
mov
pusha
jo
movsb
popf
adc
push
inc
cmp
push
xor
std
test
jno
iret
ja
cmpsb
bound
mov
pop
xchg
push
adcl
movsb
xlat
out
fsubr
ds
les
jbe
push
push
fucomp
lea
xchg
mov
xchg
nop
or
push
add
int1
sub
push
mov
rcrb
cltd
sbb
shlb
lods
call
add
sub
mov
fcmovb
adc
ljmp
sbb
inc
std
sub
data16
pusha
inc
shrb
jecxz
mov
movsb
mul
lock
lret
lods
cmp
lods
roll
mov
cli
jae
mov
aaa
jo
out
ja
inc
push
xchg
xor
pop
jecxz
inc
inc
adc
(bad)
push
and
xchg
mov
aad
inc
fisubrl
add
cmpsb
push
jo
test
out
in
popf
ja
and
rcr
adc
add
data16
dec
stos
xchg
mov
lret
mov
int
sbb
fildll
test
push
inc
sbb
dec
fs
jl
inc
mov
xchg
hlt
lods
push
xor
mov
lret
push
sbb
mov
sbb
into
add
cwtl
or
and
add
jno
lods
imul
inc
testl
push
insb
fbld
add
cltd
jbe
pop
ljmp
aam
lea
js
cmp
call
push
jg
pop
xor
ja
arpl
push
call
xor
ret
ds
insl
cmp
inc
call
and
add
jbe
ljmp
(bad)
jmp
inc
push
test
rcr
lods
or
pusha
clc
lret
pop
test
xlat
clc
mov
or
outsb
insl
movsb
jmp
push
leave
lock
cmp
loop
aam
in
jge
push
rolb
enter
or
push
ret
hlt
push
mov
das
mov
cwtl
into
loop
and
iret
and
mov
out
jae
pop
and
fisttpl
xor
fs
xor
cwtl
mov
dec
dec
out
out
dec
int1
leave
push
add
out
xchg
xchg
jge
cli
adcb
fcom
cmp
test
jmp
adc
mov
imul
push
in
movsb
into
push
sahf
and
jns
fimull
in
sahf
sub
data16
or
das
xchg
rclb
prefetchwt1
or
mov
enter
js
dec
xchg
clc
jl
call
mov
daa
mov
adc
cmpsb
outsl
cmp
mov
fcomps
gs
scas
(bad)
hlt
push
ljmp
fwait
mov
or
jle
xor
sub
cmpsl
mov
(bad)
dec
(bad)
int
cmpsl
jle
repnz
test
xchg
fimuls
(bad)
sbb
push
test
dec
add
mov
or
dec
cld
inc
out
clc
or
outsb
xor
outsb
pop
sbb
fsubrl
mov
and
push
test
mov
pop
ret
lods
adc
cwtl
repnz
mov
pushf
and
pop
xor
xor
stos
cmpsb
bound
dec
nop
or
mov
lds
fsubl
jne
pop
mov
cli
repnz
pop
loope,pn
pop
mov
and
fbld
daa
push
xor
(bad)
stos
es
iret
cmpsl
push
dec
orb
ret
pop
fimull
or
mov
jmp
out
sbb
xor
or
out
and
pop
js
xchg
mov
mov
inc
jno
loop
out
or
in
mov
cmp
int
mov
arpl
divl
stc
imulb
jg
pusha
mov
push
imul
sti
mov
call
out
and
outsl
xchg
ss
sbbl
jg
mov
cmc
movsl
xchg
dec
fwait
sbb
jbe
cmpsl
iret
mov
hlt
ja
bound
and
inc
lock
sbb
in
std
(bad)
popf
mov
into
or
divl
scas
dec
cmp
sub
pop
or
popa
int3
