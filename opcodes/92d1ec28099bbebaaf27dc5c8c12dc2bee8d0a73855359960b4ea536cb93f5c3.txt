in
push
call
pop
mov
xor
push
popf
adc
shll
bt
jae
(bad)
(bad)
fisttpl
mov
outsb
je
test
jne
dec
push
js
dec
mov
stc
insb
jae
jmp
ja
jns
and
pop
outsb
addr16
dec
push
imul
push
inc
mov
ret
add
ljmp
jmp
pop
subb
xor
and
(bad)
lcall
fbstp
push
xchg
ret
xor
push
xor
rol
jecxz
and
or
pop
ret
lcall
fistpll
nop
add
mov
addb
add
add
push
push
jmp
incl
pop
pop
lea
add
push
mov
call
fs
inc
fistpll
add
decb
cmp
je
decl
inc
push
mov
jl
adc
je
adc
sbb
add
repz
sahf
testl
push
pusha
adc
imul
lock
mov
test
js
rcll
roll
mov
push
testl
mov
shl
adc
test
xor
fdivrs
(bad)
decl
lea
inc
pand
and
mov
sub
sub
cmp
xor
test
lock
cmp
ja
cmp
popa
mov
xor
add
pop
sbb
loope
xchg
cmovae
and
and
in
cmp
cld
outsl
sbb
add
dec
or
and
ljmp
cld
push
or
jmp
filds
lea
in
mov
lock
and
mov
aaa
in
out
fldl
and
xchg
fisttps
add
in
loopne
sub
cltd
inc
xor
mov
pop
insb
sbb
push
cmp
dec
shrl
mov
mov
sar
fs
(bad)
mov
mov
xchg
add
outsb
adc
lea
movaps
mov
aam
repnz
sbb
jb
or
inc
lea
neg
and
pusha
orl
call
sbb
dec
inc
lea
testb
in
sub
mov
(bad)
in
movsb
in
iret
jge
subl
nop
jcxz
loopne
push
cmc
pop
pop
pop
pop
ret
aas
repz
nop
dec
out
cmp
and
jmp
mov
jmp
aas
rcrl
testl
jno
sub
dec
idivl
sub
and
aas
add
inc
cmp
mov
adc
pop
xchg
jb
rolb
shll
orb
jo
cmp
pop
hlt
add
add
jb
jns
pop
jmp
push
push
dec
(bad)
ja
in
repnz
mov
stc
lods
test
into
int
add
jb
shll
xchg
pop
filds
cmp
xor
mov
cli
out
cli
call
out
or
sti
sbb
or
jecxz
insb
jl
adc
mov
fadds
movq
xchg
loop
add
jb
out
jle
or
ljmp
dec
cld
xor
mov
dec
cmp
bswap
movq
(bad)
mov
inc
cmp
adc
jg
cmp
jb
repnz
pop
lea
bound
in
sub
jo
or
lea
push
dec
inc
out
decb
movups
ds
dec
adc
or
push
jl
shll
push
emms
push
cwtl
or
test
rcl
cmp
(bad)
adc
dec
cmpl
out
adc
addl
dec
and
jg
push
or
cmp
jl
adc
push
shlb
mov
mov
add
je
adc
dec
mov
sbb
mov
imul
repz
jbe
mov
jo
cmp
aam
(bad)
xor
pop
mov
mov
mov
mov
stos
and
iret
and
mov
lea
les
or
pop
andb
dec
lods
insl
pop
lock
movsl
outsb
mov
test
jae
push
lahf
adc
aaa
test
or
sub
into
xchg
sub
cltd
addr16
adcb
push
dec
inc
and
(bad)
(bad)
(bad)
jmp
arpl
js
and
fs
gs
inc
push
pop
push
push
dec
inc
inc
dec
push
and
and
sti
(bad)
(bad)
cmp
jo
jb
inc
outsl
jo
outsb
jae
insb
outsl
jb
add
push
and
cltd
jl
sbb
loopne
in
jbe
idivl
and
fwait
xor
clc
scas
ss
adc
outsb
pop
lea
fldcw
xor
pop
push
add
or
push
adc
cmpsl
int
mov
and
jbe
jle
fdivp
popa
xor
push
add
pop
les
fs
jg
dec
jg
dec
jg
mov
int
dec
out
pop
add
mov
push
out
pop
jno
fwait
int
addr16
outsl
out
ja
jg
xchg
dec
xlat
sahf
inc
lea
pop
pusha
pop
pop
test
xor
mov
ds
cmc
add
test
pop
into
mov
ficoml
filds
shr
xor
aaa
push
lret
stos
inc
pop
aad
int
push
dec
std
pop
push
or
or
lret
mov
mov
xlat
sub
pop
std
add
cmpsl
fnstsw
fs
cwtl
outsl
insb
std
add
je
and
jl
add
popf
dec
out
xchg
out
les
lret
pop
jb
pushf
out
insb
out
je
out
cmp
pushf
jl
lret
fwait
add
mov
insb
enter
je
sbb
cmp
pop
pop
sub
lret
dec
in
jl
and
jb
cltd
dec
push
iret
fs
sub
jl
xchg
lret
dec
sub
jb
xor
xor
test
inc
and
xor
in
xor
je
mov
gs
cs
sub
mov
insb
popf
add
loopne
inc
inc
gs
cs
sub
or
jno
pop
enter
mov
sbb
lods
out
cmp
dec
out
add
out
popf
hlt
push
enter
push
sahf
pop
and
adc
or
pusha
add
or
enter
insb
lahf
cmpsb
inc
es
mov
xor
js
adc
adc
push
xor
es
mov
add
cmp
je
daa
scas
sbb
ret
sbb
or
add
inc
or
out
fidivs
out
imul
out
fidivrl
jg
jg
pop
jmp
jns
jg
jg
sub
test
std
pop
mov
push
clc
faddl
or
emms
mov
xchg
daa
push
(bad)
sbb
pusha
sbb
js
fmuls
and
inc
incb
scas
inc
es
(bad)
jle
xchg
mov
call
outsl
int
mov
dec
mov
stc
(bad)
mov
insl
adc
add
or
incb
inc
outsb
sahf
or
lods
out
insb
fwait
jg
jmp
cmpsb
cmpsb
mov
call
shrb
fidivrs
mov
cmc
sti
push
testl
fmuls
push
repnz
xor
outsl
outsl
sub
fidivs
pmulhuw
enter
jle
cld
out
aas
insl
push
push
push
push
stos
pop
movsb
clc
stc
pslld
pusha
pusha
popf
pusha
daa
std
rolb
lret
jbe
xor
fwait
fwait
push
fwait
lods
int
aaa
mov
add
mov
adc
xor
cmp
aas
enter
jnp
int1
jnp
mov
test
push
stc
pop
in
push
sbb
sbb
nop
dec
jg
loopne
loopne
inc
fnsave
xlat
imulb
jg
ret
pop
in
cltd
pushf
cs
inc
stc
pslld
dec
dec
xor
jp
sub
(bad)
(bad)
mov
cmp
push
push
inc
push
adcb
aad
adc
sub
ja
shll
out
call
aaa
fmull
movsl
cmp
imul
outsb
xchg
aaa
adc
pmulhw
mov
jnp
xlat
sahf
lahf
repnz
jbe
lahf
inc
mov
and
(bad)
lock
rcll
std
and
pop
stc
cmovp
dec
push
xchg
and
fimull
sahf
xchg
test
sbbl
pop
cli
and
add
push
lret
jg
jmp
sub
movsb
sub
push
jl
or
or
pop
in
enter
mov
mov
dec
jg
mov
stc
pslld
pop
leave
imul
jg
(bad)
adc
test
cmp
test
fnstcw
jae
cmp
jmp
lcall
imul
adc
adcb
in
enter
div
repz
