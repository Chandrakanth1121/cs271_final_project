mov
popa
jno
enter
in
sbb
rorl
jg
out
jno
in
fs
iret
cld
int
or
dec
lahf
pop
outsb
and
xchg
push
mov
mov
repz
mov
pop
pop
clc
jne
mov
subl
popa
shll
lods
pop
fucomp
stc
adc
idivl
pop
enter
xlat
in
pop
mov
(bad)
gs
insl
call
scas
sub
xor
or
shlb
aaa
pushf
adcl
mov
xchg
loope
xor
mov
pop
into
enter
loopne
iret
push
mov
cmp
and
dec
pop
js
fxtract
jne
sub
dec
jbe
ja
mov
cmpsb
pusha
arpl
popa
lods
mov
aas
or
add
jbe
sub
jbe
or
jle
or
mov
inc
or
or
faddl
(bad)
jo
push
mov
shlb
fisubrl
rol
in
add
cmp
sbb
push
movsl
psllw
inc
gs
push
sarl
rorb
arpl
dec
ficomps
shll
jnp
shr
sarl
push
lret
xchg
xor
rolb
jle
add
enter
push
add
and
dec
fimull
sub
sbb
in
imul
out
sbb
stos
inc
push
fisubs
imul
pop
and
outsb
fcmovbe
dec
es
outsb
lods
insl
scas
xchg
cmp
ds
jmp
es
xor
add
jle
fidivl
mov
inc
or
loop
xchg
outsl
pop
add
mov
jns
loopne
mov
pop
jb
pop
cli
imul
adc
pop
cmp
outsl
daa
mov
lret
xchg
sbb
outsb
shrb
dec
out
cltd
cld
adcl
sti
pop
push
adc
stos
jb
dec
gs
lret
mov
sti
imul
test
jns
mov
push
add
xchg
sub
fucomip
rorb
mov
and
insb
xchg
lcall
pop
mov
jae
mov
mov
outsl
out
sbb
cld
mov
xor
ficoms
mov
insl
stos
mov
lret
add
xor
stos
adc
adc
data16
dec
imull
cltd
orb
mov
push
int3
fs
or
gs
lahf
pop
iret
bound
test
adc
mull
mov
cmp
out
adc
xor
jo
xchg
sbb
jge
or
mov
outsl
adc
mov
stos
imull
xchg
mov
or
outsl
fwait
std
or
pop
xchg
cld
and
lcall
enter
and
push
les
jmp
pop
mov
cltd
aam
std
notb
mov
int3
cmpsl
pusha
cs
mov
andl
push
loop
mov
sti
je
jnp
negl
mov
cmp
bt
popa
out
pop
lock
pop
cmpsb
push
mov
push
cld
pop
sti
adc
test
or
and
sub
insb
sar
cli
mov
outsb
xchg
movsl
push
fsubr
sub
subb
rcll
pop
mov
mov
ficomps
cmc
sub
shll
(bad)
int
jnp
lods
sbb
cmp
idivl
inc
std
shrl
mov
mov
xchg
leave
scas
xchg
gs
(bad)
mov
inc
jb
sub
stos
jne
loope
pop
inc
enter
pop
xchg
std
or
mov
int1
gs
out
outsl
outsl
int3
push
notb
div
sub
jbe
or
js
mov
int3
out
xchg
push
(bad)
jge
lret
xor
cld
ret
push
gs
(bad)
in
mov
push
cli
mov
mov
out
jp
insl
in
inc
out
dec
aas
mov
repz
mov
lahf
inc
imul
bound
(bad)
mov
rol
sbb
adc
pop
jmp
lret
mov
or
pop
outsl
xchg
push
cwtl
pop
nop
sub
adc
(bad)
sti
mov
imul
shr
or
dec
mov
jle
call
jp
mov
dec
jbe
imul
mov
bound
jbe
out
ss
fisubrs
cmp
pop
(bad)
(bad)
inc
(bad)
cmp
out
mov
lret
xor
xorl
cwtl
mov
mov
testl
jbe
add
jmp
mov
std
hlt
cmc
and
cmpsl
mov
add
sbb
lods
bound
push
call
mov
add
lret
adc
stos
insb
(bad)
pop
outsb
lret
sub
insb
mov
(bad)
jnp
(bad)
dec
popa
kxnorb
pop
es
pop
outsl
dec
scas
lret
jl
lds
aad
scas
add
sbb
sbb
test
push
pop
mov
clc
call
repnz
fs
xor
lret
insb
out
mov
mov
iret
int3
pop
sub
cs
sbb
lret
imul
jne
(bad)
xchg
jbe
push
lea
int1
sti
xchg
dec
cld
xor
test
inc
leave
into
rep
int1
or
inc
push
outsb
pop
cmp
call
popa
mov
sbb
stc
and
pusha
in
dec
xchg
mov
jbe
pop
int1
xchg
cmp
push
mov
adc
and
aad
jb
js
lock
popf
into
jo
mov
pushf
aaa
xchg
nop
push
shld
jl
outsb
jl
pop
mov
stos
lea
aam
ret
adc
mov
and
xor
and
nop
lods
push
inc
bound
jg
repnz
cmp
bound
mov
sarl
adc
outsl
and
es
pusha
pop
lods
push
mov
mov
mov
call
out
lcall
mov
mov
cli
mov
ja
mov
jnp
mov
xor
addr16
jnp
or
adc
in
inc
(bad)
push
jmp
xor
adc
mov
mov
adc
imul
sbb
mov
fwait
(bad)
sbb
mov
cmp
mov
pop
mov
xchg
(bad)
loopne
sub
lret
sahf
mov
into
push
xchg
cmpsl
hlt
stos
jle
insl
int
sub
add
pop
clc
pop
lret
sub
cwtl
mov
(bad)
arpl
pushf
lds
lcall
addb
push
out
push
jmp
dec
test
mov
dec
inc
sti
push
push
popa
pusha
push
lds
jge
lock
xor
jnp
into
cmp
jns
lea
mov
sbb
stc
cmp
gs
push
push
daa
push
iret
mov
aam
in
dec
cmp
fdivl
out
cld
jnp
push
xchg
cld
gs
mov
clts
in
and
daa
inc
jle
add
push
jp
add
pusha
pushf
lods
push
jne
cmp
stc
mov
xor
insl
push
fwait
mov
inc
jp
es
add
cmpsl
mov
cltd
push
call
and
outsl
or
popf
(bad)
ss
data16
sub
push
scas
cmp
mov
jle
jbe
xchg
xchg
dec
mov
dec
jno
es
fwait
ret
mov
in
rcrl
scas
in
jmp
sub
das
inc
fnstsw
inc
test
jg
sub
lcall
cmp
jp
xchg
in
repz
test
sbb
sub
pushf
xlat
stos
fcmovbe
aam
arpl
out
lock
imul
dec
dec
jno
scas
add
cmp
cmc
adc
cmc
pop
jge
inc
cwtl
push
cmc
test
lret
aaa
or
fidivl
mov
dec
fisubrs
pop
jg
pop
test
adc
outsb
xchg
push
adcb
mov
loopne
pop
sbb
ds
in
cmp
pmaddwd
mov
pop
jle
cmp
xor
fcmovbe
stos
cmpsl
jno
das
dec
cmp
jnp
cs
sub
xor
es
pop
pop
mov
push
roll
cmpsb
stc
mov
add
jo,pn
pusha
sahf
sahf
fldt
mov
dec
mov
jne
(bad)
sbb
arpl
and
insb
jno
adc
in
pop
push
push
xchg
jge
in
jge
mov
jmp
adc
jl
xchg
cli
pushf
cs
fcoms
ja
out
ret
rclb
jl
int1
int
repz
push
movq
cli
and
sub
rcll
cmp
and
cmpsb
gs
xor
sahf
jno
cmpsb
loop
mov
push
adc
cwtl
call
ret
adc
lea
bound
cltd
