cltd
mov
dec
jecxz
arpl
sbb
or
rolb
sbb
dec
aam
cmp
pop
lock
mov
inc
cmpsl
stos
stos
rcll
insb
scas
add
or
or
pop
insb
into
enter
lea
sar
mov
repz
cwtl
dec
push
mull
daa
mov
or
xor
mov
xchg
push
sub
cwtl
in
xchg
xchg
lahf
dec
and
xchg
inc
pusha
jns
mov
pop
adc
das
shlb
mov
xchg
sahf
push
adc
mov
mov
ljmp
mull
jo
mov
fadds
iret
xor
cmp
mov
lret
jl
jbe
mov
dec
rorb
add
loope
mov
sub
xchg
jmp
(bad)
dec
and
lcall
imul
lock
out
push
add
(bad)
inc
mov
push
test
mov
or
imul
mov
setne
inc
mov
data16
(bad)
mov
sbb
xchg
lds
inc
pop
cmp
lods
sub
sbb
and
test
scas
dec
sub
pop
movsl
arpl
push
push
inc
mov
inc
mov
jo
sub
pop
fwait
pop
les
inc
inc
cmpl
mov
(bad)
inc
mov
or
inc
adc
loope
out
inc
jbe
dec
sub
mov
iret
cmp
leave
inc
call
xchg
gs
stc
push
add
int1
in
jno
inc
pop
add
lahf
inc
ss
cmc
lea
inc
push
pop
cmp
sub
ret
lea
leave
xchg
addl
xchg
cli
arpl
push
or
outsl
xchg
inc
pop
fdivl
arpl
inc
imul
outsb
mov
add
mov
mov
push
sahf
mov
pop
fldl
popf
into
jo
push
mov
dec
dec
mov
mov
js
imul
pop
mov
mov
mov
adc
arpl
dec
dec
dec
or
js
imul
sti
add
cmp
ljmp
inc
sbb
add
shll
call
sub
arpl
mov
sbb
jp
data16
(bad)
cmc
dec
js
aaa
imul
repz
xor
cmp
xchg
fs
std
mov
(bad)
jp
sub
dec
inc
jle
cmp
and
das
jne
repnz
mov
adc
push
cmc
xchg
jb
mov
inc
arpl
or
in
inc
addl
fs
or
gs
jecxz
or
jge
arpl
pop
jns
or
pop
mov
mov
out
mov
jo
pop
dec
lods
testl
(bad)
jle
and
repz
dec
sub
cmp
movsl
dec
add
lahf
sub
nop
jb
pushf
cld
fisttpll
push
sbb
mov
xor
mov
lea
in
les
sub
in
adc
clc
push
ja
xor
add
xchg
xor
jne
add
outsb
(bad)
movb
adc
mov
pop
dec
push
xchg
lds
outsb
mov
xor
push
and
and
retw
movl
mov
inc
divb
pop
pop
dec
rorl
fs
adc
pop
cmpsb
mul
lcall
mov
mov
cs
mov
jmp
lods
or
mov
es
outsb
mov
test
mov
js
(bad)
adc
cmpsl
pop
hlt
je
xchg
cmpsl
jl
jge
lahf
sub
mov
aad
jno
mov
xor
adc
scas
jecxz
scas
rclb
inc
int3
std
lock
mov
sub
dec
cwtl
mov
sub
xchg
enter
ss
push
push
arpl
xchg
or
lods
fld
or
iret
mov
out
and
jg
cmp
in
and
inc
or
dec
push
sub
xchg
shlb
imul
(bad)
sbb
stc
dec
nop
add
ljmp
mov
jp
pop
aam
movsl
adc
sti
cwtl
mov
int1
into
aas
inc
inc
insl
loopne
gs
js
aaa
mov
inc
xchg
inc
nop
mov
jns
(bad)
push
cmpsl
loope
out
sbb
mov
sbb
sub
or
std
ds
or
cmpsb
imul
xor
inc
jns
inc
pop
bnd
sub
sub
pop
or
xchg
pop
in
push
sbb
test
imul
ljmp
pusha
dec
or
cmp
cwtl
mov
cmp
adc
cmp
dec
sti
lea
(bad)
enter
mov
test
add
(bad)
nop
push
movsb
idivl
jmp
sub
xchg
les
divl
stos
je
push
test
test
in
mov
test
movsb
fs
fs
jno
xor
inc
dec
ljmp
ret
ds
adc
cmpsb
imull
jmp
cmp
mov
xor
adc
push
lahf
inc
in
mov
xor
mov
dec
and
jnp
mov
(bad)
movsl
(bad)
lahf
jecxz
jb
mov
push
adc
sbb
stos
adc
jmp
mov
dec
rorb
inc
dec
mov
fadds
push
lret
(bad)
push
insb
or
xor
mov
cli
fwait
scas
add
gs
std
lock
lret
mov
ffreep
lds
gs
xlat
inc
jg
jecxz
movsl
and
outsl
add
das
enter
xchg
sub
daa
push
push
fdivrp
das
add
shrb
arpl
daa
data16
push
xchg
mov
cltd
mov
inc
xchg
mov
or
aad
mov
sub
leave
inc
test
ret
ja
or
dec
pop
pop
movsl
fmull
fwait
push
clc
stos
pop
cmpsl
sarl
pop
test
sub
ret
sbb
mov
int1
sub
lea
addr16
cmpsl
dec
and
dec
aas
arpl
adc
inc
push
out
dec
outsb
mov
xchg
shlb
cmp
or
xlat
mov
mov
(bad)
shr
inc
adc
or
imul
pop
faddl
pusha
dec
gs
ret
leave
add
decb
xor
repz
mov
jp
fisttpll
sub
inc
dec
sbb
push
(bad)
int3
jp
iret
mov
addr16
xor
push
inc
hlt
dec
daa
xor
bound
sub
fmuls
mov
cmp
mov
je
cmp
js
sti
fdivrs
inc
popf
jnp
jno
lods
fbld
dec
pop
mov
xchg
sbb
cmpsl
fstl
mov
mov
pop
dec
lea
push
mov
or
add
adcl
out
in
sub
and
bswap
pop
jl
push
mov
inc
pop
mov
ret
mov
data16
movsb
push
ret
into
lea
rorl
ret
aam
pop
push
faddl
dec
adc
or
push
pop
lret
test
sti
orb
in
mov
fidivs
lret
aaa
dec
or
(bad)
enter
popa
clc
ret
mov
scas
mov
xchg
or
dec
subb
rcl
leave
inc
out
ret
movsl
cmp
sbb
mov
mov
adc
loop
fmuls
jecxz
cmpb
imul
or
sub
sbb
adc
mov
push
sbb
add
pushf
push
in
mov
inc
fdivrl
cwtl
outsb
push
mov
push
ja
stos
les
leave
mov
js
pop
mulb
ficoms
inc
into
mov
cmc
sub
pop
addr16
leave
arpl
dec
add
xchg
ret
dec
shrl
popa
mov
xor
cs
jns
mov
dec
xchg
adc
imul
adc
(bad)
mov
dec
add
inc
pop
push
xlat
std
jg
call
popa
lcall
sti
adc
and
and
add
scas
sub
push
push
pusha
movsl
jmp
or
push
adc
loope
dec
mov
xor
xchg
cmp
lret
dec
fistl
test
loope
test
or
dec
cmp
add
ret
jne
sub
inc
inc
jge
push
cmp
add
and
adc
sti
cld
cmp
jge
or
mov
loop
inc
(bad)
lret
insb
aaa
mov
xchg
imul
movsl
bound
fmull
in
iret
xor
movsb
rorb
dec
sbb
lret
mov
cmp
xchg
daa
mov
cmp
add
mov
add
int3
jg
add
pop
add
jp
jno
dec
inc
in
push
je
fwait
