and
sub
adc
outsb
enter
fcoms
roll
nop
pop
popa
and
test
aaa
inc
andl
imul
and
push
dec
adc
lea
mov
xchg
movsl
pop
sub
push
dec
shlb
test
popf
dec
push
inc
add
into
jae
sub
mov
pop
cli
jge
sti
cmc
inc
(bad)
lods
mov
cltd
and
fildll
shrl
flds
mov
nop
insl
jbe
mov
inc
out
jb
test
mov
cli
(bad)
jge
fwait
and
and
(bad)
fistl
scas
inc
divl
jne
fistpll
(bad)
mov
test
mov
data16
pop
iret
push
add
frstor
adc
inc
inc
fbstp
lret
iret
lods
pop
(bad)
ds
mov
inc
push
pop
add
cmpsb
ja
ror
es
push
orb
mov
xchg
hlt
pop
xchg
dec
cmpsb
loope
or
sbb
fdivr
xor
cli
xchg
in
lea
adc
xchg
xor
repnz
sub
sbb
and
ds
cwtl
(bad)
fwait
insl
out
or
in
add
pop
xor
jne
push
jecxz
add
repz
(bad)
stos
mov
sub
sbb
sbb
dec
fs
mov
lea
jno
(bad)
mov
push
loopne
inc
sub
test
js
add
sub
jne
adc
pop
mov
pop
push
mov
imul
pop
push
ret
mov
ret
xchg
fsubr
mov
pop
xchg
pop
push
and
int1
sbb
ficoms
aam
fnsave
and
inc
out
fdivs
stos
mov
mov
xchg
aaa
int
cmc
test
in
in
or
and
nop
loopne
loope
shll
push
and
mov
jo
aas
cltd
push
cmpsl
pop
lret
mov
test
jp
fwait
ret
pop
push
ljmp
push
lret
sbb
ret
mov
adc
test
int1
jne
sbb
movsl
xorb
fs
negl
push
stos
fsubrs
xor
sbb
fisubs
adc
cmp
rolb
adc
test
mov
push
dec
ret
mov
xorl
jno
adc
fisubl
inc
add
or
stos
sub
cmp
push
inc
mov
pushf
sbb
mov
push
xchg
scas
push
scas
push
adc
adc
push
in
mov
scas
pop
jnp
rcrb
jb
jns
subb
jb
(bad)
and
shlb
test
xchg
add
out
push
push
sbbb
lock
or
inc
fbld
call
pop
xchg
cmc
daa
lock
cmpsb
and
xchg
(bad)
jns
push
shrl
repnz
push
xor
(bad)
jmp
mov
inc
cmc
enter
push
add
push
mov
aaa
rcll
and
push
sbb
out
pusha
int
mov
movsl
cmp
or
inc
xor
leave
les
lds
add
rol
aaa
dec
mov
xchg
inc
sbb
sahf
jecxz
dec
pop
or
cmp
sub
jb
and
xchg
hlt
jb
sub
jns
xchg
sti
or
test
mov
ss
jge
inc
aaa
jno
mov
jecxz
xchg
xorb
add
dec
push
popa
aas
dec
xlat
cmp
ficoms
mov
ret
int1
mov
int1
insl
pop
in
mov
mov
loop
push
insb
xor
(bad)
add
or
or
fs
inc
in
jbe
pusha
rcrl
mov
push
and
jmp
sbb
push
sbb
jg
pusha
subl
stos
sbb
fistl
jmp
jno
dec
nop
mov
or
mov
push
enter
mov
and
xlat
pop
or
xchg
leave
outsl
xchg
lret
jecxz
mov
inc
jbe
dec
cwtl
outsl
or
dec
mov
rclb
lea
jae
inc
inc
xor
cmpl
adc
inc
sbb
sub
sub
dec
dec
cmp
mov
jle
mov
add
push
aaa
adc
fsts
out
xchg
arpl
inc
or
dec
push
cltd
fistl
xchg
xor
and
pusha
out
pop
mov
sub
push
inc
mov
xor
scas
mov
(bad)
arpl
out
fs
mov
jg
popf
and
scas
iret
add
in
xchg
popf
cmp
pop
pop
push
(bad)
push
mov
or
in
xchg
push
out
ds
rcrb
push
sbb
fs
scas
stc
sahf
jg
(bad)
sbb
push
sahf
(bad)
mov
push
dec
xchg
aad
adc
mov
ret
cmp
in
push
pop
jnp
jbe
out
mov
add
cld
dec
dec
sbb
inc
cmp
insb
mov
iret
fsts
test
imul
lret
(bad)
lcall
xchg
adc
gs
fistl
pop
popa
and
xor
pop
std
out
xor
xchg
jbe
adc
imul
pop
in
stc
ljmp
std
fptan
xchg
xchg
lcall
adc
cmp
sub
pop
xchg
lcall
mov
sbb
lcall
lret
xchg
mov
int
xor
sahf
xor
lret
pop
push
jmp
test
mov
stc
sub
xchg
inc
ja
sbb
dec
or
jp,pn
jo
ljmp
leave
push
movsl
sbb
loop
lahf
divb
iret
cmc
aas
hlt
int
imul
xchg
adc
pop
add
pop
and
js
stos
cmpl
sub
add
aam
loopne
outsb
jnp
cmc
sti
stc
int3
mov
mov
xchg
out
iret
iret
mov
pop
pop
cli
xchg
sub
out
outsl
push
in
je
rcll
xchg
or
dec
inc
and
jbe
(bad)
push
mov
push
jmp
mov
aas
lcall
negl
adc
rolb
dec
aaa
lret
insb
inc
inc
(bad)
dec
cltd
popa
arpl
sbb
testl
je
jne,pn
add
add
mov
lea
(bad)
rorb
pop
aaa
or
push
pop
cmc
iret
mov
(bad)
das
xchg
lock
ljmp
xor
orb
popf
xchg
in
pushf
add
jmp
xchg
je
lods
jp
leave
lds
mull
clc
repz
pop
mov
dec
add
bound
jo
mov
inc
mov
jg
adc
sub
lea
std
push
call
push
pop
push
rol
addr16
pop
hlt
insl
sahf
clc
imul
mov
lock
adc
adc
xor
pop
addr16
cmpsl
mov
(bad)
push
sahf
add
push
leave
lea
cmp
mov
test
or
or
add
mov
iret
xor
rcrl
cld
sar
sahf
nop
and
jbe
xchg
inc
mov
mov
rcll
arpl
adcb
inc
mov
sub
popf
sub
arpl
pop
push
gs
insb
mov
adc
subl
xchg
jbe
jecxz
xor
pop
btrl
test
mov
mov
pushf
jns
xchg
mov
dec
mov
sub
fists
sub
push
push
lods
loopne
shr
push
pop
cmpsb
cmc
jb
push
xchg
mul
fimuls
aad
das
mov
add
inc
(bad)
fmulp
je
outsb
dec
sbb
aad
hlt
pop
lea
loop
and
and
adc
sti
pusha
xor
xor
mov
test
pop
mull
dec
jmp
push
loope
ficoms
loope
and
jle
push
add
mov
addr16
loop
inc
and
or
les
inc
fistps
nop
roll
sbb
adc
ficoms
xchg
mov
sbb
imul
jbe
adc
int3
mov
cli
jg
adc
push
xor
xchg
test
mov
fs
or
mov
xor
xor
dec
daa
ret
les
push
cli
scas
xor
pusha
fdivs
mov
loope
mov
mov
iret
ss
(bad)
add
(bad)
pop
inc
jle
inc
and
mov
mov
push
ja
cmpsb
jb
cmpsl
mov
push
repnz
mov
dec
jb
jbe
xor
andb
adc
js
nop
shll
sbb
stos
pusha
aam
into
cs
stos
dec
or
bound
repz
xchg
fcomps
lahf
jb
