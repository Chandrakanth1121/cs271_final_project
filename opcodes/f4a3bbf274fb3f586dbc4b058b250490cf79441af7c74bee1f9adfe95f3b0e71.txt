inc
xor
rorl
cmpb
lods
scas
pusha
mov
sub
lea
mov
or
in
pop
xor
xchg
inc
cltd
xor
sbb
inc
aam
lds
aad
iret
(bad)
cld
sbb
sbb
mov
sbb
pop
int3
ror
mov
inc
out
cmp
pop
mov
rorb
jne
pushf
inc
mov
ds
loop
cmc
es
mov
jns
mov
pop
push
xlat
push
lods
jno
movsb
xor
shlb
dec
scas
enter
roll
push
mov
sub
cmp
pop
add
mov
aas
int
iret
xchg
sbb
test
push
in
leave
pop
in
cld
aam
push
cmpsb
movsb
cmc
or
lea
cs
addr16
jno
mov
loop
movsl
add
mov
scas
sarb
sbbb
xor
jle
dec
mov
aam
dec
xchg
jno
fildl
or
or
and
mov
and
pop
pop
mov
cmpxchg
jo
scas
xchg
adc
(bad)
cmp
dec
and
cmc
(bad)
jns
enter
push
fidivs
pop
(bad)
xchg
int3
ja
rorl
push
cmp
add
mov
lea
inc
sahf
sbbb
lcall
arpl
incl
das
test
and
sub
cmp
adc
jae
push
shll
lds
jno
cmp
cmp
push
mov
test
fptan
rcrl
cs
cs
sbb
and
lock
xor
ret
and
push
pop
jb
push
in
dec
or
mov
or
inc
push
test
cmp
mov
jns
dec
mov
int
jp
cltd
mov
fcomp
lock
movsl
call
fucomp
(bad)
mov
jns
jle
fildll
cmc
cmp
add
and
daa
jns
aaa
test
cmp
dec
adc
pushf
leave
and
test
mov
jecxz
xor
push
xbegin
add
xor
jae
shrb
cwtl
lea
sbb
dec
inc
aam
sbb
or
lss
loope
call
outsb
or
lods
jge
jno
aad
push
fwait
test
std
xchg
ss
gs
nop
in
or
pop
into
call
in
pop
dec
dec
mov
movsl
inc
pop
inc
mov
(bad)
add
pop
dec
inc
loopne
adc
aas
dec
outsb
cs
xchg
xor
sbb
std
pop
jnp
out
fdivl
iret
add
ds
(bad)
jmp
test
lock
add
jl
cmp
jne
xchg
jns
hlt
fidivs
adc
push
fs
fiadds
sbb
mov
sub
sub
push
stc
push
call
cmp
dec
fnstenv
call
sub
fiadds
mov
add
jo
jo
sbb
mov
data16
add
lea
shrb
in
test
sub
pop
hlt
imull
fldl
push
into
loope
cltd
adc
stc
pop
inc
mov
cmpsl
push
push
js
lea
in
in
xor
shlb
and
ror
nop
shr
or
adc
mov
jge
movsl
cmp
pop
or
stos
clc
outsl
lods
scas
adc
les
lods
push
mov
inc
int
push
es
lcall
jecxz
cmp
push
rorb
test
std
mov
cmpsb
mov
inc
lret
mov
mov
jecxz
das
lea
out
(bad)
pop
xorl
pop
in
xor
sub
push
mov
push
out
fs
jmp
outsb
cwtl
mov
gs
int1
(bad)
mov
fimull
xchg
iret
pop
add
std
adc
mov
xor
dec
insb
cmp
add
mov
leave
fnsetpm(287
das
mov
pop
xor
dec
xlat
mov
mov
xor
rcll
(bad)
fistpl
dec
sub
and
fdivr
push
jmp
popf
leave
jg
cmp
lock
lcall
push
in
pop
mov
mov
pop
lea
mov
and
push
andl
xchg
mov
arpl
in
xlat
push
add
setns
push
push
scas
cmp
pop
or
sub
popa
cmp
imul
sub
push
mov
loope
cmp
shrl
into
loopne
orb
test
ds
cltd
sub
into
pop
mov
mov
push
mov
shlb
cs
rcrb
mov
insb
sar
dec
mov
jge
imul
out
mov
push
inc
mov
fisubs
das
and
outsb
out
lock
sarl
push
std
(bad)
mov
pop
or
inc
(bad)
out
or
popf
lods
xor
mov
dec
shr
add
mov
cs
(bad)
sub
add
add
std
rcrb
aad
push
or
adc
(bad)
aad
iret
add
ret
(bad)
movsl
and
dec
sub
inc
and
xor
cmp
jl
ret
xchg
ja
lods
dec
xchg
sbb
(bad)
jmp
test
pop
mov
jle
ret
addr16
jne
lods
in
mov
jp
push
fdivl
push
pushf
shlb
ja
les
scas
push
or
cmp
and
dec
outsb
insb
cld
push
mov
divl
mov
out
popf
in
xor
xor
pusha
lcallw
pop
dec
in
lcall
fstpl
push
les
cmp
fucomip
(bad)
(bad)
(bad)
lds
dec
inc
iret
lcall
int1
add
and
push
jbe
sbb
fsubrl
jl
jg
fucomip
movsb
mov
lods
xor
(bad)
pushf
mov
xor
(bad)
mov
int
mov
in
mov
cmp
nop
sbb
jns
xchg
or
xchg
int1
scas
les
cmc
ss
mov
ret
ret
ret
je
movsl
xor
insl
sahf
cmp
int
pushf
pop
mov
cli
add
scas
cmp
fstpl
in
cmpsl
test
lock
int3
std
insb
popf
sbb
loope
in
cld
dec
sub
pushf
daa
scas
mov
test
add
xor
jnp
xor
add
int3
xor
mov
cmp
sub
fimuls
inc
push
pop
aad
scas
lcall
aad
int
dec
mov
cmp
xor
mov
xor
xchg
sub
loope
add
cmp
jmp
insl
ds
in
fdivr
cmpsl
cmp
xor
arpl
mov
lea
out
lods
jle
aam
lret
xlat
dec
add
and
inc
int1
jle
jle
sub
inc
mov
inc
xchg
jnp
rep
mov
jno
in
(bad)
push
xchg
jg
bound
ret
jbe
mov
xchg
hlt
or
push
movsb
outsl
cmp
cltd
inc
test
pop
aas
aaa
movsb
(bad)
jae
pop
ljmp
mov
xchg
call
sub
jmp
jb
sahf
cmpsl
enter
jge
jae
push
inc
rorb
sti
cmp
pop
or
cs
loop
inc
jns
(bad)
add
lret
jl
ret
adc
push
rolb
cmc
cmpsb
push
test
outsb
xchg
bound
and
adc
stos
lock
int3
loop
lcall
int1
rolb
data16
and
xor
jb,pn
xchg
sub
shrb
xchg
jnp
jl
jg
inc
ja
scas
clc
push
lret
mov
das
ds
sbb
ret
mov
pop
sub
scas
and
cli
cltd
out
jno
jp
mov
xchg
and
sbb
xchg
dec
inc
fs
int3
mov
xchg
shrl
pop
in
jle
push
lods
jl
loopne
jl
xorb
xor
sbb
mov
int
pop
arpl
cltd
adc
gs
fs
dec
xor
dec
lods
rorb
cmp
lea
lret
sbb
dec
add
jl
stos
test
add
sbb
pop
jno
jl
(bad)
(bad)
cld
mov
pop
mov
mov
rcr
lret
cs
aas
int3
pop
cli
pop
aas
shr
test
mov
call
jp
loope
mov
scas
addl
cmpsb
jae
cmp
inc
into
loope
test
mov
stos
adc
and
xor
testl
mov
mov
jl
add
sub
mov
push
daa
insb
add
or
leave
and
std
pushf
cmc
out
fdivrp
add
ret
inc
xchg
pop
sbb
(bad)
nop
sub
out
sub
