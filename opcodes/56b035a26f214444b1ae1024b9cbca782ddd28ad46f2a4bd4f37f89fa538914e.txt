rcll
push
mov
test
add
cli
cmpsb
add
es
add
lea
nop
mov
fisttpl
arpl
cmpsl
adc
clc
add
dec
xor
ret
and
nop
decb
jle
lcall
add
sbb
test
int3
loopne
popf
cmpl
inc
sub
dec
xchg
out
adc
shl
lods
dec
sbb
cmc
popa
ret
inc
mov
jle
notl
(bad)
in
mov
inc
ret
inc
inc
rcl
push
je
cmpsb
das
adc
xchg
inc
addr16
push
out
pop
ja
fwait
mov
addl
xchg
mov
idivl
cmp
sbb
fwait
daa
jb
cmp
mov
xchg
std
loopne
mov
xchg
pop
cmp
notl
fildl
mov
aaa
push
test
je
sahf
movsb
mov
push
inc
pushf
mov
(bad)
jl
adcl
cmp
sbb
sbb
and
int
bound
lahf
mov
add
int1
xchg
mov
pop
xchg
jge
dec
nop
in
data16
lcall
rclb
imul
or
je
scas
push
mov
aaa
(bad)
int
nop
addr16
sub
js
test
lcall
mov
lahf
es
fisubl
imul
repz
das
push
pop
xchg
(bad)
scas
lahf
inc
scas
sbb
mov
sub
jo
jns
out
mov
(bad)
dec
dec
int3
pop
sbb
jbe
sarb
rep
lods
mov
jo
jnp
sub
dec
jecxz
pop
cmp
ljmp
jge
and
mov
in
mov
xchg
(bad)
cmp
adc
cltd
sahf
mov
inc
sbb
and
jge
jmp
loopne
jae
sub
jne
neg
and
push
mov
pop
adc
shrl
sbb
push
xchg
mov
sbb
(bad)
mov
adc
decb
mov
sub
lods
cmpsb
fsubrs
std
in
jp
dec
or
out
inc
pushf
push
rol
sti
fsubrl
loope
stos
rcll
xchg
jge
xchg
rcll
sub
andb
adc
jo
lcall
lods
cmp
stc
sbbb
(bad)
adcb
outsb
push
mov
pop
call
sbb
lea
push
sub
arpl
xchg
xchg
jle
movsb
mov
fwait
nop
les
jl
(bad)
movsb
(bad)
jne
(bad)
xor
sbb
movb
out
pusha
cmp
push
in
sarb
xchg
lods
xlat
(bad)
out
(bad)
xchg
mov
dec
push
push
pop
lds
add
fs
je
lea
setne
mov
out
out
ja
pusha
leave
jge
mov
xchg
in
sub
cmc
ret
mov
push
jp
mov
jmp
in
mov
mov
(bad)
push
popf
pop
popf
stc
jb
sbb
ja
test
inc
push
or
cmp
cmp
dec
xor
or
loopne
imul
pop
xchg
inc
fnstcw
and
sbb
and
stos
xor
xchg
jg
push
gs
es
and
pop
test
inc
adc
cmp
repz
pop
push
mov
enter
mov
mov
xchg
xor
cmpl
cmpsl
leave
pop
loope
sub
xchg
fadds
out
test
in
inc
lock
fiaddl
mov
ds
ret
imul
mov
bnd
(bad)
adc
inc
addl
inc
pop
fs
adc
lea
fcomp
pusha
imul
sbb
jnp
inc
cmpsb
ret
sbb
sub
xchg
xor
mov
hlt
adc
mov
pop
movsb
mov
sbb
popf
jns
jbe
cmp
adc
cmp
mov
pop
xchg
sbb
or
loop
lret
testb
es
(bad)
call
push
fcmovne
sbb
lods
stos
pusha
pop
cmp
push
xchg
sbbl
jge
push
cld
push
leave
cmp
pop
xor
pop
idivb
or
sbb
sbb
and
mov
das
andl
ret
jl
int1
leave
test
imul
add
fs
loop
and
loop
mov
or
adc
mov
dec
popf
pop
sbb
sti
(bad)
outsl
out
dec
xor
push
push
adc
sbb
aaa
inc
mov
adc
imul
mov
mov
xorb
int3
sahf
sbb
push
sarl
mov
pop
adc
cmpsl
fwait
out
cld
inc
cmpsl
cmp
data16
mov
mov
cmpsl
insb
mov
push
add
or
mov
jnp
lea
ret
push
and
loope
cmp
addb
roll
jns
mov
mov
inc
pop
(bad)
mov
loope
popf
push
jmp
sub
xor
dec
inc
jl
enter
mov
call
mov
adc
jne
mov
ret
cwtl
jo
adc
arpl
or
cmpsl
pop
jnp
or
inc
repz
inc
aam
movsl
and
and
adc
adc
(bad)
ja
daa
fs
les
dec
cmp
add
mov
rcrb
int3
sub
std
daa
bnd
mov
xor
fisubl
imul
dec
dec
scas
int
dec
(bad)
pushf
xchg
stc
in
fnstcw
push
xchg
push
lods
add
push
or
fsubrs
mov
(bad)
sbbl
jp
pop
add
add
subl
and
jecxz
fidivrl
in
jmp
int1
dec
mov
pop
(bad)
jno
ljmp
roll
loope
in
aad
loop
insl
andb
(bad)
cmpsl
into
push
cmpsb
adc
lds
stc
pop
sub
jb
test
push
mov
pop
jecxz
and
pushf
int
and
inc
lret
mov
sbb
sub
push
jo
add
scas
pop
int1
lds
xchg
lret
push
clc
push
leave
imul
lea
(bad)
cmp
sub
imul
jae
add
sbb
mov
cmp
xchg
stc
(bad)
outsl
lahf
cmp
jne
outsb
push
fistps
dec
loope
inc
in
popa
ss
shll
sub
stc
push
stos
repz
ljmp
mov
shlb
and
xor
and
insl
push
hlt
mov
repnz
iret
xchg
and
xlat
or
mov
xchg
xchg
mov
repz
aad
xor
insb
cmp
cmp
ja
dec
xchg
(bad)
mov
in
dec
inc
call
sbb
mov
mov
adc
int3
sbb
lods
cmp
push
lea
cltd
stc
pop
fiaddl
inc
pop
fsts
aad
cltd
aad
push
xor
lret
dec
mov
jo,pn
jle
outsl
jmp
xchg
shrb
mov
xor
adcb
inc
cmpsl
dec
push
in
mov
or
adc
stos
idiv
js
mov
xor
xchg
mov
push
in
das
mov
pop
mull
mov
sbb
jns
popa
(bad)
stc
mov
(bad)
mov
fistpl
xor
mov
sub
xor
mul
fs
adc
jmp
aaa
sti
cmp
(bad)
jg
mov
mov
jecxz
mov
pop
cmp
xlat
mov
hlt
and
adc
jl
xchg
inc
pop
jae
xchg
jmp
or
mov
fnstcw
xor
ret
pop
outsl
loope
mov
mov
lock
mov
pop
sysenter
xor
mov
int1
dec
fidivs
and
mov
adc
pop
push
xchg
mov
subb
jecxz
inc
xor
scas
adc
das
gs
inc
sbb
jo
aam
push
jb
test
and
adc
sub
mov
aam
repnz
xchg
ret
dec
dec
mov
mov
popa
mov
cmp
jae
sbb
sbb
imul
out
jb
ss
add
lahf
mov
test
sub
inc
mov
sbb
xchg
dec
dec
sub
xor
in
cmpsl
push
and
leave
jp
inc
and
or
dec
adc
xchg
sti
aam
out
sbb
jo
fdivl
call
xchg
cmp
push
outsl
xchg
jg
rcr
loop
mov
xor
fadds
imul
fcmovu
js
inc
push
lea
mov
daa
mov
xor
pop
pop
(bad)
addr16
inc
cs
dec
sbb
out
in
push
ds
lods
xchg
push
xor
mov
nop
adc
iret
fdivrl
cmpsb
int
fistpl
jp
cwtl
lret
outsb
paddusw
mov
xchg
fnstcw
