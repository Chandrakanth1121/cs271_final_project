mov
dec
movsl
push
sub
xor
sti
push
subb
and
adc
mov
in
push
mov
int1
xchg
lret
ret
test
movsl
outsb
push
pop
test
xlat
and
call
jo
sti
sbb
dec
imul
xor
jg
lds
pop
daa
and
mov
xor
mov
ret
jo
out
mov
mov
imul
ror
push
dec
xchg
jno
dec
loopne
gs
cmp
shrl
das
pop
loopne
dec
xor
out
cmpl
bound
sub
sbb
aas
nop
dec
jbe
ficoms
es
imul
pop
push
pop
sbb
daa
in
popa
pop
dec
mov
(bad)
ss
outsb
test
inc
int3
jne
sbbb
sbb
dec
(bad)
out
bound
(bad)
fsts
xor
pushf
jmp
jns
(bad)
mov
(bad)
xor
dec
outsb
jne
sbb
fadd
(bad)
daa
test
push
pop
dec
imul
adc
fisubrs
mov
aad
outsb
nop
in
mov
mov
xchg
mov
rorl
jne
movsb
fadds
mov
cmpsl
leave
and
sub
mov
cmp
dec
lret
inc
(bad)
aad
outsb
mov
clc
ljmp
stos
mov
rcrb
cmc
xchg
xor
repz
insl
mull
xchg
repnz
shl
sbb
out
and
mov
fstp
inc
sbb
aaa
test
mov
cld
outsl
test
sub
aas
xor
adc
mov
xchg
ret
xchg
fnstsw
mov
gs
subl
js
pop
test
iret
test
inc
mov
lods
inc
push
push
pop
pop
fsubs
push
sub
adc
and
gs
mov
and
pop
std
dec
rclb
shrb
loopne
sbb
fs
insl
inc
les
mov
push
call
jmp
mov
cmp
push
sbb
lds
leave
aaa
sub
stc
mov
pop
pop
sbb
iret
aam
data16
mov
pop
sti
inc
popa
ret
adc
push
and
mov
push
roll
xor
push
cmp
cmc
inc
mov
clc
jo
arpl
xor
imul
jb
pop
mov
pop
sbb
jg
insl
xor
sbb
leave
loop
push
mov
jg
popf
call
inc
sub
scas
and
mov
dec
out
pusha
xor
pop
mov
sbb
test
negb
outsb
sub
cmpsb
sbb
lret
(bad)
fucomi
daa
jmp
clc
jl
jae
inc
les
into
je
int1
js
mov
xor
cmp
in
jcxz
test
lahf
inc
jne
test
cwtl
xchg
ljmp
out
in
enter
cwtl
xchg
(bad)
cmpsl
jb
out
mov
enter
test
ss
lret
lock
clc
outsb
mov
divb
pop
rol
outsl
jo
or
dec
inc
add
sbb
pop
pop
ss
imul
pushf
roll
in
scas
xchg
pop
sbb
mov
aam
rcr
jb
jne
mov
fmull
inc
das
outsl
loopne
cs
mov
pop
mov
int3
pop
xlat
clc
popf
push
ret
xor
mov
call
fwait
inc
pop
inc
loope
jl
fldl
je
jae
in
(bad)
mov
push
in
movsl
ss
push
cmp
int1
into
call
cmpsb
xor
lahf
shrb
fldcw
enter
sti
and
stc
inc
dec
adc
sbb
hlt
mov
mov
int
fwait
cmpsl
mov
xchg
mov
ljmp
xor
xor
loope
cs
push
leave
bound
dec
sub
mov
in
ret
mov
jg
xor
push
jmp
jo
fs
out
out
test
sub
dec
sbb
push
sub
rcr
push
dec
je
ret
rcr
mov
pop
les
enter
gs
(bad)
cld
negl
xchg
xlat
and
stos
adc
shrl
xchg
push
mov
pop
leave
mov
fstpl
jl
xchg
out
adc
jo
sbb
lea
push
arpl
dec
test
daa
push
mov
sbb
mov
mov
dec
aas
insl
test
jle
dec
mov
aaa
nop
xlat
pop
enter
xor
mov
jbe
fdivrl
jae
retw
inc
xchg
rcl
mov
mov
sahf
dec
mov
outsb
mov
and
jg
push
pop
outsb
pop
fmull
in
test
(bad)
and
pop
das
cld
jle
mov
cmp
dec
or
sub
jge
jle
ds
push
adc
outsl
sub
jns,pn
inc
jle
sub
bound
sbb
mov
cmp
sbb
fs
bound
pop
push
orb
scas
sub
(bad)
lcall
mov
ret
lcall
cmp
sub
repnz
mul
call
ljmp
iret
xchg
xor
(bad)
js
jae
lods
pusha
pop
pop
(bad)
insl
hlt
subb
push
rcrl
xor
xorb
lret
popf
mov
insl
test
mov
xor
mov
cmp
mov
adc
mov
xchg
inc
nop
fdivrl
aad
scas
es
int3
dec
and
pop
inc
movsl
retw
xor
imul
popf
pop
fistpl
aas
and
(bad)
inc
sbb
lret
fnstcw
mov
jns
jo
push
adc
shlb
sti
ljmp
shlb
ret
fcmovbe
daa
pop
jmp
aas
cmp
fst
movsl
stos
divl
sti
std
hlt
sub
(bad)
jo
xor
sub
int1
cmp
ror
cmpsl
pop
adcb
jns
xchg
adc
cltd
rolb
sbb
cmp
adc
pop
pushf
sbbl
push
imul
(bad)
leave
notl
push
inc
jnp
fistps
mov
(bad)
pop
jg
mov
mov
test
call
adc
ljmp
pushf
inc
movsl
jns,pn
repnz
adc
xor
inc
xchg
push
xchg
in
lods
jae
daa
push
dec
sahf
adc
ss
test
bound
popa
fbstp
mov
mov
movsb
mov
in
xchg
rclb
jl
pop
inc
outsl
and
shll
dec
int3
rorl
push
pop
mov
repz
sub
(bad)
int3
lods
pop
sahf
in
(bad)
adc
mov
cmp
pop
(bad)
shl
xchg
pop
push
scas
les
sbb
clc
mov
xor
divl
and
dec
daa
jl
push
sbb
testl
jb
cmpsb
sbb
(bad)
mull
add
roll
add
mov
popa
sbb
aam
in
xchg
int3
out
call
imul
pop
aas
stos
repnz
add
call
push
in
mov
cmpsl
fldenv
daa
das
in
jae
xor
ljmp
mov
mov
sarb
add
mov
in
insl
xor
outsl
mov
out
adc
fstpl
jnp
outsb
pop
flds
pushf
call
movsl
test
sahf
mov
push
and
(bad)
(bad)
in
add
xchg
bound
mov
pop
addr16
out
xchg
ret
adc
mov
mov
shll
lock
imul
jo
int1
and
inc
sub
in
fs
ficoml
dec
(bad)
pushf
std
pop
call
insb
jl
in
dec
scas
push
mov
pushf
call
addr16
imul
das
roll
cltd
inc
outsl
lods
rcrb
adc
sub
enter
xchg
cmpsb
cmp
xchg
push
in
(bad)
sub
sbb
fsubrl
in
stos
cmpsl
sahf
stc
jmp
cli
js
push
add
cwtl
in
call
adc
int
loopne
test
imul
pop
jae
pop
mov
lret
lahf
out
mov
add
and
fwait
push
cmc
push
lret
fcompl
ss
into
bound
mov
jne
inc
and
les
call
insl
sub
hlt
pop
arpl
jmp
jns
(bad)
in
adc
jno
lods
leave
mov
sbb
shl
lods
sbb
flds
jo
scas
mov
xchg
(bad)
(bad)
inc
mov
xchg
imul
pusha
jmp
int1
in
xchg
jmp
imul
xor
es
loope
scas
cli
outsl
shr
insl
stos
movsb
cli
out
jo
mov
mov
out
fs
jmp
