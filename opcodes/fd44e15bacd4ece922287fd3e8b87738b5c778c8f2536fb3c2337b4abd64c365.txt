push
fistps
popa
push
cwtl
or
pop
dec
add
push
push
andl
ds
sub
and
and
lret
push
mov
es
arpl
ret
iret
jp
or
jno
loopne
mov
(bad)
rolb
std
add
push
adc
ljmp
bound
and
fwait
shrl
xchg
dec
and
dec
xlat
and
scas
fcmove
das
imul
push
addr16
daa
inc
shl
adc
cs
daa
into
adc
aas
popa
cmpsl
ret
mov
push
lcall
rorb
call
sub
shll
lret
imul
inc
inc
mov
mov
pop
and
mov
jno
add
jge
mov
(bad)
es
cmp
pop
xor
hlt
push
or
out
(bad)
or
fiadds
es
push
lret
inc
addr16
dec
push
stos
cld
fs
into
cltd
jo
roll
add
mov
add
enter
adcl
aam
sub
mov
ds
mov
dec
mov
(bad)
(bad)
inc
add
inc
mov
pop
cmpsl
xor
dec
and
filds
xchg
xchg
push
adc
imul
add
stos
pop
sub
xor
ret
and
push
dec
aas
out
inc
(bad)
jle
mov
xchg
push
dec
xor
jge
sub
add
addb
sbb
test
jo
lahf
push
lahf
add
(bad)
aaa
das
push
sahf
xor
jecxz
inc
arpl
xchg
jl
rcl
bound
jle
push
push
pusha
stc
push
pop
test
jo
push
inc
or
sub
movsb
jmp
loopne
inc
dec
jecxz
push
sub
or
pop
pop
push
repnz
jb
pop
fdivrp
cmpsl
inc
out
cwtl
js
xchg
int
mov
and
sub
cmp
pop
(bad)
out
andl
movsb
cmpsl
mov
sti
pop
inc
fwait
xchg
inc
push
aas
mov
int
stos
xchg
jle
push
jbe
jmp
mov
(bad)
daa
push
adc
inc
inc
jecxz
fdivl
scas
ret
mov
pop
enter
inc
sti
cmp
cmp
or
testb
sub
push
xchg
or
mov
inc
inc
sbb
(bad)
bound
addr16
scas
pusha
fisubrs
rcl
push
jmp
loope
fucomip
or
sbb
out
inc
repnz
in
and
out
pop
dec
pop
cmpsl
je
lods
inc
inc
sti
rclb
sbb
push
lock
sahf
sar
and
push
(bad)
fs
(bad)
in
adc
outsl
jge
ds
fisubrs
jg
xchg
cltd
pop
pusha
push
addr16
ds
stos
inc
out
(bad)
loopne
incl
out
hlt
pop
and
ret
iret
lcall
dec
shrb
xor
dec
push
stos
jle
dec
pop
mov
jae
fisttps
outsb
nop
mov
mov
in
or
sbb
inc
mov
jecxz
inc
push
add
sbb
mov
pop
call
cmp
out
xchg
cli
jb
inc
mov
arpl
xchg
pop
pmovmskb
xlat
push
and
das
fisttpll
int1
inc
sub
mov
xor
sub
sub
arpl
dec
loop
ds
cltd
mov
jmp
scas
jo
bound
imul
daa
in
cld
mov
jmp
mov
cmc
mov
shl
scas
push
das
add
adc
xchg
lea
int
es
scas
test
(bad)
dec
dec
jg
add
pushf
mov
bound
inc
(bad)
xchg
mov
lret
fcoml
lods
pop
inc
push
inc
int1
orb
in
shlb
mov
lret
push
scas
mov
jle
outsl
inc
gs
cwtl
dec
movsl
mov
mov
jae
std
sub
cwtl
push
pop
mov
(bad)
dec
mov
sbb
popa
in
(bad)
mov
mov
inc
lcall
add
mov
cmpsb
jg
and
pushf
bound
sahf
inc
fstps
mov
jg
or
xchg
js
ljmp
test
jmp
add
lret
jg
ret
push
push
pushf
jno
les
xor
or
dec
mov
sub
push
push
push
movsl
sahf
daa
call
call
gs
mov
shll
cmc
add
fsubrl
push
jg
mov
xorl
mov
sub
outsl
push
sti
(bad)
ds
js
push
adc
mov
adc
in
loopne
imul
clc
subl
divl
(bad)
mov
inc
lea
inc
dec
testb
adc
sub
push
cmp
aam
dec
cmpsl
jle
(bad)
sbb
inc
push
xchg
repnz
popa
inc
push
add
dec
cmp
incl
xchg
cmp
ret
and
fs
add
or
mov
popf
cmpsl
inc
xlat
add
dec
xchg
inc
sub
shll
or
aaa
das
mul
push
popf
and
push
mov
popa
add
mov
int
shrl
repnz
sbb
mov
add
pusha
popf
adc
(bad)
aas
mov
jne
mov
leave
pop
ret
adc
and
push
movsl
inc
push
jge
or
ljmp
out
or
push
jl
in
or
jecxz
loop
es
xlat
pusha
jl
divb
jae
or
sub
daa
gs
add
adc
add
mov
xorl
lret
sbb
pusha
es
push
mov
lret
aas
cmp
enter
push
push
test
xchg
dec
rcl
xchg
loope
add
insl
test
cmp
push
jmp
out
or
ljmp
jmp
iret
and
cmpsb
loopne
push
sbb
cmp
mov
inc
push
loope
pop
push
int1
arpl
loop
pop
sub
push
inc
sbb
movsb
pop
pop
outsl
movsl
pop
adc
movsb
pop
or
addr16
adc
(bad)
push
mov
xor
es
mov
and
xchg
loop
sar
mov
neg
jo
push
mov
lock
popf
mov
lahf
sbb
movsl
add
inc
mov
or
int3
pop
sbb
or
and
(bad)
lahf
pusha
xchg
(bad)
jno
clc
stos
pop
and
dec
mov
scas
shrb
movsb
mov
jae
(bad)
sub
pop
ja
adcb
movsl
xor
xor
loop
(bad)
mov
repz
inc
xchg
pop
lahf
test
adc
ss
sub
pop
daa
mov
sahf
pop
or
mov
sub
pop
push
clc
push
in
dec
dec
(bad)
imul
jo
testl
cmp
cmp
test
mov
(bad)
pop
push
mov
xor
dec
cmpsl
lods
testb
out
mov
mov
pop
aam
jge
fisubs
push
dec
mov
ds
or
xchg
scas
mov
pusha
mov
shrl
cmp
insb
jge
and
jbe
out
pop
shrb
sti
in
das
movups
int1
jbe
inc
(bad)
mov
pop
push
(bad)
push
push
adcb
leave
cmp
pop
mov
or
ret
inc
jne
loope
ds
cmp
cmp
arpl
sbb
inc
imul
ja
xchg
or
lret
loop
test
push
outsb
dec
mov
xchg
mov
sbb
pusha
int3
in
dec
popf
adc
test
mov
mov
add
mov
int1
pop
pop
mov
scas
dec
or
cmp
push
insb
lods
movsl
jae
fwait
sbb
jo
and
mov
add
aam
adc
jb
das
fildl
stos
mov
pop
jecxz
add
popf
pop
cmovae
pushf
mov
or
inc
test
popa
mov
movsl
rol
leave
pop
push
mov
xor
addb
shrl
xlat
push
sahf
add
or
dec
cld
push
insb
rorl
das
mov
in
inc
sahf
insb
jmp
addl
pusha
pop
call
mov
out
or
and
imulb
mov
mov
test
push
xchg
(bad)
mov
sub
data16
mov
sbb
mov
lea
add
add
out
fdivrp
aad
mov
pusha
stos
jne
xor
cltd
in
ret
xlat
clc
mov
inc
cmpsb
push
push
mov
