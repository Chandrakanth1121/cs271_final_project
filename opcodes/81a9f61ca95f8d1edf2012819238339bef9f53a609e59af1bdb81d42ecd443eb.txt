or
dec
mov
outsl
mov
lret
sub
mov
cmp
fdivl
mov
xor
sub
mov
(bad)
xchg
xchg
push
push
pusha
mov
jns
push
(bad)
jno
lcall
jmp
mov
mov
lock
mov
push
(bad)
imul
ljmp
add
test
xchg
sahf
jmp
jb
adc
lret
pop
and
(bad)
ljmp
mov
aaa
jne
cmp
in
negl
repnz
out
ds
jnp
jg
dec
cmp
cwtl
or
les
xchg
and
in
dec
cmpsb
sub
push
xchg
push
bswap
fdivrl
pop
data16
ja
cli
lock
out
cs
sub
sbb
arpl
xchg
aam
dec
pop
mov
mov
mov
testl
bnd
sbb
jge
lcall
and
mov
mov
jmp
(bad)
std
lcall
insl
adcb
sahf
pop
mov
orb
xlat
cld
pop
ljmp
out
mov
(bad)
cmp
mov
sbb
enter
aaa
dec
mov
cltd
pop
(bad)
mov
inc
push
cli
mov
es
cmp
mov
call
addr16
sbb
arpl
jp
push
mov
cmpsb
int1
mov
fisubl
out
cmp
cmp
mov
mov
lahf
(bad)
shlb
out
sbb
mov
rcrb
lods
xchg
xchg
scas
mov
out
fdivrl
adcl
(bad)
lret
mov
mov
imul
in
rorl
mov
sub
cmpsl
mov
mov
add
lea
int1
inc
sahf
push
iret
outsb
cmp
inc
fcompl
sbb
mov
popa
cmp
push
lret
scas
or
roll
jmp
sbb
jo
mov
nop
cmp
dec
inc
je
addl
xor
std
jb
fnstcw
xlat
dec
mov
mov
lock
jp
(bad)
in
mov
out
xchg
sub
mov
xor
gs
scas
dec
(bad)
popa
sbb
outsl
pop
or
mov
repz
ljmp
sbb
rcrb
das
mov
fimuls
xor
sub
orl
lcall
popf
fcmove
pop
push
cli
sbb
cmp
repnz
mov
enter
xor
pop
ds
cmp
or
gs
inc
or
push
clc
xchg
rorb
insl
ds
iret
jle
sub
fmulp
fsubl
int3
mov
(bad)
lret
push
or
popa
ds
mov
mov
mov
cs
jmp
mov
push
jnp
dec
xchg
xchg
into
sarb
stos
into
sub
negl
ret
mov
(bad)
jl
data16
rcr
jmp
aad
popf
lret
sub
cmp
dec
int
int3
xchg
pop
sub
mov
sbb
inc
scas
adc
push
xchg
push
mov
pop
mov
pop
xchg
push
sahf
jmp
mov
jnp
push
inc
mov
out
adc
loopne
nop
fbstp
mov
lret
adc
xor
and
scas
sub
enter
sbb
addr16
enter
aas
mov
xor
ds
scas
and
dec
inc
jns
pop
sub
stos
jp
sbb
loop
jbe
sahf
lahf
lcall
mov
sahf
mov
sahf
shrl
aam
mov
inc
out
popf
mov
jne
adc
nop
mov
movsl
xor
pop
ja
dec
and
or
int
(bad)
lahf
xor
dec
push
mov
xor
adc
cmp
jl
or
call
mov
add
iret
repz
mov
mov
leave
pop
testb
fwait
push
jae
adc
mov
mov
cmpsb
iret
xchg
mov
dec
add
mov
lret
fs
mov
pop
test
sbb
jb
int1
out
sar
popf
mov
xor
and
data16
cmp
mov
lods
hlt
mov
xchg
scas
sbb
push
sbb
scas
je
pop
in
sub
lds
sub
or
jl
adc
jnp
int3
mov
ror
dec
jle
jno
loope
sub
cmpsl
ss
int
sub
cmpsb
ret
push
cmp
jp
int3
not
push
int
aam
pop
sbb
mov
test
pop
aam
(bad)
repz
js
sub
inc
dec
pop
jno
mov
stos
push
push
adcl
sub
push
in
and
add
rolb
sub
dec
rclb
cwtl
idivb
fcmove
cld
lret
adc
repz
pop
leave
fiaddl
sbb
(bad)
dec
fbstp
jnp
imul
dec
in
movsl
into
push
push
mov
addb
sbb
jp
aaa
adc
repz
int
cmp
add
pushf
repz
pop
jno
in
push
inc
sbb
sbb
xor
movsl
loopne
mov
pop
or
lcall
pusha
lds
mov
xor
addr16
rcrl
lret
adc
fwait
mov
jne
insl
cmpsl
(bad)
fs
(bad)
int1
adc
andl
je
int1
setle
shl
add
xchg
fwait
add
inc
jns
enter
mov
ret
sub
adc
mov
shlb
sbb
fnstsw
shll
ljmp
ret
popa
mov
ljmp
mov
into
mov
lods
shlb
xchg
cli
int1
mov
ss
sbb
es
insb
aaa
idiv
pop
push
or
in
mov
insb
nop
xorl
jb
testb
mov
push
cmp
jno
xor
mov
mov
jecxz
nop
js
mov
cmp
rorl
outsb
int
or
insb
cmp
mov
pop
je
aad
or
xchg
xor
inc
lret
xchg
xor
lea
pop
xor
movsl
sahf
dec
xchg
mov
add
sbb
ljmp
inc
repnz
push
sub
mov
mov
lgs
or
mov
inc
lret
xor
or
adc
shl
pop
mov
jae
loope
cmp
addl
ret
sub
inc
int3
cmp
jmp
adc
sbb
js
(bad)
xchg
gs
das
push
and
fdiv
jae
ds
ja
psubusb
out
ja
movmskps
push
adc
mov
call
in
(bad)
or
lds
or
push
mov
dec
mov
call
sbb
or
dec
clc
cmp
push
bound
mov
aad
lahf
cmpsb
jbe
xchg
out
idiv
in
sahf
inc
mov
cli
out
(bad)
mov
push
repnz
js
outsb
neg
lret
ljmp
outsb
(bad)
(bad)
neg
scas
sti
daa
orl
outsl
js
rcll
(bad)
mul
inc
pop
dec
rorl
aaa
je
mov
add
repz
shlb
xor
pushf
add
in
sub
inc
adc
dec
xchg
cmpsb
pushf
insl
sbb
popa
dec
rolb
mov
cmp
adc
imul
xchg
jbe
adc
mov
jbe
rol
dec
add
ds
sahf
(bad)
mov
loope
pop
fs
cmpsb
cmp
pop
rol
or
and
enter
leave
mov
add
mov
jp
cs
ds
(bad)
and
ds
out
rcrl
bound
cmp
movsl
repz
or
lahf
sub
push
movsb
push
dec
or
lods
add
clc
xchg
fcompl
or
and
jns
xchg
das
ret
cli
dec
int1
fwait
cmp
fsub
cmpsl
ds
sbb
sti
xor
insl
ss
into
inc
scas
xor
setl
insl
fstp
into
jl
lea
imul
jmp
push
adc
pop
and
loope
stos
adc
imul
sub
xlat
mov
imul
dec
xchg
add
or
pinsrw
push
xchg
or
xchg
iret
out
lea
(bad)
out
sbb
and
mov
and
jb
ds
in
cmp
es
cltd
mov
jns
(bad)
fstpt
sarl
faddl
(bad)
lea
sti
mov
mov
out
jge
ret
adc
(bad)
scas
jne
sbb
popa
cwtl
xlat
outsb
jo
inc
pop
push
push
and
cmc
cmp
dec
xchg
xor
lcall
ret
ret
mov
jnp
dec
inc
repz
stos
aad
std
rcr
add
stos
fcoms
xchg
jmp
js
jp
aam
rorb
dec
popa
and
leave
dec
mov
xor
nop
push
int1
call
cld
mov
cltd
fcmovnb
int3
xchg
mov
lock
mov
jp
fstl
