push
push
push
call
push
mov
call
pop
ret
int3
int3
int3
push
push
push
call
push
mov
call
pop
ret
int3
int3
int3
push
push
push
call
push
mov
call
pop
ret
int3
int3
int3
push
push
push
call
push
mov
call
pop
ret
int3
int3
int3
push
push
push
call
push
mov
call
pop
ret
int3
int3
int3
push
push
push
call
push
mov
call
pop
ret
int3
int3
int3
push
push
push
call
push
mov
call
pop
ret
int3
int3
int3
push
push
push
call
push
mov
call
pop
ret
int3
int3
int3
push
push
push
call
push
mov
call
pop
ret
int3
int3
int3
push
push
push
call
push
mov
call
pop
ret
int3
int3
int3
push
push
push
call
push
mov
call
pop
ret
int3
int3
int3
mov
call
movl
movl
call
push
mov
call
pop
ret
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
mov
call
movl
movl
call
push
mov
call
pop
ret
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
mov
call
movl
movl
call
push
mov
call
pop
ret
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
push
push
push
call
push
mov
call
pop
ret
int3
int3
int3
push
push
push
call
push
mov
call
pop
ret
int3
int3
int3
push
push
push
call
push
mov
call
pop
ret
int3
int3
int3
push
push
push
call
push
mov
call
pop
ret
int3
int3
int3
push
push
push
call
push
mov
call
pop
ret
int3
int3
int3
push
push
push
call
push
mov
call
pop
ret
int3
int3
int3
call
movl
movl
call
push
mov
call
pop
ret
int3
call
movl
movl
call
push
mov
call
pop
ret
int3
call
movl
movl
call
push
mov
call
pop
ret
int3
call
movl
movl
call
push
mov
call
pop
ret
int3
call
movl
movl
call
push
mov
call
pop
ret
int3
push
push
push
call
push
mov
call
pop
ret
int3
int3
int3
push
push
push
call
push
mov
call
pop
ret
int3
int3
int3
push
push
push
call
push
mov
call
pop
ret
int3
int3
int3
push
push
push
call
push
mov
call
pop
ret
int3
int3
int3
jmp
lea
push
mov
lea
lea
push
xchg
lea
movzbl
pushf
pushf
mov
popf
mov
lea
pushf
mov
popf
push
push
push
call
jmp
lea
jmp
ljmp
mov
call
push
call
pop
ret
push
call
pop
ret
push
call
pop
ret
push
call
pop
ret
mov
call
push
call
pop
ret
int3
jmp
adc
scas
mov
in
out
in
popa
adc
xor
dec
pop
xchg
xchg
pmullw
push
mov
scas
mov
mov
outsb
dec
lods
adcl
adc
sbb
fcoms
adc
inc
shlb
outsb
dec
lods
adcl
fs
lret
sahf
in
pop
bound
in
int
xchg
in
mov
scas
mov
and
mov
and
in
xchg
adc
mov
adc
lret
sti
shll
and
lret
jmp
stos
mov
loop
stos
mov
jns
mov
mov
lahf
mov
jns
mov
stos
mov
jns
mov
mov
insl
add
ret
sti
in
xchg
lfs
in
sti
in
xchg
and
in
xchg
or
cmp
and
addr16
adc
jge
mov
and
sbb
aaa
loop
stos
mov
jns
mov
mov
stos
mov
loop
stos
mov
aaa
jns
mov
mov
push
add
cmp
fwait
shl
mov
loop
stos
mov
loop
stos
mov
loop
stos
mov
loop
stos
mov
aaa
shl
mov
pop
dec
mov
add
jge
pop
mov
mov
pushf
xor
add
push
addl
add
lea
push
movl
addl
add
lea
popf
mov
mov
push
push
call
jecxz
lea
jmp
jae
add
mov
mov
pop
mov
lea
push
mov
lea
push
mov
call
ljmp
and
add
add
dec
sub
addl
add
lea
popf
movl
mov
pushf
xor
add
push
addl
pushf
call
jp
add
jle
or
ret
jl
pop
pop
push
push
lea
mov
lea
push
mov
mov
pop
lea
ret
ljmp
mov
mov
movl
pushf
xor
add
add
add
popf
mov
pop
xchg
push
mov
call
jge
fs
push
push
jmp
loop
fildl
push
jmp
js
xchg
rorl
add
stos
mov
popf
pop
jl
mov
adcl
adc
stos
sahf
in
loop
pop
loopne
xor
(bad)
fadd
jle
mov
push
push
mov
adc
xchg
in
mov
popf
out
cmp
in
inc
stos
stos
mov
fldcw
adc
adc
dec
mov
in
inc
add
loope
inc
rcr
rolb
lret
insb
xlat
mov
stos
mov
mov
dec
adc
adc
xchg
in
pop
adc
imul
or
mov
and
and
push
mov
outsb
mov
and
movsl
in
les
popf
mov
inc
jno
pop
mov
xchg
jge
jle
in
inc
jno
pop
add
fdivs
cmc
lods
mov
dec
imul
cmp
rolb
out
fcoms
adc
inc
rol
in
push
fnstcw
std
std
jmp
test
or
add
add
ja
lods
and
add
add
add
mov
pop
pop
lea
ret
jnp
jl
repnz
or
xor
fdivs
(bad)
loope
ss
jmp
push
lret
push
push
dec
shr
out
in
jg
popf
movsb
outsb
inc
rclb
mov
jl
adc
xor
mov
test
in
or
fld
jecxz
imul
fnstcw
xchg
jno
fdivs
imul
cli
in
fcomps
in
out
lret
fwait
int1
and
mov
mov
ss
mov
in
mov
jne
jo
mov
leave
mov
add
cmpsb
in
sarl
aad
lret
mov
mov
stos
mov
cld
cmp
lcall
psubusb
mov
sbb
inc
jbe
sti
jmp
sbb
or
add
add
jmp
pushf
push
push
jmp
jg
and
fs
mov
add
add
pop
popf
mov
cmp
lea
mov
lea
lea
mov
lea
jmp
jmp
push
push
jmp
jecxz
ud0
jmp
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
jmp
(bad)
ljmp
adc
adc
or
fsubs
pop
mov
popf
leave
sbb
fidivl
scas
mov
in
out
in
adc
push
mov
add
stos
mov
rcll
lods
mov
and
in
arpl
popf
xchg
clc
inc
shl
cmp
fwait
loop
stos
mov
adc
scas
mov
in
out
in
inc
adc
dec
lea
(bad)
fwait
push
mov
mov
mov
xor
popf
lcall
in
pop
repnz
mov
rcrb
lods
push
adc
add
les
lods
push
mov
mov
and
in
pop
adc
enter
sub
adc
sbb
xor
popf
insl
sub
sbbl
popf
