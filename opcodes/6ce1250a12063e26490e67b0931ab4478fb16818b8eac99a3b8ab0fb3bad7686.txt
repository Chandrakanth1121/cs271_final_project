xor
add
add
add
add
add
add
add
add
add
add
xor
sbb
jbe
sub
add
and
add
add
add
dec
inc
add
add
add
pop
inc
add
add
add
imul
adcb
add
add
rclb
add
add
sbbb
add
add
add
add
add
add
inc
add
add
add
inc
add
add
add
inc
add
add
add
inc
add
add
add
inc
add
add
add
dec
inc
add
add
add
pop
inc
add
add
add
bound
add
add
add
add
add
add
jns
add
add
add
addb
add
add
inc
add
add
add
add
add
cltd
cltd
cltd
cltd
fnstcw
xor
xor
xor
sarl
lcall
aas
lcall
aas
add
add
add
add
add
add
add
lcall
aas
lcall
aas
xor
xor
xor
sarl
add
add
add
imul
add
add
add
add
mov
add
add
add
add
add
add
imul
shlb
add
add
add
lcall
aas
int
int3
int3
int3
int3
in
aas
add
add
add
lock
add
add
add
and
add
add
add
xor
add
add
add
ds
add
add
add
inc
inc
int
int3
int3
int3
int3
in
aas
xor
xor
xor
jmp
lcall
aas
add
add
add
call
push
out
aam
sub
push
xor
mov
add
lcall
sub
inc
adc
cmp
jle
xor
mov
or
cmp
repz
(bad)
gs
lea
stc
mov
and
or
popa
mov
inc
jge
push
les
pop
shll
jmp
lea
pop
outsl
subb
js
sub
(bad)
push
fs
ja
sarb
push
test
mov
mov
xchg
cmc
add
repz
lods
popf
pop
sub
test
mov
xor
push
out
xor
cltd
mov
outsl
lcall
fistps
rolb
lods
add
aaa
jge
push
aas
enter
arpl
xchg
xor
call
test
push
ss
mov
scas
addr16
loopne
(bad)
ror
and
dec
xlat
rol
adc
pusha
mov
jns
iret
pop
lods
mov
xlat
ljmp
mov
lods
mov
inc
mov
(bad)
or
inc
(bad)
lahf
addl
imul
iret
push
pop
cmp
mov
aaa
sbb
mov
xchg
push
call
movsb
cmp
pushf
sbb
add
mov
cld
ret
je
dec
cmp
sbb
mov
xorl
scas
jmp
sub
in
xchg
ds
sub
push
(bad)
faddl
xchg
and
(bad)
jns
pop
test
sub
jb
andb
js
cmova
dec
mov
mov
in
inc
jge
imul
jecxz
stos
outsb
sahf
cmp
xchg
jns
aas
mov
jno
cmp
fs
lahf
ss
stc
cmp
mov
xor
out
data16
mov
mov
and
insb
xor
dec
movsb
daa
pop
push
or
test
mov
mov
push
andl
dec
jno
stc
jmp
addb
shll
movb
leave
cmpsb
xor
outsl
sub
mov
dec
adc
(bad)
sarb
xchg
shlb
inc
es
fwait
xchg
or
loopne
in
outsl
dec
jle
jae
leave
fists
fdivrs
inc
mov
aaa
aas
mov
mov
sbbl
jge
mov
sub
out
xchg
mov
jb
jge
fwait
(bad)
shrl
xor
sub
push
cmpsl
push
xchg
and
(bad)
mov
or
pop
sahf
notl
out
mov
inc
adc
jp
cwtl
dec
xor
daa
ret
inc
fs
insl
stos
inc
pop
jne
mov
mov
jmp
mov
cmp
mov
cmc
arpl
xchg
cmpsb
mov
pusha
push
imulb
add
shl
push
inc
sbb
aas
jo
jno
fdivrl
pop
cmp
sti
stos
sar
aaa
fcompl
ret
inc
xor
(bad)
(bad)
xchg
and
cmp
sahf
fsub
and
adc
xchg
rcll
clc
outsb
fs
xchg
jbe
cmpsl
mov
shll
das
mov
jge
or
ficomps
in
and
popa
imul
sbb
aad
dec
push
dec
pop
xlat
xchg
std
mov
dec
daa
(bad)
push
sub
add
ja
lds
sbbb
jmp
cvtps2pd
pop
mov
das
ret
gs
inc
adc
jns
pop
popf
mov
ljmp
rcl
sbb
pop
repz
testb
and
daa
gs
fcmovbe
adc
xchg
dec
mov
jmp
mov
addr16
movsl
rcrb
call
cmp
in
leave
fs
sbb
xlat
adc
jae
pusha
push
sub
sbb
mov
loop
les
leave
pop
dec
push
cmp
aam
sub
and
inc
cmp
enter
sub
add
jb
mov
cmpsb
xchg
(bad)
fwait
dec
nop
shl
push
or
jge
stos
mov
add
xor
sub
inc
mov
out
adc
dec
dec
jecxz
lahf
aas
ret
xchg
sbb
inc
addr16
xor
mov
add
sbb
insl
dec
or
sub
rorb
gs
push
enter
fstpt
add
pop
pushf
into
inc
addr16
andl
and
orl
jbe
xor
mov
sahf
inc
jo
insl
sbb
or
data16
mull
xor
bound
pop
roll
ja
add
cmpsb
mov
insb
data16
sub
int
cli
add
cmp
lds
sbb
sbb
lahf
sbb
mov
imul
inc
xchg
jb
pop
cmpsb
int3
cmpsb
(bad)
outsl
mul
test
dec
arpl
or
pop
jo
js
cmp
jno
push
jne
pop
(bad)
in
xor
xor
aam
jno
lea
(bad)
sahf
loop
ss
cmc
subl
cmp
or
outsb
insb
cmova
pop
xchg
cmp
sub
(bad)
popa
ja
cwtl
cmp
or
xchg
jg
ret
pop
mov
xchg
shlb
aad
outsb
loopne
gs
xchg
ret
dec
jne
cmc
jge
popf
sbb
push
cli
in
arpl
loope
pushf
out
xor
popf
je
call
push
ds
sub
push
xchg
outsb
imul
jnp
stos
test
ficomps
adc
cmp
roll
fsts
sbb
inc
ret
xlat
lds
movl
lcall
pop
bound
pushf
fcmovne
jp
data16
lret
sub
adc
dec
push
rolb
and
xor
fsts
test
cmp
xchg
fnsave
sub
imul
fisttpll
cmp
xor
add
adc
pop
cltd
shl
jb
dec
out
dec
sub
lret
inc
push
test
sbb
lea
push
sub
lock
mov
inc
and
mov
or
xor
popf
cwtl
pop
std
xchg
call
es
dec
dec
bound
adc
push
cmpb
or
bound
out
in
ja
cwtl
pop
jl
push
and
pop
pushf
pop
setge
lock
dec
jp
loop
jns
imul
add
or
or
mov
add
xor
int3
xor
movsl
das
sub
mov
clc
aas
lods
push
lods
loop
mov
mov
dec
call
and
xor
and
jl
push
pop
jne
jg
jb
inc
and
insb
xchg
push
jne
jg
jb
inc
cmp
insb
xchg
jl
int3
jns
jb
dec
call
cmp
adc
mov
loop
call
xchg
and
and
leave
sub
xor
xchg
adc
scas
or
and
loop
scas
adc
add
sub
or
(bad)
adc
adc
add
sub
or
aas
ret
adc
adc
inc
add
adc
pusha
outsl
aas
mov
jno
jbe
dec
dec
jge
and
pop
sbb
dec
dec
jl
and
push
ljmp
sbb
fstpl
pop
adc
jns
jns
jns
pop
lcall
dec
mov
pop
