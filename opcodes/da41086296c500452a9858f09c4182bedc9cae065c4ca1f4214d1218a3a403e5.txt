syscall
push
movq
call
lahf
test
sub
sbb
frstor
je
rcrl
jle
add
or
imul
out
pop
or
adc
push
ret
pop
or
in
mov
sbb
adc
cmp
lahf
iret
(bad)
scas
clc
and
jo
{rex2
ret
nop
jg
ja
imul
jae
push
jmp
jae
mov
cmpsb
mov
or
(bad)
clc
and
jae
scas
lret
test
or
mov
rex.wrx
test
(bad)
push
(bad)
rcr
call
out
lods
mov
xor
cmp
loopne
push
sub
lahf
jmp
sbb
(bad)
mov
pop
(bad)
(bad)
xor
add
cmp
jle
cmp
jge
jne
and
(bad)
cmpsb
ret
movabs
lret
es
mov
jb
xchg
notb
adc
adc
mov
xchg
out
jmp
rcll
(bad)
lock
pushf
cmp
test
mov
sbb
movabs
xchg
es
shll
sub
insl
fldl
xchg
pop
sub
jae
pop
sbb
push
pop
adc
test
out
adc
pushf
fisubrs
sub
jae
jl
int1
fistpl
xchg
(bad)
sbb
cli
imul
push
jo
rex.wrb
fsubl
roll
mov
mov
jnp
sar
cmp
mov
fcmovnb
es
movabs
(bad)
cld
mov
repnz
(bad)
xchg
std
rex.xb
(bad)
out
or
imul
bnd
adc
adc
adcl
outsl
fwait
jo
repnz
sub
pop
mov
pop
fcomps
jle
(bad)
jl
jmp
movabs
loop
pop
mov
jbe
ss
push
movabs
cmc
frstor
mov
in
xchg
mov
sbb
sbb
(bad)
(bad)
xlat
fcoms
{rex2
nop
sub
pop
hlt
mov
mov
lods
(bad)
(bad)
fdivs
xchg
out
or
(bad)
mov
repnz
ss
fsubs
ss
(bad)
cli
movmskps
and
lcall
xor
sahf
mov
movabs
jo
add
ds
rcr
frstor
movabs
rex
rex.xb
pop
test
lret
test
cmp
sti
test
xor
push
fsub
fbstp
(bad)
cmp
lods
in
int1
lret
add
push
lahf
xor
jg
enter
cwtl
jl
rex.r
jge
test
jg
(bad)
fistpll
(bad)
xchg
test
clc
in
in
sbb
jb
test
bnd
xchg
sbb
rex.wrxb
sahf
out
fs
insb
mov
repz
or
movsl
add
fisttpll
(bad)
jrcxz
adc
rex.r
in
leave
out
lea
call
pop
int
shlb
and
jmp
lods
rex.rb
outsb
(bad)
or
int1
stc
add
movsb
push
ja
sahf
cs
ja
sahf
mov
rex.xb
notl
xchg
xchg
push
loopne
outsb
rcl
ds
lock
stos
pop
ds
(bad)
mov
add
rex.wx
push
sti
push
ficoms
add
adc
rex.rx
repnz
movabs
mov
or
rorl
xor
(bad)
(bad)
cs
stos
in
scas
fisubrl
loopne
scas
fisubrl
(bad)
jno
xlat
test
xor
adc
sbbl
not
decl
jb
rex.wr
testb
cmp
mov
sbb
lret
push
out
pop
add
pop
sbb
and
add
rex.r
repz
fsubs
(bad)
pop
lret
lock
test
push
fs
pop
(bad)
xchg
xchg
push
fs
iret
fisubrs
rex.wrxb
(bad)
scas
mov
(bad)
stos
cltd
leave
xchg
insb
sub
ret
sub
(bad)
xor
rex.rb
rex.rxb
sbb
push
adc
sti
rex.w
jle
(bad)
mov
or
rex.r
(bad)
rex.x
pop
mov
outsb
adc
je
rex.b
out
(bad)
(bad)
adc
jp
mov
mov
cli
(bad)
lea
out
or
adc
and
jp
js
sbb
sbb
int1
or
(bad)
outsb
adc
je
int3
mov
testl
add
adc
je
rex.r
rex.rx
rex.x
push
cld
pop
imul
mov
mov
(bad)
push
jno
movsb
in
mov
data16
and
add
int
imul
sbb
lods
in
add
in
(bad)
notl
mov
sti
adc
je
je
mov
nop
cmp
and
(bad)
mov
lea
xchg
mov
mov
sub
sub
adc
cld
cmp
(bad)
loope
jmp
scas
push
or
rex.wb
cld
lea
iret
or
sub
mov
jp
adc
cmpxchg
mov
lods
rolb
mov
mov
rex.xb
cmp
in
jb
loop
add
mov
jnp
pop
lods
adc
je
es
jae
cmp
stc
sbb
adcb
add
rorl
pop
ss
loope
fsubrl
(bad)
vpcmpgtb
adc
movabs
add
adc
loop
mov
adcl
xchg
hlt
or
pop
rex.wxb
popf
nopl
push
(bad)
add
add
test
rdmsr
roll
adc
movabs
lahf
enter
(bad)
add
add
loope
popf
adc
add
add
(bad)
pop
(bad)
add
cli
popf
push
test
pop
xchg
pop
cli
popf
push
rex.w
in
lret
pop
(bad)
out
{rex2
(bad)
sub
out
adc
(bad)
(bad)
out
(bad)
jo
(bad)
mov
jg
(bad)
sub
movabs
pop
mov
test
rex.xb
xchg
jmp
cmp
insb
pop
(bad)
mov
repz
(bad)
mov
mov
pushf
fs
fisubl
lods
fwait
push
cmp
jp
mov
xchg
lret
sub
pushf
push
rex.rxb
{rex2
repz
adc
andl
push
add
pop
push
std
outsb
adc
adc
in
add
add
loop
(bad)
rex.rb
add
add
xor
push
stc
sub
fsubs
in
adc
jae
(bad)
mov
or
adc
jae
push
adc
out
mov
and
rex.wr
ds
js
sub
(bad)
out
js
mul
clc
mov
cmp
lea
movsl
enter
jns
(bad)
cmpsl
fwait
leave
sbb
(bad)
rol
insl
movabs
mov
fidivrs
(bad)
jmp
loop
add
fistpll
imul
int
sub
push
ja
add
rex.wxb
xor
hlt
push
pop
sub
rex.w
cmc
cmpsl
fisttpll
add
rex.wb
rex.rx
(bad)
add
shrb
(bad)
mov
(bad)
pop
push
and
int3
xlat
xor
xor
(bad)
mov
cli
mov
rex.r
mov
movabs
rex.wr
(bad)
cld
xor
sbb
sub
sarb
push
mov
push
hlt
pushf
xor
rex.rx
mov
add
int1
rex.wb
in
push
sub
xor
out
pop
mov
mov
ret
xor
cmp
sarl
popf
xor
shlb
sub
jrcxz
cmp
hlt
jrcxz
cmp
cli
lock
xor
and
gs
cltd
sub
mov
mov
or
push
(bad)
fmull
add
loopne
cmp
push
and
(bad)
rex
frstor
sbb
(bad)
(bad)
or
xor
cmpl
push
test
repz
push
cmp
xor
idivl
test
test
(bad)
scas
mov
sti
mov
mov
int
rex.wrxb
test
xchg
lret
mov
or
xor
xlat
data16
jmp
xchg
mov
and
sbbb
test
cmpsl
(bad)
negb
rex.wrb
imul
test
rex.xb
jnp
fsubrs
cltd
pop
(bad)
xchg
(bad)
movabs
sbb
jae
test
gs
rex.b
ret
in
xchg
ret
clc
pop
movsb
xlat
cmpl
mov
sti
pop
(bad)
cmp
sysexitl
pop
and
rex.rx
jne
(bad)
rex.x
rex.wxb
mov
rex.rb
rex.wrx
lock
out
cmpsl
clc
rex
cmp
xor
mov
(bad)
or
xchg
test
xor
jns
lret
test
iret
cwtl
xor
push
jae
outsl
jge
mov
xor
jg
add
adc
in
lahf
mov
pop
stos
imul
mov
xchg
mov
and
addr32
(bad)
and
sub
jmp
sbb
rex.w
push
shlb
and
loopne
xchg
xor
imul
sahf
or
rex.wrx
test
jg
fdivrl
clc
movabs
add
xchg
(bad)
test
rex.b
sub
mov
xor
movsxd
(bad)
pop
(bad)
adc
sub
ss
out
(bad)
add
rex.w
rex.rxb
rex.wrxb
rex.b
