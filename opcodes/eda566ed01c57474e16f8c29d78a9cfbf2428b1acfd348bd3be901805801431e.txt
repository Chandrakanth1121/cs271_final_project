int3
add
jo
mov
sub
xor
inc
movsl
inc
nop
loop
roll
or
test
aaa
pusha
(bad)
cmpsb
(bad)
and
dec
fcompl
in
loopne
mov
adc
pop
mov
pop
inc
aaa
sbb
sahf
add
jge
cmc
or
pop
sbb
mov
pop
push
sub
iret
mov
inc
lret
mov
and
pop
int3
rcr
xchg
in
mov
ljmp
inc
fildl
inc
(bad)
cli
in
inc
fbld
lock
repnz
mov
cmp
adc
je
call
sbb
loop
fisubrl
sub
push
clc
mov
orb
xor
mov
cmpsb
push
inc
and
(bad)
fabs
lods
mov
outsb
sbb
jnp
jno
cwtl
mov
fsubl
adc
bnd
ret
leavew
push
jae
sub
mov
cwtl
fldl
into
pop
imul
aas
mov
test
pop
push
mov
adc
repnz
xchg
ja
(bad)
arpl
push
jo
lea
jae
insb
mov
fs
adc
pop
push
xor
(bad)
and
test
loope
mov
sbbb
push
sbb
mov
sahf
mov
or
xor
mov
push
pop
push
jmp
mov
xchg
or
push
adc
push
out
sub
cmc
andb
sub
repnz
(bad)
sub
out
xchg
cmp
ljmp
je
leave
into
dec
jg
or
addb
pop
pop
ljmp
mov
mov
xchg
ret
push
jg
jno
ret
sbb
(bad)
mov
int1
(bad)
mov
sub
mov
add
or
ret
inc
movsl
popa
andb
mov
jns
xchg
xchg
adc
loope
imul
or
in
push
dec
inc
fisttpl
mov
sbb
js
push
push
cmp
jae
xchg
lock
dec
pcmpeqd
cmpb
pop
xchg
(bad)
sub
inc
jg
pop
mov
in
dec
mov
lret
adc
or
into
or
mov
gs
aaa
jmp
pop
test
(bad)
mov
lcall
mov
sub
sbbb
aam
or
jle
jle
lea
stc
insl
fidivrl
cmp
ret
cmpb
call
cmp
stc
(bad)
shr
push
out
jbe
mov
insb
dec
into
mov
mov
pushf
or
(bad)
jo
cli
dec
jl
sub
pop
addb
mov
int3
sub
xchg
shlb
fmull
inc
in
xor
xor
add
push
xor
or
int1
sub
pop
cs
lds
or
inc
adc
cmp
je
lds
cmpl
add
push
out
jmp
out
jmp
and
add
pop
sub
xchg
cld
ja
adc
fdivrl
ja
or
mov
sahf
test
xchg
xchg
pop
mov
pop
sub
(bad)
jb
inc
mov
lods
or
pop
mov
test
lcall
mov
push
xor
test
fcomps
fsubr
int3
xchg
test
sbb
add
ds
out
pop
das
or
sub
adc
sbb
cltd
xchg
sbb
mov
xor
je
pop
mov
stos
mov
out
cs
pop
sahf
sbb
mov
adc
fcoml
or
out
mov
pop
add
push
ljmp
addr16
jl
addr16
shl
mov
and
inc
movsb
cmpsb
ljmp
movsb
dec
inc
cmp
sub
mov
pop
test
inc
xchg
les
test
dec
cwtl
cmp
push
js
mov
jmp
pop
add
push
stc
adc
mov
or
or
dec
push
xchg
pop
sbb
sti
test
cld
mov
mov
notl
pop
push
js
lea
shr
js
dec
adc
fwait
or
mov
outsb
(bad)
cwtl
fcomps
mov
xor
adc
leave
jns
pop
add
outsl
loopne
adc
pop
push
sahf
flds
pop
(bad)
imul
mov
addl
je
or
fstl
hlt
fldl
sbb
outsl
sbb
int3
push
cmp
sub
pushf
or
mov
mov
sbb
mov
mov
mov
into
cld
sbb
hlt
jg
mov
jno
bound
add
jge
jnp
cld
push
in
cli
push
add
cmpsb
inc
in
mov
rorb
sahf
adc
dec
fs
int
insb
sti
or
fs
iret
fcoml
sti
jo
xchg
push
adc
insl
mov
add
das
out
loope
fidivl
gs
pop
mov
xchg
adc
jge
hlt
adc
xchg
testb
daa
rol
das
mov
xchg
aad
movb
int
insb
pushf
mov
dec
add
add
inc
cmp
popf
fistpl
push
dec
inc
mov
pop
(bad)
mov
ss
mov
xor
neg
mov
push
aam
clc
dec
fs
push
pop
mov
inc
xchg
in
arpl
pop
pop
xor
jp
push
mov
jbe
or
das
mov
mov
pop
lahf
cmp
les
in
loopne
dec
sub
lds
pop
cld
sbb
pop
imul
and
negb
adcl
shll
insl
das
test
and
and
and
xchg
test
mov
gs
or
sti
jo
(bad)
jg
shrb
dec
aad
sub
mov
inc
inc
push
sbb
in
lahf
cld
xor
cwtl
jg
jns
test
mov
outsl
mov
je
ret
adc
cmp
xchg
lret
adc
inc
clc
mov
out
mov
stc
mov
scas
and
subl
dec
aad
pop
pushw
or
and
gs
repz
sub
sbbl
push
les
push
stos
mov
sahf
pop
mov
jae
popa
xor
imul
fisubl
shlb
or
int3
insb
pop
xchg
and
nop
jp
out
lods
xchg
inc
mov
in
ret
xor
movsb
popf
xchg
or
adc
iret
test
aad
cmp
cwtl
inc
sahf
nop
push
pop
jb
add
jnp
jmp
movsb
mov
pop
jle
pop
jg
repz
inc
inc
test
inc
cmp
sbb
mov
pop
in
pop
into
jl
pop
mov
adc
imul
shll
jmp
pop
movsl
aaa
sbb
dec
mov
inc
enter
outsl
mov
mov
insl
mov
jb
pop
mov
gs
lret
xchg
inc
pusha
add
mov
stos
cld
inc
mov
int1
inc
sahf
loop
and
fmull
movsb
ljmp
jl
cmpsl
adc
jmp
repz
gs
inc
cmpsb
ljmp
mov
lret
sub
mov
hlt
sbb
test
jmp
mov
cwtl
pop
dec
sub
add
xor
mov
shrb
inc
jmp
nop
push
loopne
leave
mov
lahf
popa
adc
jae
push
push
repz
mov
dec
mov
aaa
scas
mov
adc
dec
divb
in
shll
push
ja
outsb
insb
lahf
or
fs
sub
push
ret
inc
fsub
hlt
pop
pop
pop
pop
pop
sbb
and
out
jle
cmp
(bad)
mov
pushf
ret
in
pushw
adc
cli
fxtract
lods
cmp
inc
mov
ret
push
cmp
sahf
nop
(bad)
dec
dec
gs
push
xor
lods
mov
or
mov
test
sub
cmp
cmp
in
push
pusha
clc
inc
div
out
addb
movsl
orb
mov
nop
push
dec
mov
outsl
adc
push
add
mov
inc
fdivl
xor
test
jae
or
loope
outsb
ja
inc
aas
dec
pop
cmp
int
mov
lea
xor
sbbb
push
mov
dec
push
cld
sub
add
js
jbe
xor
in
fnstsw
iret
push
push
jae
out
jge
xor
mov
or
out
add
cli
jbe
cmpb
push
inc
cli
sarb
push
ret
out
inc
mov
hlt
lods
stos
sbb
dec
sub
nop
push
push
test
notb
fwait
mov
jge
negl
outsb
mov
inc
leave
outsb
mov
mov
ljmp
stos
fbstp
jecxz
