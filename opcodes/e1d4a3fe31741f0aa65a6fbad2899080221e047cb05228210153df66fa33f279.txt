movl
cmp
leave
sbb
hlt
push
pop
je
arpl
jns
or
inc
cmpsb
js
xor
xchg
xchg
cmpsl
inc
sbb
repz
enter
jbe
adc
mov
lret
inc
out
push
(bad)
mov
mov
rorl
ljmp
dec
ds
in
(bad)
sub
xor
out
(bad)
int
loope
fwait
jmp
sarl
addr16
sbb
int3
insb
lea
decb
jmp
mov
jbe
ja
(bad)
jb
clc
sarb
xchg
fs
out
and
leave
es
in
sub
and
add
je
ret
cmp
adc
add
or
pop
sub
xchg
xchg
cmp
jae
dec
mov
out
dec
push
fdiv
add
pushf
rcll
aad
pop
into
test
jge
fcompl
stos
xchg
jae
int1
or
mov
lods
cmp
adc
mov
dec
lcall
and
pushf
jle
ja
xchg
lcall
fwait
jns
cmp
mov
lret
cltd
std
movsl
rclb
dec
stos
int3
push
mov
mov
dec
test
xchg
dec
stos
xchg
mov
pop
movsl
sub
notl
mov
xchg
mov
into
int
adc
jns
xchg
ficoml
jg
out
nop
mov
sbb
int1
ret
cmp
rcrb
popf
(bad)
nop
push
jne
dec
xchg
jno
dec
cmp
jmp
mov
jne
xchg
xchg
dec
jo
(bad)
dec
push
inc
out
dec
mov
out
sub
pop
jb
sub
mov
dec
std
jo
imul
jle
idivb
mov
stos
adc
xchg
jg
loop
xchg
push
mov
xor
xchg
dec
fadds
xchg
pop
mov
enter
dec
push
shrb
dec
add
adc
lcall
addr16
movsb
jnp
inc
mov
jmp
add
mov
mov
adc
adc
mov
out
cmp
mov
mov
add
pop
jb
lods
test
pop
jge
idivl
jns
(bad)
adc
(bad)
pop
ret
adc
sub
mov
pushf
jns
push
into
and
mov
push
data16
aas
jge
call
inc
sub
dec
divl
dec
outsb
push
mov
adc
lcall
call
nop
dec
push
jno
cmpsb
mov
cmp
pusha
jecxz
cmp
repz
dec
ds
daa
mov
int3
xor
mov
inc
lret
push
sbb
inc
rorl
mov
or
int3
mov
inc
pop
stc
out
enter
popf
jbe
add
clc
out
stos
fcoms
cmc
push
mov
call
pop
mov
pop
jbe
push
add
mov
jg
lret
aaa
jge
sub
incb
iret
mov
add
mov
(bad)
xor
leave
jns
andl
mov
sarb
jae
insl
adc
add
sub
rcll
sahf
push
and
pop
dec
jbe
dec
inc
jbe
out
dec
cs
in
int3
push
mov
mov
add
adc
push
ja
scas
inc
push
mov
loope
ret
mov
nop
arpl
jmp
imul
xor
mov
push
mov
cmovb
ret
outsl
outsl
dec
mov
inc
pop
iret
mov
jbe
jecxz
push
xorl
out
push
mov
xchg
xor
xlat
mov
scas
cmp
arpl
pop
mov
imul
popf
iret
(bad)
or
cmpsb
mov
nop
cli
mov
out
in
sbb
cmpsb
testl
subb
js
fstpt
movsl
pusha
sbb
test
push
pop
jl
cmp
sub
(bad)
nop
cmp
lock
dec
inc
sbb
push
insl
add
mov
push
dec
pop
mov
addr16
xor
adc
inc
jge
sub
pop
inc
popa
xor
dec
and
cltd
or
xchg
mov
ret
out
push
pop
jns
mov
ss
mov
sub
repz
mov
mov
push
andb
xchg
jb
add
mov
inc
int
shll
out
stc
xchg
push
call
xor
sti
cmpsl
adc
push
push
leave
and
mov
nop
xchg
jge
sbb
xor
mov
push
(bad)
adc
ds
lcall
out
ja
idivl
test
cltd
jns
sbb
pop
int1
add
jo
jo
jb
in
loop
call
push
das
mov
mov
mov
mov
xchg
push
bnd
mov
ss
cmpsl
jge
test
jae
stos
lret
jne
or
mov
mov
xchg
dec
sub
mov
pop
outsl
or
push
insb
mov
xchg
xchg
insb
jmp
lret
lods
jo
sub
mov
adc
lret
jb
jne
inc
push
dec
xchg
jge
push
outsl
out
dec
mov
(bad)
push
pop
mov
lea
iret
mov
xchg
dec
pushf
pop
mov
mov
inc
outsb
imul
ds
jg
test
ja
jp
jae
xchg
cmpl
or
ds
sarl
insb
add
push
pop
bound
xchg
or
int
pop
dec
lea
testb
cwtl
sbb
cmp
cmp
out
stos
adc
jne
test
outsl
in
mov
pop
xor
movl
xchg
mov
inc
sbbl
xchg
sbb
(bad)
xchg
pop
outsl
(bad)
mov
popf
xorl
repnz
xchg
cmc
add
fwait
repz
or
test
insb
les
call
sub
(bad)
push
mov
mov
xchg
out
mov
out
cmp
jp
int1
ja
clc
jbe
jmp
stos
pop
test
mov
cmpsb
dec
xorl
xchg
cmp
imul
jns
cmpsb
xor
mov
xor
imull
mov
push
mov
dec
adc
push
xor
nop
jp
push
lods
cmc
test
mov
pop
ja
fs
jne
ljmp
and
popa
xchg
push
jne
inc
insb
popa
(bad)
daa
sbb
push
pushf
shll
inc
mov
pop
push
jmp
jne
fmull
nop
push
inc
push
or
add
fs
adc
sahf
fnstcw
imul
mov
mov
or
push
xor
mov
and
add
jnp
arpl
mov
push
fwait
addr16
xor
mov
lret
xchg
push
ljmp
cld
inc
pop
imul
fdivs
stos
inc
add
insl
lahf
dec
xchg
push
jge
jmp
(bad)
jge
stc
and
push
jl
insl
push
bound
mov
cltd
dec
fldl
mov
mov
mov
enter
cmpsb
lret
add
in
xor
outsl
dec
xchg
mov
xlat
mov
push
pop
out
xchg
push
shrb
jno
pop
repz
stc
and
mov
xorb
sbb
cmpsb
cli
adc
data16
and
test
xor
cli
and
sub
loopne
sahf
or
mov
pop
or
mov
mov
int3
or
jo
jae
sub
xchg
fidivrl
push
(bad)
test
jbe
or
mov
cs
xor
dec
fucomp
hlt
add
cs
outsb
mov
sbb
lret
(bad)
insl
dec
xor
fucom
and
push
cwtl
jo,pn
cmp
jne
aas
cmp
inc
orb
lods
or
out
mov
push
aam
popa
mov
cwtl
in
test
pop
pushf
shlb
rorl
fcoms
popf
daa
cmp
mov
push
sarb
jne
daa
jl
leave
push
cmp
add
aam
sub
test
addr16
fiaddl
pop
mov
loope
mov
push
pushf
lock
jb
clc
jl
cmp
insl
mov
jae
data16
imul
mov
mov
mov
push
aaa
pop
sub
mov
mov
ror
out
psubw
push
cmp
pop
shlb
push
leave
cmp
lock
xor
out
shl
ret
sub
scas
cmpsb
and
mov
fisubs
imul
shll
test
xor
loope
jbe
jb
daa
scas
bound
shll
lret
cmp
cmp
cmp
inc
jle
insl
fs
popa
sbb
js
ds
xchg
push
cmp
pop
aad
cltd
dec
test
push
inc
imul
or
cmp
push
inc
add
