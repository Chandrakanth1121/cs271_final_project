call
outsb
lcall
fdivrs
dec
addr16
stos
xor
sbb
test
cmp
xchg
xlat
fwait
loope
pop
xchg
cmp
lods
mov
mov
arpl
ficomps
or
movsl
mov
popa
sbb
xchg
add
or
rorl
das
push
mov
shlb
adc
lds
int1
movsl
aas
es
aaa
jno
repnz
mov
out
dec
call
lret
fwait
cmc
in
or
mov
cmp
(bad)
std
dec
cmp
push
jbe
iret
sbb
sub
sbb
arpl
aaa
push
dec
ret
mov
loop
popa
mov
divb
cmc
lret
repz
dec
insb
iret
movq
lret
mov
loope
jp
cmc
into
test
repnz
sub
in
sub
pop
sti
cs
js
enter
aaa
xchg
test
sbb
cmpsb
sub
jg
mulb
and
lds
jne
jecxz
push
mov
mov
xor
js
sub
xchg
(bad)
cmp
sqrtps
(bad)
out
mov
and
in
or
pop
andl
push
stos
xor
mov
pop
mov
mov
and
sahf
push
enter
(bad)
lcall
daa
push
mov
pop
xor
es
loopne
mov
jo
stc
hlt
outsb
adc
mov
loopne
cmp
pop
adc
lcall
sbb
sti
loope
dec
insl
je
(bad)
stos
roll
pop
fwait
add
push
adc
adc
push
and
or
adc
push
subl
daa
adc
in
dec
in
js
dec
out
xor
pop
jecxz
pop
rcrl
or
int3
adc
out
push
sbb
stc
sub
jp
sub
ljmp
jb
mov
fisttpl
xor
in
aam
in
lea
cmp
cmp
fwait
(bad)
das
xor
popf
pop
sub
(bad)
and
jecxz
mov
test
dec
int3
cmc
out
lret
imul
outsl
jb
mov
mov
inc
sbb
push
clc
lods
das
add
in
ljmp
into
push
mov
pop
int1
incl
add
pop
mov
out
xor
and
daa
js
cld
dec
jb
cmc
add
out
daa
dec
inc
jp
clc
xchg
xchg
jmp
push
push
dec
subb
sbb
sub
(bad)
aam
mov
js
mov
cmp
lret
insb
mov
lock
iret
xchg
pop
imul
int1
in
sub
xchg
and
dec
hlt
enter
test
clc
pop
fcmovnb
mov
sbb
sbb
aas
xchg
ljmp
insb
inc
mov
shll
rorl
push
pop
into
arpl
stos
mov
xor
and
cmp
mov
mov
ja
mov
daa
sbb
mull
outsb
js
inc
popa
push
push
push
mov
and
jns
or
repz
add
jo
fsub
insl
(bad)
repnz
or
jb
loopne
cmp
les
hlt
xchg
mov
loope
mov
push
push
sbb
leave
popa
jmp
jecxz
daa
add
int1
fisubrs
add
lea
lret
and
lahf
adc
add
pop
push
dec
push
imul
jmp
or
jns
or
aas
ret
pop
or
inc
in
mov
std
lcall
(bad)
in
push
int
add
pop
mov
push
push
pop
fisubl
jmp
out
daa
mov
std
xor
(bad)
mov
mov
fldln2
int1
insb
repz
xor
pushf
repnz
mov
sbb
dec
aam
std
pusha
dec
fnstenv
add
sbb
cmpsb
lahf
xchg
in
jecxz
in
mov
adc
leave
cwtl
adc
in
lods
ljmp
jmp
ss
sub
mov
sbb
mov
in
inc
int
mov
push
and
or
lcall
in
ja
mov
out
mov
cmpsl
cld
lock
adc
insb
add
inc
popf
mov
inc
dec
jo
push
sbbl
dec
test
pop
cmp
ja
jb
lea
test
popa
mov
xor
xor
jecxz
xor
ljmp
push
imul
addr16
data16
lret
xor
fwait
and
stos
pop
je
lret
jg
in
jmp
push
pop
dec
jns
insl
or
xlat
xchg
cmp
cmp
and
daa
cmp
stc
pop
push
fidivs
mov
xchg
cmc
mov
gs
addr16
cmp
bndldx
mov
or
nop
lcall
pop
test
dec
cmp
xor
inc
daa
xor
push
fwait
lcall
push
rclb
jge
push
mov
sti
push
add
bound
cmp
scas
cli
inc
addb
xlat
lret
rcl
sarl
xor
outsl
xor
adc
jle
lcall
(bad)
decl
mov
mov
cmpsl
and
adc
mov
add
out
cmp
and
adc
(bad)
cli
xchg
(bad)
(bad)
xchg
les
push
bound
adc
adc
dec
sub
add
push
(bad)
insb
std
popa
pop
(bad)
xor
in
xor
fsub
fs
ret
adc
(bad)
fildl
stos
xor
mov
and
sbbb
inc
test
adc
sbb
pop
(bad)
or
out
ds
imul
ja
xor
loopne
(bad)
jmp
xchg
inc
ja
or
cmpb
pop
xor
sbb
or
sbb
adc
sub
add
jmp
sub
adc
adc
loope
push
push
hlt
xor
mov
push
cld
jb
add
insl
sbb
imul
sub
pusha
add
or
sub
mov
add
popf
test
insb
inc
in
mov
push
add
sub
adc
push
hlt
inc
jno
pop
or
mov
push
sub
add
pop
push
nop
xchg
or
sub
mov
jb
and
ds
or
fildl
sub
or
jno
stc
js
and
mov
int3
and
in
in
and
in
adc
imul
push
test
mov
shlb
dec
iret
sub
push
lahf
scas
fstpt
xchg
arpl
les
mov
ret
test
jmp
stc
cmp
movsl
hlt
sbb
cmpsb
sub
mov
mov
dec
jbe
add
add
loope
and
and
clc
leave
cwtl
adc
(bad)
dec
ret
sbb
or
inc
das
div
je
cmp
and
test
daa
in
adcl
push
repnz
(bad)
push
sbb
scas
cmp
into
jecxz
push
mov
faddl
sbb
notl
mov
or
adc
mov
cmp
leave
sbb
imul
leave
dec
xchg
or
sbb
mov
lret
mov
pop
in
std
inc
jne
mov
mov
sbb
sub
les
cld
jb
aad
cli
xor
daa
sub
lret
jo
sahf
out
sub
mov
pop
gs
sbb
lcall
xor
mov
add
inc
add
mov
and
dec
mov
mov
dec
mov
adc
mov
(bad)
xor
and
ret
xchg
mov
mov
sub
shl
insl
xchg
and
adc
lods
cmp
push
and
popf
lahf
or
cs
pop
adc
out
imul
dec
ja
out
pop
xchg
mov
lods
xchg
enter
mov
or
fildl
adcl
fstpt
lret
mov
test
adc
xlat
push
shl
xor
lds
and
ljmp
sahf
jne
inc
popa
imul
jns
int1
add
movsb
jo
adc
sti
push
cmp
(bad)
dec
jae
es
insb
call
jg
or
push
mov
test
shl
sbb
(bad)
imull
insb
fdivrl
popf
addr16
rolb
or
call
mov
in
inc
addr16
dec
leave
jno
cmpsb
and
lcall
sbb
xchg
or
xchg
push
fmuls
add
inc
(bad)
cwtl
repz
lcall
(bad)
je
(bad)
sbb
sub
rcrb
outsl
push
repnz
pusha
lds
adc
jns
mov
stos
jmp
push
int
imul
jle
sbb
sbb
lds
pop
xor
faddl
ja
pop
jnp
mov
push
pop
(bad)
leave
and
pop
xor
jmp
add
mov
sti
cmp
push
adc
fwait
