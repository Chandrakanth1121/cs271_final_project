mov
add
add
add
add
add
add
test
add
add
add
push
adc
or
call
fbld
or
lahf
sbb
mov
scas
pop
ds
cmp
add
sub
pop
leave
mov
pop
xor
ret
kandw
inc
or
lods
ja
je
sub
adc
push
(bad)
xlat
ss
xchg
xor
jne
pushf
sti
enter
sti
cmc
mov
fistpll
aad
pop
or
pop
sub
(bad)
xor
adc
fucomip
xchg
leave
add
(bad)
adc
dec
xor
sbbb
movsl
imul
cmc
leave
out
adc
das
pop
out
push
adc
lock
push
xorl
fwait
lock
jae
inc
mov
pop
arpl
xchg
(bad)
and
and
leave
test
mov
jnp
add
scas
mov
test
mov
push
sbb
shrb
inc
push
sub
sbb
outsl
stos
dec
adc
je
sub
jnp
and
xchg
dec
pop
cli
jae
movsb
inc
inc
mov
cld
push
xor
popa
mov
mov
imul
cmp
push
mov
and
cmp
jmp
lret
subb
push
or
(bad)
loopne
jl
sbb
stc
std
mov
push
stos
push
loop
(bad)
push
cmp
xchg
jecxz
popf
jne
lahf
lea
lods
xchg
jmp
fiaddl
or
mov
adc
call
sub
rcrl
fs
test
dec
out
divb
(bad)
in
push
repnz
stos
test
inc
stos
sbb
mov
and
or
xor
push
ret
outsl
rorl
cmpsb
shlb
inc
cmp
std
mov
add
jns
rol
pop
mov
ret
jecxz
jne
push
std
cmp
sub
lds
mov
clc
sbb
mov
loop
or
aam
ss
jg
lcall
add
aaa
xchg
and
adc
repnz
and
or
lahf
push
sub
stos
out
sub
pop
mov
jb
inc
cmp
sub
xchg
pop
lods
inc
mov
xor
xor
les
loopne
inc
pop
sbb
jl
sbbl
inc
jb
push
sub
xor
mov
enter
inc
xchg
pop
sub
fnstsw
push
mov
push
dec
dec
inc
in
inc
jmp
ficoml
dec
mov
ds
int3
jnp
push
jne
andl
mov
cmp
fimull
inc
jno
dec
cld
test
test
cmp
jb
add
mov
push
ljmp
pop
jecxz
fs
call
mov
clc
mov
jl
ja
ss
push
cltd
mov
xor
movsb
push
pop
int
mov
int
js
(bad)
cmp
sti
out
add
pmaddwd
push
testb
mov
es
data16
sub
fiadds
push
js
enter
popf
subb
or
push
shrb
lods
fsubl
inc
jbe
dec
adc
adc
pop
push
cli
aaa
test
stos
(bad)
xor
sub
and
andl
stos
fmul
xor
inc
dec
bound
mov
push
es
push
pop
out
test
mov
jle
xor
pop
pop
int1
mov
loope
test
or
stos
or
fwait
outsb
inc
jecxz
ss
test
mov
ss
imul
out
mov
lods
lods
pusha
xchg
imul
int3
ja
clc
mov
daa
dec
xchg
ret
dec
gs
xchg
xor
mov
ljmp
int3
outsl
mov
lret
push
fs
out
push
pop
inc
call
sbb
add
(bad)
sbb
dec
lahf
jmp
es
jb
or
out
das
pusha
rclb
das
or
pop
enter
or
add
or
push
out
dec
and
shrl
sbb
pop
enter
in
mov
aaa
fwait
xor
sahf
test
daa
pop
outsl
inc
inc
mov
xchg
sbb
dec
inc
jl
stos
(bad)
ds
xchg
dec
push
test
ds
out
rcll
popf
js
loop
mov
sub
jl
sub
adc
add
pop
add
repz
mov
arpl
xchg
hlt
fstpl
mov
cmp
adc
fs
ja
stos
add
fs
sbb
andb
xor
out
repz
dec
inc
cmpsl
or
jae
cmpsl
cli
shll
mov
test
jl
pop
lret
ds
stos
pop
adc
ss
push
or
test
mov
test
adc
push
scas
in
sub
dec
mov
mov
mov
sarb
jo
mov
(bad)
inc
jns
sarl
ret
test
sbb
jmp
sbb
lret
sbb
push
cmpsb
jp
out
loope
daa
add
(bad)
dec
mov
sub
jb
push
xchg
mov
xor
int3
cs
xchg
cmpsl
lds
add
imul
jp
mov
test
xchg
push
push
push
jae
ljmpw
out
push
pop
pushf
in
mov
jo
in
int3
js
sub
cmpsb
sbbl
mov
mov
mov
shll
mov
repz
call
ret
mov
iret
ljmp
in
fwait
test
into
daa
add
lds
mov
fst
push
dec
daa
mov
out
xchg
fcmovbe
inc
(bad)
in
adc
test
add
frstor
rorl
cmp
inc
ss
shll
test
mov
sahf
adc
xor
out
bnd
sbb
add
mov
mov
dec
dec
jl
pop
pop
pop
push
add
(bad)
pop
push
pop
shr
adc
loopne
mov
pop
rcrl
ljmp
or
xchg
inc
mov
adc
or
aam
inc
fisttpl
out
cmp
test
imul
dec
jnp
push
clc
insl
pop
sub
mov
sub
sbb
arpl
clc
stos
bound
arpl
(bad)
mov
push
dec
push
addr16
pop
jl
add
push
mov
ret
or
into
or
inc
(bad)
lds
mov
mov
inc
mov
aas
ret
fs
mov
sbb
inc
fimuls
pusha
sub
inc
add
dec
xor
push
lret
jecxz
xor
mov
xchg
push
iret
push
cmpsl
jg
test
jl
sti
lds
std
inc
adcl
cwtl
lret
cmp
or
in
movsl
jne
movsl
pop
pop
(bad)
ds
ja
inc
lcall
xor
mov
xchg
dec
cmpsb
ror
jno
xor
arpl
sbbb
sarb
xchg
les
loopne
push
and
testb
push
push
cmpsl
mov
and
sti
cwtl
xor
mov
xchg
jbe
out
mov
popa
and
xor
xchg
xchg
jb
insb
mov
adc
daa
fwait
bound
cmp
sub
pop
sub
dec
mov
pusha
xchg
jmp
adc
jmp
arpl
outsl
mov
push
out
lcall
inc
int3
setbe
int1
and
pop
in
cmp
imul
stos
push
mov
cmp
pop
mov
fwait
push
(bad)
cmpsl
inc
nop
mov
cmc
cmp
addl
inc
push
push
push
(bad)
jg
xor
test
dec
lods
jo
test
addr16
sbb
test
lret
roll
stos
ss
xchg
xor
jmp
lret
inc
inc
lods
xchg
rol
mov
fsubr
or
adc
les
fwait
rolb
sti
fdivrs
lods
lcall
adc
nop
fsubr
fidivrs
xor
push
into
mov
lret
int1
and
and
ljmp
shlb
pushf
xor
aaa
aaa
insb
jmp
dec
mov
xchg
outsl
test
popa
cmp
loop
outsl
fnsave
ret
and
in
adc
dec
adc
xchg
dec
arpl
ss
mov
mov
xor
insl
notrack
jb
add
das
jne
adc
xchg
call
pop
adc
cmpsl
mov
(bad)
ljmp
inc
adc
inc
dec
fadd
or
ret
fidivl
jecxz
fadds
mov
jne
xor
or
bound
je
aaa
test
dec
scas
push
inc
test
mov
or
ja
pop
insb
xor
push
lret
inc
call
sbb
andb
jecxz
jb
in
mov
jae
inc
inc
cld
shl
