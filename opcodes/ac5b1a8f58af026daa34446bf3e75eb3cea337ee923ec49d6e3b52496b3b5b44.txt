xor
xchg
repnz
int1
pop
jmp
(bad)
cmp
sub
pop
fbld
int3
xchg
sub
imul
push
push
push
in
clc
or
mov
cmp
orl
push
sarl
inc
xchg
test
xor
xor
insb
mov
push
pop
jo
mov
xor
mov
pop
cmp
adc
sbb
xor
jle
loopne
push
mov
inc
into
sub
js
imul
jle
clc
cli
out
mov
imul
add
mov
jp
scas
xor
stc
stc
out
cmp
test
cmc
addr16
aad
cmc
mov
cmpsl
mov
scas
cmpsl
xchg
les
or
int
pop
insb
or
imul
and
or
sub
std
xchg
insb
subb
lret
and
ss
or
mov
xchg
push
pop
lea
cs
cmp
or
mov
in
add
adc
or
iret
aas
cmp
inc
sbb
or
cld
(bad)
ja
repnz
scas
mov
inc
mov
pop
xor
dec
jle
jno
add
xchg
add
mov
mov
enter
test
or
insb
inc
repnz
les
test
mov
cmpsl
sub
push
out
sub
test
pop
cwtl
mov
jmp
fs
nop
pop
insb
push
out
mov
xor
jmp
in
push
push
jno
and
inc
nopl
sub
ss
and
mov
test
(bad)
push
(bad)
mov
mov
or
(bad)
(bad)
sbb
adc
cmc
and
push
stos
in
xchg
clc
stos
jmp
daa
aas
push
xor
out
mov
push
add
out
std
lret
scas
or
fs
jne
int
inc
sbb
or
push
jne
aaa
std
pop
dec
in
in
jle
movsl
ficomps
iret
mov
inc
gs
movsb
mov
mov
dec
loope
andb
cli
mov
add
leave
call
mov
popf
push
mov
and
lock
xor
mov
push
int1
jecxz
mov
outsl
jb
xor
xchg
in
mov
orb
cmp
add
lahf
jp
jp
fnsave
lods
and
clc
in
sub
shrl
push
push
scas
adc
jmp
add
and
cmp
out
jno
push
out
ds
imul
call
repnz
jnp
pop
in
les
clc
(bad)
pop
xlat
push
aam
jmp
test
clc
rclb
arpl
pusha
xor
jb
push
inc
fiaddl
ja
inc
insl
cli
jno
mov
lahf
cmp
ds
cmp
jnp
jle
call
xor
hlt
lcall
adc
(bad)
outsl
sub
inc
xor
xlat
mov
and
sub
(bad)
cmp
xchg
je
or
fisttps
push
jno
imul
mov
inc
sub
ja
mov
sbb
jecxz
push
data16
subl
xor
loope
lock
xlat
mov
pop
lret
ds
inc
adc
inc
xchg
subl
sti
inc
call
pusha
fisttpl
iret
ret
dec
popa
cmove
jne
stos
push
rcll
loope
sub
mov
movsl
cmp
lret
dec
sahf
sub
push
repz
mov
xchg
push
in
test
scas
adc
repnz
xchg
mov
cmpl
imul
jbe
fcompl
mov
andb
orb
int3
leave
fildl
lock
xor
xor
jbe
xor
add
int
imul
jno
sub
xor
xor
out
fisubl
push
mov
sahf
dec
sbb
add
push
xchg
xchg
mov
lret
movsb
lods
inc
or
pop
shrb
shl
xlat
fwait
mov
dec
aam
jns
cld
popw
cmp
push
aam
xor
or
jno
xor
in
clc
(bad)
lock
faddl
mov
mov
jbe
out
xlat
pop
pushf
pop
add
jle
jbe
sbb
mov
inc
test
roll
psllw
dec
sbb
in
insb
or
into
pop
push
jl
in
lock
and
hlt
push
pop
bound
jno
fs
repz
fisttps
in
or
mov
aas
mov
in
pop
out
shlb
jne
and
out
stos
xchg
insb
fildl
lods
es
push
out
mov
orb
push
cmp
aad
lock
out
add
test
aam
outsl
add
test
jno
repnz
jno
adc
push
imul
addl
jg
cld
fimuls
cmp
or
sarl
mov
jg
sahf
pusha
xchg
test
and
add
lea
(bad)
arpl
xor
jnp
subb
outsb
mov
adc
dec
xchg
xor
ret
insb
jp
call
mov
pop
stos
mov
push
xorb
jp
pop
add
adc
push
les
sahf
push
mov
jmp
mov
mov
cmp
gs
and
aad
popf
sbb
ret
les
sub
or
ret
mov
mov
enter
into
cmp
sub
out
mov
add
popa
stos
xorb
shll
pop
stos
decl
lcall
addl
and
jno
jmp
xchg
dec
repnz
stos
inc
nop
pop
dec
filds
(bad)
shl
push
lret
stc
movsl
push
sub
and
sbb
test
int3
and
cmp
shlb
ljmp
and
push
pop
xchg
iret
sub
test
cmc
push
or
call
xchg
jle
out
int
mov
jb
mov
rolb
xchg
test
xchg
in
test
push
iret
jge
cli
lds
mov
lods
adc
aam
dec
mov
adc
cmc
fimull
sbb
shrb
and
adc
subb
nop
sbb
xor
or
and
push
(bad)
in
(bad)
test
pop
popa
sbb
or
dec
dec
or
sar
cld
loopne
call
rclb
pop
lret
hlt
daa
shrd
loope
lret
mov
test
cwtl
xor
fidivrs
cmp
cs
(bad)
push
js
pop
mov
xor
fdiv
mov
xchg
push
mov
dec
leave
sbb
in
gs
out
pop
xlat
mov
sub
lahf
loop
xchg
imul
les
ds
in
push
insb
and
fnstcw
or
sub
xchg
sub
mov
and
push
aam
out
mov
mov
ja
rcr
lock
adc
bound
fadds
in
mov
inc
sub
lret
loopne
fsubrp
test
lcall
je
xchg
pusha
mov
jl
jecxz
jmp
and
shlb
aad
test
dec
bound
xchg
push
pop
hlt
je
(bad)
sahf
mov
lcall
push
cmc
leave
mov
sub
xor
cmp
rcrl
jne
repz
sbb
out
or
je
in
repz
lcall
insl
push
mov
xchg
decb
cmp
mov
aas
(bad)
mov
jmp
xchg
mov
mov
nop
cld
fsubs
repnz
or
mov
or
outsl
imul
add
pop
add
loop
sub
adc
cmpb
mov
in
or
and
aaa
test
cmp
mov
mov
xchg
rorl
popf
xor
enter
js
cmpsl
mov
testb
jo
lods
add
lds
bound
stos
outsl
lods
dec
mov
adc
rcrl
je
adc
scas
mov
movsb
std
sub
fwait
sub
dec
mov
inc
add
push
jecxz
jo
xchg
out
cmp
lret
sub
xor
scas
adc
jae
leave
inc
pushf
rorl
mov
cmp
test
pop
out
fwait
xchg
adc
jecxz
sbb
dec
mov
or
sub
xor
pop
cmp
push
adc
stc
jae
mov
dec
add
movsb
and
in
inc
inc
pop
loope
mov
cmp
sub
pop
lds
cmp
out
jae
inc
xor
shll
jno
mov
test
add
aaa
hlt
adc
dec
xlat
xor
mov
mov
roll
rclb
stos
and
xchg
ljmp
rcrb
pop
nop
xlat
addl
add
int3
inc
mov
into
scas
ds
fisubl
dec
push
mov
and
mov
push
fisubrs
add
push
cltd
xchg
mov
add
xor
js
or
es
push
push
