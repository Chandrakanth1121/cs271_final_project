xor
hlt
push
xor
(bad)
pushf
and
cmpsl
pop
add
lea
insb
inc
orl
addr16
arpl
adc
sbb
mov
inc
adc
sbb
test
jmp
out
xor
or
xor
out
cmp
mov
pop
inc
mov
mov
ret
pop
dec
inc
mov
xor
pop
jle
mov
mov
fcmove
cld
pop
out
pop
push
xor
or
sub
jge
xlat
das
int3
add
mov
mov
mov
adc
xchg
ja
fwait
ror
sahf
fs
pop
inc
(bad)
gs
sbb
xchg
mov
xor
cmc
jbe
adc
inc
ss
insb
enter
inc
(bad)
mov
jns
push
sub
push
cmovno
push
stos
mov
cli
xor
aam
jne
push
inc
aaa
xchg
pop
ljmp
mov
out
add
push
inc
mov
mov
add
dec
fs
push
add
add
adc
pop
push
xor
int
in
sbb
(bad)
hlt
call
stos
and
jnp
and
insl
fidivrl
push
jo
repnz
push
sub
les
imul
mov
xor
imul
std
fdivrs
push
andl
lods
mov
pop
xchg
test
inc
xchg
mov
movsb
dec
sbb
mov
mov
or
arpl
pop
xor
push
sarl
(bad)
ret
cld
adc
xor
int3
mov
mov
push
fcmovnb
adc
adc
add
cmpsl
and
(bad)
pop
int1
cli
mov
push
mov
mov
dec
js
mov
or
xchg
cmp
shll
sub
dec
shl
fwait
or
hlt
and
outsl
repnz
sbb
xchg
or
dec
sbb
xchg
jl
mov
daa
movb
mov
sub
dec
push
xorl
push
sar
and
xchg
or
jmp
xor
loopne
mov
ss
(bad)
xchg
mov
sub
addb
nop
pusha
inc
fidivs
(bad)
loopne
xchg
(bad)
lcall
stc
aam
sti
sub
rcrl
push
mov
cmp
(bad)
mov
std
or
sahf
ljmp
je
cmp
(bad)
pop
mov
cs
fs
stos
imul
mov
jmp
nop
insb
push
pusha
xchg
std
stc
(bad)
and
lock
stos
outsb
inc
jnp
loop
inc
lea
insb
push
sub
and
loope
mov
mov
sub
arpl
in
adc
fst
loopne
out
xchg
lcall
rcrb
cmc
sarb
dec
lds
jl
sub
and
jge
jne
mov
mov
xor
push
xor
mov
pop
fs
nop
jo
jno
mov
sti
sub
push
adc
push
jg
pop
mov
inc
jl
(bad)
test
out
inc
std
fcmove
adc
shll
add
ss
jo
mov
sahf
inc
scas
push
inc
cmp
dec
mul
fisttpll
and
sbb
sti
mov
in
mov
call
into
dec
int3
sbb
les
fwait
imull
sbb
mov
je
lds
mov
lret
adc
(bad)
push
cmp
inc
mov
std
cmc
mov
add
ja
imul
out
cmp
sub
test
mov
mov
sub
imul
lea
lcall
shl
cmpb
arpl
jl
and
loope
mov
sarb
mov
mov
clc
inc
das
push
outsb
push
jg
int
test
repnz
repnz
out
xor
mov
in
insl
mov
les
andb
inc
push
add
mov
lods
movsb
lret
loope
cli
push
or
aaa
pop
je
mov
into
cli
xorl
sub
jae
scas
rcl
enter
and
or
sub
scas
scas
or
insl
scas
sub
int
push
aas
xor
cmp
xor
xor
scas
subb
adc
mov
scas
clc
pop
rcrb
mov
pop
(bad)
xchg
xchg
(bad)
sahf
inc
(bad)
scas
loope
cmp
and
fldenv
into
push
cld
push
sahf
jp
xor
cmp
popf
jp
mov
pop
les
add
add
shrb
mov
pop
int
(bad)
je
jno
lret
aam
cmp
push
test
mov
xor
test
cwtl
pop
pop
sub
cltd
jecxz
sti
int
dec
data16
js
add
inc
fcmove
out
pop
inc
ja
inc
andb
push
rcl
add
lahf
add
pop
xor
jnp
sahf
dec
test
insb
cmp
or
dec
sub
and
loope
jo
mov
(bad)
mov
add
jl
test
add
mov
pop
fstpl
sbb
jg
xchg
pop
inc
mov
mov
mov
sbb
(bad)
out
xchg
inc
rolb
push
adc
mov
out
imul
cwtl
sbb
xchg
subb
mov
imul
sub
aaa
ds
out
inc
(bad)
sbb
cs
decb
in
lahf
js
xor
outsl
mov
out
arpl
inc
sbbl
jnp
inc
push
sub
mov
test
test
cli
adc
pop
mov
jb
loopne
sbbb
sub
mov
mov
repnz
lret
es
rorb
in
jbe
aad
or
les
rcll
pop
repnz
pop
cmp
lods
into
and
pop
inc
add
cmc
iret
addl
mov
lahf
je
and
mov
inc
cld
or
mov
popa
push
push
sbb
int1
xchg
cmc
(bad)
and
pop
movsl
test
jmp
nop
sub
push
mov
nop
xchg
enter
cmp
or
mov
push
inc
outsl
ret
pop
je
std
or
and
push
add
xor
mov
pop
cld
enter
iret
or
in
jb
push
sbb
es
jmp
aaa
leave
(bad)
lods
arpl
out
rdmsr
std
(bad)
cld
mov
rcl
loope
addb
fldl
or
dec
xchg
gs
dec
lret
lds
cmc
ret
shrl
pop
push
(bad)
push
push
in
stos
imul
sub
(bad)
jno
mov
mulb
jnp
and
pop
pop
loopne
test
das
inc
xchg
xrelease
inc
sbb
push
loope
add
inc
in
lea
movsb
loopne
cmp
orl
shlb
fcmovbe
push
loop
jmp
mov
iret
or
lcall
aad
pop
imul
out
cwtl
test
popa
mov
aaa
xchg
andl
sub
mov
mov
ja
stos
add
rclb
lahf
cld
mov
xchg
std
mov
sbb
and
jns
(bad)
and
fistps
and
add
or
sti
mov
add
int1
clc
fdiv
(bad)
popf
lods
pop
and
xor
inc
es
mov
inc
xchg
iret
fwait
sbb
mov
and
mov
imul
fistpl
test
cld
mov
call
xor
les
mov
repnz
jl
in
and
xor
push
jno
aaa
adc
cltd
decb
iret
loop
aaa
jmp
push
dec
lcall
and
sbb
(bad)
xchg
dec
pop
push
leave
int1
mov
testb
int1
sbb
and
mov
cmp
in
rclb
repnz
cmp
sbb
js
pop
dec
stc
js
aad
out
mov
dec
insb
ret
xchg
insl
outsl
cmp
lods
je
xchg
mov
outsb
dec
jle
sbb
fcoml
das
push
insl
xor
jecxz
scas
pop
(bad)
mov
xchg
adc
sub
cmp
sbb
test
jmp
push
push
and
out
pop
xchg
into
dec
cld
jl
sub
fcompl
dec
mov
outsl
xchg
xchg
xchg
pusha
aas
repz
pop
jno
mov
rolb
movsb
ja
adc
mov
pop
(bad)
push
mov
mov
dec
push
loope
out
popf
adc
lret
adc
push
loopne
fs
jle
sbb
scas
dec
and
movsb
loope
push
inc
add
jnp
mov
mov
cmc
xchg
cmp
fstpl
xchg
cmpsl
add
jns
mov
mov
ja
sahf
xchg
ss
add
jb,pn
aad
dec
sbb
lds
lahf
ret
