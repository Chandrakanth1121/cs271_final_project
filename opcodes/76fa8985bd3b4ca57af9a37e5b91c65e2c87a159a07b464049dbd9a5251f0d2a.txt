orl
rolb
and
es
push
(bad)
(bad)
das
ret
mov
test
andl
in
mov
enter
addr16
push
adc
test
mov
jg
fwait
inc
arpl
pop
push
int
cmp
ret
dec
sarb
xchg
push
pop
pop
mov
cwtl
mov
dec
mov
cwtl
inc
push
(bad)
mov
cmpsl
out
xchg
lahf
stos
enter
xchg
lcall
gs
sahf
dec
ror
sbb
xchg
and
fwait
mov
mov
dec
stos
add
mov
jge
stc
pop
add
xchg
adc
(bad)
iret
adc
test
imul
xchg
xchg
jg
xor
frstor
pop
sahf
mov
ds
jecxz
sub
xor
jmp
popf
lea
xchg
push
inc
fs
and
adc
xor
add
jle
xor
(bad)
lret
scas
xorb
into
das
jne
lcall
add
push
nop
dec
xchg
push
daa
mov
dec
shlb
jno
cmp
xchg
and
lret
addr16
mov
mov
cmpsl
inc
adc
jecxz
push
inc
mov
mov
rolb
pop
push
xor
adc
mov
lcall
push
fdivs
inc
ret
popf
lock
(bad)
jg
mov
jo
push
push
je
scas
movsl
jp
cltd
or
xorl
imul
cltd
jg
insb
add
mov
jns
cwtl
xchg
clc
sbb
das
push
popf
or
xchg
test
mov
mov
(bad)
lods
lea
pop
test
inc
aaa
mul
(bad)
shr
scas
push
sub
or
aas
loopne
cmp
imul
push
(bad)
fwait
add
(bad)
push
sbb
add
and
ret
arpl
and
jmp
mov
jns
test
pop
lds
jo
fstpt
incb
push
imul
xchg
xchg
cmp
adc
pop
or
pusha
nop
dec
mov
xor
into
add
add
fistps
mov
lea
or
sarl
stos
xchg
inc
xor
das
cmpb
push
mov
or
(bad)
addr16
lahf
push
jecxz
push
int3
mov
push
jle
loope
fldcw
lret
std
sub
shlb
or
jns
cmp
lret
mov
mov
lods
(bad)
and
mov
dec
add
jp
pushf
or
dec
jne
stos
out
lahf
fists
mov
outsl
dec
sub
mov
orb
and
int1
xor
mov
into
dec
pop
je
mov
inc
push
jno
fisttps
cmp
jnp
cmp
push
scas
mov
test
sbb
fcoms
mov
mov
ficoms
mov
ret
out
jae
push
xchg
jns
xor
xor
or
sub
jl
push
shlb
jecxz
add
fidivl
dec
cmp
xor
fdivs
mov
adc
dec
mov
lcall
rcll
fadd
inc
mov
faddl
inc
pop
inc
pop
(bad)
cmp
aad
in
inc
data16
fcmovne
add
outsb
sbb
in
ja
loopne
insl
push
enter
xchg
sbb
add
xchg
(bad)
sub
popf
loop
dec
cwtl
gs
mov
or
jle
call
sbb
pop
mov
xlat
loopne,pn
mov
(bad)
mov
lds
lea
mov
mov
mov
jnp
insb
mov
scas
aaa
movb
test
or
cmpsl
nop
cmpsb
sub
call
lea
popa
repnz
push
fdivrs
movsb
jno
mov
movsb
mov
lcall
mov
fwait
jae
sub
test
xchg
cmpsl
mov
cmpsb
lcall
sahf
test
cmp
scas
aad
push
jae
sti
mov
mov
and
outsl
adc
daa
or
lret
lea
cmc
add
les
push
imul
dec
cmp
sbb
in
mov
inc
inc
push
loopne
je
fcmovnu
and
mov
cmp
pop
cli
and
fs
inc
lret
hlt
adc
arpl
mov
out
pop
xchg
ja
fidivrl
scas
js
cmp
push
mov
jecxz
mov
push
nop
inc
popf
or
shl
mov
inc
cmp
mov
clc
lock
xorl
inc
rcrb
cltd
adc
cmpb
bound
mov
pop
inc
jl
out
xor
inc
pop
inc
and
test
lock
pop
fcoms
sub
stos
mov
dec
and
mov
lret
lahf
stos
jb
fldl
and
and
fimull
jp
bnd
sbb
adc
popf
test
pusha
mov
xchg
outsb
xor
lret
dec
xlat
in
popa
lret
addr16
decl
pop
dec
sbb
insl
in
sub
add
lahf
les
sbbb
jmp
mov
jmp
js
mov
mov
jns
fnstcw
cmp
or
inc
movsb
stos
scas
push
mov
dec
push
int
push
mov
sahf
xchg
pop
cmpsb
cmp
and
jae
mov
dec
mov
lcall
into
pushf
pop
ljmp
push
mov
xorl
mov
adc
jb
ret
mov
int3
mov
ret
push
call
push
xchg
or
pop
aaa
out
mov
adc
inc
stos
lcall
imul
inc
mov
jo
popa
xchg
cmc
mov
sub
sbb
jbe
sub
mov
inc
bound
nop
mov
out
jae
jno
pop
bnd
nop
add
rolb
mov
mov
push
les
dec
daa
rcrb
mov
xor
das
test
pop
mov
loopne
ss
xchg
inc
mov
cltd
xchg
ret
jle
imul
mov
into
dec
leave
adc
sti
aaa
inc
test
ret
lret
inc
lods
loopne
and
jno
or
push
sarb
pushf
push
xchg
adc
sub
loope
bnd
cmp
inc
lds
xchg
int1
mov
ret
scas
fiadds
test
cmp
ret
inc
rcrb
ret
xor
xchg
dec
mov
addb
divl
dec
mov
xchg
cmp
mov
jbe
enter
lcall
repz
sbb
scas
loopne
in
jge
sti
ja
mov
xchg
mov
inc
pop
shlb
inc
mov
push
pop
mov
iret
mov
aaa
leave
push
add
int3
decb
shlb
xchg
inc
xor
ret
lock
and
sbb
iret
push
sub
ds
xchg
lret
outsl
inc
jne
cmc
xor
inc
push
cld
cltd
ja
cmp
lock
and
cmp
xor
xchg
out
cmp
mov
jo
clc
lret
arpl
imul
outsb
mov
je
adc
repz
adc
push
or
scas
fistl
cmp
(bad)
(bad)
mov
outsl
scas
dec
push
ficoms
insb
loop
dec
cmp
inc
leave
dec
dec
push
cmp
xlat
inc
cmp
sbb
xor
fstl
enter
insb
mov
mov
pop
sbb
pop
test
pop
fdivp
(bad)
sahf
out
data16
jmp
mov
sbb
push
xlat
fisubl
jb
rorb
mov
add
(bad)
filds
cmpsl
push
int
mov
add
mov
lds
shlb
mov
repnz
out
cmp
jno
sbb
loope
jge
cwtl
rcll
imul
xchg
cmp
(bad)
fsts
out
je
cltd
pop
inc
sbb
xchg
lods
inc
dec
and
sbb
lds
lods
pop
daa
xchg
xchg
mov
dec
(bad)
and
mov
dec
and
xchg
pop
pop
call
sbb
and
push
fsubs
xor
adc
(bad)
sub
cmp
pushf
inc
popa
pop
xchg
jl
cmpsl
jg
jg
push
addr16
inc
lods
inc
jle
dec
pop
add
mov
(bad)
sbbb
mov
fisubrs
les
lea
mov
loop
jecxz
shl
xlat
aaa
cmp
xor
fdivs
xchg
jo
xchg
xchg
push
outsl
ljmp
cli
sbb
pop
sahf
add
sbb
mov
sbb
imul
xchg
inc
dec
mov
xor
and
cmp
xchg
fnstcw
cmpsb
clc
and
fwait
mov
sub
cmp
adc
test
aas
(bad)
leave
adc
push
fisubrs
nop
(bad)
mov
mov
and
int
sarb
push
ficomps
fbstp
