sub
or
fwait
xchg
push
dec
aaa
dec
out
(bad)
in
cmp
bound
jp
mov
repz
push
loope
add
fldt
dec
cs
xchg
mull
mov
imul
add
pusha
mov
loope
sti
mov
or
mov
dec
sahf
into
push
clc
xor
daa
gs
mov
cmp
xlat
cwtl
aaa
pop
xlat
sub
repnz
aaa
stc
fwait
lahf
cmp
sti
mov
and
imull
leave
push
push
jecxz
push
and
cmp
(bad)
rorl
int3
push
dec
jp
mov
sbb
mov
jl
hlt
aam
pop
sub
and
mov
dec
and
mov
pop
adc
pusha
jo
push
xor
sub
jnp
(bad)
jbe
sahf
and
adc
insl
sti
es
enter
push
clc
or
adc
adc
xor
jno
mov
sahf
and
inc
test
clc
pop
aas
daa
test
jecxz
arpl
aad
imul
je
out
dec
sarb
mov
lock
or
ds
mov
cmpsl
pop
lcall
jge
jg
mov
adc
pop
jp
mov
(bad)
xor
inc
arpl
add
sti
bound
jns
sbb
out
repz
imul
int
jnp
clc
je
ret
mov
ds
dec
xor
daa
pop
gs
push
inc
add
fsubs
movsl
arpl
jnp
into
outsl
xchg
xor
add
inc
mov
mov
push
lahf
adc
and
mov
dec
mov
(bad)
outsb
push
(bad)
xlat
xchg
les
shlb
or
pop
pushf
and
lock
movsl
sti
mov
ds
lea
xchg
jg
std
jg
imul
test
jle
into
push
lcall
mov
push
cmp
adc
lods
xchg
mov
push
ss
and
lahf
test
(bad)
and
xor
dec
cltd
mov
(bad)
imull
rclb
xor
in
aam
push
add
mov
push
std
xchg
bound
pop
xchg
jmp
scas
adc
fisttpll
xchg
push
pop
enter
out
sub
shl
shrl
pop
in
xchg
addr16
mov
cltd
mov
outsl
sub
pcmpeqb
cmp
sbb
enter
out
sub
add
mov
add
adc
movw
ja
lds
(bad)
insl
inc
jl
cmpsl
in
aam
mov
mov
adc
inc
inc
adc
cmp
sbb
inc
mov
rcrb
xchg
mov
pop
mov
movsb
or
enter
fsubr
ret
mov
dec
mov
aad
repnz
mov
mov
leave
fs
(bad)
stos
xchg
jecxz
dec
js
aaa
call
test
or
std
jns
test
or
and
mov
and
test
dec
mov
push
int
jno
lea
sti
jg
xchg
cmpsl
out
mov
movsl
jl
jnp
orl
cmp
xor
popa
dec
xor
add
or
jmp
cmpsb
mov
sbb
mov
daa
or
dec
lahf
or
dec
sti
mov
pop
imul
mov
add
insb
mov
xor
pop
fcomps
dec
fisttpl
cmpsl
daa
orl
sahf
cli
test
xchg
dec
scas
mov
sub
lea
les
hlt
jo
mov
push
or
cmpb
ficoml
js
push
xor
add
push
add
lret
dec
mov
mov
neg
loope
imul
xor
insb
cwtl
mov
stc
jb
pusha
xchg
sbb
adc
add
and
jno
xchg
arpl
mov
js
fidivrs
mov
cmp
mov
rcrb
inc
rcrb
or
push
mov
loop
iret
inc
data16
mov
sahf
cltd
or
cmpsw
in
test
inc
xchg
cmp
push
sub
add
sbb
aad
(bad)
insb
pop
lods
jl
mov
in
andl
xlat
mov
push
std
pop
jns
mov
mov
lcall
or
xlat
stc
push
lds
mov
xor
jge
jb
mov
lds
imul
xchg
lock
test
mov
int3
sbb
movsl
decb
push
stos
es
pop
dec
enter
mov
popa
mov
mov
mov
jo
cmp
daa
ds
into
movb
out
out
jecxz
mov
pop
call
or
into
popa
outsl
or
mov
stos
cmpsb
pop
das
leave
(bad)
adc
sub
push
lahf
pop
mov
mov
sub
xchg
mov
sbb
or
push
ljmp
lret
mov
sbb
(bad)
mov
lods
jae
loopne
test
jle
xorb
leave
fs
pop
inc
inc
adc
lahf
test
daa
push
lock
xor
sub
mov
adc
add
leave
ljmp
and
jmp
inc
dec
xchg
lock
mov
push
inc
and
js
mov
push
outsb
xchg
mov
mov
dec
mov
inc
and
or
lods
out
test
xor
inc
pusha
push
jbe
mov
push
cmp
in
push
jns
out
or
test
add
jl
in
pop
mov
pop
cmp
pushf
cmc
dec
pop
std
or
jmp
adc
out
aas
jb
inc
mov
out
mov
jge
shrl
out
out
fwait
dec
sarl
test
fs
dec
loop
cmp
sub
(bad)
cmp
cli
mov
xorb
sub
test
out
clc
push
xchg
mov
js
loope
je
int3
pop
push
xchg
xor
iret
cmp
pop
inc
jno
shlb
insb
cwtl
lahf
cli
sbb
aas
call
xor
mov
push
cld
ja
jp
mov
addr16
inc
xchg
lock
jmp
subb
jne
outsl
xor
pop
pop
orl
iret
std
ja
sbb
push
stc
mov
aaa
int1
mov
dec
jg
movsb
sti
xchg
popf
pop
add
push
xor
stos
xchg
dec
(bad)
pop
loop
cmp
clc
adc
sbb
rol
adc
enter
push
shlb
jne
rclb
mov
fst
js
adc
pop
inc
in
mov
(bad)
jb
pop
mov
cmpsb
into
jno
(bad)
or
mov
push
scas
cmp
sarl
lock
fisttpll
std
sub
call
in
imul
sub
adc
fsub
js
cmp
insl
stos
lret
int3
cwtl
sub
push
push
mov
cltd
push
in
enter
xchg
negl
or
xor
add
push
popf
jle
loopne
xor
jg
mov
jmp
push
mov
mov
stos
pop
dec
mov
jno
xchg
mov
adc
inc
xchg
or
pop
mov
nop
mov
les
lret
int3
lds
jmp
jmp
fwait
cwtl
push
inc
and
clc
mov
sub
jb
add
in
lahf
pop
int1
or
pop
adc
dec
cld
add
inc
popf
ss
cmp
or
xchg
or
mull
addl
repnz
fwait
rclb
notb
sbb
fwait
(bad)
cmc
call
mov
push
enter
into
or
repz
pop
mov
dec
jg
or
lahf
mov
aas
cmp
inc
mov
cwtl
pop
add
or
pushf
push
outsl
mov
(bad)
jg
adc
lret
dec
int
mov
int
pop
mov
sbb
mov
jb
or
mov
lods
loopne
in
aaa
mov
and
mov
sbb
jmp
adc
fimull
mov
mov
insl
(bad)
fmuls
push
or
cltd
sub
stos
and
pop
push
lock
js
lret
pushf
mov
test
dec
inc
xor
sahf
mov
dec
jnp
sub
ss
dec
shl
test
mov
pop
les
jl
dec
or
movsb
dec
clc
pusha
data16
int3
(bad)
jo
aam
add
push
push
cmc
cmpsl
cmp
xor
mov
dec
cwtl
mov
or
mov
or
out
in
test
lret
fwait
jg
jmp
pop
ljmp
fs
sub
push
cmp
pop
dec
or
shlb
not
mov
mov
mov
lock
cmpsb
mov
cmp
