or
push
adc
lds
xor
mov
sbb
jno
imul
je
xor
sbb
pop
outsb
in
(bad)
mov
or
outsb
je
xchg
push
lcall
(bad)
xor
out
jge
ret
addr16
cmp
push
shlb
mov
daa
aaa
sub
push
lock
push
add
je
jnp
mov
lret
jmp
jb
adc
ret
pop
fxam
push
sub
test
mov
insl
cmp
aad
sub
xchg
lock
xchg
scas
lds
mov
and
inc
and
add
cmpsl
and
fildl
mov
and
in
sahf
dec
xchg
xlat
rol
imul
mov
inc
negl
xor
jbe
cmp
notl
inc
pop
popf
mov
fldenv
push
fildll
out
mov
insb
jno
aaa
insl
mov
std
mov
dec
hlt
imul
das
cmc
ljmp
shrl
cmp
mov
pop
(bad)
int1
or
jns
push
das
int
add
into
loopne
lea
gs
clc
adcl
inc
xchg
cmpsl
lock
cmp
jle
adc
push
cmp
inc
cmp
lock
jbe
mov
loopne
pop
push
push
mov
aas
pop
and
push
das
mov
mov
outsl
jne
jae
xchg
xor
jmp
inc
repz
mov
in
ljmp
insl
adcb
push
cmpsl
fwait
or
xor
dec
fbld
inc
aad
cmc
rcrb
pop
cmp
jle
lea
ds
clc
scas
ret
sub
shlb
out
daa
push
ja
xchg
ljmp
aam
popf
aam
ret
out
mov
adc
inc
lock
jb
adc
aam
call
out
mov
prefetcht1
not
cli
int1
add
std
and
call
sbb
jbe
clc
std
in
xchg
jne
or
out
in
ss
outsb
jg
push
mov
incb
mov
sub
adcb
pop
inc
mov
jae
es
sbb
out
jmp
mov
mov
cmp
push
sub
popf
test
xor
std
push
call
idiv
sbb
faddl
dec
mov
adc
call
pushf
or
mov
pop
lods
inc
and
pop
cs
daa
push
(bad)
aad
popf
jno
lahf
dec
iret
mov
xor
nop
lods
ljmp
in
push
xchg
dec
xchg
adc
mov
push
pop
dec
xchg
and
test
mov
mov
mov
hlt
xlat
movsl
sub
mov
aad
daa
pop
loope
inc
mov
adc
ret
pop
(bad)
mov
popf
int1
jge
xor
or
or
mov
roll
sbb
in
(bad)
insb
insb
cmp
and
inc
mov
scas
add
(bad)
and
movsl
sub
xchg
mov
jne
xlat
jae
cmpl
mov
mov
sti
stc
sbb
out
test
jle
imul
sub
dec
fildl
in
movsl
or
mov
jle
into
repz
push
repz
cld
int
fadds
mov
lods
mov
and
pop
outsl
mov
test
push
cmp
mov
push
push
pop
sbb
push
add
in
xchg
inc
lock
cmp
mov
sub
push
xor
mov
dec
mov
stc
aas
(bad)
push
sbb
or
out
dec
cmc
pop
cmp
in
jge
arpl
cmp
pop
pop
aad
mov
xchg
mov
loope
xchg
add
fcmove
ficoml
fidivrs
cli
lods
dec
movsb
arpl
cmc
int
les
mov
xor
insb
push
insl
lds
xchg
mov
pop
loop
rcll
adc
mov
jnp,pn
mov
sbb
push
bnd
enter
rcrb
test
add
jle
shrb
cmp
(bad)
jl
cmpsb
mov
out
mov
lds
dec
loope
pop
dec
dec
lcall
push
fs
or
cmp
pop
(bad)
sub
gs
gs
insb
mov
mov
xchg
sub
out
test
in
mov
int1
mov
subl
mov
loope
add
aad
mov
sub
movsb
pop
adc
aas
push
jo
out
cld
aas
stos
das
xor
push
clc
fnstcw
ficoml
inc
sub
mov
xor
fcompl
sbb
shll
jle
mov
pop
jne
pop
call
or
shll
notb
pop
xor
add
push
or
repz
dec
lret
out
dec
psubusw
ficomps
or
xor
sub
test
pushf
ficompl
xor
add
rcll
or
mov
jmp
mov
cltd
enter
test
js
ljmp
sub
repnz
aam
xlat
mov
loopne
ret
add
scas
pop
loope
in
outsl
cmc
xchg
shrb
xor
cs
push
leave
or
scas
aaa
stc
pop
les
bound
or
jmp
test
(bad)
jns
cmp
rolb
mov
(bad)
add
pop
mov
lods
jno
xor
cmp
call
rcll
push
lea
adc
test
mov
xor
adc
push
loopne
dec
push
out
repnz
imul
adc
jne
sub
rcl
shr
int3
js
push
out
jo
mov
adc
pop
pop
and
scas
mov
out
shll
mov
adc
out
adc
xor
int1
push
mov
add
add
int1
inc
arpl
mov
jo
lods
loop
dec
dec
(bad)
shr
pusha
clc
xor
fwait
in
(bad)
aad
lock
test
cmc
inc
xor
(bad)
mov
and
mov
xchg
repnz
push
xor
into
int
fldt
shld
sub
cmpl
ficompl
in
notb
inc
ss
fidivrs
ja
not
pop
leave
mov
into
sbb
push
(bad)
fdiv
leave
mov
lock
out
dec
inc
loop
pop
fwait
cs
out
push
arpl
cs
ret
cli
insl
xor
dec
and
cmp
lret
fdivl
pop
std
mov
fistpl
and
dec
sbb
jl
xorl
(bad)
loope
imul
aaa
jp
inc
call
jg
scas
add
out
mov
xor
sti
pop
lock
gs
mov
les
lret
outsb
jp
pop
nop
flds
jmp
leave
sbb
in
ds
rorl
ss
mov
or
push
mov
mov
insb
std
jbe
sub
(bad)
repnz
inc
movl
mov
push
jge
dec
lret
adc
in
sti
sbb
shr
push
cmp
mov
dec
ret
int3
roll
jb
ret
and
scas
jne
lods
les
and
mov
or
xchg
scas
xchg
sbb
leave
clc
jge
aad
inc
adc
mov
and
pusha
sarb
imul
jmp
sub
jnp
jge
cmp
leave
and
push
repz
imul
sti
loopw
cmp
frstor
sahf
jp
sbb
jb
dec
scas
movb
out
int
and
inc
xorl
mov
cmc
and
enter
and
call
loopne
push
ja
pop
sub
or
add
or
jecxz
das
push
sub
sub
ja
pop
sti
xchg
cld
lret
add
std
xchg
out
xchg
jae
into
lods
dec
and
xor
out
push
fmuls
xor
inc
jo
push
arpl
cmp
xchg
lds
je
mov
sub
pop
aam
scas
pop
xlat
inc
aaa
les
sbb
xchg
(bad)
jge
xchg
(bad)
push
scas
sub
xor
jl
call
mov
idivl
(bad)
daa
mov
repz
in
xor
push
jle
push
lods
das
mov
repnz
jl
adc
or
and
mov
jo
jno
stc
jnp
out
cmc
and
mov
sbb
xchg
cmc
(bad)
cli
push
mov
or
test
lds
sbb
pop
adc
inc
adc
xorl
sub
ret
dec
xor
loope
push
dec
mov
mov
jne
pop
imul
or
mov
loopne
shll
fsubrl
jp
adc
sbb
ficomps
inc
lahf
cmp
subb
pusha
xor
inc
push
loopne
mov
mov
pop
and
loop
push
fcoml
addb
mov
ljmp
