in
sahf
push
(bad)
lahf
sub
and
cltd
lods
xchg
sbb
clc
xchg
mov
je
or
pop
push
mov
dec
inc
cli
out
lock
pop
rclb
dec
and
xor
rcrb
loope
pop
nop
cmp
in
stos
and
mov
test
adc
xchg
adc
movsl
fsubrs
imul
daa
mov
out
push
mul
xchg
pop
inc
lea
popf
enter
scas
xlat
adc
jne
nop
mov
lds
(bad)
xchg
adc
sti
fsubs
fstl
mov
sar
int3
aas
test
adc
test
push
cmpsl
mov
and
daa
dec
fistps
push
pop
jge
sub
in
addb
dec
jmp
mov
and
(bad)
cli
adc
jo
sbb
and
lock
lea
inc
mov
mov
mov
sbb
stos
pop
pop
scas
mov
mov
ljmp
outsb
or
pop
push
lcall
lcall
mov
(bad)
pop
cwtl
(bad)
outsb
cmpsb
and
adc
dec
add
and
cmp
scas
cmpsb
cmp
fnstenv
sub
mov
push
lret
inc
loope
aaa
jecxz
sbb
sarb
adc
push
(bad)
jb
inc
xchg
movsl
cmpsb
pop
adc
sub
lcall
adc
mov
mov
ret
and
xlat
fwait
and
sbb
inc
pop
inc
sbbb
fwait
test
aam
xchg
mov
mov
movsb
or
cmp
xchg
int
push
mov
mov
mov
pusha
ret
shll
fimull
sbb
jmp
mov
(bad)
lds
xor
fstpl
jg
into
dec
fists
aam
sub
sub
loope
shrb
loope
cld
mov
jl
int1
xchg
rol
jnp
ret
xor
loopne
enter
in
data16
popw
push
push
dec
(bad)
stos
jmp
ret
cld
scas
iret
sbb
mov
in
clc
fsubs
in
idiv
aad
sbb
cs
inc
sbb
dec
stc
sti
mov
or
push
ljmp
and
inc
ja
jl
roll
jecxz
ja
test
jecxz
rclb
mov
jns
push
in
fbld
fnclex
(bad)
fmull
imul
nop
mov
mov
mov
push
mov
aam
xchg
jecxz
sub
je
movsb
aad
or
or
ja
mov
xor
xor
es
and
xchg
pop
jg
cmpsb
mov
fnstcw
cmpsl
mov
mov
ret
clc
mov
xor
pop
and
push
adc
mov
add
loopne
sub
push
(bad)
or
jge
add
pop
mov
and
pop
push
ret
popa
push
cli
jge
and
scas
out
loope
fadd
adc
cmp
sbb
(bad)
ficompl
and
lds
cmpsl
sub
sub
add
into
or
mov
and
mov
clc
into
or
mov
sub
lock
mov
cmc
rcll
cmc
popa
pop
bound
pop
int1
sbb
mov
iret
mov
es
pop
push
test
push
shlb
xchg
stos
rolb
mov
sbbb
xchg
test
pop
pop
or
das
sti
mov
add
mov
in
add
and
ds
lods
shlb
and
xchg
insl
cmp
push
mov
sbbb
mov
scas
outsb
cmc
mov
out
jp,pn
xor
cltd
mov
std
add
es
mov
pop
and
push
(bad)
mov
mov
push
les
jae
sbb
enter
sub
push
data16
mov
adc
mov
notl
inc
or
xchg
scas
fiaddl
or
jl
stos
rcr
sti
mov
ljmp
mov
gs
push
xchg
aas
jne
aaa
push
sub
xchg
push
xor
mov
or
lds
add
sub
inc
insb
or
mov
cli
inc
inc
add
cmpsl
mov
scas
scas
cmp
aam
xchg
cs
cmc
ss
push
call
add
xabort
pusha
cmp
pop
push
inc
sub
(bad)
rclb
ret
mov
(bad)
push
jecxz
mov
fldcw
int
push
es
fstl
mov
jbe
sub
xchg
sbb
mov
and
add
addr16
inc
mov
imul
clc
adc
mov
cmp
addr16
pop
mov
addr16
pushf
cwtl
andl
mov
fwait
int
bound
in
or
mov
and
fstl
adc
popf
scas
fsubs
lahf
and
lahf
mov
push
fucom
popa
push
or
int
(bad)
arpl
sarl
add
stos
popa
push
lods
adc
cmc
push
iret
mov
fistpl
cwtl
ja
sbb
mov
mov
jno
lahf
movsl
mov
mov
stc
push
mov
fcompl
in
sbb
and
mov
loope
jg
mov
lcall
scas
fcoms
adc
daa
mov
in
adc
xchg
pop
nop
idiv
push
in
lods
pushf
jecxz
aas
ljmp
int3
pop
imul
cmp
sbb
ss
mov
xchg
ret
movsb
roll
(bad)
pop
xor
test
dec
sub
std
dec
adc
mov
inc
jns
lcall
mov
sub
mov
sahf
adcl
fidivl
mov
fidivl
movsb
aas
inc
push
lcall
stos
add
shll
adc
sti
aaa
popa
push
js
jp
fldt
mov
repz
push
lret
jno
xor
dec
scas
es
lahf
rcrl
pop
dec
sub
cmp
jno
inc
or
mov
loop
aas
pop
inc
push
int1
or
aad
and
loope
mov
clc
jecxz
ret
into
fnstenv
adc
mov
in
(bad)
cwtl
cs
mov
roll
data16
into
mov
adc
mov
loope
cltd
mov
adc
xchg
xchg
gs
stos
mov
dec
sbb
loop
sub
xchg
xor
ja
rolb
sub
ja
aaa
pop
pusha
inc
aam
mov
xlat
lahf
test
xchg
and
sub
push
and
gs
sti
inc
clc
inc
mov
jl
mov
cmpsl
mov
adc
pop
mov
enter
out
data16
cltd
add
fsubrl
mov
ja
cmp
out
and
out
leave
shlb
mov
in
mov
mov
addr16
push
scas
pop
adc
push
dec
les
add
adc
into
inc
sbb
sbb
mov
adc
mov
cld
call
sbb
ret
int3
inc
cmp
push
sbb
hlt
xlat
inc
push
inc
sbb
outsl
ret
cld
adc
mov
lcall
test
cs
ss
insb
mov
inc
mov
and
or
popa
and
mov
jmp
out
mov
add
cwtl
mov
push
imul
stos
out
clc
lcall
inc
jp
pop
ss
sbb
cld
in
movsl
mov
loop
ds
mov
jo
fcoms
push
in
mov
jle
pushf
stos
add
fldenv
(bad)
dec
mov
fldenv
loope
cmp
fcomps
ja
xor
in
xor
call
push
call
pusha
dec
repz
jge
lods
mov
inc
xor
fistl
jo
or
pusha
mov
dec
dec
outsb
idivl
mov
or
pop
cltd
lret
adc
xchg
adc
push
loopne
fs
mov
jl
pop
ja
add
add
stc
sbb
xchg
xor
iret
roll
add
lret
aas
jo
ja
pop
js
rcrl
popa
andl
jno
enter
adc
or
push
test
scas
ret
add
sahf
xor
and
addr16
pop
mov
lods
xchg
jb
sbb
adc
(bad)
enter
cltd
ss
imul
nop
insb
xor
adc
and
shrb
xor
scas
mov
mov
aam
ret
xchg
jecxz
mov
pusha
ss
add
sub
xchg
ret
test
loope
fcoml
popa
mov
cwtl
imul
dec
es
pop
sbb
mov
and
xchg
mov
pop
and
xchg
push
enter
and
repz
loop
gs
inc
mov
cmpsl
inc
mov
xor
xchg
mov
mov
xchg
rol
mov
adc
lcall
jns
xlat
outsl
and
clc
shrb
