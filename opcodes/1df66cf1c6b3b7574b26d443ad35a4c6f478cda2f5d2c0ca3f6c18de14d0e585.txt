inc
dec
adc
int3
nop
fsts
out
or
add
xchg
sbb
addr16
sub
xor
and
push
or
mov
mov
imul
add
mov
mov
push
and
mov
repz
fs
adc
mov
outsl
lods
mov
cmc
movsl
mov
mov
cmpsb
cwtl
test
nop
iret
cli
repnz
pop
pop
out
movsl
inc
andl
pop
sbb
out
daa
ljmp
js
mov
pop
(bad)
mov
aam
iret
je
cmp
andb
jg
adc
inc
inc
xor
pop
ja
jae
mov
jae
mov
or
xchg
push
pop
rcrl
lret
fdivrs
imull
les
mulb
or
pushf
subb
sub
ret
aas
jmp
(bad)
in
sti
xchg
mov
xor
test
lcall
fiadds
and
push
pop
movsb
roll
in
mov
xlat
mov
pop
jo
mov
inc
andb
xchg
mov
jo
inc
push
arpl
std
inc
lods
push
jbe
jge
and
adc
mov
js
pushf
enter
addb
sbb
cwtl
lods
dec
sbb
ds
scas
das
pop
and
imul
bound
bnd
subb
adc
add
jno
push
xchg
into
fmull
jmp
loopne
push
repz
hlt
mov
pop
jae
test
add
enter
xorl
sub
scas
push
cld
xor
mov
mov
mov
or
cltd
push
fmull
jbe
mov
stos
jg
inc
mov
int1
(bad)
popa
sub
or
(bad)
fsts
push
mov
mov
and
rol
jnp
divl
xor
(bad)
repz
xor
xor
in
inc
in
sub
lods
pop
jge
xchg
jb
cmp
adc
cli
push
xor
pop
sbbb
(bad)
and
fs
popa
mov
lods
pop
testb
outsb
ret
pop
mov
dec
gs
adcl
and
pop
jae
es
push
or
add
aad
jmp
lret
mov
pop
push
stc
lea
incl
lods
mov
call
cmp
cmp
mov
push
mov
adc
std
movsb
rcrb
pop
mov
cmpsb
movsb
or
push
int1
and
dec
ljmp
les
pop
or
(bad)
jns
adc
cmp
sub
vaddps
je
out
(bad)
test
pusha
xchg
mov
sti
loope,pn
jle
scas
add
and
lods
cli
sbb
sbb
dec
into
mov
xor
dec
sbb
pop
pop
sbb
ret
lods
fcomps
fldenv
sar
lret
pop
pop
xor
ficompl
dec
mov
das
mov
cmp
dec
add
push
jg
ds
lret
fs
jmp
cmpsb
popa
inc
pop
rol
dec
jmp
jne
mov
(bad)
(bad)
lods
inc
mov
mov
and
xlat
adc
jle,pn
dec
push
popa
add
cmp
mov
xchg
sti
push
or
inc
mov
aam
daa
test
addr16
stos
jns
lret
data16
jne
andb
aaa
lret
cmpsl
jmp
and
movsl
cli
push
add
adcl
inc
dec
or
inc
std
rcl
dec
or
push
and
les
xchg
int1
shl
fiaddl
xor
popa
inc
(bad)
fwait
inc
adc
jge
out
stos
sub
xor
inc
imul
imul
daa
js
adcb
sbb
xlat
mov
loope
imul
lret
test
mov
inc
or
xor
std
out
mov
in
and
push
mov
and
inc
inc
js
adc
jno
cmp
aaa
lret
gs
scas
cmp
scas
movsl
mov
push
sub
dec
jae
(bad)
jno
add
nop
dec
mov
lods
xor
jne
lcall
jecxz
cmc
jl
push
repnz
test
fimuls
inc
js
adc
jo
adc
repz
cmc
lahf
sti
dec
rcrl
imul
dec
mov
lret
(bad)
pusha
testl
pop
pop
add
xor
jmp
in
imul
jb
mov
xchg
pushf
jecxz
xchg
je
cmp
aas
and
push
and
pop
and
imul
pop
sub
xor
jp
sbb
imul
loop
push
dec
pop
lods
mov
pop
movsb
xlat
mov
xlat
in
xchg
dec
aad
cltd
sti
cmp
insb
and
xchg
mov
and
mov
stos
lock
mov
cltd
inc
fisubl
testl
xchg
enter
rcr
aaa
jmp
add
mov
and
jp
fnstcw
xchg
nop
add
lods
stc
sub
insb
cli
clc
ljmp
push
push
mov
push
repz
cmp
xchg
arpl
stc
stos
bound
sti
lcall
aam
and
mov
fnstcw
stos
cmp
int1
sbb
imul
fwait
ror
dec
and
scas
inc
xchg
loope
cmp
mov
xlat
mov
sub
jl
out
lcall
imul
ficoml
push
dec
mov
xrelease
mov
push
mov
pop
lods
mov
add
mov
insl
push
shlb
lea
imul
inc
es
xorl
call
add
arpl
jp
cmp
sti
enter
mov
push
mov
pushf
dec
mov
(bad)
fwait
add
mov
ja
(bad)
pop
loope
xor
jae
clc
pop
xchg
fwait
aad
or
and
xchg
mov
in
push
in
outsl
addr16
leave
movsb
int3
xorb
push
push
mov
mov
jbe
sub
out
inc
push
mov
jne
lea
xor
push
rol
add
int3
stos
rol
aaa
sub
aas
repnz
(bad)
dec
sub
push
inc
adc
cmp
mov
dec
xor
push
pop
int1
add
stos
mov
adc
out
cltd
iret
push
sbb
xchg
inc
addr16
adc
inc
pop
loope
pop
mov
and
mov
mov
or
pushf
mov
les
insl
sbbb
mov
rol
mov
loop
pop
es
sbb
ds
dec
in
jae
fs
mov
pop
fldcw
inc
fs
mov
mov
stos
std
inc
(bad)
leave
pop
pop
rcll
sbb
std
jle
push
test
dec
lea
cli
xchg
ja
cmc
jno
aaa
sub
addr16
cmpsb
aam
add
fs
adcb
xor
push
es
sbb
push
sub
adc
das
std
gs
lock
xchg
lcall
or
add
jp
jae
mov
mov
stc
out
jmp
pop
dec
sbb
or
in
cmp
fwait
pop
in
mov
add
divb
push
xchg
lcall
rorl
and
inc
fistl
(bad)
leave
std
lods
leave
fmulp
cmpsl
in
or
sbb
aad
sbb
push
mov
(bad)
popf
rorl
add
jbe
add
push
mov
xlat
stos
pusha
push
rcl
aad
pop
(bad)
xlat
orb
jno
cld
ja
test
dec
(bad)
mov
jno
jae
xchg
push
scas
mov
jne
in
mov
jg
test
flds
mov
je
mov
fdivrl
adc
stos
xor
mov
adc
out
decb
and
int3
aad
sbb
negb
cmpsb
lret
and
jb
sbb
jmp
mov
jns
xor
inc
lea
insl
lcall
call
mov
out
dec
pop
in
clc
add
sub
xor
cltd
cmpsb
and
cmc
mov
insb
add
scas
push
int1
xor
int3
decb
rcll
ret
insb
movsb
arpl
ret
jmp
jecxz
dec
push
push
xlat
or
les
frstor
into
cld
push
xchg
test
jns
addb
arpl
cld
scas
xchg
mov
cmpsl
shrl
mov
push
insb
orb
inc
clc
xchg
stos
push
pop
or
fs
xor
clc
pop
pushf
cmp
lret
lea
sti
clc
es
push
fsts
imul
jle
and
jge
jnp
ss
bound
ja
or
xchg
jns
lds
and
dec
mov
daa
sar
int1
push
bound
repz
mov
aam
call
int
