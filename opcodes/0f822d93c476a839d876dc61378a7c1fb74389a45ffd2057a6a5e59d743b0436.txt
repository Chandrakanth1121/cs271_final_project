xchg
mov
jp
shl
add
notb
mov
ret
pop
sti
rcrl
xchg
xor
dec
cmp
fcompl
aam
or
hlt
pop
xchg
jg
daa
push
stos
push
pop
push
sbb
cltd
mov
mov
cmp
jl
inc
repnz
push
sbb
fsincos
xlat
inc
sub
add
mov
cmpsl
in
jmp
mov
xor
scas
inc
cmc
inc
call
outsl
pop
mov
mov
push
inc
xlat
in
stos
cmp
jno
mov
push
fs
mov
js
mov
xlat
and
addr16
adc
pushf
pop
fs
lea
push
pop
pop
add
push
sub
pop
xor
mov
jl
stos
popf
jl
mov
dec
push
pop
hlt
stos
es
mov
es
mov
inc
sub
xchg
int3
xchg
jl
jp
mov
and
cmpsb
dec
loope,pn
mov
jo
jne
mov
push
mov
je
push
scas
mov
mov
sbb
mov
mov
push
or
xchg
mov
fistpll
in
aaa
push
or
shr
out
jae
add
mov
sub
test
and
add
xor
mov
mov
cltd
mov
(bad)
sbb
data16
(bad)
jae
sub
xchg
jbe
mov
xchg
mov
stos
and
addr16
sub
mov
loop
jl
xchg
mulb
or
iret
shrb
ja
aas
and
cmpsb
xor
push
imul
fldcw
mov
or
jo
mov
stos
xchg
xor
out
out
test
sbb
aaa
outsb
sbb
pushf
test
repnz
fldenv
hlt
xchg
jle
iret
cmp
xchg
lea
hlt
sub
movsb
pushf
cmp
mov
xor
jp
iret
stos
ror
int3
sbb
test
hlt
fcmovne
cltd
push
(bad)
cmpsb
xchg
aad
adc
jmp
mull
ljmp
cmp
dec
popf
sub
lea
(bad)
lret
add
shll
ja
adc
pop
mov
pop
mov
sbb
(bad)
jae
xor
inc
gs
fwait
dec
sub
into
cmp
jp
es
aas
xchg
shrl
roll
imul
movsb
push
inc
std
mov
cld
xchg
loop
daa
add
call
rcrl
xchg
mov
jae
or
les
int1
outsl
outsb
and
xor
ds
cld
push
cld
inc
cwtl
add
dec
jecxz
movsl
es
xchg
push
jnp
std
mov
imull
add
shl
sbbb
sbb
dec
mov
iret
and
and
cmpsl
fldl
xchg
cmp
push
cmpsl
es
mov
xor
inc
mov
out
pop
std
stos
das
dec
das
mov
cmp
or
aam
clc
xor
sbb
ds
push
adc
sub
loopne
xchg
aam
mov
(bad)
and
repnz
xchg
jbe
js
cltd
cmp
fwait
jbe
ss
fstpt
xor
lret
inc
and
movsl
mov
dec
mov
iret
push
imul
mov
cltd
dec
cmp
aad
and
inc
repnz
xchg
sbb
leave
call
pop
xchg
add
dec
dec
addr16
lods
cmp
mov
fdiv
or
inc
hlt
push
cltd
mov
or
dec
pop
push
nop
sbb
lock
xor
mov
out
xor
sti
and
push
lret
lret
sahf
inc
hlt
mov
inc
jnp
xchg
mov
sub
jbe
lret
je
nop
popf
sub
xchg
out
jl
leave
je
add
or
fwait
out
mov
cmp
shrl
sbb
ret
in
rclb
sub
mov
(bad)
test
push
int1
mov
lret
outsb
xchg
xchg
inc
cltd
ja
test
adc
hlt
push
dec
sbb
mov
and
aam
aas
add
lds
adc
popf
in
mov
jmp
les
pop
sahf
out
lods
add
fmuls
imul
sub
jnp
loope
inc
mov
loop
notl
pushf
cwtl
shll
pop
je
imul
cld
repz
xor
fsts
decb
shlb
cmc
xchg
push
out
inc
lcall
mov
and
push
ret
jecxz
hlt
adc
xor
jb
insb
inc
xor
dec
ds
xchg
mov
data16
jl
cmp
psllq
mov
fsubs
pop
push
cs
pushf
jnp
fcoms
lock
out
xor
cmp
shr
andps
in
ret
lods
mov
lcall
fs
pop
sbb
(bad)
fadd
lods
cmpb
fidivl
lret
xor
je
std
xor
dec
or
mov
les
xchg
aam
fstps
(bad)
pop
stos
aam
bound
inc
out
clc
push
loopne,pn
loopne
cmp
add
sbb
or
bound
test
(bad)
mov
lret
test
xchg
outsl
or
outsb
push
and
cmpsl
jnp
push
test
sahf
shll
aaa
lret
jg
test
sbb
adc
push
pop
ret
cmp
pushf
loopne
push
mov
lret
inc
aad
cwtl
stos
out
clc
mov
xchg
ret
jns
inc
iret
mov
lret
ds
xchg
mov
adcb
hlt
sbb
loope
test
inc
mov
outsl
mov
aaa
in
push
idivb
mov
sbb
and
xor
jae
in
ss
jle
out
cli
les
sti
jg
xor
pop
out
das
roll
nop
lret
fsubs
outsb
and
stos
sbb
int1
dec
ja
mov
aaa
cwtl
xchg
adc
int1
xchg
imul
or
inc
test
fisubrl
call
xchg
orl
xor
mov
ss
aas
andb
lret
dec
repz
imul
aam
mov
aas
jecxz
aad
fmuls
mov
in
aaa
push
mov
(bad)
xchg
xor
(bad)
jl
clc
sub
clc
(bad)
mov
mov
pop
mov
jl
and
jbe
rclb
jmp
stos
test
inc
clc
dec
ja
data16
xchg
push
dec
repnz
adc
jmp
mov
pusha
lds
and
mov
cmp
aad
mov
sub
(bad)
imul
xchg
push
mov
fnstsw
pop
inc
xchg
mov
mov
or
lret
lock
xchg
out
push
scas
or
mov
roll
out
sbb
jno
mov
shr
adc
fimuls
jae
sub
lahf
jnp
iret
mov
in
pushf
insl
(bad)
cmp
push
xchg
out
ret
push
ret
scas
dec
push
popf
sarl
adc
dec
adc
mov
out
cmc
or
repz
mov
add
adcl
jmp
enter
pop
test
aaa
test
std
pop
or
jns
clc
and
divl
mov
dec
jp
sbb
pop
fcompl
mov
mov
cmpl
leave
adc
loope
mov
leave
inc
mov
out
cmpsb
and
and
xchg
cmp
lret
roll
pop
and
sbb
ret
cmc
mov
popf
repz
add
adc
lret
mov
shl
xchg
push
aaa
lods
mov
js
das
test
cmc
fistpl
push
inc
outsb
xchg
cli
insb
roll
inc
cmpsb
push
ret
and
daa
jb
jno
pop
repz
pop
sub
jae
pop
adc
add
xor
jo
leave
fnstenv
jno
invd
es
push
inc
and
or
outsb
in
xchg
iret
lods
test
negl
aad
scas
xor
fadds
mov
mov
jne
cmp
cmp
mov
inc
test
imul
xchg
cmp
mov
(bad)
ja
hlt
std
sub
sbb
fwait
jg
in
lret
pusha
dec
pushf
jne
xchg
out
lods
push
aaa
lahf
lret
dec
jb
mov
stos
mov
lods
lret
js
loop
jge
out
scas
shl
jge
sub
mov
insl
or
mov
int3
cmpb
adc
int
mov
cli
dec
mov
cmp
xchg
or
shrl
push
xchg
cmp
movsb
adcl
call
sub
enter
fidivl
mov
out
sub
push
and
mov
inc
imulb
or
adc
in
or
