stos
add
js
nop
xchg
popa
or
mull
or
jne
mov
rorb
mov
lahf
out
test
iret
rorb
push
inc
pop
and
das
sbb
or
ficoml
div
int1
or
div
or
div
or
mull
adc
insb
hlt
outsb
ja
outsb
add
popf
lahf
jb
das
lock
or
inc
or
fnstenv
aam
dec
cmp
scas
push
xchg
cmp
shl
stos
sbb
lcall
out
rolb
test
hlt
stos
xchg
jnp
mov
pop
out
cmp
xchg
adc
jle
push
repz
or
xchg
mov
xor
nop
xchg
popa
or
div
or
div
or
div
or
mull
adc
insb
mov
repz
jnp
ja
dec
jne
sarb
fwait
push
add
dec
out
mov
ljmp
push
pop
jnp
adc
add
(bad)
jb
popa
add
ljmp
mov
jge
xchg
xor
sbb
jbe
popa
jnp
adc
xchg
cltd
dec
ljmp
mov
pop
sti
push
cmp
jnp
adc
add
fldl
test
ss
xchg
xchg
jmp
popa
add
nop
fidivrs
add
popa
jnp
lds
xchg
out
lea
call
test
adc
push
mov
bound
dec
call
cmp
xor
xchg
cltd
das
sbb
rclb
ljmp
push
idivb
or
mov
mov
mov
imul
xchg
int1
or
div
or
div
or
mull
adc
insb
hlt
outsb
ja
dec
add
dec
lahf
push
mov
bound
dec
ficomps
mov
mov
out
pop
sarb
push
pusha
jnp
or
mov
or
test
or
cmpsl
jno
popa
add
fimuls
mov
ljmp
or
stc
xchg
add
popa
jnp
push
pop
out
or
loope
jno
add
popa
jnp
push
pop
loop
or
loopne
jae
das
lock
xor
data16
in
add
or
imul
xabort
bound
mov
mov
test
(bad)
mov
loope
jnp
or
sub
mov
repz
pop
jnp
or
xor
ljmp
mov
or
ljmp
cmp
(bad)
sbb
jbe
popa
jnp
into
mov
jl
mov
not
push
ljmp
cmp
iret
rclb
adc
inc
ja
lods
mov
ljmp
or
imul
int1
or
imul
scas
rclb
add
adc
repnz
ljmp
popa
jnp
pop
cmp
or
div
or
mull
adc
insb
hlt
arpl
dec
add
push
div
int1
or
div
or
mul
not
xchg
popa
out
fsts
popf
lahf
push
jns
mov
iret
mov
jnp
push
jne
mov
sbb
add
ljmp
ja
or
mov
mov
dec
lahf
lret
add
mov
lock
or
mull
or
jne
lahf
insb
mov
sub
jne
mov
push
stos
insb
add
sbb
or
adc
fs
popa
jnp
(bad)
call
mov
lock
cmp
(bad)
repz
lea
out
dec
cmp
xor
jns
mov
cmp
jnp
addr16
or
div
or
div
or
imul
scas
rclb
add
popa
jnp
(bad)
jmp
jnp
mov
or
div
or
mull
or
pop
pop
mov
(bad)
cmp
add
mov
cmc
mull
or
jne
mov
rorb
mov
or
div
or
div
or
imul
jg
adc
or
mov
decl
popa
jnp
pop
cmp
or
mull
adc
insb
hlt
arpl
dec
add
push
div
int1
or
div
or
mul
not
xchg
popa
out
rclb
lahf
into
adc
xchg
cmp
lds
test
jnp
mov
mov
call
inc
add
daa
pop
mov
movsl
lahf
outsb
adc
mov
sbb
shr
cmp
or
div
or
div
or
div
or
mull
or
jne
lahf
insb
mov
cwtl
adc
js
inc
jne
or
mov
xchg
int1
and
jl
insb
jne
enter
or
pop
jl
insb
imul
int3
pop
scas
sub
cmp
adc
or
insb
inc
shlw
xchg
aad
dec
cmp
stos
or
insb
imul
je
and
mov
stos
jg
xor
pop
add
or
pop
adc
movsb
mov
inc
add
sub
or
cwtl
out
ja
bnd
xor
xchg
fwait
xchg
dec
imul
mov
test
popa
jnp
dec
jno
scas
movsb
loopne
mov
je
mov
fidivrs
add
jmp
cmp
add
xor
imul
push
jge
orb
filds
mov
sbb
popa
jnp
aam
(bad)
rorb
mov
cmp
sub
pusha
or
andb
cmp
and
sar
push
cmp
inc
add
divb
mov
test
jno
div
lods
jl
xchg
or
loopne
popa
add
nop
fidivrs
add
or
(bad)
pop
and
adc
fisubl
loopne,pt
ficoml
push
sti
int3
push
add
mov
out
push
cmp
lahf
pop
or
jb
adc
popa
jnp
int3
pop
push
xor
sbb
sub
(bad)
mov
xchg
bound
pop
in
jg
sbb
mov
jnp
or
mov
ja
xlat
shlb
test
mov
ljmp
ficomps
push
dec
ljmp
or
sahf
jnp
adc
or
insb
call
stos
push
mov
pop
jno
popa
push
or
and
div
or
imul
jp
inc
cmp
mov
insb
lret
ss
xor
push
xlat
add
mov
pop
lahf
jne
fwait
jle
dec
xor
jg
fs
mov
mov
daa
xchg
dec
popa
add
push
or
notl
jne
test
rclb
adc
popa
jnp
(bad)
ljmp
xchg
cmp
(bad)
shlb
xchg
xchg
loopne
xchg
loopne
rolb
lea
mov
or
jle
xchg
sti
stc
push
cmp
dec
sti
dec
pop
or
div
or
div
or
div
or
mull
mov
xchg
loopne
xchg
mov
dec
jmp
or
imul
dec
adc
pop
add
sub
int1
or
imul
xchg
adc
cmp
enter
jle
lea
loopne
mov
out
xchg
insl
lahf
jne
push
mov
sbb
or
test
jno
test
(bad)
test
test
mov
shlb
orb
pusha
orl
pusha
xchg
js
rorl
sbb
rclb
popf
lahf
jp
adc
jo
aas
push
mov
cmp
sbbl
out
inc
mov
gs
mov
inc
pop
jnp
ja
shll
lahf
bound
or
cs
rclb
(bad)
xchg
stc
dec
cmp
inc
mov
test
mov
xchg
pop
jnp
ja
shll
cld
inc
mov
pop
dec
test
sbb
rclb
addr16
aam
and
inc
(bad)
jnp
mov
imul
jge
ds
leave
hlt
loope
dec
cmp
jbe
ja
inc
xchg
pop
push
xor
pop
dec
push
mov
daa
cld
dec
(bad)
jnp
mov
pop
inc
test
pop
sbbb
ljmp
dec
cmp
jne
ja
adc
mov
gs
ja
iret
sarb
rclb
lahf
jo
xor
outsb
ja
arpl
pop
jle
ja
dec
jne
popf
lahf
outsb
mov
jg
js
(bad)
rclb
jle
leave
add
je
pop
lahf
out
mov
jnp
mov
xchg
popa
jnp
or
out
insl
adc
push
push
pop
xlat
jne
cmp
test
pop
lahf
push
push
pop
bnd
insb
jle
mov
pop
out
mov
or
inc
ja
jge
mov
cwtl
adc
mov
lret
jl
ja
imul
enter
movsb
popa
jnp
fildll
(bad)
jg
xor
dec
xchg
pusha
jnp
leave
incl
test
xchg
and
or
insb
out
jp
inc
inc
mov
sti
sub
