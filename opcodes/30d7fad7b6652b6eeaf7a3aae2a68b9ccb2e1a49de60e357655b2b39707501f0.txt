xchg
xor
(bad)
sbb
mov
add
cmp
dec
push
cmp
mov
jne
in
and
fsub
sbb
dec
dec
sub
mov
adc
xchg
xor
xchg
xchg
sub
scas
dec
loopne
or
ret
sbb
xchg
jns
cmp
push
jns
lret
sub
add
nop
jo
mov
jne
jb
sub
fsubl
movsb
push
dec
and
jne
inc
mov
out
negb
mov
negl
jb
inc
cld
shr
mov
cli
test
dec
and
xchg
sub
cmp
fbstp
sub
hlt
pop
subb
jne
mov
lock
mov
jne
repz
push
adc
xchg
xor
aas
pop
mov
mov
(bad)
rcrb
loopne
clc
inc
cmpsb
xchg
xor
cmp
das
mov
mov
and
cmp
pop
jne
hlt
sbb
adc
loope
int3
cmp
and
sbb
jne
adc
jne
mov
mov
mov
sub
dec
cli
sub
inc
(bad)
jo
push
mov
sahf
addr16
cmpsb
int
lds
jno
fisttpll
and
fmull
and
mov
(bad)
outsb
mov
xchg
push
and
adcb
sbb
hlt
add
cmp
dec
dec
popf
mov
jb
pop
sub
hlt
pop
jle
mov
pop
es
(bad)
shrb
filds
or
pop
mov
cmpsb
fbstp
sub
fcoml
popf
in
add
jne
jb
jl
ret
sbb
sub
pop
jne
xchg
pushf
lea
rol
xor
mov
mov
xlat
cwtl
mov
imul
mov
pop
jne
lret
sub
mov
jne
jmp
sub
repz
xor
pop
jne
mov
je
mov
sahf
lds
xor
rclb
int
mov
jne
popa
jnp
sub
aas
cli
pop
rcr
add
cmp
aas
cmp
mov
test
dec
and
jp
jge
and
aaa
adc
mov
pop
or
jne
inc
sahf
fbstp
sub
mov
push
in
hlt
pop
popf
mov
pop
jne
xorl
outsl
mov
inc
or
jne
cmpl
outsl
mov
push
cmp
jne
lcall
sbb
xchg
cmp
out
fistpl
sarb
sub
pop
adc
jnp
xchg
add
or
xchg
lods
sbb
xchg
mov
mov
mov
mov
adc
mov
adc
mov
adc
pop
stc
pop
sub
jbe
jne
dec
hlt
dec
cmpsb
repz
aad
dec
jge
or
ja
or
dec
adc
push
shl
jecxz
fdivl
and
out
push
repz
push
ret
sbb
push
outsb
push
lods
movsb
jne
cld
fdivl
and
out
ljmp
xor
dec
pop
cmc
adc
pop
lea
cmpsl
mov
mov
sahf
sub
in
test
jae
(bad)
mov
aas
cli
int
mov
jne
push
mov
sub
ret
adc
jo
fdiv
rorl
mov
xor
mov
dec
xchg
mov
je
loopne
dec
loope
shlb
xchg
xor
dec
pop
cmc
adc
flds
and
lcall
cld
xchg
add
xchg
lea
xchg
and
and
je
dec
loopne
adc
arpl
rorl
lock
loope
movsb
xor
mov
dec
call
mov
xchg
lock
mov
sbb
loopne
mov
dec
hlt
jg
sbb
mov
dec
jg
sub
jg
and
dec
(bad)
jo
fdivs
rcll
jb
xor
hlt
push
(bad)
jne
cmp
push
pop
cmp
pop
fimuls
add
xchg
movsl
je
(bad)
out
xlat
xchg
popa
sbb
es
push
pusha
cmpsl
dec
pusha
mov
orb
xor
aas
pop
mov
scas
pop
sub
(bad)
mov
aas
cli
test
dec
and
inc
jns
repz
psubq
int
xchg
pop
jne
shl
cld
push
xchg
sahf
or
(bad)
sub
or
cmp
dec
cld
in
inc
cmc
mov
mov
mov
lahf
aad
std
out
xchg
mov
je
std
cmp
leave
(bad)
push
je
and
dec
sbb
in
hlt
pop
(bad)
push
mov
or
orb
xor
aas
pop
mov
inc
mov
jl
dec
and
push
cmpsb
jmp
mov
dec
stos
adc
xlat
sahf
sbb
idivl
jne
dec
sbb
in
hlt
pop
cld
ficompl
(bad)
push
mov
cmp
mov
iret
add
xchg
xor
repnz
ljmp
cld
push
xchg
sub
(bad)
mov
aas
cli
and
in
and
lds
jb
inc
dec
sub
mov
ret
adc
jnp
and
rorb
xor
cmp
ja
fcomip
pop
and
sahf
loop
shl
xchg
sub
cmc
dec
and
jns
mov
xor
xchg
lea
ficoml
xor
aas
fsubrs
jae
(bad)
mov
aas
cli
es
xchg
sub
or
lcall
pop
popf
lods
sbb
jne
jo
jne
mov
mov
mov
es
push
inc
mov
jne
mov
je
aas
fdivs
fucomp
inc
jo,pn
dec
cld
enter
cmpsb
ret
pop
lret
mov
lods
inc
or
dec
in
jbe
jne
ret
in
jbe
jne
cmp
xchg
xor
dec
imul
aas
out
aad
fdivr
sub
(bad)
xor
loop
jne
jmp
dec
cld
enter
jle
dec
(bad)
pop
mov
jo
aad
out
ljmp
lea
jne
lds
pop
test
dec
xchg
testl
aad
fadds
les
jbe
xor
mov
ja
fcomip
pop
pop
sub
pop
clc
push
sbb
jne
jne
mov
insl
adc
in
aas
pop
popf
and
push
movsb
inc
pushf
mov
out
xchg
fcomip
pop
(bad)
sub
(bad)
cmp
mov
jne
jne
fildl
pop
or
pop
xchg
movsb
jno
mov
insl
adc
in
aas
pop
xchg
and
push
sbb
pop
sahf
cmp
sti
adc
repz
cld
ljmp
sub
jbe
sub
fsubl
movsb
push
cmpsl
inc
sub
sbb
dec
into
out
jbe
lods
inc
leave
xor
hlt
pop
dec
push
mov
jne
repz
xchg
jbe
jne
outsb
lods
movsb
jne
dec
in
jbe
jne
ret
in
jbe
jne
cmp
pushf
push
in
jbe
jne
aas
(bad)
pop
cmc
aas
fcompl
mov
dec
dec
mov
testl
outsl
mov
lock
dec
loope
jge
sub
rorb
mov
mov
mov
xchg
fbstp
aas
mov
jne
outsb
lods
movsb
jne
xor
out
xor
cmp
xchg
xor
xor
fwait
lcall
pop
jp
push
pop
jne
xor
in
ret
push
mov
pop
sub
mov
cld
cmc
lahf
(bad)
cld
out
rcr
xor
mov
(bad)
push
cmp
jge
push
scas
pop
paddb
bndstx
mov
shlb
mov
(bad)
adc
push
movsb
repz
cmc
inc
cld
cld
test
loopne
sarb
fdiv
push
dec
pop
add
mov
mov
jno
hlt
pop
(bad)
push
dec
or
mov
jne
repz
in
ret
sub
cmc
inc
cld
cld
test
loopne
sarb
fdivr
test
loopne
shl
mov
and
mov
repz
in
ret
adc
push
dec
loope
pop
mov
mov
mov
mov
mov
add
pop
fbstp
sbb
repz
push
mov
loopne
or
aaa
sub
push
xchg
lock
dec
loope
movsb
jne
sub
fsubl
movsb
push
dec
and
dec
mov
dec
das
sub
push
xchg
xor
aas
fcomps
sub
fcompl
pop
sub
mul
add
mov
mov
mov
jne
mov
popf
nop
sbb
adc
in
xor
and
out
out
fcompl
clc
js
dec
es
adc
lds
lock
and
