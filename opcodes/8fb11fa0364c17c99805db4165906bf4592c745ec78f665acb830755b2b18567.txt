loopne
or
add
add
dec
add
add
add
add
test
add
add
add
push
lock
add
fsubs
add
lret
stos
sub
fs
lahf
push
pop
xchg
push
push
int3
cmp
xchg
lods
(bad)
pop
repz
out
lss
push
rclb
sub
sbb
lock
insb
lods
pushf
inc
push
fisttpll
jg
pop
jnp
loop
fnclex
pop
arpl
aas
push
jp
inc
inc
ret
dec
jmp
(bad)
sarl
mov
call
jg
rolb
mov
push
ret
mov
dec
das
rorl
pop
mov
into
jo
stos
test
jno
sbb
cltd
jo
mov
lret
xchg
movsl
cmp
push
sub
mov
dec
adcb
testl
pop
mov
and
pop
mov
and
repnz
mov
pop
xchg
sbb
adc
adc
pop
and
(bad)
lock
lods
jno
scas
cmp
pop
xor
inc
outsl
mov
cmpsb
mov
push
or
pop
nop
je
data16
lods
divl
mov
enter
decb
mov
in
sub
pop
sbb
popf
push
push
add
inc
push
xchg
xchg
adc
or
jle
sub
inc
fildll
xchg
jo
sub
cmpsb
imul
cmp
loop
xor
jp
cltd
repz
xlat
stc
xchg
xchg
sub
jb
lods
push
xor
jbe
pop
aaa
in
pop
nop
mov
xor
mov
div
popf
(bad)
aam
xor
fisttpll
mov
addl
in
outsl
add
int1
ret
mov
mov
(bad)
cltd
sbb
bound
inc
adc
inc
add
cmpsl
sub
inc
or
push
dec
dec
pop
shlb
ja
jle
cmp
push
ja
sub
fdivl
or
inc
mov
dec
adc
subb
mov
and
inc
bound
ljmp
test
pop
sbb
mov
mov
pop
sbb
and
inc
bound
test
cmp
jns
inc
mov
lcall
rol
jmp
lahf
outsb
mov
lods
scas
or
jmp
cs
mov
lahf
imul
les
cmp
adc
push
aas
in
movsl
ds
dec
hlt
shlb
pop
or
gs
mov
aas
sub
stos
push
out
mov
or
int3
dec
jmp
scas
inc
orl
xorl
pop
dec
sbb
fstl
xor
movsb
pop
ficompl
push
dec
aam
je
xchg
imul
fucomi
xorb
push
sub
ss
adc
ret
pop
pusha
sub
int
push
adc
sub
pop
pop
in
mov
int3
scas
mov
mov
push
fsin
xchg
sbb
dec
sub
rclb
out
xlat
mov
xchg
mov
test
fadds
movsb
mov
sbb
insb
stc
mov
mov
test
jp
xor
lods
mov
mov
pop
(bad)
mov
scas
popf
jo
dec
aaa
mov
jg
mov
mov
stos
or
loope
(bad)
cmp
push
mov
out
addr16
std
sub
sub
sbb
imul
mov
mov
inc
push
sbb
repz
xchg
pusha
repnz
xchg
or
cmp
loop
xor
mov
jns
pop
leave
fucomi
xor
lods
test
push
xchg
sbb
scas
pop
xchg
cmp
pushf
xchg
mov
and
cs
add
mov
sahf
pushf
in
xor
mov
push
fiaddl
mov
cmp
into
jp
cmova
or
ret
ret
outsb
out
jle
test
dec
stos
cmpb
cmp
push
add
push
mov
jno
lds
fisttps
mov
leave
pop
pushf
jns
aad
insl
pop
and
pusha
lods
cmovs
imul
mov
iret
ja
adc
loop
push
leave
inc
aas
sub
cmpsl
push
push
in
addr16
iret
mov
insb
js
dec
ljmp
sbb
lahf
jae
inc
add
cmpsl
scas
js
sub
pop
jl
mov
dec
ds
or
or
or
pushf
jecxz
cwtl
sbb
xlat
int3
dec
lods
sbb
and
pusha
leave
adc
std
sbb
inc
mov
cltd
loope
add
add
push
mov
mov
inc
cmp
test
(bad)
lods
int
cmp
pop
xor
and
loop
or
mov
test
inc
add
jmp
(bad)
jne
mull
push
clc
ja
xor
jg
outsl
cmp
out
or
pop
jecxz
stos
push
xor
xor
jnp
push
mov
push
in
inc
and
jo
dec
push
subl
cmpsb
sbb
mov
jl
repz
mov
dec
cmpsb
xchg
mov
imul
mov
xchg
jno
movsl
imul
int3
mov
pop
aas
push
cli
mov
xchg
xchg
pop
loopne
test
xchg
loop
mov
adcl
push
cmp
data16
or
stc
(bad)
ja
sub
push
repnz
ret
pusha
sub
jle
adc
push
lahf
add
divb
(bad)
call
loop
sbb
dec
(bad)
aam
or
jge
ret
mov
imul
ret
pop
(bad)
pop
imul
mov
xchg
pop
push
pop
pop
pop
add
lea
and
repz
orl
(bad)
iret
add
mov
push
mov
mov
nop
lcall
out
cltd
inc
(bad)
dec
sti
push
xorb
into
daa
mov
mov
add
cli
outsb
push
and
movb
shl
jecxz
mov
or
movb
fsubs
sbb
pusha
fisubl
inc
mov
adc
inc
insl
gs
aam
cmp
cmc
adc
or
fstps
sub
imul
fisubrl
mov
mov
mulb
roll
clc
adc
mov
insb
pop
mov
inc
test
adc
pusha
xlat
push
or
(bad)
lcall
inc
sbb
or
cmp
in
shlb
push
(bad)
pop
je
mov
imul
shl
jno
dec
sbb
xchg
jnp
xchg
mov
and
jae
lods
insb
and
popf
shr
jl
je
push
movsb
out
testl
fstpl
mov
push
pop
daa
arpl
rcll
jecxz
inc
jmp
dec
lea
push
dec
int1
or
loopne
jae
lret
jge
ja
imul
out
addl
in
or
add
pop
sub
pop
xor
popf
std
xor
cmp
stc
inc
push
inc
dec
in
jg
cmpl
fbld
sub
leave
push
or
xor
inc
test
sub
insb
xor
cwtl
jg
repnz
and
jo
or
inc
inc
jbe
(bad)
jbe
and
push
add
jb
cmp
mov
or
cltd
jg
enter
jmp
mov
push
mov
fcompl
ret
or
add
or
outsl
ljmp
push
cmpb
stc
dec
push
push
mov
pop
or
or
fdivrs
cld
movsl
lock
jo
xor
out
incl
dec
xchg
dec
fsubs
jb
movsl
cltd
(bad)
inc
jmp
push
pop
test
fdivrs
pop
popf
mov
fistl
je
adc
jmp
mov
(bad)
rcrb
sub
stos
mov
inc
cmp
(bad)
xchg
inc
sbbb
dec
ror
cli
cld
xlat
or
(bad)
sahf
dec
mov
mov
out
addr16
pop
imul
into
sub
push
mov
scas
test
dec
add
mov
movsb
push
and
fnstsw
push
fstps
repnz
jnp
pusha
mov
lods
dec
xorb
lds
mov
(bad)
ret
dec
lea
call
out
mov
inc
clc
adc
out
cmp
gs
mov
add
pop
push
sbb
inc
rclb
idivb
mov
pop
jno
rorl
idivb
stos
fcmovne
lds
or
push
stc
mov
push
arpl
adc
scas
push
sahf
dec
bound
movsb
jns
jmp
loope
add
lods
cmp
mov
xchg
dec
sbb
fsubrs
inc
mov
gs
stos
outsb
sbb
add
inc
jb
fnstcw
jne
insb
(bad)
or
lret
mov
testl
dec
imul
jecxz
