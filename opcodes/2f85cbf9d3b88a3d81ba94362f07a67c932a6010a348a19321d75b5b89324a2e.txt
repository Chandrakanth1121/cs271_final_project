mov
mov
(bad)
or
cmp
(bad)
dec
in
out
or
lret
int
and
(bad)
cmpb
pop
jle
adc
jp
push
dec
xor
cwtl
sub
push
sub
or
cmpl
cmp
and
dec
and
or
mov
mov
cs
jl
jecxz
mov
cli
mov
fstpt
pop
mov
push
or
add
in
movsb
and
mov
aas
out
mov
mov
(bad)
cld
pop
cmp
ds
xchg
or
xchg
sub
in
dec
pop
rolb
in
jo
loop
cmp
push
addb
ljmp
jnp
in
and
inc
dec
out
lss
fcoms
movsl
sub
push
js
int3
mov
cmpsl
inc
cli
frstor
mov
push
daa
xchg
lret
loop
notb
adc
xchg
dec
push
test
mov
mov
push
sbb
push
shll
pop
movb
sti
into
test
cli
ds
gs
inc
fprem1
je
pop
or
scas
stc
(bad)
xchg
cmp
push
inc
xchg
cld
mov
test
dec
mov
aas
cmpsl
sti
inc
outsb
leave
std
in
arpl
pop
imul
cmp
adc
out
mov
cmp
mov
and
mov
pop
push
cmp
jo
addr16
shll
scas
and
and
cmpsl
mov
in
jo
dec
adc
cli
movb
mov
push
idivb
int3
bound
inc
sub
into
mov
movsb
out
sbb
bound
cld
jb
outsb
int
(bad)
xor
cmp
sub
dec
xchg
xchg
dec
sub
mov
pop
or
gs
cmc
xor
and
dec
add
jmp
es
inc
add
pop
jl
jle
mov
std
add
or
cmp
push
sub
in
cli
pusha
add
ja
lahf
xchg
notb
add
daa
stc
dec
in
jle
sbb
inc
lea
push
lahf
xchg
dec
in
iret
shll
inc
out
cmpsb
mov
dec
lret
push
dec
out
divb
sbb
in
mov
sub
mov
push
(bad)
sub
cwtl
cmp
aas
dec
push
test
mov
cwtl
xlat
stos
js
lahf
or
jb
jo
cmp
jg
inc
xor
aas
lret
pop
(bad)
jge
jae
daa
(bad)
mov
xchg
stos
cwtl
popa
mov
sub
push
dec
mov
xchg
mov
mov
push
fistpll
arpl
je
xor
pop
lahf
jno
pop
pop
arpl
push
js
repnz
insb
test
rolb
stc
jne
mov
mov
shl
es
fcoms
(bad)
xchg
cli
(bad)
cmp
xchg
push
call
fcompl
pop
rcrb
das
mov
push
mov
dec
or
and
dec
into
xchg
insl
push
adc
xchg
cli
iret
dec
stc
addl
out
(bad)
and
int
lcall
add
add
fldcw
(bad)
fcmovnbe
das
push
nop
sub
or
in
or
push
and
sub
cmpsl
out
fcoml
pop
ljmp
sub
popf
mov
sbb
push
mov
adc
xorl
jnp
sub
push
cmp
push
fld
lods
and
dec
repz
mov
mov
mov
into
out
dec
or
xchg
mov
movsl
dec
jle
ret
pusha
mov
in
fnstsw
dec
rorb
inc
mov
mov
pop
sub
pop
lock
dec
xchg
cmp
mov
xor
inc
mov
xor
xchg
ds
xlat
out
sub
pop
cmp
mov
push
(bad)
cmp
fsubp
xchg
scas
pop
mov
jecxz
pop
subb
add
lcall
in
shrb
sbb
cmp
sar
rolb
jle
dec
and
ret
movsb
call
sbb
test
add
xchg
sub
mov
xchg
inc
shr
and
xchg
dec
mov
call
std
lret
or
pop
jmp
cs
cmp
mov
(bad)
mov
xor
cmp
inc
(bad)
addr16
mov
mov
sbbl
lfs
jmp
or
or
cmp
mov
jecxz
sub
jne
adc
xor
push
xchg
mov
jg
(bad)
jnp
mov
pop
and
xchg
lret
jne
rcrb
in
mov
ss
push
dec
dec
sub
or
ret
in
(bad)
lcall
mov
jp
in
xor
int3
lret
push
repnz
dec
leave
ret
(bad)
push
(bad)
cmp
imul
pop
add
ds
in
mov
sub
shll
or
out
out
and
int
ret
inc
sbb
fldt
mov
push
sahf
cmp
jle
push
cmp
jb
push
test
mov
(bad)
pop
dec
std
ds
frstpm(287
out
rcl
dec
or
cmp
xor
jno
(bad)
pop
stos
mov
mov
ret
cld
bound
sbb
test
(bad)
mov
add
leave
jnp
daa
add
iret
sbb
jae
out
cmp
ds
dec
testb
cld
(bad)
ficoms
test
out
and
sbb
add
mov
cmp
pop
and
leave
push
das
pop
mov
pop
enter
out
pop
leave
xchg
sub
cmpsl
in
ret
adc
sar
arpl
stos
rcrl
je
push
jnp
mov
push
sbb
sub
orl
add
add
in
cmpsb
add
ljmp
fcoml
daa
stc
in
lds
sbb
pop
add
test
hlt
mov
mov
fwait
jp
sti
inc
cmp
cs
push
ljmp
inc
sub
test
idiv
jecxz
daa
sahf
inc
je
mov
insb
idiv
out
cmp
sbb
das
sahf
cmpsb
rclb
(bad)
flds
xchg
cmp
cmp
movsl
ret
xchg
jle
test
or
and
mov
ds
out
test
inc
dec
dec
add
fnstsw
aad
mov
int
xchg
std
mov
pop
fisttpll
cmp
sarb
or
mov
push
(bad)
push
mov
dec
mov
sub
pop
pop
pop
adc
adc
ret
inc
lods
insl
lock
cmc
lret
adcb
loopne
xchg
jnp
jl
or
xor
in
inc
lods
jle
das
sub
loope
test
sub
int3
(bad)
jp
pop
inc
es
dec
clc
adc
aad
mov
(bad)
add
adc
cmp
xor
cmp
ret
outsb
imul
subb
int
push
mov
lcall
add
and
sarb
sub
dec
fs
in
or
cmp
repz
aaa
das
sbb
iret
push
pushf
jnp
int
pop
mov
leave
and
adc
mov
jb
test
mov
das
iret
cli
shlb
les
inc
mov
inc
push
xor
fcoml
arpl
clc
cs
(bad)
jle
jbe
jp
mov
outsb
jne
jae
sub
mov
outsl
xchg
xchg
es
or
xor
or
out
daa
fcmovnb
bound
push
ror
xor
fnstenv
das
fsubs
fimuls
inc
sahf
adc
ficompl
fisubrs
jg
and
mov
nop
push
(bad)
aaa
sub
mov
push
xchg
pop
cltd
mov
imul
adc
xor
int3
aas
pop
cs
pop
test
mov
mov
mov
addr16
cmpl
sub
out
sbb
mulb
mov
or
sub
lock
mov
or
inc
mov
fstpl
fistl
xor
scas
imul
push
test
mov
or
xchg
or
inc
or
jmp
add
jl
shl
sbb
mov
cmpsb
and
outsb
pop
cld
push
xlat
je
mov
cmp
jg
loope
mov
add
ljmp
test
and
pop
sahf
lds
cmpsb
xor
mov
out
adc
lahf
in
push
les
add
aad
cmp
push
cmp
movsb
clc
or
into
cmc
inc
ja
pop
push
pop
jno
sbb
repz
lods
xor
jmp
dec
addr16
lcall
xchg
mov
and
das
out
add
loop
jns
pop
dec
or
xor
negb
movsl
divl
cmp
in
fxtract
imul
