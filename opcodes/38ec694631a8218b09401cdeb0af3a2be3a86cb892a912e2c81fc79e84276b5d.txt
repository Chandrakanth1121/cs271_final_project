xor
jbe
lret
mull
std
aas
or
scas
mov
add
sbb
scas
mov
xchg
or
dec
jnp
xor
sbb
enter
rcrb
jecxz
adc
(bad)
lock
mov
add
popf
jle
test
(bad)
jmp
xor
pop
mov
lret
scas
xor
jg
aaa
cmp
loopne
mov
xor
push
mov
ss
add
outsb
fcoms
(bad)
xchg
mov
push
xchg
dec
insl
sub
bndstx
xchg
imul
clc
pusha
lock
mov
sub
addr16
sub
cmp
(bad)
repz
dec
and
lods
or
test
pop
or
xchg
xor
or
jl
mov
outsb
cwtl
pop
in
mov
mov
cmp
or
ja
outsb
or
(bad)
jno
mov
push
dec
ja
mov
mov
enter
add
push
in
or
push
imul
ss
mov
ljmp
xchg
pop
add
insb
out
inc
xchg
sub
dec
add
testb
dec
mov
das
mov
neg
stos
negb
or
cmpsl
sub
inc
or
sahf
xchg
ret
sub
sbb
cmp
and
mov
in
add
in
sub
push
imul
cmpsl
mov
lsl
inc
cmpsb
sbb
cltd
fsubr
and
in
aas
cmp
insl
(bad)
adc
(bad)
pop
ljmp
adc
(bad)
sbb
pop
lock
or
mov
hlt
sbb
dec
mov
sub
loop
cmp
cmp
mov
or
leave
insb
leave
or
lods
sarl
out
daa
mov
dec
fwait
sub
movsb
jae
(bad)
dec
cs
popa
js
and
inc
xlat
int
xor
cli
test
jno
cmovg
lods
into
pop
or
xchg
adc
xor
xor
mov
jmp
inc
adc
insb
push
sub
pop
int3
mov
out
dec
add
jno
jmp
mov
std
xcrypt-ofb
cmpsl
ljmp
dec
lds
jo
or
cmp
pop
lret
pmaxub
setl
fwait
sub
mov
xor
and
pop
fnstenv
mov
mov
fbstp
mov
cmp
cmp
js
jecxz
iret
jmp
jge
rorl
mov
stos
out
jle
andb
inc
fsubl
int3
jmp
testb
sub
and
jnp,pt
sub
mov
xchg
adc
imul
js
sahf
and
xchg
adc
daa
mov
jnp
mov
fwait
cwtl
in
int
divb
clc
jo
and
and
jmp
inc
inc
pop
inc
push
or
(bad)
fwait
cmp
jne
sub
fdivrs
movsb
push
mov
dec
jne
or
lcall
loop
dec
out
stos
fnstenv
dec
rorb
or
shrb
aaa
hlt
xchg
mov
std
mov
or
in
or
out
or
jl
add
(bad)
mov
and
add
loopne
or
sbb
add
test
aad
ja
sub
fstps
add
inc
lahf
clc
fildll
lcall
sub
dec
pop
mov
jo
jecxz
das
cmp
pushf
mov
jb
out
push
pop
xor
sbb
adc
mov
xor
pop
pop
dec
sti
and
je
inc
cmp
push
movb
lcall
push
adc
sbb
add
pop
sti
xchg
lock
pop
jmp
outsl
adc
pop
lods
nop
pop
mov
xor
out
fsts
movsl
jl
aaa
lds
test
sarb
dec
je
shrb
push
push
loopne
jb
iret
fmul
mov
xlat
xchg
inc
jno
and
fsubrl
movsb
fsubr
notb
mov
xchg
jmp
push
mov
ret
ds
dec
dec
mov
pop
lods
int1
out
je
sub
mov
das
stos
adcl
(bad)
jo
sub
push
fnstcw
pop
push
push
mov
jecxz
lock
(bad)
aam
(bad)
sbb
pushf
out
mov
adc
cmp
fidivrl
jns
and
mov
sub
adc
data16
(bad)
cli
adc
repnz
adc
cwtl
fldt
shl
xchg
cltd
xor
roll
or
scas
hlt
mov
xchg
scas
push
add
iret
std
fs
dec
inc
repz
sar
jmp
mov
movsb
jge
xchg
push
testl
add
mov
xchg
and
fsubrp
and
push
and
repnz
pop
fdivrl
sbb
jae
cmpsb
sub
push
and
sbb
fstl
aas
cli
andl
in
add
mov
mov
sub
pop
rcrb
loop
xlat
mov
xor
aaa
mov
hlt
sbb
test
sub
and
xchg
addr16
int1
sahf
repz
scas
or
cmp
mov
enter
scas
jl
or
leave
jle
(bad)
mov
jbe
jne
loope
jmp
loop
jecxz
movsl
dec
shrb
fistpll
push
adc
aaa
rolb
cmp
les
shll
std
sub
cwtl
gs
mov
enter
int3
pop
mov
xor
sbb
sub
add
cli
jne
sbb
xor
popf
pop
jge
test
or
or
dec
mov
aad
xor
fisubs
cwtl
ljmp
scas
push
aad
xor
push
xor
cld
bound
xor
push
jb
cmp
cs
shll
or
scas
cld
adc
mov
adc
in
or
dec
sub
ja
in
xlat
pop
lahf
das
or
and
dec
(bad)
pushf
sbb
int1
iret
inc
sub
fwait
lahf
push
(bad)
stc
pop
shrl
or
push
add
popf
imul
mov
add
push
pop
enter
std
pop
xor
fs
call
sbb
xchg
rcrl
and
xor
pop
cmpsl
pop
ret
jge
loopne
clc
in
xor
(bad)
rcr
push
add
daa
dec
mov
(bad)
push
aad
sbb
in
lcall
cs
mov
add
or
fisubrl
enter
lea
rolb
rcrb
xor
mov
call
out
pop
je
loopne
popf
ja
inc
lret
jns
push
(bad)
int1
push
push
test
cwtl
jp
xor
subb
out
loope
add
pop
or
lock
int3
xchg
cmpsl
sbb
arpl
jns
push
mov
pop
adc
(bad)
clc
call
aad
in
mov
ret
xor
pop
les
mov
jecxz
inc
cmp
out
jno
xchg
sbb
push
jnp
xor
mov
les
push
and
lds
jl
cwtl
add
jg
lods
pop
lcall
es
rclb
out
das
clc
lock
pop
and
loop
imul
sbb
inc
jp
mov
mov
ss
addl
(bad)
mov
adc
incb
nop
aaa
adc
jno
je
dec
adc
ret
les
xchg
or
pop
enter
jns
mov
xchg
mov
push
repz
or
sahf
add
inc
add
add
add
jmp
repnz
or
sbb
pop
sub
sti
jmp
mov
and
or
out
pop
jl
fdivrl
xchg
xor
mov
out
(bad)
xchg
dec
or
inc
scas
test
lock
adc
pop
xor
shrb
imul
daa
cmp
aad
push
outsb
adc
pop
mov
in
xor
lret
fcompl
mov
mov
add
jno
jl
clc
sub
orl
xor
jl
mov
in
stos
sub
push
pop
nop
fidivs
mov
add
stos
add
pop
xchg
imull
push
jnp
(bad)
xchg
or
lahf
loop
cltd
call
lods
stos
mov
push
xchg
rcrl
xor
xor
mov
xchg
(bad)
int3
shlb
add
ss
push
add
movsl
mov
dec
jae
mov
(bad)
les
in
ds
cs
push
(bad)
cs
cmp
subb
scas
aas
out
or
xor
push
pop
push
mov
mov
inc
and
lret
push
fidivrl
popa
bound
xlat
stc
push
mov
fnstcw
jno
je
mov
mov
ficoml
or
fcomps
push
dec
ljmp
iret
sub
push
out
pop
iret
xor
clc
pop
mov
aas
add
cmp
cmp
lods
(bad)
jmp
