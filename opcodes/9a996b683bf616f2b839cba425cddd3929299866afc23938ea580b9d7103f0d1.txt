ljmp
push
call
push
push
add
add
add
add
insl
mov
or
ret
nop
add
in
sub
ljmp
push
push
push
lea
push
cmp
out
in
mov
cmp
lea
int3
and
push
push
and
sbb
cld
pop
(bad)
xchg
xor
push
sub
add
fsubrl
pusha
popa
inc
test
or
push
sbb
mov
xor
sbb
(bad)
xchg
(bad)
fucomp
int
sbb
xor
lea
mov
out
aas
rep
xor
sub
mov
add
jae
fsubrl
add
fmul
mov
(bad)
shrl
inc
push
jg
cmp
adc
xlat
lea
lea
push
xor
in
jnp
add
pop
adc
(bad)
jbe
je
mov
push
not
mov
push
mov
push
gs
pop
pop
mov
pop
ret
push
push
int
mov
scas
sbb
mov
jnp
push
mov
add
mov
mov
lahf
pop
pop
push
add
xor
or
jg
testl
stc
add
mov
or
xchg
sti
mov
pop
push
mov
mov
push
and
inc
jp
dec
fdiv
test
je
push
push
(bad)
psubusw
inc
or
push
(bad)
aas
fistl
push
cmp
and
push
fdivrs
xchg
out
int1
mov
push
push
inc
push
xchg
push
pusha
sbb
xlat
fsubrl
pop
cmp
jnp
jg
outsb
mov
push
push
or
jl
or
mov
or
fwait
ds
jl
fldt
lea
push
push
sbb
cs
mov
sub
push
pop
sbbl
outsl
mov
push
sbb
jle
call
sub
add
ret
xchg
rcll
ja
adc
cs
jne
pop
cli
pop
negb
out
in
pop
cltd
pop
add
inc
adcb
or
cmp
int3
ja
dec
fs
mov
mov
dec
mov
shr
repz
lock
sub
mov
sti
jmp
cli
push
or
cld
pop
data16
inc
jb
clc
fs
adc
test
mov
xchg
pop
js
push
scas
not
sub
mov
mov
mov
adc
jmp
pop
jae
fbld
and
rep
mov
testl
dec
sub
jns
int
imul
push
jno,pn
jno
mov
push
jbe
idivl
push
hlt
add
test
iret
fdivr
xlat
jns
xchg
fdivr
test
cltd
push
fdivr
sbb
int3
rcll
test
out
loope
(bad)
mov
jbe
add
push
jle
add
das
divl
int3
(bad)
shlb
in
aaa
in
sub
pop
(bad)
xchg
dec
xchg
loopne
or
rcll
movsb
fwait
sub
test
insb
mov
jne
push
in
in
xor
fsubl
iret
sbb
push
sbbl
ret
mov
sbb
push
add
lea
je
outsl
mov
out
cwtl
ljmp
loopne
add
lods
cli
mov
into
fsubl
daa
lret
sub
ja
adc
gs
jmp
das
xor
(bad)
test
pop
push
mov
in
shll
add
lcall
push
sbbl
enter
ret
and
enter
mov
enter
movsb
mov
enter
mov
int3
pop
mov
adc
data16
in
(bad)
jmp
and
insb
add
and
arpl
and
and
or
dec
push
push
inc
inc
add
bound
jae
cs
xchg
dec
pop
add
pop
lahf
mov
pop
inc
dec
dec
add
je
jo
fs
insb
pop
inc
stc
push
jae
punpcklwd
arpl
push
gs
imul
and
xor
xor
xor
sub
adc
add
pop
add
sbb
dec
pop
nop
add
push
fisttps
orb
add
pop
mov
incl
mov
int
mov
imul
jb
insl
and
outsb
outsb
outsl
je
push
and
outsb
and
inc
dec
push
and
fs
fstpl
negb
mov
jbe
int1
mov
mov
sahf
aaa
(bad)
cmp
mov
mov
adc
jg
sti
and
negl
movl
arpl
sbb
aaa
sbb
fmul
dec
cmc
cmpsb
push
sbb
push
imul
inc
rcll
sbb
add
idivb
loopne
and
add
and
fwait
movsb
loope
adc
xor
fmul
data16
add
pop
add
sub
add
xchg
jp
addr16
lock
or
add
jo
or
mov
add
pusha
fwait
mov
je
es
jmp
adc
ret
pusha
jb,pn
ret
push
popa
push
(bad)
in
fldenv
inc
cs
push
push
daa
fdivs
dec
jae
arpl
jmp
xchg
or
jo
pusha
daa
gs
xchg
inc
lcall
jo
and
add
add
in
sub
subb
push
push
xor
push
push
push
int
mov
mov
call
add
mov
adc
call
testb
inc
call
xor
push
adc
jne
add
inc
and
add
mov
ret
sub
or
add
push
push
push
pop
sar
adc
fbstp
cld
push
adc
jmp
xor
jmp
mov
mov
leave
ret
arpl
push
xlat
pop
ja
push
call
outsb
test
mov
out
call
sbb
push
aad
cmp
arpl
pop
pop
add
outsl
pop
(bad)
lock
cmp
je
adc
pop
cmp
jnp
incl
push
pop
jne
push
nop
pop
xorb
nop
pop
adc
push
pop
xchg
add
jnp
add
mulb
lock
insb
out
xchg
sbb
test
mov
(bad)
jge
inc
aaa
cld
insb
pop
add
sub
xor
jne
lcall
(bad)
push
xchg
jne
or
pop
ret
pusha
pushf
cltd
pop
xor
mov
ret
mov
push
push
and
mov
scas
or
inc
mov
inc
jae
push
(bad)
lea
adc
mov
pop
xchg
fwait
add
mov
push
jne
(bad)
addr16
pop
nop
or
pop
push
je
out
and
cmp
mov
sub
aad
xchg
std
and
xchg
fwait
in
or
sbb
test
test
in
sbb
add
and
push
jge
add
pop
shl
in
ret
leave
(bad)
cmp
sub
call
mov
(bad)
push
cltd
pop
idiv
mov
test
je
xor
testl
jp
add
cmp
jl
je
in
inc
sti
or
add
cmp
sub
push
cmp
out
fcomi
jne
push
int
bound
fwait
stc
sbb
ljmp
push
mov
arpl
push
call
out
test
fstp
fdivs
call
push
clc
test
mov
push
clc
std
std
and
cmp
fldt
xor
or
(bad)
int1
xor
int1
push
mov
xchg
pop
mov
lret
and
sub
jge
xchg
jbe
push
je
movsb
fwait
push
inc
mov
pop
adc
fisttpl
stos
stos
lea
adc
lock
push
pop
mov
rcl
in
fdivrs
or
repnz
push
cs
int
aas
and
dec
scas
adc
ds
push
call
mov
push
mov
(bad)
enter
into
das
push
inc
aam
pop
sbb
xchg
int1
push
push
adc
inc
push
(bad)
or
pop
dec
xchg
push
fmull
add
and
mov
sahf
adc
or
or
sbb
lock
clc
fwait
and
or
daa
push
arpl
push
push
mov
or
lea
push
push
movsb
sub
mov
pop
cmp
cmpb
jne
push
add
movsl
or
or
push
mov
dec
fisttpl
pusha
xor
movsl
sar
and
push
and
jb
mov
push
pop
adc
aaa
inc
subb
mov
cld
add
or
mov
adc
push
cmpsl
out
push
inc
sub
inc
mov
jae
insb
leave
mov
xor
cmp
nop
push
js
