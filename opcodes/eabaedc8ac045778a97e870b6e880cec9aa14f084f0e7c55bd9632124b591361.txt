cmp
mov
loop
mov
xor
add
or
movsl
mov
push
cmp
cmp
mov
nop
in
sub
add
lret
int3
xor
xor
mov
mov
int3
repz
sbb
bound
(bad)
or
jo
jne
push
jo
popa
ds
mov
sahf
adc
sbb
mov
mov
cld
in
xor
movsb
nop
sub
push
mov
sbb
mov
jns
push
or
int3
mov
sarl
ds
push
mov
loop
mov
jle
cmpsb
mov
loopne
repz
adc
mov
dec
xor
adc
ficoml
rorb
out
lods
jl
xor
test
jne
push
stos
lret
mov
divb
lea
iret
leave
stos
xchg
les
out
leave
cmp
mov
mov
adc
cmp
shlb
sub
test
dec
mov
push
movsl
sub
jo
mov
roll
add
add
or
test
push
shrl
pop
scas
movsl
pop
mov
pop
outsb
inc
frstor
xlat
insb
pop
outsb
or
test
adc
push
pushf
sub
andb
data16
mov
leave
mov
dec
mov
ss
lcall
mov
addr16
lds
and
ljmp
pop
dec
pop
or
mov
xor
mov
pushf
push
push
shl
mov
mov
add
mov
hlt
test
cltd
dec
xor
out
cmp
dec
enter
loop
lock
jbe
adc
lea
jge
pop
notl
xchg
out
in
add
fdivrl
bound
dec
imul
add
popf
adc
jl
xchg
stos
mov
ret
cmp
inc
out
and
lcall
and
stos
shrd
push
movsl
inc
add
in
(bad)
sbb
and
xor
sub
sbbl
push
ljmp
cmp
aas
fimuls
jno
and
insb
lods
push
inc
sti
inc
fistpll
and
or
lret
js
mov
dec
cmp
cmp
add
das
jl
(bad)
ljmp
xchg
mov
mov
jnp
aam
popf
and
rorl
push
push
lea
jmp
xchg
xchg
adc
dec
jnp
push
push
mov
(bad)
cmp
inc
mov
jle
adc
mov
mov
mov
mov
fwait
inc
mov
push
shll
dec
test
ds
testl
push
sub
mov
or
and
cs
inc
aas
xchg
dec
into
xlat
mov
cmp
mov
(bad)
cltd
fisubl
scas
mov
fcompl
scas
nop
fwait
popf
(bad)
loopne
mull
inc
cmp
jmp
sub
iret
sti
xor
fidivl
idivb
je
aaa
push
test
sbb
outsb
mov
jmp
pop
cmp
imul
jae
sub
mov
mov
xor
add
and
imull
cmc
push
jae
pop
fnstcw
sub
lods
inc
cmpb
mov
scas
test
fbstp
and
jbe
leave
lcall
adc
and
sub
pop
push
mov
fwait
decl
inc
lea
inc
and
mov
mov
push
add
popa
xor
jge
shll
ret
xchg
xor
mov
(bad)
lods
jp
(bad)
mov
cmc
les
or
xchg
(bad)
sub
dec
add
shlb
inc
push
mov
mov
adc
and
push
test
adc
sub
sub
movsb
(bad)
movsl
arpl
dec
and
dec
cltd
push
ljmp
or
xor
cli
sahf
aaa
and
scas
mov
sbb
(bad)
sub
lret
cmp
lret
scas
xlat
dec
je
lea
inc
pop
cmp
push
leave
arpl
mov
test
mov
pop
push
cmp
aam
enter
pop
les
xchg
mov
sub
pop
push
imul
sub
cmp
gs
outsl
(bad)
or
add
inc
mov
and
and
adcl
mov
scas
pop
scas
movsl
mov
mov
into
testl
cli
mov
push
shlb
or
cmp
jnp
fisubs
pop
mov
enter
es
cmpsb
lock
out
dec
inc
jno
loope
pop
and
xchg
(bad)
fadd
and
int1
inc
loope
pop
mov
xor
inc
and
out
imul
jo
mov
aas
outsb
mov
fistpl
iret
sbb
pop
pop
sbb
sti
sahf
mov
in
mov
xor
jbe
mov
mov
mov
stos
call
addr16
push
in
ljmp
inc
mov
out
ljmp
mov
sbb
adc
int3
js
add
lret
add
xchg
inc
mov
inc
mov
fistps
jnp
push
lock
xchg
mov
and
sti
lods
or
gs
lock
insb
xor
push
inc
les
sub
cltd
dec
mov
das
gs
or
dec
xor
cmp
adc
adc
xor
push
sarb
push
xchg
ja
pop
push
or
popa
mov
or
pop
dec
mov
push
pop
cmp
les
cmpsl
inc
outsl
mov
shlb
outsl
xchg
ja
adcl
leave
cmp
dec
jl
and
push
popf
jno
push
imul
sub
mov
xchg
mov
mov
jne
push
jmp
stc
aas
test
dec
push
int
ret
scas
shrl
mov
add
pop
fwait
xchg
loop
out
mov
jmp
rorl
lahf
psubw
rclb
and
es
or
mov
in
(bad)
int1
and
lret
fnstsw
cmp
and
lea
xor
loope
and
pop
inc
push
in
scas
imull
roll
ret
mov
jb,pt
mov
(bad)
mov
mov
ja
cmp
cmpsl
je
hlt
jno
sahf
push
mov
repz
jb
hlt
test
xchg
jecxz
adc
loop
cmp
or
xchg
xor
pop
xchg
rclb
mov
push
jbe
rorl
in
jl
ljmp
inc
xchg
inc
loop
mov
adc
and
and
push
lods
mov
sbb
push
ret
adc
mov
inc
mov
faddp
adc
add
xor
cmp
inc
sarl
pop
inc
fnstenv
lds
mov
mov
jbe
jnp
sub
mov
mov
lock
jae
inc
js
and
mov
jo
test
mov
lods
dec
les
mov
pop
mov
das
fnsave
and
xor
mov
mov
sbb
jne
cmpsl
cmp
inc
sub
xchg
jle
and
lods
jnp
mov
test
js
les
shll
mov
andl
fstps
sahf
mov
push
cmpsl
mov
push
mov
sub
cld
mov
aaa
adc
mov
popa
mov
cmpsl
lods
xlat
out
sub
mov
lret
rorl
xchg
dec
movsb
(bad)
addr16
dec
out
scas
ss
and
jecxz
rcll
mov
sbb
xchg
movsb
inc
mov
mov
ret
xchg
sub
xchg
dec
cmp
fmuls
adc
and
push
shlb
imul
mov
adc
loopne
dec
imul
dec
jp,pn
out
jno
lods
inc
sub
cmpsl
popa
sbb
sbb
inc
mov
mov
pop
ds
xor
lods
cld
or
inc
cltd
(bad)
mov
add
jg
call
or
adc
lcall
cli
jo
data16
inc
lods
mov
xchg
mov
test
jmp
das
mov
xor
or
mov
mov
mov
push
lea
jp
(bad)
mov
out
jp
inc
lahf
insb
adc
xlat
ret
jae
ds
xor
nop
mov
or
or
in
outsb
fs
sahf
int1
(bad)
mov
pop
pop
nop
xor
push
and
inc
scas
add
scas
push
dec
paddusb
lock
fdivl
jno
dec
lret
lea
pusha
mov
mov
int
add
xchg
mov
ror
inc
shl
loop
stos
mov
mov
push
jno
jmp
adc
add
fsubrp
mov
jns
pushf
push
out
mov
xchg
jge
add
repz
fucomip
in
bound
out
inc
in
inc
mov
psubsw
(bad)
sub
divb
pop
sub
pop
stos
dec
xchg
mov
xor
outsb
xor
nop
(bad)
inc
sub
lret
out
sub
xchg
