mov
and
popa
fstl
lcall
idivl
in
negb
jbe
adc
cmp
decb
mov
pop
lretw
and
rorl
lds
test
(bad)
pop
fmulp
movb
jns
notb
mov
mov
cld
pusha
inc
cmc
leave
push
addr16
(bad)
mov
sti
out
inc
(bad)
(bad)
repz
dec
dec
rcrl
dec
clc
push
push
mov
jge
pop
xor
push
das
fs
dec
inc
ficoms
inc
rolb
stos
adc
pusha
adc
pop
or
xchg
inc
lock
jb
in
dec
jg
adc
loop
outsb
sub
jno
outsl
sar
jne
es
outsl
dec
(bad)
fistpl
aas
(bad)
jb
push
cmp
in
sbb
or
sti
roll
xchg
push
ljmp
addb
(bad)
es
pop
jl
repz
xchg
sbb
out
enter
push
fstpl
(bad)
mov
adc
add
push
push
mov
jnp
inc
dec
ret
int3
idiv
inc
adc
mov
popf
arpl
les
jge
xchg
add
lds
outsb
lret
push
rcll
mov
pop
push
call
ret
or
imul
cld
int1
shl
or
sbbb
mov
scas
loop
imul
push
dec
iret
scas
mull
imul
lret
adc
sbb
cmp
add
add
cmp
jno
ss
popa
clc
fbstp
push
push
push
lods
mov
sub
dec
xor
pop
push
ret
lea
adc
rclb
add
faddl
pop
ja
ljmp
pop
push
outsl
mov
repnz
add
fmuls
repnz
ljmp
mov
add
(bad)
push
jo
push
bound
leave
push
clc
push
add
xchg
sti
xor
(bad)
lds
fiaddl
sbb
clc
sbbl
jl
jmp
sbb
cmpl
mov
cmc
push
xor
clc
jmp
lods
or
push
inc
sub
cmc
stos
xchg
mov
pop
pop
or
sti
(bad)
(bad)
ljmp
out
mov
mov
sub
shl
jae
lods
mov
fisubrs
mov
fadds
dec
lahf
xchg
cmc
fbstp
mov
mov
and
xor
flds
fisubrs
subb
in
sar
jae
jae
ja
(bad)
cmp
out
dec
push
lahf
iret
addr16
cld
pop
imul
sub
xchg
xor
jmp
call
inc
sub
or
adc
mov
jnp
insl
mov
(bad)
jns
adc
sbb
test
into
sar
js
dec
pop
dec
xlat
sbb
aaa
hlt
addl
stos
jmp
push
sbb
scas
mov
cld
inc
es
(bad)
jp
jg
mov
cmp
inc
stos
in
push
or
or
bnd
fisttpl
pop
enter
lods
pop
dec
jmp
bound
inc
stc
xchg
pop
xlat
fbstp
sub
mov
pop
xor
sahf
testb
js
bound
inc
and
sbb
popa
xchg
int
xchg
shl
cmp
ret
xchg
add
sbb
xor
pop
mov
mov
repnz
fisttps
dec
cmp
xor
adc
insl
inc
jmp
push
adc
xor
mov
loop
fstps
sarl
or
or
fnsave
cmpsb
movsb
xor
cli
pusha
xor
movb
gs
sub
mov
or
add
js
dec
popf
adc
mov
lcall
jbe
je
int3
push
int
fs
movsl
xchg
ret
mov
pop
xchg
push
movsl
xchg
xchg
aad
stos
sarl
jecxz
adc
popa
bnd
and
dec
mov
inc
mov
mov
lret
xabort
dec
out
iret
pusha
push
insl
dec
jno
sar
js
lods
jecxz
xchg
shrl
inc
loope
bound
mov
jo
in
fisubrl
test
sbb
test
negl
fidivrs
mov
cmp
mov
les
dec
sti
jb
adc
iret
push
push
jecxz
popa
into
pop
push
pop
iret
and
popa
outsl
sbb
in
iret
sub
cltd
popf
adc
xchg
in
idivl
mov
addr16
shr
mov
xchg
repz
sbb
xchg
inc
and
lods
pop
ss
xchg
pop
popa
xchg
push
fwait
sbb
xchg
repz
fcmovnbe
pop
add
nop
push
push
int3
xor
les
lret
push
or
fs
xor
lock
mov
lret
test
xor
xchg
in
xchg
mov
aad
inc
xchg
push
fcmove
ds
lcall
scas
sti
fbld
dec
(bad)
push
inc
xor
jns
dec
mov
(bad)
inc
call
adc
arpl
stc
or
clc
jmp
or
inc
fwait
out
pmulhuw
stc
bound
mov
xchg
xchg
push
out
adc
jg
push
mov
or
mov
adc
and
cmp
test
jnp
out
xchg
cltd
arpl
mov
aam
xchg
rcll
es
mov
popf
xchg
rclb
pop
in
sub
notl
test
sti
lcall
xlat
idivb
jo
push
and
faddl
adc
jbe
lcall
fiadds
call
mov
mov
xchg
leave
add
scas
pop
jmp
mov
ds
push
dec
int3
cmpsl
lret
jmp
push
push
mov
and
fs
imul
and
mov
pop
std
inc
or
mov
xchg
push
cmp
in
cwtl
movsb
mov
(bad)
dec
dec
std
(bad)
pusha
jbe
xchg
add
pop
dec
(bad)
mov
je
add
pop
enter
fcomi
pop
jbe
je
outsl
inc
fisubrs
sbb
(bad)
rcrl
or
repz
fstps
xor
sbb
dec
jmp
shrl
mov
stc
sub
hlt
xchg
popa
fwait
cmpsb
loope
movsb
ret
xchg
xor
nop
xor
sbb
(bad)
xchg
xor
mov
(bad)
jge
scas
mov
gs
fists
inc
fucomip
(bad)
imul
and
xchg
add
fisubrl
das
dec
fisttpl
mov
pop
cmp
push
cmp
(bad)
in
outsl
es
and
outsb
pop
mov
(bad)
sbb
gs
int
and
mov
(bad)
cmp
int1
imul
mov
imul
loope
or
arpl
ja
fnstcw
cmp
idivb
mov
jbe
push
inc
sub
insb
sub
outsl
or
sarl
adc
xor
scas
inc
in
mov
sahf
pop
aaa
ret
pop
sbb
inc
dec
xchg
sub
insl
pusha
mov
test
test
scas
jb
cmp
insb
adcl
xor
push
and
jle
sbb
and
inc
insb
(bad)
pushf
inc
(bad)
repz
xlat
out
push
lds
data16
in
sbb
jno
mov
mull
pop
ret
xchg
sbbb
jmp
mov
jmp
cwtl
sub
shll
scas
into
dec
div
or
je
imul
clc
int3
dec
dec
sbb
push
push
pop
cmc
sub
pop
cli
fimuls
fisubrs
add
and
jg
lahf
or
sti
subl
(bad)
jge
and
shrl
(bad)
call
(bad)
addr16
aam
aaa
jge
push
pusha
fnsave
repz
or
repnz
push
mov
push
push
mov
test
cld
stc
jecxz
stc
std
xchg
sub
cmc
mov
pusha
sbb
(bad)
cmc
cs
insl
xor
pop
sub
movsb
xor
add
xchg
inc
pop
sub
sahf
inc
clc
xchg
jno
fdiv
sub
cmpsb
jbe
xor
je
clc
jg
imul
mov
sbb
stos
in
jp
cmp
fcmovnu
out
or
rcrb
push
pop
shlb
into
stc
pop
push
inc
fildll
inc
js
clc
dec
inc
fidivl
sarl
dec
jecxz
and
pop
sub
and
dec
ja
or
pop
clc
inc
(bad)
std
iret
int
sbb
inc
cltd
aaa
xor
in
test
push
repz
clc
mov
or
pusha
aas
enter
cmp
dec
or
testl
jl
shll
mov
add
jbe
stc
xchg
pop
shrl
cmp
(bad)
jbe
int1
