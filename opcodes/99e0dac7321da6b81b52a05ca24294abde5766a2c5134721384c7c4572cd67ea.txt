pop
dec
clc
sbb
wrmsr
and
cmp
sbb
pushf
adc
in
sbb
repnz
sbbb
outsl
fldl
inc
push
adc
lods
cltd
or
hlt
pop
fucomp
mov
mov
dec
fwait
test
inc
dec
pop
push
lea
dec
cmp
adc
dec
fiadds
mov
or
and
mov
pusha
mov
lock
push
push
cmp
sub
xchg
inc
in
xor
loope
or
jp
push
inc
dec
adc
loopne
cmpsb
cmc
push
fcmovnbe
nop
xchg
out
jne
jns
repz
sti
mov
push
test
dec
and
movsb
rcrl
ficompl
xchg
shll
ja
mov
mov
into
cmp
mov
cmp
movsl
mov
push
xchg
sbb
sbb
jbe
push
into
cmp
sbb
inc
(bad)
loop
mov
push
push
sub
pop
loope
push
arpl
jmp
loopne
push
adc
test
xchg
push
movsb
clc
sbb
mov
cmp
clc
nop
push
shrl
ficomps
or
pushf
mov
xor
sub
fcoms
mov
mov
adc
daa
push
lds
and
fdivl
popf
fwait
adc
jnp
dec
lea
aas
nop
push
popa
push
movmskps
push
nop
jle
stc
movsl
jae
nop
xlat
mov
push
cwtl
pop
aaa
sbb
cmp
rcll
mov
adc
mov
mov
push
ds
sbb
insl
adc
clc
add
or
popa
mov
sahf
xchg
xchg
xor
in
adc
sub
mov
rdpmc
into
scas
sbbb
sbb
arpl
lcall
adc
movsb
in
loop,pn
pushf
xor
jnp
aad
insb
sbb
sarb
adc
in
out
lock
adc
enter
or
push
and
pushf
(bad)
mov
mov
cmp
pop
push
cmp
jne
jge
out
adc
loopne
(bad)
(bad)
or
inc
or
jg
pop
pop
imulb
mov
push
pop
pop
adc
push
(bad)
nop
jo
shrb
xchg
sbb
call
sbb
push
jb
fistl
pop
adc
or
in
sbb
cmp
rcr
ret
inc
lock
xchg
or
fisubrs
lock
mov
repz
mov
clc
repz
int3
sahf
and
pop
repnz
rcl
pop
adc
adc
cs
or
mov
push
das
popa
iret
sahf
adc
adc
fcomps
fiadds
mov
scas
mov
xor
xchg
sbb
pop
popa
mov
repnz
xor
mov
lahf
xchg
scas
dec
jle
popf
lods
jne
in
loopne
sbb
mov
scas
sbb
dec
mov
(bad)
arpl
mov
sbb
orb
or
sbb
hlt
divb
fldenv
mov
mov
lea
in
imul
xchg
in
pop
xor
outsb
mov
gs
sub
pop
test
faddp
and
add
sti
and
pop
adc
pop
push
and
add
rorb
outsb
imul
cmp
pop
rcl
sti
pop
fistpl
xchg
lods
lods
add
rcll
adc
xchg
adc
roll
fmull
cmpl
sub
out
popa
daa
pop
mov
loop
push
add
mov
push
or
xor
push
scas
std
aaa
push
subl
scas
push
fimull
jnp
or
jno
ficoml
mov
bound
out
xchg
sarb
xchg
test
mov
xorl
push
push
mov
mov
mov
mov
dec
mov
inc
inc
into
or
mov
addr16
cmp
hlt
mov
int3
rorb
cltd
lret
push
stc
xor
jbe
inc
add
xchg
(bad)
xchg
xchg
(bad)
and
or
jecxz
mov
fnstsw
iret
jge
jecxz
cli
fmuls
push
inc
imul
or
popa
test
jmp
daa
sbb
pusha
les
test
aam
imull
sbb
xchg
psubd
mov
pop
xchg
xor
insb
ret
rcr
stos
add
cmpsl
or
pop
dec
insl
pop
int1
daa
add
push
sbb
out
out
adc
jmp
mov
out
ja
out
fsts
inc
cwtl
loop
cli
sub
push
stc
mov
prefetchwt1
ret
int
lods
and
jbe
push
and
lds
and
pop
cli
lods
push
gs
lea
fldt
xchg
push
cmc
ljmp
in
fdivp
jno
dec
rclb
popa
pop
cli
gs
subb
into
fcoml
iret
aad
punpcklwd
mov
or
das
push
lret
or
mov
pop
(bad)
fwait
sbb
add
xchg
xchg
(bad)
cmc
xor
addr16
add
loop
and
fcoms
dec
fists
adc
jno
push
pop
out
adc
mov
(bad)
sbb
popa
add
sub
xlat
push
sbb
subl
xor
das
mov
ret
(bad)
shlb
or
and
push
leave
xor
aad
adc
ficoml
loop
scas
adc
and
(bad)
imul
in
dec
ss
add
pop
xchg
adc
hlt
rcll
jmp
jbe,pn
sbbb
inc
pop
mov
fbld
pusha
inc
dec
aad
and
jbe
mov
clc
(bad)
insl
aas
pop
pushf
cmpsl
cltd
insb
adc
push
insl
(bad)
sbb
push
xor
add
into
jb
or
jns
push
mov
jmp
or
inc
fimuls
mov
xlat
repz
stos
es
stc
sub
bnd
mov
mov
adc
test
cmp
fyl2xp1
xchg
jmp
sub
(bad)
aam
sub
xchg
xchg
into
sbb
test
mov
ds
or
jb
xor
aad
cltd
aam
or
xchg
pop
stc
dec
or
sub
push
popf
das
adc
dec
mov
xor
filds
adc
adc
sti
mov
and
xchg
push
pop
(bad)
cmpsb
ja
xor
inc
pusha
mov
lds
push
neg
lea
(bad)
and
jnp
xchg
adc
pop
gs
xchg
cmp
bound
fwait
xchg
ret
inc
(bad)
sbb
xorb
pop
das
push
sbb
pop
jns
mov
add
dec
nopl
sbb
pushf
mov
fdivl
add
iret
and
cmc
dec
push
cmp
jg
or
adc
pop
ficompl
(bad)
xor
cmp
int3
inc
(bad)
lds
adc
mov
das
push
cld
jle
inc
push
subl
xor
sub
mov
loopne
shrb
into
mov
mov
iret
in
cwtl
outsl
sbb
sbb
paddq
aam
xchg
mov
adc
(bad)
mull
fwait
pop
ret
out
xchg
ljmp
sbb
loop
or
sbb
(bad)
lret
adc
fsubr
loop
cwtl
cmp
pop
rclb
test
dec
cmp
xchg
sbb
inc
aam
sub
fstpl
addl
push
scas
test
mov
in
inc
movsb
or
and
in
pusha
xchg
jecxz
movsb
sbb
out
inc
in
aad
adc
mov
es
xchg
in
rorl
jle
jns
inc
iret
jne
jns
cli
fldcw
test
pop
cmp
inc
inc
adc
out
int
nop
inc
insl
xor
adc
xchg
add
ljmp
fwait
mov
popa
cmc
push
jnp
push
aam
testl
bound
stos
cltd
enter
out
inc
mov
push
shrb
jmp
push
dec
mov
repz
push
mov
ljmp
out
adc
pop
push
cmp
cwtl
cltd
pop
int1
call
std
bound
fwait
loopne
and
in
in
cmp
mov
cltd
dec
ret
xor
data16
cmp
out
adc
mov
and
jnp
lods
sbb
push
push
repnz
or
push
jns
jl
popa
dec
mov
addb
mov
cmp
pop
sti
rclb
jge
lret
sarb
adc
xor
push
and
pop
arpl
cmpsb
xor
mov
in
shl
sub
aad
stos
cmp
loopne
mov
push
jmp
jae
hlt
ljmp
inc
iret
or
push
dec
outsl
and
xchg
cwtl
mov
or
sub
test
pop
ret
