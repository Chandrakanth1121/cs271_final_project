mov
mov
add
jbe
repz
cmp
aam
fidivrs
(bad)
push
fdivl
mov
rcrb
stos
test
jg
add
insb
xchg
enter
pusha
sbb
fisubs
push
sbb
xchg
mov
das
fisubs
scas
mov
iret
enter
ret
xlat
inc
jecxz
ffree
es
mov
xor
adc
les
lea
mov
add
inc
and
arpl
cmp
mov
arpl
sub
stc
leave
pushf
aas
sub
dec
cmp
fstpl
enter
je
inc
(bad)
iret
(bad)
in
imul
js
add
cwtl
jmp
sub
shl
and
out
pop
dec
xorl
fdivrs
lea
(bad)
cmc
lea
add
call
ret
fistpll
out
mov
xor
mov
stc
shll
pop
inc
stos
pusha
(bad)
sub
lea
(bad)
ss
pushf
lcall
pop
hlt
sti
cmpsl
fwait
adc
dec
mov
fsubr
cltd
adc
cmp
insb
loope
insb
push
inc
addr16
mov
xchg
test
popf
nop
dec
lds
popa
inc
and
scas
in
jb
es
cmpsl
das
cmp
pop
out
loop
lds
sbb
xchg
fs
cmpsl
jecxz
hlt
shl
test
popf
adc
stc
pop
andb
in
hlt
push
jb
(bad)
mov
and
pop
cmpsl
insb
inc
jle
inc
fmul
sub
std
xchg
xlat
pop
ljmp
in
mov
cmpsl
jae
xor
imul
mov
or
lret
sbbl
scas
nop
add
and
arpl
stos
sub
scas
or
xor
ds
fistps
rcrb
xchg
cmp
inc
sub
dec
adc
dec
(bad)
clc
in
add
sbb
popa
lret
jbe
leave
or
test
aam
in
jns
xlat
popf
sbb
das
cmc
(bad)
cmp
and
xchg
ljmp
fdivr
sub
cmp
sbb
in
jle
pusha
and
fnstenv
jg
sbb
scas
pop
ds
push
out
iret
(bad)
push
cmp
arpl
add
jge
fdivrs
call
out
mov
xor
cmp
lds
mov
mov
xchg
insb
jns
and
inc
(bad)
push
call
test
bound
pop
adc
and
faddl
pop
mov
in
iret
mov
mov
stos
xchg
pop
jnp
pop
popa
cmp
add
or
mov
fwait
cmp
enter
inc
add
ljmp
fldenv
lock
or
cli
push
push
mov
pushf
sub
pop
iret
sub
je
arpl
jnp
outsl
xchg
xchg
loope
inc
inc
xchg
xor
lea
aam
loopne
jno
rol
mov
inc
or
in
xor
aam
sbb
cmp
loope
inc
fmul
mov
test
int
imul
dec
les
ss
jno
add
loopne
arpl
sbb
insl
stos
inc
mov
out
jl
test
shll
cwtl
das
(bad)
leave
push
or
pop
test
mov
(bad)
and
push
mov
add
and
divb
xchg
repnz
sub
cmc
adc
in
cmpsl
rorb
or
sub
push
je
xchg
mov
stc
sbb
xor
mov
and
shrl
add
lcall
mov
mov
sbb
test
aam
stos
or
test
leave
mov
xlat
loope
mov
sub
pusha
fdivrs
adc
dec
shl
call
mov
insb
movsl
mov
and
add
and
xorb
sets
(bad)
test
push
inc
pop
shlb
push
outsl
ss
imul
and
or
sub
hlt
lret
call
mov
(bad)
loopne
rcrl
ljmp
and
mov
xchg
je
inc
imul
insb
sti
adcb
dec
imul
sti
lods
push
sub
std
jl
adc
loope
fldz
aad
xor
test
imul
popf
fstps
mov
mov
mov
cmc
jecxz
lret
fs
idivl
mov
push
mov
lcall
mov
cmpsb
out
loopne
xchg
shl
jecxz
(bad)
(bad)
lods
pop
add
iret
xchg
gs
and
xor
dec
inc
dec
pop
dec
out
inc
inc
(bad)
and
addb
aaa
in
popa
lds
inc
sub
ja
test
pop
sahf
sub
inc
lea
adc
mov
or
jnp
pushf
insb
inc
mov
xchg
push
imul
push
repz
xchg
sbb
add
adc
(bad)
sbb
push
mov
fs
int1
or
data16
mov
nop
jb
and
mov
sub
jnp
pop
loope
cmp
in
jmp
xor
ljmp
sbb
leave
popa
scas
add
xchg
cs
loope
adc
add
cwtl
hlt
mov
loope
fists
sub
in
mov
adc
sbb
inc
or
mov
sub
sbb
repnz
jo
loope
sub
sbb
add
push
mov
xor
push
rclb
ss
dec
xchg
insb
and
cmp
inc
cmpsl
(bad)
shll
dec
sub
mov
sbbb
aaa
inc
dec
inc
pusha
arpl
rcr
inc
xlat
or
orl
lret
lds
lea
fstl
push
mov
dec
jecxz
ret
inc
jmp
pop
add
daa
sub
push
jge
mov
pop
add
in
jo
jecxz
cmp
aaa
cmp
and
test
sbb
(bad)
and
(bad)
repnz
jns
pop
xor
and
sar
jg
pop
mov
adc
mov
jb
dec
mov
mov
(bad)
mov
cmp
in
fdivl
cmpsb
out
call
imul
push
fnstenv
mov
pusha
push
dec
jbe
cmp
(bad)
call
and
adcw
fwait
sbb
insl
jae
mov
mov
addr16
xor
mov
arpl
xlat
loop
and
and
arpl
and
xchg
mov
add
roll
fs
mov
lock
lods
dec
pushf
inc
aaa
or
inc
jmp
lods
test
mov
out
subb
inc
sbb
rol
xor
inc
mov
push
sub
cld
stc
jmp
cmpsl
in
push
test
je
nop
rcll
sarl
or
aaa
gs
adc
sub
aas
(bad)
shl
adc
sbb
xchg
pop
xchg
sub
pop
inc
xlat
xorl
mov
int1
ja
mov
stos
inc
out
adc
mov
cmp
dec
adc
enter
loopne
fwait
stos
iret
es
(bad)
negb
mov
sbb
test
lock
and
pop
repnz
inc
and
jge
mov
mov
mov
adc
dec
ja
mov
jg
cmpsl
mov
stc
gs
popf
test
movsb
ret
xchg
sbb
(bad)
pop
push
xchg
loope
into
in
imul
in
sub
xchg
push
cmp
sti
fldl
scas
add
mov
and
(bad)
lcall
cmp
xlat
dec
lods
sahf
test
xor
in
lock
add
repz
jno
test
mov
push
xchg
sub
mov
pop
movsb
call
sub
xchg
sbb
or
mov
loopne
insl
enter
psubusb
es
jo
fst
test
adc
push
adcl
int3
negb
clc
sbb
cmp
fisttps
scas
push
xchg
cmp
sub
adc
shll
js
movsl
stos
imul
mov
frstor
lahf
ret
push
in
repnz
xor
add
clts
repnz
xor
pop
inc
and
popa
aad
shlb
cli
(bad)
push
lret
arpl
sbb
mov
xchg
insl
xchg
dec
or
rcrb
in
mov
sahf
and
pushf
sbb
in
andl
push
xor
adc
test
or
dec
shlb
mov
push
out
fisttps
push
inc
fcoms
bound
add
mov
repnz
inc
(bad)
mov
subb
jl
jmp
insl
insl
test
loopne
or
data16
in
out
movsl
adc
call
mov
or
into
fs
cltd
mov
repz
xor
inc
es
ljmp
fildll
movsb
xor
loope
or
pop
pop
lock
gs
movsb
arpl
std
shll
inc
int
into
mov
xor
(bad)
xor
push
jle
sbb
add
pop
