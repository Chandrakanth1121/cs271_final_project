roll
outsl
xor
cmp
cmc
add
xchg
idivb
cmp
lea
shl
imul
outsb
mov
popf
shrl
clc
lret
nop
inc
mov
xchg
dec
negl
sub
mov
int1
cmp
dec
jb
scas
addl
pause
stc
add
out
pop
test
dec
inc
dec
stos
adc
or
inc
aad
scas
hlt
aad
mov
fwait
mov
pop
xor
or
xchg
jl
pop
dec
sti
jl
cmp
mov
stc
les
daa
xchg
add
sub
andb
test
push
jmp
int1
mov
push
xchg
xchg
test
xor
loop
jmp
pop
adc
cmp
data16
cmpsl
testb
iret
std
mov
or
(bad)
clc
xchg
pop
in
adcb
or
mov
pop
lahf
sbb
mov
pop
popf
push
ds
mov
aaa
les
dec
cltd
les
xlat
(bad)
cltd
adcl
rorl
test
and
add
dec
mov
adc
sub
jae
loop
cltd
pushf
pop
dec
xlat
popf
mov
cmc
sahf
rorl
in
(bad)
and
and
cmp
add
das
pop
in
(bad)
cmp
sbb
lock
and
nop
add
or
notb
push
aam
sub
xor
int
scas
xchg
inc
xchg
and
mov
sbb
inc
inc
jno
mov
outsb
or
pop
out
ret
loopne
(bad)
cmp
xchg
subb
in
(bad)
popf
add
jp
sub
mov
mov
lahf
and
arpl
enter
ja
shll
or
add
pop
sbbl
sbb
adc
push
popf
adc
cmp
sahf
dec
test
ret
push
and
pshufw
xchg
out
jecxz
add
add
jge
daa
es
test
cli
repz
dec
pop
(bad)
lret
das
lcall
scas
add
inc
ja
push
lret
ljmp
shlb
mov
andb
jb
pop
push
push
dec
or
mov
push
inc
sub
in
arpl
pop
imul
(bad)
add
arpl
shll
or
xor
mov
xor
and
adc
add
stos
mov
xchg
jle
stos
pushf
popf
sbb
data16
rcrl
adc
scas
and
sbb
lds
(bad)
arpl
mov
mov
rol
mov
rorb
adc
clc
addr16
or
cmp
sarl
wrmsr
sbb
xchg
sub
out
js
(bad)
fwait
pop
jb
les
inc
and
imulb
into
mov
dec
loope
xchg
call
inc
pop
xchg
mov
in
xor
add
das
or
(bad)
mov
adc
je
fadds
and
push
xor
and
adc
outsb
loop
and
int3
fiaddl
data16
mov
stos
inc
sbb
xor
shll
lods
sbbb
andb
daa
clc
lds
pop
xlat
ret
je
cmc
adc
and
jl
cmp
negb
int3
cmc
mov
inc
insl
add
and
or
shlb
lds
jnp
mov
dec
fisubrl
jge
test
roll
xlat
mov
(bad)
push
push
sarb
xchg
mov
sbb
xor
inc
sub
(bad)
push
imul
repnz
cmpsl
fldt
sub
mov
fwait
sub
loope
adc
xor
rclb
mov
xor
jae
adc
rcr
sahf
add
imul
sbb
movsl
cltd
inc
int
in
add
pop
aas
jno
xchg
in
jecxz
mov
adc
bound
call
shrl
mov
jmp
dec
sti
xchg
jle
sub
inc
nop
xor
dec
cmp
popa
shlb
lock
pop
mov
iret
loopne
cmp
in
adc
sub
cmp
inc
ret
add
mov
cmpsl
xchg
int
push
shrl
into
xor
mov
cmpsb
dec
test
mov
ja
mov
data16
lods
(bad)
aaa
dec
test
sbb
out
mov
test
push
and
movsl
cltd
and
xor
popf
xchg
mov
mov
sbb
gs
jnp
mov
addl
fcmovnb
aas
scas
dec
daa
cs
add
adc
sbb
lcall
scas
xchg
push
sbb
inc
sub
adc
jnp
and
nop
inc
push
clc
dec
(bad)
xor
xchg
orb
push
popf
cmp
sbb
inc
or
notl
mov
adc
into
sub
xchg
mov
stc
and
pop
(bad)
sbb
sub
pop
cmp
test
sbb
mov
popa
mov
add
les
xor
mov
call
and
lret
sbb
mov
mov
int1
cmp
bound
cmp
lods
out
mov
ljmp
(bad)
loop
fs
rcrl
xlat
ficoml
ja
test
fcmovne
dec
adc
arpl
jnp
sahf
cld
mov
push
mov
or
sbb
lock
cmp
mov
inc
cwtl
popf
mov
addl
test
sub
mov
add
sti
arpl
push
pop
push
mov
cmp
or
add
add
mov
ret
or
mov
jl
rcrl
jle
add
xlat
dec
mov
add
shlb
jge
test
test
das
mov
int1
cmp
sub
fstpt
pop
mov
fdivrs
inc
sbb
add
pop
jle
pushf
jae
pop
stos
adcb
mov
mov
mov
stos
and
gs
adc
testl
out
mov
aaa
mov
stos
call
outsl
(bad)
cmp
fisubrl
pop
rcrl
ds
lret
push
sbb
adc
das
inc
loope
stos
cmc
or
jg
stos
repz
add
sub
adc
jno
jg
fwait
repnz
push
(bad)
or
dec
lods
ficompl
jp
push
ret
stos
orl
sbb
stos
lret
sub
jb
dec
dec
sbb
mov
shr
imulb
movsb
outsb
fsubr
mov
sbb
sub
lock
or
subl
push
xchg
shrb
add
cmpb
(bad)
aas
or
xchg
scas
mov
jl
nop
test
leave
push
arpl
jmp
adc
xlat
or
xchg
dec
int1
rcrl
aam
ret
ds
push
les
jle
flds
cwtl
sbb
loope
cmc
loop
push
cmp
mov
pop
xchg
inc
xor
stc
or
pop
les
repz
(bad)
xor
adcl
mov
and
or
aaa
pushf
bound
sbbl
or
mov
or
ds
pop
sbb
jae
cld
mov
fisubrl
pusha
pop
or
adc
mov
xchg
imul
xlat
xchg
ficomps
pusha
sbb
xor
add
out
push
pop
ficompl
mov
mov
insl
repnz
popf
rclb
loopne
sbb
dec
loop
inc
jo
cmp
prefetch
leave
sbb
jbe
pop
add
jmp
in
lret
ja,pt
fdivp
outsb
sahf
xchg
mov
pop
pop
popa
jo
fwait
mov
mov
fdivrs
cmp
dec
cmp
xor
jnp,pt
mov
fidivrs
(bad)
arpl
fstpt
cmpsl
lods
pop
fbld
pop
sbb
test
sub
int1
outsl
mov
mov
mov
adc
mov
cmpsl
push
xchg
dec
sub
jecxz
sarb
jae
inc
and
xchg
xlat
add
dec
jl
cmp
or
stos
sbb
jp
int3
test
mov
fwait
mov
jno
sub
mov
sbb
and
jl
loope
sbb
jecxz
sbb
inc
scas
cmp
scas
add
fwait
or
xchg
mov
test
pop
je
nop
xor
negl
add
sbb
sbb
rclb
cmpsb
rorl
adc
scas
jp
leave
sub
fstps
cmc
add
mov
xor
dec
out
lahf
iret
int1
mov
jp
outsl
loop
cmp
fstl
cmpsb
sub
dec
add
ss
cltd
inc
mov
inc
(bad)
insb
cs
dec
xchg
ss
pop
pop
mov
jns
cmpsl
and
addb
inc
fisttps
adc
push
xchg
sub
in
fs
mov
adc
jge
roll
(bad)
in
daa
jne
cmpsb
adc
mov
std
call
add
sbb
inc
adc
inc
jne
das
jns
jb
mov
inc
mov
mov
cmp
out
