adc
or
jl
out
xchg
sbb
loopne
lahf
or
mov
es
push
mov
xor
call
ret
or
das
pop
std
sub
jge
pop
outsl
push
test
or
std
push
jmp
or
add
int
std
rolb
insb
mov
into
mov
lea
aam
xchg
mov
mov
push
adc
mov
stos
ss
mov
jnp
mov
mov
pop
xor
push
jmp
cmp
xchg
xchg
or
sbb
inc
lret
das
aam
mov
jae
push
sahf
lods
loopne
test
pop
test
mov
xor
aam
mov
sub
psllw
pushf
add
lret
inc
imul
cltd
xor
mov
(bad)
push
cwtl
mov
inc
ds
add
mov
mov
lret
cmpsb
dec
cmp
adc
sbb
cmp
mov
and
test
call
je
(bad)
pop
inc
push
mov
cmp
popa
fstps
xchg
test
aam
push
dec
movsl
pop
pop
dec
pop
(bad)
les
ret
xor
aaa
mov
shrl
sub
mov
hlt
jmp
loopne
aaa
cmp
sbbb
sarb
cmpsb
sbb
mov
fwait
inc
or
lret
cwtl
mov
mov
rcr
sub
roll
stos
xchg
mov
leave
mov
cmp
jns
xor
ja
xchg
sbb
xchg
dec
pop
punpckhbw
mov
add
and
in
mov
xchg
(bad)
rcl
jp
and
xlat
mov
xchg
mull
nop
test
arpl
mov
dec
lea
stos
(bad)
shll
stos
sbb
call
hlt
push
sub
cmpsb
(bad)
dec
or
mov
push
inc
push
(bad)
xor
xor
jmp
sbb
(bad)
adc
mov
mov
cltd
btl
push
pop
int3
(bad)
(bad)
jae
jmp
repz
inc
inc
enter
adc
lret
dec
cmc
sahf
push
add
test
rol
dec
iret
mov
mov
ret
push
jp
(bad)
jo
pop
mov
enter
into
loope
das
cmp
push
adc
cmp
pop
aaa
jnp
cmp
in
xor
mov
aas
dec
cmp
mov
inc
ljmp
imul
dec
je
xor
outsl
(bad)
lret
cmp
jnp
sub
xor
and
(bad)
lret
mov
and
add
or
mov
ds
lds
cmc
pop
push
(bad)
lret
sub
mov
movl
pop
test
std
ljmp
sub
mov
sbb
xor
mov
jbe
mov
jge
aas
rol
or
jg
dec
jg
jo
outsl
inc
ss
bound
mov
hlt
das
sbb
dec
jbe
jl
nop
sahf
cmp
xor
or
into
mov
shll
mov
pop
push
add
rclb
mov
or
js
sbb
xor
mov
jl
das
test
into
xor
mov
cmp
xlat
jge
mov
cmp
xchg
or
jne
imul
pusha
cmp
xor
mull
inc
cmp
adc
aaa
or
adc
push
insl
jnp
jg
lods
mov
inc
jno
movsl
and
mov
inc
jno
mov
jno
mov
push
in
mov
inc
jno
mov
jmp
cltd
lret
jno
test
in
mov
sbb
mov
inc
jno
test
popa
in
mov
inc
jno
test
in
mov
sbb
mov
scas
inc
jno
test
in
mov
inc
jno
int
jno
push
pusha
ja
mov
inc
jno
int
rclb
mov
mov
cld
nop
pop
and
push
mov
scas
inc
jno
test
in
mov
inc
jno
lea
jno
jg
adc
ja
jle
mov
mov
adc
lods
mov
mov
inc
decb
lods
push
mov
and
fidivl
lret
push
in
ds
jnp
inc
dec
fcompl
lret
rolb
xchg
out
cwtl
adc
rol
xor
lds
(bad)
lret
ret
ret
(bad)
dec
inc
xor
and
(bad)
cmp
repnz
lret
inc
jge
jns
cmp
out
xor
jb
mov
or
sti
or
lret
mov
je,pn
add
dec
or
lret
xorl
mov
adc
jge
xchg
jae
mov
lds
imul
jbe
jge
push
mov
and
mov
mov
jl
dec
mov
jl
cmpsl
clc
cmp
aas
add
stc
add
lret
int
cs
mov
(bad)
and
cmpb
add
cwtl
or
ja
mov
or
pop
test
xor
mov
cmp
dec
push
jp
jo
xor
xor
jns
movsl
rol
dec
jg
xor
dec
imul
mov
loop
or
shll
popf
ss
fnstcw
xor
out
jl
int3
xor
and
cmp
iret
push
xchg
lds
sbb
pop
in
xor
ret
mov
jg
je
xchg
xchg
or
or
xor
push
jg
cmp
inc
jne
mov
xor
dec
inc
fsubrl
mov
cmp
dec
clc
pop
add
sub
or
cld
inc
cmc
cli
decb
cmc
aaa
mov
sub
(bad)
jp
inc
mov
stc
ja
pusha
test
inc
jne
in
mov
or
es
fldcw
mov
inc
jle
mov
call
frstor
test
sahf
dec
jg
pop
jae
cli
sub
ret
lds
xchg
mov
frstor
test
(bad)
mov
mov
addb
adc
pop
mov
idiv
jb
adc
lret
test
add
mov
push
lds
enter
enter
enter
or
sub
ret
lds
push
mov
add
in
pop
vsqrtss
daa
aaa
mov
lret
(bad)
lret
(bad)
add
jno
(bad)
lret
cmp
mov
bound
mov
cmp
pusha
loop
mov
and
cmp
and
add
das
addl
lds
push
imul
rclb
or
push
imul
dec
push
(bad)
mov
jbe
neg
cmp
aas
call
add
xor
dec
xchg
cltd
cmpsl
xlat
(bad)
mov
sub
fcomps
enter
test
xchg
mov
or
push
or
into
mulb
mov
adc
sbb
mov
pop
pop
into
loop
ja
ret
out
xchg
xor
idivb
iret
dec
xor
mov
cmpsl
push
(bad)
sbb
xor
pop
push
xor
sbb
mov
jae
sbb
mov
mov
dec
imul
mov
aad
or
push
push
push
pusha
push
mov
or
push
xor
cmpsl
push
rorb
xchg
out
mov
inc
mov
add
add
mov
lret
cmp
sbb
mov
sub
inc
xchg
loop
mov
mov
cmpsl
push
and
dec
in
(bad)
stos
iret
dec
pop
test
psadbw
mov
pop
test
xor
popf
iret
testb
or
dec
daa
gs
mov
int1
scas
int3
cmp
mov
inc
mov
pop
in
mov
pop
mov
mov
push
dec
jo
pop
add
mov
into
movsl
pushf
mov
into
movsl
pushf
mov
into
movsl
pushf
mov
into
movsl
pushf
mov
into
movsl
pushf
mov
into
movsl
pushf
add
mov
push
or
in
mov
pop
cs
push
mov
popf
add
pop
jl
mov
adc
xor
cltd
pop
and
xchg
mov
(bad)
movsl
call
and
cmc
loop
xchg
add
daa
clc
out
pop
sbb
mov
orb
inc
xchg
mov
adc
cmc
loop
xchg
add
or
in
pop
sbb
mov
orb
inc
xchg
mov
adc
cmc
loop
xchg
add
pxor
sbb
and
hlt
pushf
adc
or
outsb
or
xchg
in
negl
pop
cld
mov
fs
xorl
jne
nop
data16
movsl
pushf
in
mov
pop
bound
lahf
cmp
fwait
pop
sahf
scas
xchg
sub
mov
jae
adc
or
mulb
incl
mov
in
mov
imul
cli
in
