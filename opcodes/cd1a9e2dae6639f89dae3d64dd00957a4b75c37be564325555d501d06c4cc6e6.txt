std
lock
lds
push
fnstenv
bound
dec
push
push
int3
mov
push
(bad)
pop
add
pushf
pop
repz
inc
push
ficoml
repz
jg
jbe
outsl
(bad)
leave
ret
push
push
pop
lea
in
dec
cmp
sub
mov
adc
pop
mov
jl
rorl
fidivl
(bad)
mov
sbb
fidivs
lret
pop
stos
push
cmc
std
sbb
jg
push
inc
adc
and
int
sbb
jnp
pop
jge
push
jecxz
rorl
and
mov
imul
pop
fidivrs
xor
or
pop
sbb
fs
push
xlat
jp
dec
adc
jle
(bad)
adc
or
dec
out
in
leave
dec
dec
scas
ja
lock
inc
mov
dec
(bad)
cmc
or
hlt
outsl
aad
add
dec
call
stc
push
xor
and
iret
add
push
rcrb
data16
lods
aas
pop
pop
lods
jle
sub
(bad)
jg
testl
cmp
int
(bad)
lods
pusha
out
outsb
test
inc
in
lret
fcoms
xor
jo
or
cmp
testl
pop
loop
int
ds
inc
mov
sbb
rcrl
jno
dec
adc
je
pusha
mov
cltd
pop
ficoms
bound
dec
fstl
pop
ret
push
das
and
pop
add
insl
pop
jae
dec
fcmovb
out
and
add
rorb
outsb
mov
mov
sbb
and
mov
in
dec
push
out
cmp
outsl
repnz
mov
lea
in
int3
cs
mov
mov
sbb
test
out
negl
adc
(bad)
lret
mov
mov
es
nop
push
dec
lods
cmpsb
test
cmpb
xlat
inc
pop
sbb
cli
(bad)
mov
popf
mov
pop
inc
cmp
out
adc
adc
pop
fs
xchg
bound
xor
ljmp
sbb
(bad)
pminub
push
inc
enter
mov
adc
notl
rorb
xchg
bound
dec
jl
enter
ret
sti
clc
aad
sub
test
adc
xor
or
add
sahf
push
(bad)
testb
aad
jle
pop
jecxz
clc
push
sbb
inc
dec
sub
rorb
cmp
shll
ret
fdivrs
mov
jl
mov
ds
nop
mov
loop
nop
push
testb
pop
lret
pushf
cmp
pop
out
xor
cmp
sarb
lret
cmp
mov
inc
mov
addr16
jge
xor
mov
loope
pop
dec
adc
aad
lock
dec
fldcw
popa
pushf
int3
aam
sub
adcl
leave
ja
rorl
push
or
or
jp
mov
inc
xor
sbb
and
mov
cmc
adc
jp
div
adc
dec
lret
shlb
inc
cwtl
subl
insl
daa
mov
sub
pop
sti
jno
adc
aaa
movsl
notb
insb
cmpsl
sub
add
es
inc
stos
gs
or
outsb
fdiv
add
mov
xor
out
and
jle
adc
movsl
mov
out
gs
pop
int1
push
pop
ljmp
enter
leave
jmp
jns
mov
add
xchg
mov
xor
inc
fdivrp
mov
cmp
lret
mov
pop
xorl
int3
je
jno
push
or
cmp
jp
lret
lcall
bnd
jb
cmp
xchg
subl
lahf
rolb
cmp
js
(bad)
xor
or
xor
jbe
push
pushf
testb
pop
fldcw
adc
pop
jg
mov
insb
cltd
fstpt
lods
insb
repnz
adc
xchg
and
insl
ljmp
pop
push
push
out
push
ror
sbb
jg
lock
push
sarl
mov
js
mov
xlat
jmp
fmull
pop
outsb
fwait
test
xor
push
testl
jnp
imul
xchg
(bad)
adc
jge
(bad)
pop
inc
xchg
test
movsl
(bad)
fmul
cli
inc
mov
stos
jmp
shrb
js
push
cmp
mov
xchg
ljmp
js
(bad)
fcmovbe
inc
jmp
int1
insb
dec
cmp
outsb
or
hlt
call
scas
outsl
xor
ds
mov
test
push
clc
cmc
vpcmpgtw
jp
jns
outsl
shr
and
out
fcomps
xchg
cs
push
and
cmpsl
fldcw
lea
outsb
adc
jnp
push
push
rcl
pop
add
addr16
fs
sbb
sbb
insb
scas
inc
xor
inc
sub
inc
ficompl
ret
jbe
jecxz
in
xchg
sub
aas
(bad)
pushw
or
xchg
lea
mov
dec
or
push
cmp
sbb
popa
lret
xchg
dec
push
mov
insl
cltd
(bad)
jbe
add
cmp
sti
pushf
in
fs
scas
cwtl
lret
or
and
adc
xor
pop
inc
insb
sub
sub
loopne
(bad)
setne
out
and
nop
decb
repz
pop
jae
lret
jns
jge
rclb
clc
jp
clc
pop
xor
adc
add
fs
sbb
rcrb
xor
cli
fcmovbe
mov
out
cli
dec
jle
mov
mov
pop
cmp
dec
push
outsb
(bad)
xor
lea
jne
add
in
xchg
xlat
push
adc
push
lock
fdiv
and
sub
pop
dec
in
cld
jle
mov
and
out
mov
call
dec
jbe
sub
sub
pop
sbb
sbb
adc
cmovbe
add
mov
inc
jmp
inc
xor
adc
das
lock
xorb
dec
fstp
and
out
sub
jle
loope
addr16
sbb
pop
outsb
(bad)
jbe
add
test
pop
and
sub
lock
xor
pusha
in
popf
aad
enter
push
out
fs
xor
roll
mov
mov
sbb
cmpsb
inc
jae
cmp
pop
cmpsl
roll
inc
hlt
dec
daa
out
mov
sub
mov
fmull
mov
or
out
push
rcl
pop
add
gs
idivl
mov
xor
inc
or
ljmp
push
ds
push
insl
jb
pop
aas
cmp
push
push
and
push
sub
pop
cmp
rclb
mov
fwait
das
fcmovnb
lret
loopne
jae
cld
pop
shrl
mov
shr
arpl
jns
or
pop
pop
ja
fcomi
add
adc
std
sub
(bad)
enter
push
out
dec
push
push
rcrb
inc
cmp
clc
aad
cs
iret
jg
fs
mov
jle
in
pop
jmp
xchg
cmpsl
add
in
sbb
cs
in
jb
(bad)
int1
fdivrl
mov
cli
(bad)
xchg
bound
jnp
cmpsb
(bad)
pop
pop
loope
(bad)
imul
subb
fisubrs
pop
arpl
mov
popf
or
data16
mul
jbe
dec
mov
lds
cli
hlt
or
push
into
insl
shlb
cmpsl
push
ficoml
scas
into
std
mov
ljmp
xlat
out
xor
int3
lcall
int3
mov
pop
gs
arpl
cmp
pop
cmp
adc
lds
xlat
incb
(bad)
int3
ret
es
push
int
jecxz
push
fnstsw
call
iret
loopne
loopne
outsb
std
mov
dec
lds
xchg
add
adc
or
mov
adc
dec
mov
pushf
enter
or
loopne
and
mov
dec
ljmp
sbb
sbb
rcrb
ret
inc
mov
jle
adc
dec
(bad)
mov
push
dec
lods
jmp
stc
leave
cmp
add
out
mov
inc
in
test
(bad)
pushf
inc
aam
dec
pop
xchg
lods
fxch
(bad)
imul
xchg
dec
xor
into
xor
cli
mov
pop
arpl
pop
adc
(bad)
push
jno
insl
adcl
movsb
sbb
cmpl
sub
jmp
repz
sbb
or
adc
es
jo
push
imul
sbb
test
adcb
or
sub
adc
cmc
inc
cwtl
dec
mov
inc
ror
js
stos
ss
ljmp
out
adc
bswap
fdivrs
jp
dec
and
rcr
out
les
xchg
ljmp
