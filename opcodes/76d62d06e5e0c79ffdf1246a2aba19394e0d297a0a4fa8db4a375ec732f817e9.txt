adcb
loopne
shll
call
sub
mov
pop
out
test
out
pop
xchg
insb
js
bound
mov
mov
adc
adc
sub
aam
in
adc
dec
imul
adc
sbb
mov
push
cmp
gs
test
out
jle
fldt
fs
push
pop
incb
push
sub
rcrb
xchg
xchg
pushf
xor
aad
clc
pop
fbld
jecxz
mov
mov
sahf
or
inc
sbb
xor
xlat
push
sbb
mov
pop
push
xchg
stos
mov
mov
dec
lret
pop
lock
xchg
cwtl
mov
xchg
adc
sub
(bad)
push
in
adc
sbb
mov
push
cmp
gs
xchg
rolb
cltd
test
and
lea
fdivs
clc
pop
and
xchg
mov
pushf
scas
mov
xchg
mov
mov
push
xor
shl
mov
push
fsubrs
or
sbb
cld
mov
ss
lods
jl
adc
mov
sub
xlat
loopne
dec
xchg
repz
fisubrl
push
popa
je
std
push
mov
pushf
scas
mov
xchg
mov
mov
popf
xor
adc
out
xchg
push
fsubrs
or
push
cld
or
ss
lods
jl
adc
mov
sub
xlat
loopne
dec
xchg
repz
fldt
push
mov
movsl
fidivs
xchg
sti
lods
das
lea
popa
pusha
mov
rorl
lea
push
mov
ss
dec
xchg
movsl
std
repz
loopne
lea
fdivs
test
clc
xchg
mov
cmp
lock
xchg
cwtl
mov
xchg
adc
sub
push
cld
xor
lret
or
mov
push
cmp
gs
xchg
rolb
sbb
iret
pop
xchg
jb
add
mov
shrl
lea
push
mov
xchg
mov
ss
nop
fwait
pandn
adc
mov
fsubrs
xchg
push
das
lea
pop
stos
nop
jle
mov
adc
fdivl
lods
jl
mov
sti
mov
lea
pop
lock
std
cwtl
lods
or
cmp
push
fldt
and
nop
adc
lods
or
dec
cmp
or
sub
xchg
push
xor
and
nop
adc
scas
push
sbb
add
inc
sub
lea
dec
xor
sub
int
fcoms
push
xchg
fstps
lea
pop
stos
pop
fsubrs
xchg
jle
lea
pop
repnz
xchg
stos
cmp
pop
xlat
sub
jl
adc
scas
fsubrs
xlat
loopne
dec
xchg
repz
fldcw
adc
push
mov
fdivs
shll
in
dec
cwtl
cwtl
mov
test
ss
std
psubusb
adc
out
mov
push
lock
ss
jmp
adc
js
push
mov
shll
or
lea
fisubrl
mov
push
cmp
gs
xchg
roll
sub
iret
pop
xchg
jb
add
sbb
mov
push
sub
arpl
cs
inc
sbb
mov
push
lahf
insb
xchg
adc
sub
popf
and
addr16
inc
adc
dec
xor
aam
mov
pushf
fidivl
xchg
dec
xor
sub
pop
popa
pusha
mov
add
adc
sub
xchg
mov
push
in
test
cmp
lea
call
test
popa
add
outsl
cld
cmp
out
dec
xor
push
cld
dec
push
hlt
popa
jo
xor
jne
fisubrl
jbe
sub
popf
sbb
cltd
fwait
sbb
mov
lahf
sbb
mov
sbb
mov
xchg
cwtl
inc
push
push
cld
push
dec
fsubrs
mov
push
mov
ss
or
lea
fldcw
mov
push
insb
pushf
enter
fs
scas
xchg
dec
xor
fcoml
or
cmp
repz
sbb
test
out
pop
xchg
insb
js
imul
mov
popa
or
jne
shrl
lea
fsubrs
mov
push
je
xchg
roll
sub
iret
pop
xchg
jb
add
sbb
mov
push
sub
dec
arpl
cmp
mov
popa
je
popf
sub
xchg
fwait
call
je
fstps
xor
adc
sub
pop
hlt
mov
ss
mov
xchg
scas
dec
sbb
push
adc
popa
insl
test
(bad)
dec
cltd
rcrl
dec
jo
addr16
dec
sbb
mov
push
cmp
pop
in
test
leave
sub
and
mov
fdivs
clc
sub
movsl
xchg
push
push
cltd
adc
xchg
dec
jne
jb
lea
cld
xor
cmp
sub
xchg
pushf
xor
js
mov
insl
xor
dec
jbe
aam
lea
pop
sub
fbld
adc
dec
inc
sbb
pop
in
add
adcb
dec
xor
aad
pop
xchg
jo
mov
sbb
mov
xchg
scas
dec
pop
popa
hlt
js
pop
in
test
pop
sar
adc
scas
push
pop
lahf
jb
adc
sub
fstps
xor
adc
sub
pop
fsubrl
adc
sub
popf
push
cmp
pop
aam
xchg
lock
xchg
mov
sbb
adc
adc
sub
xlat
fdivl
jnp
shll
dec
and
lods
fsubrs
xlat
fmull
lea
fisubs
dec
cwtl
mov
cmp
cmc
(bad)
scas
xchg
dec
das
sbb
pop
fbld
jecxz
and
cltd
inc
cwtl
mov
xchg
scas
push
and
mov
adc
dec
push
sbb
push
adc
lods
fsubrs
xlat
loopne
dec
xchg
mov
sbb
add
or
js
popa
sbb
jno
and
aas
arpl
push
cli
cmp
jnp
sub
fwait
and
mov
popa
xorb
inc
cmp
lea
popa
repz
call
mov
popf
adc
sub
mov
xlat
xor
or
adc
fnstcw
movsl
les
xchg
cwtl
mov
push
(bad)
out
jmp
fwait
mov
xchg
inc
cwtl
mov
pushf
sbb
popf
and
push
push
lock
mov
arpl
sub
add
sahf
jno
adc
mov
popa
xor
inc
cld
mov
ss
mov
ret
imul
cld
dec
push
bnd
inc
sbb
mov
xor
mov
or
pushf
enter
dec
cli
mov
push
pop
cld
push
rcll
xor
lahf
and
adc
cmp
fldt
clc
sbb
adc
mov
pop
fwait
nop
adc
mov
ss
sbb
lea
fldt
fnstenv
xchg
lcall
rcrb
lock
pushf
arpl
mov
popa
pop
adc
fsubrl
popf
cmp
xor
mov
push
sub
xchg
jge
shrl
lea
dec
js
aad
jo
and
repnz
xchg
dec
push
lock
fdivrs
ss
fwait
in
push
pushf
enter
adc
nop
xchg
scas
push
adc
cld
mov
mov
mov
test
dec
inc
adc
fistl
push
push
cld
cmp
adc
sub
inc
push
mov
fdivs
mov
fdivs
sti
sbb
lea
lahf
das
xchg
sti
adc
lea
lahf
das
cltd
sti
or
lea
call
int1
xchg
loop
repz
loop
mov
jo
push
test
lret
dec
push
sti
fsubr
repz
cltd
fcmovnbe
push
jne
ja
push
push
cld
cmp
adc
lea
out
rcll
fdivr
leave
sbb
push
sbb
inc
xchg
sarl
repz
loop
mov
sahf
mov
push
ja
push
push
cld
ss
lea
out
rcll
popa
in
or
push
cld
xor
aas
repz
loopne
mov
popa
in
or
push
cld
xor
adc
xchg
test
mov
xchg
cltd
lret
repz
xchg
mov
out
push
adc
sub
enter
fstpl
pop
xchg
shlb
(bad)
cmp
or
push
cld
xor
pop
es
test
mov
xchg
lcall
mov
out
and
sub
leave
lods
cmp
cmp
ss
mov
ss
dec
and
cld
pushf
shrl
jmp
aam
xor
and
cld
mov
out
fnstenv
in
dec
addr16
xor
adc
