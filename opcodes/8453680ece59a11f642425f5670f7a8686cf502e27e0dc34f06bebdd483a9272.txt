mov
adc
mov
ret
dec
and
mov
ljmp
cli
mov
adc
lock
stos
cmp
inc
dec
or
mov
inc
jg
mov
pop
std
stos
aam
add
mov
shll
or
mov
insb
dec
dec
cmp
adc
xor
dec
xor
push
mov
rolb
sti
in
adc
mov
or
sub
push
sbb
lods
inc
ret
push
mov
xchg
jo
add
cmp
mov
push
lods
fnstcw
mov
fwait
std
pop
cltd
xchg
jg
sbb
xor
mov
test
xor
popa
dec
into
sub
je
rorb
fcmove
ds
sub
mov
mov
fucomip
insb
fidivrs
cmp
mov
shrl
aaa
cmc
fdivrl
mov
and
in
ds
inc
inc
sbb
dec
fiadds
cmp
or
movsb
sub
dec
cmp
in
xor
adc
sub
cmp
mov
cmp
pushf
push
cmp
lcall
cmpb
(bad)
xchg
fwait
ret
push
push
xlat
cs
push
xor
jl
scas
stos
in
outsl
pushf
pop
xor
inc
and
scas
dec
adc
js
sub
mov
(bad)
adc
or
jle
add
mov
popf
push
popf
(bad)
cmp
push
mov
scas
popf
ds
lods
sub
push
or
and
dec
out
xor
nop
xor
sbbl
outsl
adc
mov
ret
fwait
push
cmp
mov
xchg
and
cmp
test
and
sbb
dec
and
dec
les
cmp
ret
sbb
dec
gs
cld
xchg
push
mov
push
cltd
cmpsl
lahf
es
fldcw
mov
jl
orl
xchg
push
popa
loope
fwait
mov
ret
xchg
xor
test
lahf
cmp
movsb
repnz
sub
repz
jge
test
popf
xchg
js
jge
mov
mov
add
push
lret
in
cmp
mov
ja
sub
add
mov
jmp
mov
mov
xor
in
fs
sbb
je
ret
in
push
bnd
mov
aaa
and
mov
lea
xchg
test
gs
in
popf
xor
lcall
sbb
dec
xor
mov
mov
in
cmp
(bad)
mov
mov
movsb
pop
mov
xchg
jle
daa
cli
xchg
lods
ret
xor
xor
push
sahf
ja
and
xchg
insb
adc
shll
sbb
mov
mov
mov
jmp
sbb
test
repz
sub
mov
adc
inc
bound
jo
pop
das
lahf
rolb
pushf
mov
loop
adc
xlat
shr
xor
sti
lods
repz
lock
or
dec
xchg
mov
aaa
and
jg
pop
mov
pop
mov
xchg
xlat
pop
ret
mov
sbb
int3
jnp
cmp
adc
lods
imulb
push
mov
fimull
xchg
xor
hlt
dec
inc
popf
pop
sti
dec
mov
inc
mov
lds
mov
data16
cmp
mov
lods
mov
mov
cmp
ror
xor
xchg
(bad)
dec
mov
mov
scas
lret
test
cmpsb
bound
push
inc
repz
or
cs
xchg
jmp
shlb
push
add
(bad)
test
cmp
incl
mov
inc
fwait
adc
fwait
xor
push
fcompl
xor
cmp
xchg
sbb
int3
mov
popa
cmpsl
imulb
ret
test
stc
ljmp
xor
mov
pusha
mov
and
sbb
enter
lcall
outsb
inc
sbb
int1
clc
add
gs
pusha
jb
pop
int
bound
lock
in
cli
lods
inc
notl
cmpsb
cmp
xor
jp
jge
daa
xchg
test
jne
sbb
adc
stc
mov
scas
aaa
or
aas
jge
mov
insb
fnsave
dec
dec
mov
mov
jo
leave
or
jno
cs
jle
sbb
inc
cmpsl
aas
mov
cmp
mov
pop
aas
add
sahf
jp
xchg
xor
addb
movsb
add
dec
(bad)
pushf
jp
mov
lcall
test
rcrb
out
scas
lret
inc
lods
mov
inc
fwait
(bad)
loope
dec
test
repnz
or
mov
js
dec
rolb
push
cwtl
aad
inc
lock
pop
jmp
xchg
iret
lock
insb
add
inc
push
push
push
outsl
jl
insl
inc
dec
xchg
iret
mov
int
out
orl
lea
xchg
movsb
into
inc
cmp
adc
mov
es
push
xor
arpl
out
fcmovbe
out
das
pop
xchg
shll
dec
xchg
popf
cmp
cld
mov
inc
lock
gs
gs
push
dec
hlt
mov
push
mov
enter
pop
test
or
adc
add
or
inc
cmp
aaa
jno
xchg
cmp
xlat
cmp
lea
pop
ss
loop
pushf
pop
sbb
into
jle
jmp
pop
std
imul
fptan
mov
jp
sbb
cmovbe
repz
sbb
cwtl
cltd
or
mov
mov
push
sub
popf
dec
cltd
mov
in
shlb
inc
lret
loope
and
mov
test
sbb
lods
xor
sbb
sbb
lret
orl
int3
scas
cmpb
movsl
fs
cmc
or
test
leave
mov
inc
sbb
cmp
call
mov
mov
fdivrp
jle
mov
xor
jb
jbe
adc
int3
xor
sub
adc
add
hlt
or
sbb
pop
addb
je
pop
mov
nop
movsb
lds
mov
inc
movsb
movsl
pop
mov
pushf
roll
jecxz
out
aas
test
fxch
stos
mov
lods
out
je
jp
hlt
negb
jl
inc
repz
cmp
and
movsb
(bad)
cmp
test
push
xchg
dec
inc
stc
lret
mov
cmpsb
gs
inc
and
aas
scas
scas
mov
fdivp
es
cmpsl
add
mov
mov
pushf
mov
xor
sbb
pusha
fwait
cli
sarb
inc
sub
incb
xor
subl
je
add
int1
mov
adc
mov
push
mov
mov
add
xchg
xor
mov
lret
and
bound
or
popa
sbb
pop
lods
andb
test
mov
in
cltd
imull
sbb
mov
mov
jecxz
pushf
jbe
aas
mov
cmpsl
jecxz
gs
push
mov
ds
xor
push
out
lret
(bad)
sub
stos
cmp
addr16
inc
jae
inc
jle
lods
subb
mov
xlat
lds
rorl
rorl
push
mov
xchg
ret
or
insl
push
add
fistl
inc
add
pusha
push
das
xor
fidivl
cmpsl
mov
jg
xchg
inc
cltd
cmc
xor
test
mov
mov
mov
rcrb
sbb
xlat
mov
inc
leave
inc
test
xchg
cmp
stos
jl
sub
mov
mov
dec
jmp
add
movsl
dec
ja
cmpsb
dec
aad
mov
fsts
jmp
mov
jmp
mov
pop
dec
rcl
stc
mov
incl
xchg
fadds
mov
and
sub
in
or
push
imul
lcall
xor
jecxz
mov
xchg
add
push
sbb
in
out
sub
push
or
into
cmpsb
std
scas
xchg
inc
and
popf
pop
fistl
lds
mov
pushf
movsl
sti
add
adc
mov
test
or
aaa
pop
pop
movsb
ljmp
inc
sub
(bad)
cmp
sub
push
test
dec
stc
cli
dec
push
sub
out
inc
xlat
push
cwtl
mov
ret
adc
subb
xor
inc
into
das
jmp
xchg
xchg
movsl
mov
xor
mov
dec
cmp
addr16
xchg
cwtl
bound
repz
ret
push
iret
add
jbe
sahf
mov
adc
das
popf
inc
inc
pop
test
test
imul
mov
cmp
pop
push
(bad)
lahf
(bad)
faddl
addr16
rorb
inc
dec
mov
jne
cmpsl
add
scas
cmpsb
push
push
mov
mov
call
jno
cmp
