xchg
cwtl
cmpb
pushf
sbb
ja
(bad)
jo
push
sbb
iret
push
push
(bad)
mov
mov
mov
(bad)
rex.r
xchg
xor
flds
or
adc
jo
mov
jp
in
(bad)
in
xorb
rex.x
stos
shrl
cmp
xchg
mov
push
jmp
popf
mov
cmp
movsxd
xor
sahf
movabs
test
add
xor
(bad)
mov
loopne
mov
rex.wrb
mov
or
mov
fmull
adc
(bad)
lea
shrl
mov
mov
mov
rex.wrb
(bad)
rex.r
mov
push
shl
pushf
movsb
(bad)
mov
je
mov
movabs
scas
pop
cmp
movabs
addr32
push
{rex2
add
xchg
(bad)
add
cmc
clc
sbb
sarb
rsm
rex.x
rex
ds
cmpsb
je
xchg
addr32
pop
movabs
adc
push
(bad)
xchg
rcrl
rex.wrxb
movsl
sbb
rex.wb
js
mov
xchg
sbb
stos
mov
(bad)
lock
cmc
cld
pop
rex.xb
fs
movabs
xchg
(bad)
pop
adc
fs
(bad)
shr
movsb
jmp
jae
jmp
jae
movabs
sbb
xor
rex.xb
or
subb
data16
(bad)
cmc
mov
out
call
ret
lea
lock
(bad)
clc
xlat
or
mull
imul
lods
push
push
(bad)
pop
(bad)
rex.wx
{rex2
movabs
jb
mov
sbb
insb
jp
movabs
or
addr32
rex.r
loopne
es
mov
sbb
adc
jge
jbe
and
int3
sub
(bad)
insl
jno
adc
fs
test
mov
lods
add
mov
rex.wrb
(bad)
adc
(bad)
mov
popf
rex.r
je
mov
leave
cwtl
js
rcrl
sti
xlat
cwtl
jge
mov
(bad)
pop
enter
(bad)
rex.r
push
jbe
or
fidivrl
repnz
rex.r
stc
sub
push
jg
and
xchg
ss
add
movabs
int3
fldcw
fnsave
pop
rex.r
mov
xchg
and
mov
or
xor
(bad)
or
add
push
rex.wx
js
movabs
adc
movabs
(bad)
je
adc
(bad)
iret
pop
test
testb
push
divl
loope
mov
repnz
lods
sbb
test
xor
ds
iret
addr32
int3
and
lret
(bad)
test
or
leave
rex.rb
adc
stos
and
jmp
rorb
rex.r
push
and
int1
cmp
mov
out
push
and
mov
clc
adc
(bad)
pop
nop
popf
(bad)
ds
or
(bad)
xchg
push
or
push
test
adc
in
xabort
test
or
xchg
ficoml
mov
loopne
(bad)
(bad)
(bad)
rex.b
jg
push
or
scas
and
orl
cmpsl
sub
adc
cltd
pop
rcl
rex.xb
ss
cmp
xor
rex.w
xchg
movl
xor
sbb
fistpll
mov
xlat
cmc
and
ret
mov
adc
movabs
and
adc
adc
hlt
test
(bad)
mov
pushf
or
sbb
jno
mov
mov
jo
out
(bad)
cmp
in
imul
rex.x
test
mov
mov
sbb
(bad)
mov
cmp
scas
rex.wrb
jge
ret
movabs
xor
and
cmp
rex.rx
or
rex.x
push
rex.wrxb
xor
sbb
xchg
unpckhps
rex.rxb
jp
imul
outsb
ret
test
or
xlat
shl
lahf
pop
xor
fldl
imul
ja
in
jge
sub
lock
push
push
cld
(bad)
repnz
fsqrt
mov
fmuls
adc
int1
js
and
add
int
mov
xor
fldl
rex.x
sbb
and
push
mov
int3
out
notl
(bad)
or
push
(bad)
(bad)
pushf
data16
push
sbb
repnz
mov
data16
add
in
loopne
scas
sub
jl
pop
movabs
mov
call
adc
sarb
jno
sub
adc
fcoml
movabs
call
cwtl
mov
call
rex.w
mov
sahf
rex
(bad)
in
adc
test
sub
sarb
jbe
rex.w
rex.wrb
(bad)
cwtl
add
xchg
mov
test
rex.wrx
or
add
fadd
xchg
(bad)
xchg
loop
cmp
movabs
cmpb
jg
(bad)
pop
cs
ds
cmp
shrl
rex.b
{rex2
mov
mov
in
cmp
stos
sbb
push
mov
mov
loopne
(bad)
popf
jae
(bad)
mov
sbb
shll
test
outsl
jl
nop
test
xchg
mov
shll
(bad)
bnd
(bad)
sarb
xorl
movabs
(bad)
pop
or
mov
lahf
mov
xabort
mov
sarb
negl
mov
cmp
incb
(bad)
rex.rb
add
and
lods
stos
lret
sbb
(bad)
add
je
(bad)
ucomiss
clc
repz
rex.wx
add
loopne
sarb
sub
rex.x
jg
popf
hlt
xlat
lods
scas
addr32
test
(bad)
mov
xor
push
xor
fstl
mov
pop
mov
jbe
(bad)
int3
ja
divb
int3
xchg
adc
or
adc
pop
pop
adcl
sbb
xchg
xchg
test
(bad)
mov
jmp
ja
mov
pop
movabs
in
cmp
lods
movsb
or
loope
add
rex.x
or
(bad)
rex.wb
(bad)
ja
mov
mov
xchg
pop
mov
jb
je
xor
insb
mov
(bad)
rex.wrx
cld
sub
jns
mov
loope
fimuls
int1
popf
movabs
mov
xchg
mov
pushf
(bad)
mov
and
fwait
rex.wrx
jo
fstpt
lss
mov
shrb
addr32
clc
xor
rorl
imul
sbb
cmp
mov
(bad)
(bad)
sbb
sub
and
mov
or
sub
popf
add
lahf
cmpsb
fsubs
fwait
push
cmp
xchg
(bad)
mov
fisttpll
push
xor
rex.wrxb
(bad)
sub
rex.xb
jl
mov
roll
or
rex.wxb
rex.x
jne
(bad)
pop
pshufw
rex.w
add
ja
rex.rx
(bad)
(bad)
add
cltd
(bad)
jp
movabs
mov
mov
push
fcomp
adc
rex.wr
outsl
lods
cs
loope
out
pop
(bad)
lock
imul
mov
rex.rx
rex.wrxb
rex.wb
adcl
imul
imul
iret
fisttps
pushf
(bad)
xchg
scas
mov
mov
pop
pop
xchg
rex.xb
jmp
rex.rb
adc
(bad)
sbb
push
mov
jge
rex.rxb
out
pop
ficoml
sbb
sahf
cmpsl
hlt
adcb
push
rex.wrb
adc
(bad)
add
adc
mov
pop
(bad)
out
stos
mov
fst
xchg
nop
pop
rex
sub
enter
rex.wx
fucomi
jle
stc
or
mov
pop
cwtl
sub
sbb
shlb
ja
jns
and
cmpsb
in
cmp
and
fistpll
adc
lret
adc
outsl
sub
xlat
add
xor
or
xchg
push
add
add
or
and
(bad)
jb
rex.x
or
rex.rx
(bad)
loopne
sbbl
(bad)
cmc
mov
add
je
leave
loope
movsb
xor
xchg
and
(bad)
xchg
movsb
and
rex.r
cwtl
push
rex.rx
pushf
push
pop
cmp
cmpsl
(bad)
xor
roll
(bad)
adc
cld
fidivl
ror
fidivs
movabs
pop
sbb
push
add
mov
mov
ja
fldl
(bad)
jmp
pop
rex.r
int3
in
mov
leave
fwait
rex.wrb
fs
out
push
jle
rex.wrxb
frstor
stc
rex.rb
loop
adc
(bad)
rex.x
(bad)
rex.rx
addb
cwtl
cmp
push
(bad)
rex.x
cmpsl
jrcxz
and
rex.wrx
(bad)
mov
add
and
sbb
rolb
lods
lock
fistl
je
js
push
adc
sub
cltd
in
xor
cmp
outsl
mov
jrcxz
adc
decb
cmp
adc
cmp
pop
or
int1
xchg
mov
mov
rex.xb
(bad)
cmp
cmovbe
sub
and
jl
int3
mov
sbb
pop
xor
lods
xchg
add
in
sbbb
cmpsl
cltd
jge
scas
xchg
lahf
cli
jl
rex.wb
movabs
insb
sbb
(bad)
stos
hlt
ja
pop
rex.wrb
sahf
mov
rex.wrx
rex.wrb
rex.wx
jno
movabs
(bad)
xchg
mov
cmc
jrcxz
xor
rclb
(bad)
repnz
pop
xlat
add
lods
