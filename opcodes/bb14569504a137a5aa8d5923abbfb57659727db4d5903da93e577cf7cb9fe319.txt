mov
adc
add
add
dec
add
add
add
add
add
add
add
jl
add
rcrb
add
cmp
in
xchg
cmpl
sub
or
fwait
and
adc
pop
sbb
fucomp
dec
and
ja
cmp
nop
add
lock
adc
cmpsl
mov
repz
xor
in
js
stos
dec
mov
add
aam
mov
mov
mov
data16
dec
ljmp
aam
mov
sub
clc
dec
ja
xchg
js
dec
mov
int3
add
es
and
jge
xor
push
xchg
inc
in
fstp
pop
or
enter
outsl
cs
jb
mov
jecxz
clc
add
rclb
fadds
xchg
in
mov
xchg
andl
adc
xchg
int
iret
push
add
xchg
ds
dec
(bad)
aad
in
cmp
fdivl
sbb
xchg
rolb
mov
sbb
jbe
lret
repnz
aas
imul
mov
scas
xorl
xor
lret
(bad)
dec
fnstsw
xchg
xor
xchg
cld
dec
dec
scas
pushf
push
(bad)
cltd
sbb
(bad)
lcall
int
fldcw
sub
jne
into
iret
(bad)
inc
sarb
int3
imul
ret
mov
(bad)
sub
and
xor
push
xchg
cmp
(bad)
fsubr
movsb
fwait
sbb
add
jno
lods
rorl
dec
mov
imul
and
mov
orb
insl
rcrl
mov
adc
mov
test
lds
js
subb
(bad)
dec
(bad)
sarl
push
or
or
ljmp
jp
mov
out
rcr
ljmp
mov
dec
sub
outsb
jmp
jecxz
inc
inc
lret
xchg
leave
cmpsb
rcll
or
dec
mov
add
jns
int3
mov
xor
fmul
jnp
dec
adc
xchg
iret
push
push
enter
sub
mov
jne
sbb
fs
push
cmp
sar
push
outsb
andb
scas
mov
(bad)
or
xor
xor
aad
std
lea
loop
mov
es
sub
lods
mov
loopne
pop
inc
mov
int3
sbb
inc
iret
aam
push
pop
ja
aad
cmc
mov
gs
sub
inc
add
jp
iret
dec
add
and
jo
loopne
lret
adc
adc
aas
js
lods
mov
push
mov
iret
push
ret
lock
sbb
cmpsl
dec
xor
mov
cmp
mov
test
movsl
lods
nop
fwait
pop
cwtl
test
jne
adc
(bad)
outsb
(bad)
jge
(bad)
sahf
setle
jbe
jnp
mov
aam
cli
xor
mov
inc
loope
leave
sbb
dec
jno
pusha
pop
fs
pop
dec
(bad)
or
mov
pop
sub
(bad)
xor
fcompl
test
dec
cltd
pop
imul
lods
pop
outsl
arpl
into
shl
(bad)
je
cmpb
mov
scas
in
repz
and
sahf
and
xor
jl
pop
outsl
repz
sbb
sbb
test
add
mov
fnstenv
adcl
fs
dec
mov
dec
stos
ds
test
mov
jno
inc
push
lock
mull
fldl
pusha
data16
mov
in
pop
fdivrl
gs
movsb
push
xchg
std
(bad)
repz
sbb
dec
jg
jo
dec
mov
add
in
pop
or
xchg
lret
sub
inc
xor
or
loope
pop
push
nop
int3
lcall
cmp
or
push
sub
sbb
sub
lahf
fadd
loop
int
jg
addr16
enter
or
mov
lahf
lods
movsl
lock
xchg
pop
clc
(bad)
cld
jo
mov
aas
mov
mov
stos
jl
cwtl
in
(bad)
cli
mov
andb
lods
fadd
pusha
or
repnz
pop
mov
dec
leave
adc
ljmp
adc
(bad)
sbb
sub
push
adcb
je
push
sub
push
adc
cltd
jg
cmp
push
jecxz
mov
std
das
int
aaa
shrb
xchg
pusha
test
out
bound
(bad)
jl
push
and
cli
push
dec
jno
xchg
mov
bswap
dec
xchg
fisubs
add
repz
mov
lock
into
mov
bts
sub
cmp
mov
call
or
ljmp
movsl
mov
xchg
xchg
sub
sbb
mov
pop
xchg
xchg
push
sub
imul
lods
adc
sub
mov
lahf
mov
lods
adc
cmpsl
or
mov
lods
ja
xor
aas
loop
sbbb
and
cli
lods
fucom
mov
dec
pop
push
imul
outsl
lods
or
xor
inc
fstl
addr16
pop
out
lds
(bad)
mov
inc
insb
push
cmp
movmskps
push
mov
dec
push
fs
test
adc
je
xchg
sub
pop
mov
lret
stc
dec
and
or
push
int3
sub
testb
add
add
shll
std
cltd
loopne
xor
ficoml
or
loopne
cs
add
xor
jb
mov
mov
xchg
data16
dec
inc
adc
in
gs
cmp
inc
gs
mov
xor
dec
out
fnstcw
lea
ss
jo
xor
sub
xchg
das
and
fists
adc
and
jmp
sbb
jge
cmc
mov
rcr
add
out
push
adc
inc
push
cmp
add
inc
xlat
cmp
mov
fistps
mov
adc
pop
in
mov
daa
inc
add
xlat
xorb
(bad)
jmp
fistpl
mov
add
push
jmp
mov
out
xor
in
adc
push
sbb
xor
xchg
mov
shr
shl
mov
cltd
sti
jl
dec
jge
or
push
pop
sbb
or
ret
push
jmp
dec
in
xor
out
xchg
popa
or
jbe
jne
fisubrs
mov
std
inc
ret
xchg
aad
sbb
call
aam
iret
xchg
push
mov
inc
sub
imull
mov
add
cli
int
cmp
dec
repz
ss
adc
jle
adc
lods
cmpsl
in
insb
int3
inc
repz
leave
das
fmull
repz
mov
pop
mov
or
dec
mov
mov
fidivrl
aad
adc
out
in
inc
inc
jbe
rcrb
js
cmp
ss
call
popa
dec
sub
aam
cmc
push
es
cmp
jae
mov
stos
insb
test
add
sub
lahf
loopew
sahf
movsb
sahf
lret
jl
xchg
shr
and
inc
out
inc
or
stc
or
outsb
fyl2x
fldcw
dec
lods
insb
add
mov
les
rcrl
and
push
pop
(bad)
xchg
in
xlat
jb
loop
and
pusha
loop
cmpsl
mov
fiaddl
dec
push
push
sbb
pop
sti
pop
repz
fdivl
dec
cs
pop
xchg
cmp
int1
xchg
mov
pop
mov
fcomps
ja
insl
aaa
ret
loope
add
addl
adc
inc
xchg
xchg
cmpsb
dec
push
fsts
add
test
(bad)
xor
(bad)
and
adc
add
test
xchg
imul
add
sub
mov
shr
dec
push
cmc
or
in
and
call
dec
aad
mov
xchg
fists
xor
inc
das
jg
hlt
push
(bad)
cld
and
outsl
repz
inc
leave
daa
sub
push
ficomps
xor
xor
cmp
mov
pop
scas
fiaddl
mov
jge
and
cmp
push
xchg
mov
xchg
mov
loope
ljmp
fs
mov
cmp
pop
sbbb
sbb
add
and
int1
nop
shrl
sub
mov
jns
push
in
pusha
pop
mov
arpl
sbb
xchg
mov
aam
mov
cmp
leave
mov
orl
gs
iret
push
(bad)
out
jnp
rcrb
xchg
lret
lock
push
xor
cmp
and
ljmp
mov
inc
leave
jmp
shrl
and
jl
test
mov
out
aas
xchg
inc
loope
cmpsl
imul
xor
mov
in
movsb
inc
stc
fdivl
jnp
fwait
aad
dec
sub
fndisi(8087
ret
cmpsl
