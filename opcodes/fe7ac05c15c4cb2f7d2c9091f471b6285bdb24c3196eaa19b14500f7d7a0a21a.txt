xlat
mov
nop
inc
sbb
cmp
inc
lods
(bad)
cs
xor
sarl
mov
dec
popa
or
call
loopne
stc
in
outsb
stos
adc
data16
loopne
movsb
xchg
mov
idivb
les
sub
test
adc
insb
hlt
push
insb
fidivl
xor
fldl
dec
jge
cmc
out
(bad)
xor
fisubrs
jae
ss
mov
jne
fcoml
mov
aas
enter
push
or
sbb
movsb
aas
adc
mov
mov
test
popf
sub
xchg
ficomps
push
daa
cmp
ret
fists
aam
je
enter
jge
je
mov
mov
mov
loopne
insb
test
stos
and
scas
xchg
nop
int3
nop
insl
sub
dec
in
ret
mov
aad
rcrl
adc
mov
dec
out
add
fsts
jge
pushf
sub
cmp
daa
dec
jmp
and
fnsave
cmp
and
mov
sub
or
pop
stos
xchg
push
add
xor
push
ljmp
jl
aam
push
arpl
sbb
jb
aam
les
test
lock
stc
sbb
push
daa
push
outsl
sbb
sub
push
ljmp
inc
jb
push
dec
imul
mov
jnp
pusha
lret
dec
scas
mov
adc
mov
mov
mov
ror
mov
ja
std
and
xchg
xchg
mov
and
sub
sahf
sti
cmp
(bad)
sbb
sub
(bad)
sbb
xchg
adc
shlb
jnp
pop
dec
sub
sahf
xchg
sbb
shll
xchg
xchg
lock
dec
cwtl
mov
and
cmp
jle
xchg
pop
mov
shll
nop
or
adc
jo
in
div
mov
adc
test
pop
pusha
mov
jmp
add
mov
cmp
clc
shll
rcr
lods
xor
dec
inc
push
push
cmpsl
pop
lea
fsts
outsl
cmp
jnp
jns
dec
or
nop
fimuls
adc
adc
jno
push
sbb
xor
push
fisubrl
sub
fcmovb
pusha
pop
mov
push
lcall
ss
lock
xor
jge
lcall
js
add
dec
int3
mov
jae
add
pop
or
je
inc
clc
add
sbb
out
scas
lsl
adc
insb
nop
push
in
inc
fldl
lret
adc
fsts
cli
fnsave
scas
aaa
rolb
or
mov
mov
cmp
dec
jno
shr
dec
xor
mov
sbb
inc
pop
int1
jl
cmp
cltd
lcall
into
or
(bad)
push
fildll
lcall
and
adc
rcrb
(bad)
enter
mov
(bad)
sahf
lret
sub
jge
or
ljmp
jg
adc
mov
faddl
mov
lods
cmp
movl
lret
(bad)
mov
inc
loope
filds
jg
pusha
lea
pop
pop
pop
mov
jmp
lock
mov
cs
repnz
xlat
jl
push
mov
imul
pop
pushf
and
out
out
fldl
sub
xchg
test
mov
imul
ljmp
inc
xchg
dec
je
addr16
jnp
xchg
outsl
cmpsb
add
fucomip
xchg
mov
in
mov
mov
mov
outsb
lahf
mov
mov
pop
cmpsb
leave
dec
sarb
mov
push
fst
rcrl
cmpl
push
dec
mov
sbb
lods
int3
pop
xor
inc
push
or
xlat
ficomps
sahf
sub
stc
jne
push
mov
push
xlat
aam
push
adc
sub
cli
xor
sub
enter
mov
cmpb
stc
cmpb
mov
pop
add
int3
hlt
inc
loope
out
inc
push
xor
push
pop
out
leave
push
je
mov
or
xchg
repz
jae
outsl
loope
lock
iret
mov
sbb
mov
test
(bad)
xchg
or
adc
test
cmp
jnp
lods
adc
pop
int
pop
mov
sbb
mov
adc
dec
test
mov
jmp
xchg
ret
or
loope
mov
xchg
(bad)
sub
(bad)
repnz
mov
adc
movsl
out
pusha
jmp
aad
mov
je
divl
shll
int
sbb
pop
xchg
bound
dec
les
gs
adc
dec
mov
sbb
stos
cmpsl
stc
xchg
fs
in
push
loope
jno
jo
outsb
cltd
loope
test
scas
(bad)
sub
(bad)
imul
out
add
push
mov
add
pop
pop
sti
xor
dec
mov
les
mov
push
pop
(bad)
in
or
jecxz
out
and
test
adc
push
mov
loopne
xchg
mov
cmp
or
xchg
push
daa
test
sbb
adc
mov
(bad)
adc
inc
pop
sub
sub
in
adc
cmpl
mov
shll
push
aaa
jns
daa
fs
arpl
xor
xor
repz
cmc
ds
in
lods
push
mov
aaa
cmp
scas
bound
sub
lods
mov
xor
jns
data16
cwtl
cmp
xor
outsb
cmp
xchg
and
or
mov
out
push
rcll
adc
add
mov
call
lahf
shr
mov
mov
or
mov
bound
mov
jnp
mov
mov
shlb
cwtl
call
inc
ja
imul
adc
cmp
roll
aad
jmp
push
xlat
pop
inc
ja
jo
adc
repnz
xor
popa
xor
ljmp
sub
dec
mov
sarb
enter
movsl
pop
cmpb
jecxz
and
test
dec
aas
fnstenv
pop
inc
push
imul
in
es
shl
inc
adcl
xlat
xchg
jl
bound
shr
add
mov
adc
mov
test
cwtl
into
push
lret
jo
loop,pn
inc
pop
fcomps
movsb
sub
leave
xchg
xchg
popf
sub
mov
call
pop
xchg
ss
pop
fimuls
sub
and
pop
push
push
roll
mov
div
jno
and
sub
mov
jo
push
out
add
mov
call
xlat
inc
jbe
fildll
std
bswap
dec
dec
xor
dec
push
fistl
xor
notl
mov
xchg
sub
adc
call
inc
mov
adc
push
xor
imul
push
add
loopne
inc
les
sahf
test
insl
push
into
pop
loopne
fimull
es
adc
sbb
dec
inc
lods
std
shlb
cmc
stos
mov
pusha
mov
sbb
jge
ficompl
pusha
cwtl
jns
lret
sub
insb
jmp
lock
sub
mov
and
iret
in
adc
cmpsl
sbb
cmc
push
inc
cltd
inc
ret
or
adc
out
cs
sbb
mov
add
push
jo
adc
outsl
decb
sbb
cltd
sbb
test
pop
inc
push
push
jne
(bad)
pop
xchg
mov
pusha
mov
outsl
loop
add
cmp
adc
xchg
enter
shr
jle
sbb
mov
js
sub
mov
mov
dec
sub
lock
pop
push
lods
jno
inc
fisttpl
shlb
cmpsl
mov
and
jns
or
mov
loop
aaa
test
adc
sti
ds
jecxz
add
in
out
or
sahf
shrb
push
jmp
add
imul
shl
lcall
dec
dec
xchg
out
nop
loope
in
lock
shl
das
sti
divl
in
and
mov
in
xor
jp
scas
stos
jge
ret
lea
out
or
jmp
adc
lahf
pop
push
lcall
xor
les
xor
push
sbb
gs
(bad)
out
xor
cmp
sbb
jb
enter
js
popa
test
ljmp
jl
das
xchg
push
es
pop
stos
test
mov
ret
push
add
test
shll
pusha
pushf
int
sub
es
mov
stos
cld
lret
movsb
into
fidivrs
xchg
(bad)
into
mov
fstl
imul
fistpl
jle
sub
in
stc
pop
mov
jecxz
cmp
mov
fcmovnu
outsb
dec
cmpsb
fnstcw
jmp
int
std
je
and
adc
negb
andb
es
cmp
jp
int3
fsubl
outsb
mov
