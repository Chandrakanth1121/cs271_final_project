adc
sbb
scas
jmp
fwait
sti
rcrl
push
mov
lock
dec
lods
cmp
sbb
repz
in
push
in
mov
jmp
cmpl
data16
scas
test
jle
xchg
divb
ret
les
addr16
in
ret
xor
push
fcoml
(bad)
push
cwtl
inc
leave
sbbb
repnz
out
(bad)
mov
fwait
mov
mov
xchg
sbb
imul
sbb
mov
iret
xor
adc
mov
lock
push
int
nop
jns
adc
adc
sub
cmp
fwait
ljmp
sbb
and
add
out
adc
push
and
es
xchg
hlt
dec
mov
cmp
call
sbb
inc
sbb
xchg
fisubrl
pop
in
int1
mov
out
xchg
mov
push
xchg
rcrl
jmp
sahf
shll
sbb
insl
out
lcall
(bad)
(bad)
hlt
shlb
dec
push
in
movsl
and
inc
cmp
xchg
mov
adc
lods
(bad)
stos
shl
in
(bad)
dec
fbstp
xlat
cwtl
sub
add
fsub
mov
jo
out
mov
cmp
adc
in
loop
cmp
in
out
lcall
leave
cmp
xchg
adc
add
cmc
addr16
lret
lcall
jmp
popa
lea
int1
in
ds
inc
jmp
mov
xor
cwtl
cmp
test
in
pop
push
lods
jl
xor
pop
xlat
push
mov
inc
xor
shll
pushf
jnp
sub
or
out
mov
add
add
mov
pop
mov
xor
shlb
add
xchg
bound
jle
xor
ja
je
dec
fadds
bound
sub
int3
xor
mov
fs
lds
or
inc
xlat
enter
xlat
pop
xchg
loope
or
pop
xor
outsl
pop
dec
ret
inc
into
inc
jo
repz
jmp
jnp
scas
add
or
mov
jns
pop
or
push
mov
(bad)
call
arpl
cmp
stos
sbb
dec
mov
sbb
push
rol
mov
push
jge
stos
nop
ficoml
or
sbb
xchg
inc
rolb
lds
inc
mov
push
rorb
and
mov
movsb
mov
adc
stos
(bad)
mov
lahf
lds
dec
in
andb
push
push
int1
cwtl
inc
push
mov
hlt
lods
sbb
and
adc
sbb
popa
pop
adc
into
pop
shll
jnp
mov
mov
scas
ffreep
mov
lret
shrb
xchg
cmp
xchg
out
mov
xchg
(bad)
mov
jae
hlt
ds
push
jge
mov
insb
xchg
push
loopne
sbb
(bad)
cmp
adc
xlat
nop
push
(bad)
xchg
int3
add
add
mov
aas
out
add
stc
out
mov
insl
add
jae
int1
cmp
xor
sti
mov
sahf
bound
fmuls
and
inc
mov
std
sub
adc
int1
jne
rolb
sbb
xchg
adc
push
mov
sub
mov
cmp
cld
or
(bad)
jl
das
inc
push
out
mov
pop
push
insb
cmpsl
jnp
decb
pop
(bad)
inc
sbb
sub
sbb
adc
and
or
(bad)
cs
jno
aaa
lea
jnp
mov
jo
dec
lret
sbb
mov
mov
push
adc
or
cmp
cs
es
push
jne
scas
add
movsl
stos
push
mov
les
xchg
ds
sbb
arpl
pop
inc
mov
and
dec
mov
and
xchg
cld
(bad)
adc
loope
dec
test
fwait
jae
mov
data16
lret
inc
xor
jne
mov
and
fs
jmp
push
data16
add
int1
mov
lret
xlat
jbe
mov
mov
int3
in
fucomp
(bad)
push
push
cmpsl
movsl
sbb
popf
stos
lock
jp
xchg
ret
cmp
in
lea
mov
aaa
clc
jns
js
xchg
into
jnp
sub
subl
jecxz
inc
sti
cli
sbb
movb
pushf
lds
mov
movsb
sub
rcrb
imul
jnp
aas
and
pop
inc
push
xchg
scas
sbb
jo
gs
in
adc
fcmove
jp
fidivs
das
xor
test
imul
cmpsl
xor
call
jbe
es
in
addr16
lods
mov
mov
fcomi
cld
cmp
or
cmp
rcr
dec
mov
jnp
inc
stos
inc
scas
mov
cmp
ficoml
outsb
jl
loope
popa
jo
testb
xchg
bound
adc
or
(bad)
cld
neg
shr
mov
pop
lods
push
xchg
mov
cmovs
pushf
(bad)
sti
cmc
imul
out
(bad)
cwtl
cltd
or
push
in
(bad)
cwtl
inc
test
dec
test
movb
je
cmp
mov
or
mov
inc
jne
movsb
pop
xchg
enter
and
cmp
pusha
out
push
jp
movsl
paddsw
aam
jecxz
aam
outsl
outsl
dec
inc
push
push
inc
outsl
xchg
jo
xchg
or
xchg
clc
jno
pop
cmp
stc
repnz
scas
mov
cmp
xchg
jb
movq
adc
jno
xchg
lahf
movsl
mov
movsl
dec
sbbb
mov
push
sarb
mov
or
aad
push
out
mov
out
sbb
xor
push
test
bound
mov
sti
inc
jnp
fwait
pop
outsb
jno
js
xor
dec
mov
fs
(bad)
sbb
cmp
ja
lock
dec
movsl
push
sbb
xlat
pop
leave
lea
jbe
pushf
call
jb
dec
neg
jne
sub
inc
fwait
cmpsl
push
inc
jnp
pop
inc
jae
push
fistpll
lock
out
jns
adc
gs
sbb
das
jecxz
jne
bound
movsl
pushf
xchg
sub
xlat
out
ja
mov
or
es
add
test
jl
rolb
or
mov
lret
cld
lret
loope
ja
xor
xchg
mov
lahf
into
es
scas
jns
mov
cmpsb
mov
mov
pop
inc
andb
cmpsb
fwait
arpl
push
mov
movsb
aam
sbb
fs
(bad)
shlb
js
loop
fcoms
and
sub
rcll
test
jge
xor
cmpsb
pop
cmpsb
notb
aad
push
repz
jge
xor
in
out
sbb
aam
stos
mov
pop
lcall
dec
rcll
xor
pop
cpuid
xor
sbb
xchg
stos
out
shrl
aam
jl
out
cmp
pop
ds
push
xchg
inc
out
push
and
dec
insl
xlat
pushf
adc
loopne
sarl
xchg
or
movsl
add
ret
xchg
cmp
sbbb
imul
lcall
mov
dec
test
retw
out
dec
fxch
int1
loop
outsb
in
dec
mov
xor
lods
in
in
push
mov
in
dec
daa
or
test
das
movsl
and
and
inc
sub
push
iret
stos
je
xchg
add
loope
test
lret
cli
pop
inc
addb
push
dec
xchg
jns
mov
(bad)
add
les
pushf
test
jbe
fnstcw
jae
int1
xlat
xchg
mov
mov
iret
aas
bnd
lret
imul
adc
cmpsb
or
jmp
jle
mov
sbb
(bad)
adc
in
add
jns
or
cmpsl
aam
mov
and
ret
(bad)
mov
inc
sub
cmp
sti
add
pop
fwait
push
into
loop
loop
and
sbb
subl
repnz
test
push
lahf
imul
hlt
imull
dec
idiv
mov
mov
ja
push
movsl
cmc
mov
pop
xchg
mov
idivl
outsl
cwtl
adc
sub
add
outsl
inc
aas
mov
addl
movsb
add
xor
mov
sbb
push
mov
push
arpl
inc
add
inc
jp
(bad)
push
add
lods
xchg
inc
push
enter
ja
filds
cltd
mov
divl
(bad)
es
gs
bound
and
int1
stc
add
out
neg
mov
insl
push
dec
cmpsl
sarb
