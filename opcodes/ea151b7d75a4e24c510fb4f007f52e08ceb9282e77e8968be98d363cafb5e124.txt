add
mov
leave
pop
sbb
test
sub
push
pop
fadds
cltd
cmp
xchg
leave
in
cmp
xchg
clc
in
mov
out
add
add
push
fnstcw
xor
cmp
mov
and
inc
sbb
pop
out
in
lds
rolb
sbb
dec
pop
cmp
sub
jo
dec
ljmp
dec
mov
cmp
arpl
in
movsl
dec
dec
andb
in
popa
cmpsl
repnz
out
push
scas
inc
fisubrs
cli
xchg
fnstenv
pop
psrad
adc
or
jg
fucomp
ds
add
ja
cmp
mov
lods
mov
xchg
or
push
dec
adc
popa
shlb
aaa
daa
cmc
cmpsb
scas
adc
pop
rorl
in
mulb
xchg
mov
push
fimull
inc
jne
lret
or
mov
mov
inc
add
mov
in
sbb
jo
push
cmc
call
dec
imul
lret
add
adc
inc
pop
arpl
mov
aad
inc
xor
fists
je
test
cmp
pop
lahf
sub
je
dec
jmp
add
lds
aad
dec
dec
cmp
mov
pop
xlat
or
cli
in
(bad)
xor
and
ljmp
jecxz
push
cmp
xor
pop
push
outsl
imul
stos
popf
jmp
(bad)
(bad)
repz
dec
repnz
fs
andl
xchg
sbb
mov
in
inc
clc
cmc
fisubrs
push
mov
stos
aaa
sub
and
xchg
adc
in
mov
repnz
mov
clc
cmp
dec
popa
jae
ror
jge
sbb
arpl
dec
push
enter
leave
xchg
cli
inc
stc
imull
daa
scas
pop
int
sbb
xor
dec
mov
dec
xor
add
sahf
inc
scas
push
sub
mov
ffree
and
inc
mov
(bad)
mov
mov
and
call
xchg
insb
sbb
mov
xchg
push
xor
lahf
xchg
ret
adc
pop
and
out
nop
adc
dec
or
rcrl
xchg
stc
or
in
add
and
clc
adc
pop
mov
out
inc
cmc
dec
test
cmpb
in
mov
or
movsb
int1
(bad)
pop
adc
cmc
outsl
out
pusha
addb
mov
inc
popf
and
test
int
popa
jne
stos
test
mov
push
mov
(bad)
lods
loope
dec
enter
rcrb
repnz
ret
fcomps
(bad)
push
(bad)
xor
jecxz
xchg
cli
jne
push
cmpsb
inc
or
shll
stc
cwtl
xchg
sbb
push
insw
mov
add
test
xchg
pop
jecxz
add
mov
ss
pushf
push
shrb
frstor
sbb
mov
ds
inc
mov
fbstp
mov
ljmp
call
dec
sub
pop
cmp
or
mov
and
or
loope
les
inc
push
sub
jb
push
jle
cmp
aaa
rorl
ret
lcall
in
cmp
pushf
test
push
xor
shlb
sti
nop
ficoms
jmp
popa
mov
sahf
add
popa
jnp
pop
add
inc
and
test
pop
in
(bad)
sbb
pop
int
imulb
outsb
inc
add
jno
dec
cmpsb
or
int
and
mov
jns
loope
aaa
out
or
dec
sbb
xor
mov
pusha
mov
std
ss
scas
pop
xor
dec
callw
adc
stos
sbb
ljmp
jnp
in
aad
cwtl
hlt
movsl
sub
mov
int1
fdivl
adc
out
or
pop
sub
testl
gs
sbb
mov
fcmovnb
xlat
pop
stos
mov
jne
arpl
inc
xor
lea
adc
rolb
lods
idivb
inc
push
aad
enter
shl
cmp
dec
stos
outsb
je
rcrl
pop
ret
fldl
movsb
mov
(bad)
cmc
lea
rcrl
cmpsl
popf
stos
sub
pop
xor
xchg
push
repz
sbb
ds
in
scas
cmp
sub
add
jnp
in
inc
inc
ret
sarl
int3
and
and
mov
xchg
ret
je
mov
jecxz
pop
js
in
imul
es
fsubrs
push
and
inc
pop
imul
movb
shll
fcoml
push
in
push
mov
pop
add
cmp
dec
int
mov
sbb
mov
fistl
ljmp
(bad)
inc
mov
ljmp
or
lea
int3
stos
(bad)
idiv
push
rcr
in
sbb
dec
mov
lock
mov
cli
orl
inc
subl
imull
xlat
lahf
out
subb
cs
pop
mov
dec
in
outsb
dec
repnz
int1
mov
add
aam
rorb
gs
dec
loope
add
cmc
clc
fisubrs
loope
or
xchg
cmp
lds
stos
imul
sbb
mov
mov
sbb
push
rcrl
call
mov
push
je
or
pop
insl
adc
jns
dec
cmc
out
add
cmpsl
loope
or
outsl
cmp
jecxz
push
ret
or
sub
in
cmp
cmp
js
add
enter
aad
dec
stos
decl
or
mov
into
data16
ljmp
lcall
inc
jae
lds
push
pop
loopne
int
fcoml
sti
jbe
jle
loop
sbb
ficoml
repz
cmp
out
sbb
mov
je
bnd
scas
arpl
scas
aad
cmc
dec
add
(bad)
xchg
in
stc
mov
cmp
jbe
adcb
jbe
loopne
jno
xor
sahf
pop
or
jecxz
ret
mov
push
add
inc
adc
test
in
in
gs
repnz
(bad)
sbb
movsl
addr16
mov
loopne
inc
in
adc
cltd
mov
in
push
pusha
xchg
and
test
shrb
imul
int
ret
adc
and
jmp
pop
leave
sbb
int
(bad)
jno
xchg
into
jnp
loopne
sub
sahf
mov
adc
adc
pop
sub
adcl
rcl
and
stos
fidivrl
jne
je
cmpsb
push
sbb
stos
mov
loop
jle
mov
and
fdivr
jl
sbb
clc
push
ds
jno
add
sub
faddl
movsb
loope
filds
push
add
cmp
sbb
fsubl
hlt
sar
leavew
test
movsl
and
out
out
aas
pop
fs
pop
or
lea
push
and
mov
in
sub
in
mov
mov
dec
rcrb
jne
or
ljmp
push
mov
adc
into
xchg
push
(bad)
mov
push
adc
mov
xchg
(bad)
mov
jmp
jle
cltd
adc
adc
dec
fcompl
adc
je
nop
js
inc
pop
and
fidivs
adc
gs
pop
jle
lock
outsl
push
mov
adc
lret
jae
pop
mov
dec
mov
lock
stc
cld
mov
dec
loopne
sahf
mov
ret
scas
pop
cmpsb
sbb
mov
into
shlb
dec
dec
pop
jns
dec
mov
fmull
mov
cmc
popf
push
dec
lahf
leave
mov
mov
movsb
shr
ret
push
sub
fcmovbe
test
sub
inc
insl
jb
jns
stc
call
jp
outsl
insl
pop
in
add
aam
push
dec
enter
loopne
out
mov
sbb
sahf
xor
in
sub
jmp
popf
out
loop
out
out
xor
and
and
sbb
push
and
xchg
xchg
push
(bad)
jp
mov
stos
mov
cmp
fdivs
xchg
mov
ret
and
cs
loop
pop
add
daa
dec
cli
scas
push
jl
cmpsl
int3
cmp
mov
dec
ss
iret
xor
xlat
in
push
addl
and
(bad)
and
ja
ret
ljmp
fildll
out
pop
rolb
and
dec
inc
jnp
inc
xchg
pop
divl
and
push
inc
add
inc
clc
push
data16
gs
out
in
xor
mov
outsb
lahf
fdiv
dec
sub
repz
lds
cmp
mov
inc
imul
mov
out
add
negl
jmp
leave
inc
