gs
pop
push
mov
push
inc
sbb
aad
bound
jno
lcall
repz
int1
jno
add
or
jp
adc
pop
inc
sub
pop
hlt
push
imul
arpl
mov
add
or
jo
mov
mov
sub
(bad)
or
fs
imul
lret
add
aaa
sub
push
test
imulb
test
add
adc
sbb
lret
gs
ss
adc
cmpsb
pop
push
das
or
xchg
adc
daa
xor
push
mov
dec
pop
popa
add
adc
inc
lcall
push
xor
xor
mov
sbb
jae
xor
cmp
push
sub
sub
(bad)
push
outsb
and
dec
(bad)
fnstenv
or
xor
dec
fcmovnu
test
es
push
aaa
push
aaa
cmpsl
adc
test
pop
and
add
(bad)
sub
sbb
movhps
scas
jge
sub
cwtl
xor
xor
sbb
outsl
jmp
jmp
mov
in
push
jae
add
jns
(bad)
cmp
adc
adc
sub
imul
out
inc
cmp
fadds
add
(bad)
es
sub
sbb
test
test
stos
push
mov
and
out
iret
int
scas
sub
jbe
rorl
repnz
inc
stos
push
xlat
pusha
sbb
push
inc
(bad)
std
bound
and
cmp
or
leave
cli
dec
jmp
mov
or
add
inc
aad
cli
jg
add
test
add
gs
pop
dec
mulb
inc
sub
ret
inc
fildll
stos
mov
push
xor
pop
loopne
sub
dec
xor
xchg
cmp
cmp
repz
pop
pop
jg
sub
ja
popa
add
xchg
or
dec
std
xor
sub
gs
sub
aas
scas
and
dec
adc
sub
inc
mov
adcl
xchg
outsl
xor
fcompl
in
sub
adc
out
and
cltd
jmp
push
xor
fnstenv
mov
repnz
inc
aas
loopne
adc
frstor
add
dec
push
or
insb
hlt
xor
cmpsb
lock
add
iret
inc
aaa
sub
(bad)
push
sub
lar
dec
loop
pop
fsts
add
and
xor
inc
in
mov
dec
data16
jb
imul
loope
pop
mov
jmp
dec
shl
cmp
(bad)
push
push
adc
xchg
adc
mov
ss
test
adc
out
bound
xchg
aam
adc
xchg
es
ss
and
sub
pop
fstpt
out
jl
add
cld
rcrl
je
ret
mov
cmpsb
pushf
cld
push
pop
stos
dec
fs
je
push
int3
jle
jo
(bad)
lldt
and
add
in
mov
sbb
sbb
out
sub
aad
inc
jo
jnp
and
int3
ret
dec
fldt
insb
pop
lcall
cmp
add
xor
add
adc
es
push
and
push
inc
sbb
ja
js
inc
xchg
es
jge
lahf
cmp
push
nopl
cli
lock
add
popa
push
loope
data16
or
mov
adc
hlt
sub
lcall
repz
daa
cld
cmc
add
inc
mov
xchg
pusha
out
inc
mov
cmp
ficomps
sbb
or
mov
pop
dec
jns
(bad)
sub
call
or
imul
sbb
scas
jp
insb
ds
push
sub
imul
ljmp
jp
add
dec
inc
ja
jo
in
push
sub
cmp
pusha
mov
cmp
insb
sahf
xor
test
int1
pop
cmc
push
inc
aad
ja
cltd
inc
mov
sub
jl
xor
aaa
lahf
xlat
jecxz
stos
pop
mov
mov
out
mov
jnp
fimuls
inc
or
mov
cmp
add
and
inc
hlt
mov
jl
mov
pop
cmp
push
mov
push
aas
mov
dec
mov
and
jns
cmp
add
aas
sbb
xor
xor
aad
sub
mov
push
sahf
inc
pusha
leave
sbb
sbb
jnp
mov
sub
inc
mov
inc
dec
mov
inc
lret
adc
out
push
or
rol
ljmp
fstl
dec
inc
or
dec
adc
daa
jb
imul
scas
roll
sub
push
lret
push
mov
leave
repz
and
jns
xor
xor
dec
mov
inc
cmp
out
jnp
add
push
pop
sbb
sbb
inc
(bad)
(bad)
sbb
xor
ljmp
negl
add
repz
sahf
cmp
sbb
or
push
dec
pinsrw
push
fidivrs
push
sbb
mov
test
or
out
movsl
enter
rcrb
in
sbb
push
sub
dec
mov
aad
push
dec
adc
xchg
repz
ljmp
adc
sbb
lods
cmp
cmc
jno
and
and
scas
rorl
and
jg
jg
addr16
adc
mov
push
dec
dec
pop
sbb
mov
test
or
fsubl
and
inc
pop
mov
sub
and
lds
sub
sbb
js
push
das
inc
and
sub
jno
popa
jge
pop
and
mov
jne
fstpt
nop
mov
adc
test
sbb
cmp
mov
bound
push
leave
dec
mov
cmp
dec
pop
imul
dec
aam
xor
adcb
sub
jno
lock
pop
and
cmp
sub
add
push
dec
out
and
adcb
test
lds
inc
adc
cmp
pop
jecxz
inc
cmp
jno
xchg
or
mov
ret
or
scas
ja
sub
jecxz
stos
or
xchg
add
lret
push
or
add
mov
cmpsb
and
dec
or
inc
sub
inc
fdiv
ss
add
mov
and
jle
rcll
inc
xor
sub
mov
subl
sbb
insb
sbb
pop
les
cmp
and
mov
cmc
cmp
in
sbb
inc
adc
sbb
cmp
xor
cmp
push
mov
cmpsb
mov
rorb
or
or
(bad)
cmp
popf
es
and
and
inc
and
and
pop
push
pusha
xchg
mov
aaa
push
xchg
push
loopne
sbb
dec
std
lcall
outsl
xchg
jno
test
ret
xchg
xor
mov
fnstsw
sbb
ret
cmp
call
cmp
stos
xor
pusha
push
cmp
lcall
inc
pop
inc
inc
arpl
js
sar
insb
xor
push
fs
imul
add
cmp
push
sbb
es
xchg
mov
add
outsl
sbb
repz
push
push
xor
cmp
inc
nopl
adc
push
lret
out
push
or
sbb
cmc
shlb
pusha
jbe
sub
push
cmp
sbb
add
mov
and
adc
adc
inc
loope
stos
pop
in
pop
xor
xchg
sub
inc
cmp
xor
fildl
dec
or
ljmp
push
xchg
jmp
cmp
pop
add
xchg
mov
push
rcrl
test
sub
aad
pushf
(bad)
and
jns
sbb
out
and
add
xor
outsb
xchg
adc
push
add
lds
add
push
pop
pop
dec
mov
cmp
mov
and
sub
adc
or
fs
cmp
xor
xor
inc
js
cli
inc
pusha
cmp
inc
push
dec
dec
pop
jno
jecxz
jae
sub
data16
(bad)
pop
adc
clc
inc
or
dec
jno
adc
call
xor
inc
add
lods
mov
lcall
sub
push
inc
mov
in
aas
dec
or
cmpsl
jns
mov
or
add
(bad)
daa
cmpsb
jecxz
push
out
hlt
xchg
data16
aas
jg
sub
(bad)
in
shl
cwtl
inc
lahf
xlat
or
cmp
dec
roll
out
xchg
cmp
xor
xor
adc
test
xlat
inc
jnp
add
loop
aad
jae
sarl
out
lcall
scas
dec
jno
and
hlt
popa
mov
iret
xor
dec
mov
mov
pop
inc
outsb
daa
loop
(bad)
xlat
dec
mov
