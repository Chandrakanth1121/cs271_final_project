xor
sbb
or
bound
testl
test
pop
scas
push
mov
adc
pusha
sbb
adc
in
sar
ret
pop
jmp
lock
cmc
sarb
push
sahf
inc
inc
inc
loopne
sub
pushf
js
push
roll
and
adc
push
in
xchg
(bad)
mov
ret
sbb
inc
xchg
movsl
cwtl
stc
call
out
mov
repnz
repnz
jmp
inc
out
pop
jmp
cmpsb
lcall
stc
in
jmp
jae
insb
jecxz
or
jmp
mov
stos
add
int1
add
push
lock
xchg
test
loope
out
dec
mov
pop
xchg
inc
pushf
and
sbb
add
cmp
aaa
hlt
xchg
jp
fdivs
leave
push
push
mov
jbe
in
aam
aas
arpl
mov
push
out
loop
dec
popa
mov
lods
or
mov
mov
xor
dec
inc
inc
sbb
(bad)
lods
sbb
push
xor
sahf
xchg
sbb
lahf
inc
add
cwtl
inc
cmpsb
mov
push
sbb
shll
je
cmp
mov
xorl
loope
push
in
dec
cmc
sahf
push
cmc
xchg
jb
mov
insl
stc
in
negl
adc
pusha
rcrl
imul
popa
das
aaa
add
out
pop
int3
shrb
std
mov
popa
push
(bad)
popf
ss
push
stos
aaa
push
jne
imul
loop
jge
clc
mov
xchg
outsl
inc
je
pop
add
scas
rcrl
push
mov
sub
shll
loopne
int3
(bad)
testl
call
push
inc
dec
pop
ret
stc
sub
(bad)
scas
lcall
scas
lods
js
add
nop
inc
fs
imul
outsb
sbb
pop
aaa
pop
cmc
adc
mov
scas
push
jmp
dec
adc
inc
pop
mov
fidivrl
imul
mov
sbb
mov
movsb
in
pop
movsl
push
push
jmp
test
adc
lock
mov
in
adc
ds
arpl
xchg
dec
mov
adc
push
push
xchg
inc
sub
mov
dec
dec
pop
mov
adc
add
and
xchg
gs
sbb
shlb
lds
xor
push
dec
mov
js
dec
sub
xlat
lods
jb
lret
jmp
sbb
test
popa
mov
pop
and
and
test
stc
adc
push
imul
xchg
jne
jo
pushf
aaa
outsl
test
xchg
jno
xchg
jecxz
in
(bad)
in
mov
xlat
imul
sbbb
pop
test
add
adc
js
mov
std
pop
shll
mov
pop
mov
stos
movsl
push
add
cwtl
push
push
sbb
jecxz
add
jecxz
aam
orl
(bad)
jb
cmp
nop
imul
pushf
cmpsb
add
dec
mov
jne
adc
daa
jnp
inc
sbb
xchg
fs
sahf
mov
adc
pop
leave
filds
ret
adc
gs
add
sti
mov
jmp
and
or
push
arpl
in
repz
push
inc
sub
xchg
jnp
scas
int1
mov
mov
xchg
shrb
cs
push
std
jns
shll
jecxz
fpatan
stos
sbb
mov
sbb
jnp
xchg
pop
pop
(bad)
imul
jb
inc
js
jnp
sbb
pop
add
aad
(bad)
test
xlat
and
daa
mov
mov
std
out
sahf
lock
mov
sbb
nop
(bad)
mov
jae
sub
dec
or
(bad)
xor
(bad)
or
scas
aaa
in
nop
add
xor
(bad)
mov
scas
mov
jmp
ret
sbb
hlt
mov
shl
mov
sti
mov
sub
std
hlt
mov
push
lods
ss
sub
insb
or
test
inc
nop
lcall
addr16
hlt
push
aaa
add
(bad)
imul
popf
mov
out
adc
dec
sub
(bad)
jo
js
bound
pusha
lahf
sti
xchg
push
jge
sub
inc
and
bound
jmp
outsl
mov
scas
data16
fisubrs
jae
das
js
out
push
loope
loope
xchg
inc
enter
pop
pop
mov
jbe
add
(bad)
fistps
xbegin
fnstenv
fdivp
jmp
push
imul
ret
js
or
bound
fldcw
xor
and
xor
sbb
push
imul
jb
inc
push
mov
inc
jbe
dec
push
xor
mov
push
adc
sahf
mov
ret
loopne
mov
shrb
mov
pop
mov
rolb
xchg
push
les
and
push
sahf
xchg
insl
cmpb
and
leave
jne
lret
test
sbb
bound
sbb
pop
ret
pop
mov
cmp
inc
sub
jno
inc
scas
bound
js
arpl
sarl
cld
pop
outsl
inc
in
jns
mov
push
leave
jmp
push
mov
ss
test
int3
pop
mov
sub
imul
adcl
fisttpll
popf
xor
jg
jp
clc
mov
xor
push
es
mov
sub
sahf
ret
push
int1
mov
outsl
stos
add
or
add
sahf
mov
in
fcomp
sub
ljmp
negl
dec
push
xorl
js
gs
cli
andb
mov
in
cmpsl
dec
sub
or
lret
cld
mov
rep
in
stos
aas
je
cmpsb
push
loope
mov
cmpsl
cmc
ja
add
push
popa
stc
outsb
mov
jl
ja
sbb
div
add
out
mov
adc
push
fcmovnbe
ss
sbb
xchg
into
push
add
inc
pop
insl
sbb
xorb
sbb
and
jae
arpl
adc
push
popa
int1
mov
inc
mov
ss
jg
lret
sbb
out
test
fisubl
cmpsl
out
sbb
arpl
jmp
dec
gs
imul
cmp
jl
ja
jmp
adc
sub
enter
aas
call
fnsave
loope
loope
inc
sbb
xor
pushf
adc
scas
inc
push
jbe
pop
jp
inc
mov
outsl
adc
out
push
jb
mov
out
clc
int1
ret
nop
in
and
js
pusha
cmc
dec
xchg
sub
nop
aaa
or
sub
stc
mov
packssdw
cwtl
mov
adc
mov
clc
dec
pop
push
inc
pop
aaa
bound
fbstp
dec
in
call
in
incl
int3
je
lods
call
xchg
bound
pop
push
imul
out
sbb
cmp
outsb
es
push
dec
ja
pop
fnstsw
movsb
lods
mov
add
mov
(bad)
aad
lret
and
jnp
add
cmc
pop
adc
addr16
or
xlat
pop
sub
push
in
popa
mov
dec
scas
pop
or
fs
mov
ss
jp
repnz
lcall
inc
pop
int3
sbb
xor
fmuls
shll
daa
pop
repnz
mov
mov
add
jno
adc
out
insl
dec
int1
movsl
mov
decb
mov
xchg
mov
outsl
imul
imul
imul
jge
(bad)
mov
mov
sub
adcb
pop
shl
movsb
subl
xchg
jnp
shrb
pop
imul
jge
lret
and
popa
pop
test
bound
mov
jp
inc
cmpsb
lret
adc
jno
pop
add
shlb
movsl
mov
inc
pusha
push
push
pop
insb
pop
add
inc
and
xor
inc
cmp
in
imul
shlb
orl
testl
loope
pop
mov
or
sbb
and
gs
lea
loop
mov
push
xor
fidivs
dec
scas
and
adc
(bad)
jge
adc
mov
add
mull
std
dec
pusha
sub
test
cld
(bad)
fxch
sub
mov
push
lods
daa
stos
jmp
gs
imul
stos
jmp
add
popa
sbb
mov
neg
loop
aam
dec
pop
push
sub
cwtl
mov
outsb
cld
cltd
out
cmpsl
insb
shlb
pop
insb
dec
push
mov
dec
sahf
jp
clc
mov
sti
in
