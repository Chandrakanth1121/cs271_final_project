std
(bad)
(bad)
decl
and
movl
mov
mov
mov
mov
inc
mov
(bad)
mov
and
movb
mov
or
add
(bad)
mov
mov
add
add
nop
add
mov
mov
jl
inc
enter
push
sbb
pop
sbb
pop
(bad)
std
mov
insb
(bad)
pop
push
movl
lea
filds
(bad)
jle
push
call
ss
je
jbe
cmp
je
jle
notb
jne
cmp
pop
xor
xchg
add
testb
pop
add
fidivs
imul
cmpsb
cmp
push
je
js
and
inc
or
inc
or
add
mov
in
std
ja
leave
je
mov
push
call
sub
stc
(bad)
push
jge
adc
ret
pop
push
test
dec
pusha
or
lods
pusha
inc
pop
sub
push
pop
inc
lock
mov
mov
mov
lea
and
subl
push
and
adc
adc
enter
daa
mov
clc
jne
mov
or
push
or
fcomi
fiadds
jne
sbb
mov
and
(bad)
rolb
add
add
jnp
and
xor
sub
mov
stos
cmp
cwtl
mov
shlb
xor
sub
out
leave
into
adc
cmp
jl
cltd
popa
xchg
sbbl
mov
push
sub
enter
mov
mov
mov
(bad)
inc
in
mov
nop
std
xor
shll
dec
lcall
jle
fadds
clc
inc
adc
shll
outsb
aas
sub
and
mov
lock
cmp
(bad)
push
pop
(bad)
push
sbb
rcrl
testl
mov
pop
lea
mov
movl
pop
ret
pop
add
mov
faddl
add
ret
jg
imul
or
pop
cmpsb
xor
lea
add
sbb
frstor
out
mov
sub
mov
sub
xchg
or
es
push
and
adc
decb
push
mov
stos
or
mov
mov
nop
add
imul
dec
adc
push
adc
mov
mov
push
sub
fs
mov
pop
aam
jb
or
lcall
push
outsb
xor
pop
jne
mov
xor
ret
push
nop
sbb
push
sub
xor
loopne
(bad)
cmpsb
xor
mov
push
mov
add
popf
lea
cld
sbb
or
enter
mov
cmp
dec
mov
mov
test
test
pop
in
mov
adc
sbb
lea
adcl
test
cmp
int
and
mov
mov
imul
fwait
shlb
insb
addr16
xor
xor
lea
add
mov
and
add
or
shll
mov
adc
pop
add
ljmp
pop
testl
loopne
insl
jne
inc
sbb
mov
inc
in
jmp
push
(bad)
sti
imul
ret
je
push
push
add
or
add
add
push
push
mov
dec
fildl
cs
and
fldenv
je
inc
aas
xchg
jo
sbb
sbb
mov
test
lock
lea
pusha
ds
push
ret
test
loop
dec
pop
xchg
addr16
pop
sbb
test
(bad)
sub
in
xchg
pushf
cmp
jl
inc
fists
or
jge
movsb
cmp
pop
cmp
or
or
sub
insb
cmp
inc
jl
sbb
adcl
sbb
add
shlb
test
aam
je
lods
andl
sbb
add
add
sbb
xchg
xor
push
push
add
fs
subl
shrb
gs
je
mov
push
test
jne
cmp
or
jae
push
push
repz
testl
pop
adc
movsb
and
lods
or
and
pop
pop
adc
je
mov
push
add
outsl
aam
xor
push
and
test
push
push
cmp
or
mov
dec
lods
addr16
sbb
pop
cmp
mov
xchg
fcomps
add
adc
leave
sbb
sbb
sub
mov
sbb
adc
or
and
outsl
divb
pop
push
push
fabs
fistps
adc
mov
add
cmp
sbb
aaa
add
pop
push
(bad)
push
fisubs
cmp
xor
into
pop
ljmp
cltd
push
nop
pop
cmp
sub
push
adc
fimull
mov
js
cmp
call
fstpt
cld
and
mov
inc
xor
pop
lea
cmpsb
add
outsl
push
leave
mov
and
add
jnp
push
push
je,pt
js
push
jo
or
push
cmp
pop
in
das
pusha
or
sub
loopne
fucomi
lods
push
adc
adc
push
sub
(bad)
and
pop
mov
push
ret
in
pop
dec
enter
faddl
add
add
add
add
pushf
dec
add
sbb
add
sbb
add
push
je
dec
push
pop
ja
and
and
lods
sbb
ret
lea
fstl
xchg
add
add
shl
loopne
jge
sbb
and
add
push
push
or
or
xor
in
cmpsl
in
inc
je,pt
adc
and
in
sti
(bad)
in
je
or
jne
mov
or
testb
and
and
fs
or
int3
rorl
or
add
enter
out
imul
adc
seto
cmpsb
aaa
insb
imul
sysret
hlt
push
or
and
sub
das
and
push
jb
add
add
add
and
sub
nop
addb
rcrb
add
cmp
push
add
mov
mov
pop
repz
pop
ret
jg
test
mov
sbb
int1
les
cmp
pop
setle
mov
lret
cmp
test
cmp
add
add
dec
mov
ret
fcmovu
mov
pop
mov
jl
add
xorl
push
jnp
push
hlt
push
add
ror
sbb
adc
sarl
sub
mulb
jnp
lahf
push
and
lcall
or
ret
hlt
ret
mov
and
push
movsl
xor
fsubl
sub
cmp
or
sbb
jmp
and
out
dec
pop
adc
out
ret
xor
out
add
in
add
xlat
mov
testl
(bad)
mov
ret
jle
adc
jg
dec
(bad)
aas
sub
out
cmp
dec
and
xor
xchg
sbb
push
cltd
in
mov
dec
das
cmp
out
sahf
mov
shl
and
pop
mov
cmp
jne
mov
loopne
mov
push
push
sbbb
dec
mov
pop
pop
iret
cmpsl
jl
out
xor
mov
sub
or
sub
cmp
lea
fcomi
lahf
ret
test
jge
neg
bound
jns
fmuls
cld
mov
or
add
jg
cmp
(bad)
out
fnstsw
je
dec
or
or
sub
popa
add
cmp
mulb
faddl
pop
adc
and
mov
cmp
jne
decl
push
fmull
inc
mov
inc
cmp
jle
fsub
scas
sbb
inc
cmp
cltd
jle
das
adc
lock
add
adc
(bad)
fbld
push
mov
xchg
aaa
je
(bad)
lock
ret
inc
dec
(bad)
lea
je
decl
lcall
ret
lea
mov
cmp
jne
pop
sti
std
(bad)
adc
mov
and
adc
lcall
(bad)
outsb
shlb
cmp
cmpsb
mov
loopne
or
add
ret
mov
xchg
roll
jne
push
xchg
xor
add
fsubs
ficomps
inc
les
rclb
pop
loopne
inc
push
fistps
or
fistl
add
push
jecxz
clc
jne
mov
cmp
je
sub
push
js
lods
in
aas
cld
xchg
or
repz
push
out
out
add
mov
popf
mov
cmp
pop
enter
mov
das
ret
outsb
lods
ret
add
adc
jge
push
mov
push
iret
(bad)
dec
cmp
ds
bswap
mov
xchg
push
pop
outsb
sbb
push
xchg
int
mov
pop
pop
xchg
mov
ljmp
std
jne
fiadds
lret
into
xchg
rorl
cmp
xchg
push
pop
xchg
or
prefetchw
cmp
test
add
movl
dec
mov
(bad)
stos
aad
pop
sub
pop
mov
