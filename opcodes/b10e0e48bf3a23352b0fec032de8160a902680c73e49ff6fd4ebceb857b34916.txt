sti
in
ret
lods
outsl
fwait
sti
mov
(bad)
ljmp
or
sub
outsb
dec
lods
movsb
cli
test
call
loopne
leave
inc
cmp
xchg
lret
push
pop
pop
outsb
pop
mov
adc
pop
xor
aad
(bad)
ret
xchg
test
lock
mov
and
xlat
daa
jmp
xor
cli
insl
cmp
cmc
cmp
mov
fwait
mov
(bad)
lret
sti
mov
sub
into
xor
in
add
leave
fwait
shll
shl
arpl
jo
lds
mov
xor
ficompl
out
sbb
outsl
push
xchg
gs
and
cltd
test
sbb
(bad)
pop
lds
pop
xor
or
xor
and
mulb
sub
add
pop
movb
xchg
xchg
inc
stc
lcall
int1
fistps
mov
insb
sbb
clc
mov
incb
pop
lea
test
xor
cmpsl
cmp
pusha
stos
das
test
mov
aas
lods
rcr
mov
and
imul
jge
mov
mov
dec
aaa
jl
(bad)
out
fdivrl
addr16
inc
sub
loopne
push
mov
ret
xorb
pop
mov
(bad)
in
or
mov
lcall
arpl
outsl
and
out
ret
cmp
sbbl
aas
jne
jge
ret
ret
out
or
into
cltd
out
data16
pop
inc
mov
sbb
sbb
sbb
out
inc
movsb
dec
pop
jp
jmp
out
scas
jge
dec
repnz
lahf
sub
mov
sti
(bad)
pop
sar
lds
jecxz
and
jg
jae
and
mov
enter
dec
jb
out
(bad)
daa
imul
dec
test
into
in
fbld
or
in
add
pop
addr16
mov
lret
inc
shl
inc
lock
xor
in
call
jb
stos
imul
data16
dec
outsl
jge
or
add
adc
insl
daa
cmpsl
cmpsb
lcall
cmp
and
lods
push
cmp
jmp
add
std
mov
xor
sub
push
sub
mov
frstor
lea
jns
stc
mov
mov
lock
mov
sbb
(bad)
mov
cmp
fsubrs
fwait
cmp
push
pop
and
clc
xchg
push
vpunpckhqdq
lods
inc
xchg
in
test
cltd
xchg
lahf
sbb
add
pop
in
mov
ds
dec
or
pop
fistpll
pop
inc
add
out
rolb
loop
push
ds
push
imul
out
and
xcrypt-ofb
cmpsl
sub
cmpsl
pop
mov
mov
(bad)
gs
pop
test
or
scas
xor
ss
mov
push
or
cwtl
or
mov
in
cmp
adc
in
push
hlt
and
xchg
(bad)
jmp
cltd
push
cmp
add
popa
sbb
mov
pop
ret
test
out
xor
dec
mov
test
push
mov
mov
lods
adc
push
shlb
out
dec
(bad)
cli
outsb
adc
fadds
xor
pop
adc
outsl
dec
cs
dec
xchg
stc
mov
int
or
decl
scas
jb
cli
jne
jmp
mov
pop
aad
fsubrs
(bad)
mov
ds
test
cwtl
out
divb
out
mov
mov
dec
data16
out
divl
pop
cld
lea
arpl
mov
lock
rolb
cwtl
(bad)
adc
dec
in
fbstp
inc
jae
fsubp
dec
push
imul
loope
out
out
std
sbb
shll
aaa
and
push
adc
fstl
daa
xor
or
call
addr16
and
lods
mov
cmpsb
mov
pop
int3
cli
xchg
fsubr
fwait
rorl
pavgb
xchg
shll
jg
mov
inc
sbb
sbb
sbb
dec
sub
cmp
repnz
jb
fsubr
add
int3
add
(bad)
repnz
add
mov
sbb
fstpt
jnp
push
xchg
sub
shlb
js
push
ja
int
les
mov
push
mov
ret
and
cmpsb
fsubrs
mov
les
mov
or
lahf
mov
xchg
pushf
adc
add
roll
cld
push
idivl
in
es
pop
cmp
lock
and
inc
push
pop
dec
mov
cwtl
jne
mov
scas
js
ffreep
lock
out
mov
fucom
outsb
or
pop
cli
fidivs
mov
sbb
mov
loopne
out
push
mov
lock
sub
add
in
push
and
cmc
jb
xor
xchg
push
in
and
pop
dec
insb
or
pop
pop
jp
mov
out
je
jg
push
fwait
sti
in
in
push
jmp
aam
imull
repz
outsb
add
fdivrl
mov
push
scas
stc
repz
jge
jb
mov
mov
es
mov
dec
add
out
andb
sbb
test
jge
fbstp
hlt
xchg
enter
push
mov
aam
ror
aas
adc
enter
pop
fisubrs
outsl
cmp
mov
fidivrs
frstor
pop
mov
fmull
ss
imull
cmpsb
xlat
aaa
mov
and
int
jne
pop
int1
lea
add
sbb
stos
(bad)
cmp
mov
xchg
cmp
outsb
out
ficompl
sbb
in
or
push
xchg
in
jl
in
jae
sub
out
adc
mov
and
dec
pop
sbb
inc
mov
scas
imul
(bad)
and
lahf
popa
lods
data16
sub
out
cmp
jg
xor
std
push
pop
imul
sub
inc
push
jno
out
or
in
xor
movsb
jmp
fcoml
mulb
lea
daa
(bad)
fildll
rcrb
cmp
push
andl
pop
scas
xchg
les
aad
lea
andb
push
stos
add
fdivrl
jo
cmpsl
es
dec
(bad)
iret
jne
testb
lock
pop
dec
mov
dec
cmp
enter
aaa
xchg
(bad)
or
push
(bad)
lea
gs
mov
pop
fnstsw
shrb
scas
daa
sub
int3
test
mov
pop
fs
enter
dec
insl
jns
push
(bad)
jo
out
mov
movsl
inc
pop
insb
scas
pop
sbb
out
out
pusha
sbb
mov
test
in
dec
xor
sbb
pop
call
or
xlat
add
inc
pop
and
mov
bound
adc
cltd
jb
xchg
inc
add
out
xchg
sub
out
flds
sti
fidivs
push
outsb
mov
add
clc
jbe
sbb
popf
jae
cmp
pop
push
add
je
ja
or
push
add
rorb
hlt
cmpsl
insl
out
js
cs
in
xor
cwtl
jnp
in
dec
pop
daa
cs
(bad)
and
ror
cwtl
cmp
pop
sbb
sub
std
jle
jb
xor
mov
int3
outsb
arpl
imull
notl
jmp
or
adc
scas
xor
pop
sub
jnp
les
mov
je
fnstcw
filds
out
decl
pop
(bad)
lahf
xor
sub
mov
pop
pop
sbb
fidivl
mull
out
add
cmovae
repz
or
ret
or
movsb
popa
pop
jnp
test
stc
(bad)
sahf
int
mov
ds
lahf
mov
jge
mov
pop
sbb
adc
pop
xor
sub
lret
cld
addl
cmc
sar
sub
lock
rcrl
pop
popa
mov
dec
mov
push
mov
xor
xchg
sti
loop
cmpsl
pop
in
dec
int3
dec
add
fincstp
xor
cmpsb
test
dec
xchg
push
gs
mov
mov
pop
or
in
arpl
js
pop
aam
xchg
add
or
push
stc
mov
mov
mov
inc
stos
pop
fdivrs
cmpsb
add
in
dec
mov
mov
or
jmp
sub
pusha
dec
fists
dec
shll
jg
mov
cld
mov
ljmp
in
push
dec
cmc
mov
sbb
test
jge
arpl
jno
mov
lock
cmpsb
add
cli
sub
inc
push
cmp
inc
xor
lret
cwtl
xor
mov
test
out
sub
cwtl
(bad)
out
adc
