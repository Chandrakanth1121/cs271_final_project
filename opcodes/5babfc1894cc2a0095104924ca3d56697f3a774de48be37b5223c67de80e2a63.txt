test
lea
test
xor
dec
lods
mov
mov
inc
sbb
inc
lea
jmp
sbb
(bad)
sbb
cwtl
aad
gs
decb
(bad)
mov
movnti
xlat
stos
push
push
int3
xlat
ret
mov
lahf
mov
inc
int
hlt
adc
shlb
ret
or
mov
test
js
inc
hlt
sub
and
and
ret
fcoms
jge
mov
xor
jmp
stos
bswap
cmp
pop
mov
es
dec
push
mov
imul
sub
adc
rcr
out
mov
fwait
push
mov
outsl
and
mov
pop
leave
xchg
xchg
pop
andb
mov
aad
sbb
dec
popf
cs
mov
mov
jl
mov
mov
mov
outsl
mov
cmp
and
mov
add
cmp
insb
mov
stos
sbb
and
dec
and
jno
cmp
mov
dec
cmpsl
ds
xchg
inc
lock
jle
mov
adc
cli
or
jns
imul
outsb
cmp
jmp
out
mov
or
int3
sbb
mov
inc
or
clc
mov
orl
cmp
int
ss
stos
jg,pn
dec
ja
inc
xor
cmp
cmp
fsts
mov
inc
mov
dec
pop
push
dec
dec
mov
push
inc
and
xor
btr
pop
xor
arpl
insb
repz
mov
ss
mov
add
(bad)
out
dec
mov
push
mov
or
cltd
cmp
mov
arpl
out
ret
sti
imul
gs
sbb
jg
in
mov
adc
mov
daa
cmc
push
repz
fwait
andb
pushf
ret
sub
mov
inc
sub
popa
outsl
leave
pusha
int3
mov
lret
xor
xchg
cmp
rorb
or
pop
mov
lret
push
push
xchg
cmp
call
and
dec
mov
dec
xchg
fdiv
adc
inc
test
rorl
hlt
sub
pop
dec
and
popa
test
pop
mov
aam
in
int
mov
repnz
xor
mov
and
mov
cld
add
push
lea
ljmp
sbbb
fwait
and
subb
dec
mov
adc
movsb
xorl
xchg
test
test
xor
ret
rcll
stos
leave
lods
std
loope
sbb
in
lock
lods
out
sub
xor
ss
out
or
sub
sbb
sbb
(bad)
adc
adc
repnz
inc
inc
mov
push
cmpsl
out
divl
hlt
ret
or
ret
pop
shrb
lock
cmp
lret
lods
adc
sub
cmpsl
mov
out
xor
fbstp
ljmp
mov
lcall
out
dec
rorl
push
mov
pop
mov
dec
(bad)
mov
int3
pop
inc
pop
mov
stos
std
pop
lds
mov
nop
andb
leave
dec
inc
sbb
call
sub
mov
jbe
idivb
sbb
inc
inc
fwait
inc
xor
xchg
push
stos
psllw
pop
add
jg
or
out
pop
pusha
dec
sbb
scas
lret
clc
mov
aaa
inc
adc
cmp
fistps
fcmovne
inc
sarl
pop
jo
popf
inc
jl
and
jecxz
fidivrl
inc
jge
inc
mov
inc
in
jo
mov
jbe
or
insl
add
inc
rcrb
stos
add
mov
inc
int
pushf
cmp
xchg
cmp
mov
repz
inc
mov
or
xchg
nop
aaa
dec
adc
notl
dec
inc
xchg
movsl
sbb
and
mov
mov
popa
adc
stc
adc
jnp
or
mov
inc
mov
roll
aam
xchg
xor
push
or
cmp
imul
(bad)
and
adc
in
into
imul
pusha
xchg
cmp
mov
pop
sub
(bad)
push
push
mov
inc
cmc
push
ja
push
adcb
jae
mov
imul
lea
ret
xor
(bad)
jle
inc
add
inc
xor
push
pop
add
jb
push
mov
mov
xor
(bad)
in
pop
sbb
rcl
inc
mov
sbb
das
pop
cmp
pop
test
leave
mov
lods
repz
push
jbe
mov
rorl
lea
inc
pop
(bad)
das
push
rolb
out
xchg
fwait
addr16
pop
mov
add
push
cmp
aad
inc
mov
outsb
ds
or
sbb
stc
(bad)
xchg
in
(bad)
xchg
idiv
in
add
(bad)
push
lods
fcomi
push
push
ds
inc
daa
jbe
mov
or
pop
imul
push
cmp
cmp
rcrb
pop
inc
mov
stc
sub
mov
stc
add
cltd
int1
movsl
inc
aam
jo
and
push
sub
inc
cmc
push
aaa
inc
sub
dec
mov
mov
mov
(bad)
pop
daa
push
inc
(bad)
mov
out
push
cld
adc
into
int1
out
les
jg
dec
imul
iret
out
inc
les
pop
cmp
inc
mov
cmp
sbb
mov
fsubrs
mov
push
stos
or
mov
mov
test
sbb
rorb
jmp
fs
mov
or
push
inc
addr16
inc
sub
mov
add
mov
inc
xor
xor
pop
pop
pop
jp
les
push
rcll
iret
nop
shrb
lcall
sbb
adc
iret
roll
mov
leave
loopne
popf
inc
add
decl
in
addr16
test
mov
out
sbb
outsl
jo
xchg
je
sti
hlt
or
aad
stc
fmull
inc
xor
push
imul
shrb
inc
mov
mov
adc
lcall
mov
int1
add
cwtl
xchg
inc
xorl
xor
cmpsb
pusha
pop
lcall
and
mov
or
inc
cmp
ja
inc
xchg
xlat
movsb
cmp
bound
xchg
dec
pop
pop
push
mov
inc
mov
dec
cld
mov
(bad)
cs
adcb
std
repnz
test
int3
mov
jg
jne
sti
mov
dec
out
and
jne
and
loope
mov
and
inc
iret
or
mulb
ds
movsl
push
jne
out
lret
mov
into
inc
sub
add
ds
xchg
mov
mov
push
mov
xor
push
mov
push
cltd
cmp
push
std
inc
lret
cwtl
add
pop
adc
pop
test
mov
jle
inc
pop
push
dec
das
stos
(bad)
pop
cmp
mov
fsubrs
cmp
cmc
dec
out
mov
data16
notb
mov
stc
fcmovu
cmc
lret
xor
stc
ja
test
pusha
pop
inc
push
sbb
outsb
repz
push
outsl
sarb
pop
jns
sub
mov
xchg
xor
out
xchg
cmp
inc
imul
scas
mov
cmpb
and
mov
jbe
push
xchg
dec
out
mov
lods
ds
ss
mov
ds
cmp
rcr
sbb
out
pop
inc
test
mov
out
aad
mov
xor
outsl
cwtl
inc
popf
sbb
mov
sbb
inc
lret
mov
or
mov
cmp
cmp
or
ja
cmp
jge
lds
imul
sub
and
inc
imul
ffreep
fwait
inc
pop
jns
mov
imul
inc
inc
repnz
fldcw
push
mov
rol
push
test
dec
cmp
mov
xor
sahf
xor
shr
cld
or
bound
imul
push
xchg
leave
sbb
test
dec
pushf
dec
pop
inc
pop
lret
das
dec
(bad)
subl
jnp
(bad)
js
and
shrb
pop
test
jmp
xchg
dec
out
xor
(bad)
ret
test
outsl
call
mov
push
sub
iret
mov
mov
push
add
ficoms
insl
or
loope
clc
jl
call
add
xchg
mov
and
enter
ja
in
cmp
les
sti
cmp
dec
fwait
je
push
sbb
pop
inc
dec
xor
fs
fistpll
orb
mov
jle
adc
mov
loop
adc
ljmp
jl
sub
mov
xchg
(bad)
mov
cmpsb
