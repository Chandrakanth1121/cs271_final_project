lods
fwait
and
sbb
loopne
jecxz
in
add
mov
int
dec
jne
or
inc
les
push
addb
int1
frstor
scas
pop
cmp
lock
xor
pop
outsb
or
pushf
and
jg
int
notb
pusha
scas
xchg
xchg
movsl
push
push
dec
sbb
mov
ret
mov
dec
fnstsw
les
lock
adc
xor
jo
ret
pusha
loopne
and
test
sahf
or
(bad)
sarb
pop
mov
xchg
data16
jecxz
or
insl
arpl
dec
mov
pop
mov
xchg
clc
cmp
lods
int1
loopne
std
aas
leave
push
mov
cwtl
leave
outsl
fisttpll
pop
int1
mov
or
push
loop
pop
idivb
and
ss
data16
fistl
addr16
sub
stc
adc
jbe
les
rclb
test
cli
pusha
mov
xchg
cmpsw
push
out
iret
mov
sub
cmp
jmp
add
sarl
xchg
jl
mov
int1
xchg
mov
loope
mov
dec
mov
mov
loop
mov
and
shll
inc
cmp
pop
(bad)
mov
int
cmp
push
lret
adc
mov
cmp
push
ja
mov
mov
xchg
mov
xchg
movl
adc
addr16
sbb
xchg
sbbl
mov
aaa
shr
jecxz
mov
xchg
dec
sbb
mov
int
push
mov
mov
xor
sahf
jmp
pop
mov
jo
loope
fcmovne
(bad)
outsl
fs
mov
and
mov
sti
lret
fcoml
mov
es
dec
xchg
and
out
or
mov
mov
int
cltd
xlat
aam
nop
cmp
pop
sbb
pop
xor
rcl
cmp
mov
dec
jle
xchg
out
or
fwait
inc
sbb
xor
je
xor
dec
lret
gs
ret
nop
adc
push
push
mov
out
lret
les
mov
and
inc
rolb
or
xchg
or
lahf
xchg
movsl
jl
mov
out
dec
inc
mov
cmc
inc
dec
mov
ret
sbb
notb
fisttpl
fs
push
pop
xchg
mov
out
xchg
cld
mov
gs
push
arpl
repz
shll
popa
fistl
add
xchg
push
addr16
push
andl
int3
push
into
add
mov
cmpl
jg
adc
repnz
repz
int3
leave
subl
scas
sbb
fidivrs
aam
jg
fldcw
std
lea
xor
(bad)
xchg
lods
jmp
fwait
pop
push
addr16
popf
add
push
or
cmp
je
mov
dec
adc
insl
jecxz
aad
mov
stos
or
in
cmpsb
arpl
mov
adc
(bad)
mov
mov
lea
mov
lcall
sub
test
frstor
fsubs
psllw
xor
xchg
mov
or
dec
xchg
lret
flds
(bad)
mov
adcb
mov
loop
dec
cmp
decb
adc
test
fcmovb
mov
shll
gs
lcall
adc
nop
ja
flds
aam
rolb
jmp
addb
dec
out
imul
ret
pop
stc
cmp
testl
test
aas
mov
xor
rcr
mov
out
inc
dec
sarb
or
pushf
fstpl
jae
xchg
jge
mov
mov
push
mov
push
and
jns
pop
fstpl
fistps
int3
mov
mov
int1
xlat
fimull
(bad)
push
aaa
xchg
jg
jns
mov
arpl
add
xchg
je
xorb
cltd
xlat
dec
imul
jp
hlt
(bad)
cmp
mov
lock
add
mov
mov
(bad)
inc
mov
and
int1
test
(bad)
adc
adc
sub
and
mov
adc
xchg
shl
mov
popf
add
add
sub
je
(bad)
sub
cld
popa
repz
popa
jb
lods
xchg
dec
and
cmp
ljmp
aam
adc
xchg
fistpll
or
pop
subb
xchg
scas
xchg
fiadds
in
aaa
aam
mov
shll
fnsave
or
mov
enter
xor
dec
test
xchg
test
and
and
jmp
adc
cmp
popf
rcll
pop
std
xor
sbb
insl
sbb
ljmp
out
xchg
test
cmp
cli
jl
ret
shl
add
adcl
inc
xor
loopne
fbstp
repnz
popf
lods
hlt
test
(bad)
push
mov
mov
jne
cmp
ret
repz
mov
pop
push
mov
xchg
xchg
int
cmc
mov
sbb
(bad)
out
std
xchg
mov
(bad)
jecxz
das
pop
sub
or
sub
iret
push
pusha
in
or
push
aam
add
adc
int1
push
(bad)
ds
frstor
mov
outsb
(bad)
loopne
in
inc
loop
into
push
inc
cmpsl
mov
es
mov
xor
cmpl
int1
push
mov
push
xchg
mov
jl
pop
je
push
push
mov
push
and
je
test
or
jne
cmp
test
lods
popf
jae
pop
jg
mov
stc
pushf
cwtl
cmpb
pop
jl
stos
mov
test
lcall
fsubrs
sbb
int1
pop
insb
jmp
stos
pop
arpl
lock
nop
js
jl
(bad)
dec
fstpt
and
dec
xor
popa
sub
xlat
mov
push
adc
lret
and
pop
pop
adc
hlt
pop
xchg
lods
xchg
mov
and
es
adc
int1
scas
dec
xchg
(bad)
xchg
inc
in
pop
or
xchg
lret
repz
mov
adc
fistpl
test
dec
scas
ljmp
add
sbb
int1
ds
out
jnp
addr16
jecxz
mov
mov
ja
push
sbb
sbb
mov
(bad)
fst
or
ja
sbb
adc
roll
cmc
sarl
sub
jns
or
mov
sub
inc
test
or
call
fistpll
or
and
int
fldl
mov
outsb
push
lods
and
jbe
movl
or
sbb
(bad)
push
nop
jge
inc
ror
dec
mov
(bad)
popa
inc
nop
fadds
loop
into
fwait
or
xor
mov
mov
(bad)
lret
imul
push
mov
jle
and
lcall
and
ljmp
call
adc
pop
jecxz
sub
add
iret
in
pop
(bad)
mov
pop
push
xchg
mov
jl
ja
fwait
cmpsb
cmp
subb
sub
push
int3
std
ret
push
movsl
adc
adc
(bad)
std
push
sub
or
xchg
scas
cmpsb
test
negl
add
push
jno
hlt
jle
(bad)
mov
pop
adc
(bad)
js
sbb
ljmp
les
bound
lea
int
in
sub
mov
adc
cmp
(bad)
adc
add
insb
sub
repz
cmp
in
shll
lret
jl
les
xor
lahf
test
cmp
push
xchg
inc
mov
fisttpl
arpl
popf
mov
push
xchg
pop
imul
xlat
jl
dec
adc
(bad)
xor
cmp
inc
inc
pop
shl
mov
push
jae
fwait
arpl
cmp
mov
jmp
push
(bad)
and
inc
xor
add
inc
(bad)
int1
xchg
cmp
push
mov
and
imul
insl
jne
and
mov
(bad)
adc
addr16
jecxz
inc
ss
dec
dec
cltd
(bad)
cmpsb
xor
mov
or
aad
jae
pop
jge
daa
loop
adc
adc
push
cmp
fbld
adc
pop
nopl
or
cmpsb
mov
jmp
or
dec
ret
jge
dec
dec
orb
push
push
jle
jno
ljmp
mov
mov
test
mov
mov
push
jecxz
nop
ja
pop
cmp
scas
dec
or
dec
nop
nop
leave
fs
cmpsb
fcomi
fildl
ficomps
fs
add
jle
or
cmpsb
add
out
mov
mov
add
imul
xchg
add
aas
adc
std
pop
shl
in
orps
pop
(bad)
aas
sub
jle
xchg
xor
pop
sub
xchg
cli
bound
push
ja
movsl
sti
xchg
jecxz
das
fwait
mov
mov
