das
shlw
sbbb
out
or
je
push
pop
sub
(bad)
loope
loop
dec
imul
std
enter
adc
pop
sti
lcall
mov
adc
cld
data16
mov
gs
jno
arpl
push
cld
push
jmp
inc
fstps
and
sub
(bad)
stos
iret
xor
mov
int1
in
inc
jnp
scas
jecxz
rolb
xor
xchg
sbb
call
push
in
test
arpl
pop
adc
jge
outsl
add
adc
dec
or
or
outsb
pusha
into
ljmp
sub
les
jae
fisubrl
fistl
lods
data16
fs
imul
pop
es
cmp
lods
and
out
cmpb
addb
jb
ret
int1
push
test
and
add
sbb
fdiv
sbb
or
pushf
sbb
mov
imul
insb
daa
push
push
xchg
mov
fld1
ljmp
in
test
repnz
int1
in
cmp
hlt
mov
loopne
jno
sbbb
cmp
aad
push
movd
outsb
cmpsb
or
or
pop
outsb
(bad)
jle
popf
int1
jl
dec
mov
adc
mov
stos
jg
popf
ss
fucomp
idivl
mov
movl
pop
jno
stc
cmpsb
mov
fsubs
sub
jp
add
xchg
sbb
inc
sub
sbb
clc
mov
xorb
push
roll
iret
dec
out
mov
stc
test
jl
jge
pop
inc
mov
aad
into
adc
outsl
lods
jle
adcl
hlt
jnp
test
mov
dec
adc
imul
jb
(bad)
push
jl
(bad)
inc
out
dec
shll
out
add
or
test
mov
sbb
xor
xchg
test
ret
pop
daa
inc
sti
mov
adcb
ret
push
dec
(bad)
test
rorb
push
into
loope
scas
fwait
pop
mov
nop
lahf
push
test
push
mov
mov
xlat
xchg
dec
loope
and
test
outsb
roll
das
ljmp
sarb
mov
xchg
pop
andl
push
test
mov
fnstenv
jg
push
ret
in
cmp
dec
dec
push
mov
stc
les
mov
and
sbbb
mov
arpl
sub
cmp
or
out
data16
shll
lea
js
jbe
mov
bound
dec
shll
fiaddl
xor
xchg
cmc
shr
into
sub
out
fdivs
fmuls
push
xchg
xor
add
mov
mov
fdivr
sub
add
fs
pop
and
lods
xchg
js
lret
leave
insb
rclb
push
mov
rcr
sbb
(bad)
fwait
push
xchg
jg
ret
add
sub
fadds
pop
and
orb
inc
dec
jp
jb
cmpsb
test
lods
adc
je
fstp
jle
enter
fwait
pop
bound
xchg
int1
sub
lret
shr
lods
dec
xchg
(bad)
imul
sub
add
ret
xor
mov
adc
inc
push
stc
xchg
popf
add
pop
arpl
jbe
(bad)
mov
fildl
sbb
dec
cmp
xchg
sar
stos
dec
xor
arpl
shlb
jecxz
std
les
and
cli
xchg
and
lods
fadds
movsl
leave
dec
(bad)
(bad)
lret
xlat
jg
(bad)
cmpsb
dec
addr16
mov
cli
mov
push
push
shrl
sbb
cmpsb
test
ljmp
ds
sub
inc
cmp
fisubrl
(bad)
and
cmp
in
shr
mov
push
cs
lret
sub
or
ds
jle
xchg
movsb
data16
mov
mov
add
mov
pop
push
popf
dec
outsl
cmp
pop
sub
loop
dec
inc
push
stos
sbb
out
pop
and
bound
sub
cld
in
xor
sub
sub
mov
mov
shr
xchg
repz
fisubl
jne
ret
sub
jge
ficompl
sub
jno
pop
mov
sahf
test
(bad)
stos
les
arpl
dec
subl
setae
inc
xchg
arpl
xchg
jp
test
in
dec
or
lock
sbb
arpl
imul
imul
xor
cwtl
inc
cli
pop
stc
jmp
pop
mov
sub
fsubrs
int3
cltd
scas
aad
jl
cmp
insb
arpl
inc
mov
pop
ret
jle
xchg
mov
and
mov
ds
les
jge
into
ret
out
mov
push
jmp
in
push
sbb
or
dec
push
mov
(bad)
jns
dec
loope
cmpsb
mov
push
jno
ljmp
dec
xorb
ljmp
inc
in
sti
out
sbbb
(bad)
and
sbb
mov
mov
movl
and
add
orl
(bad)
sti
sub
outsb
lahf
sbb
push
add
outsb
inc
popf
test
mul
fstpl
inc
mov
push
and
shrl
lea
sarl
sahf
js
out
inc
cld
pop
xor
and
add
std
mov
jl
mov
inc
xchg
ds
jp
movsbl
insl
dec
or
jle
int3
cmc
(bad)
mov
pop
adc
jo
ret
xchg
movsl
dec
(bad)
imul
dec
mov
or
dec
mov
in
mov
mov
loopne
dec
xchg
xor
dec
pop
arpl
mov
sbb
xchg
rclb
stos
sub
mov
out
(bad)
aad
dec
inc
outsb
pop
pop
pushf
adc
push
cmp
ficoms
dec
mov
jo
jl
movsl
stos
mov
(bad)
in
insb
add
push
test
jne
sbb
add
dec
and
mov
lods
and
testb
mov
jle
jae
stos
loope
dec
mov
xor
movsb
leave
mov
in
mov
or
jl
out
inc
sbb
add
mov
add
xchg
cmp
lods
stos
(bad)
xchg
push
dec
sbb
sbb
(bad)
outsb
sbb
fists
add
inc
xor
xchg
cmc
(bad)
mov
mov
jmp
cmp
adc
mov
(bad)
movsl
repz
aas
lods
flds
mov
jne
shlw
sbb
aam
mov
fdivl
jl
push
pop
pop
pushf
rcrl
mov
fstpt
push
les
in
lea
shl
lods
xchg
lret
sub
dec
stc
xor
loope
cltd
loope
rorb
jl
push
loop
pop
out
out
sub
xor
stos
and
orl
jns
jl
out
or
adc
in
xlat
or
push
data16
pop
dec
(bad)
dec
xchg
bound
adc
push
call
and
test
jno
mov
push
js
test
xor
shr
xchg
scas
fst
xchg
push
sub
xor
mov
fisubl
insb
mov
stos
dec
xor
mov
imulb
mov
add
xor
sti
outsl
push
jbe
jbe
pushf
js
out
(bad)
sahf
(bad)
cltd
inc
(bad)
sub
dec
into
pop
xchg
mov
out
roll
rcr
and
jmp
pop
popa
add
int1
pop
mov
imul
lret
push
mov
cmp
sbb
sti
mov
push
inc
orb
cmp
int1
popf
jne
jp
push
scas
xchg
push
dec
push
push
dec
xchg
fdivs
mov
fsubl
push
pop
out
mov
pop
mov
lret
in
xchg
dec
pop
popa
fldt
xchg
push
mov
lcall
xor
leave
ljmp
les
fdivs
dec
clc
mov
sbb
mov
cmp
mov
or
jae
jp
outsb
popa
stos
cmpsb
rcl
repnz
(bad)
pushf
xor
xchg
sub
mov
jge
lods
mov
dec
gs
in
std
jg
mov
push
sbb
mov
mov
repnz
in
push
pop
mov
jmp
jbe
sub
jno
pop
pop
jle
in
push
fwait
nop
dec
cmc
addr16
fisubs
into
je
mov
sub
ss
out
pusha
jge
(bad)
fwait
(bad)
mov
adc
jae
xchg
pushf
push
ds
add
dec
outsl
add
jb
xchg
mov
fs
call
enter
int
pop
dec
sub
mov
clts
dec
jg
mov
lret
test
