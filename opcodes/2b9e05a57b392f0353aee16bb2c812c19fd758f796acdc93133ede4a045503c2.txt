inc
cmpsl
jae
xchg
sub
insl
jl
xchg
nop
stos
lods
pop
test
loopne
mov
xchg
out
scas
jnp
scas
mov
ret
dec
inc
adc
pop
cmp
pushf
aad
fiaddl
orb
adc
adc
xchg
shrl
mov
andb
subl
jecxz
pop
pop
cs
mov
out
out
mov
das
in
add
outsb
dec
popf
in
lahf
and
fcompl
mov
xchg
lret
mov
and
fwait
pop
sub
ss
xchg
mov
adc
cs
js
das
rcrb
(bad)
sbb
hlt
xchg
pop
sbb
mov
dec
push
rcrl
mov
sbb
fidivl
mov
xchg
fdivrs
bound
stos
xlat
adc
bound
mov
sub
mov
fwait
out
xchg
div
cs
nop
add
stos
jnp,pn
jb
jns
test
scas
repz
das
jge
pop
test
xor
addb
insb
jg
xchg
xchg
xor
pop
nop
movsb
sbb
daa
sub
lahf
cmp
cmp
test
(bad)
pop
test
fstpt
aam
add
imul
andl
push
scas
xchg
nop
popa
xchg
inc
cwtl
clc
popf
pushf
sub
arpl
mov
mov
mov
xchg
scas
(bad)
xchg
mov
es
mov
jae
test
imul
sarl
jbe
repz
aas
sub
mov
sbb
mov
jns
int
das
xchg
push
cmp
addr16
(bad)
sbb
fdiv
std
insb
push
push
lock
add
lcall
fnstsw
sarl
into
dec
jnp
mov
out
in
enter
mov
repnz
dec
and
dec
leave
and
insb
das
pusha
mov
xorl
fidivl
lcall
push
std
pop
fists
imul
push
in
in
or
fdivl
mov
jecxz
push
push
jbe
loope
in
push
sub
jb
sbb
in
adc
jae
imul
push
lods
lods
ret
shlb
xchg
or
mov
mov
cs
inc
jg
fmuls
mov
xor
xchg
hlt
cmp
popf
adc
sub
scas
loopne
push
(bad)
jne
mov
mov
loope
mov
mov
jne
fsubrl
lret
divb
push
or
pushf
inc
dec
jl
lahf
mov
jp
sbb
sbb
push
xchg
xor
stc
mov
xor
(bad)
or
cmp
mov
mov
mov
add
int3
xor
ret
jle
adc
xchg
add
int3
xor
dec
push
mov
fsubrp
xchg
pop
hlt
and
movsb
or
hlt
mov
out
sub
mov
jbe
adc
mov
dec
and
int
test
int3
sti
mov
push
insl
pushf
fs
imul
add
outsb
insb
loop
test
mov
in
sub
sbb
jge
xchg
pop
and
push
push
adc
pop
repz
addl
xlat
sarb
mov
andl
inc
xchg
loopne
outsb
test
not
hlt
and
dec
jnp
jns
cli
sub
mov
dec
xlat
inc
fisttps
push
xor
loopne
lea
addr16
shl
mov
mov
xchg
insl
mov
mov
movb
test
mov
mov
push
cld
insb
or
push
ds
jnp
(bad)
sub
shr
mov
hlt
mov
mov
shll
popa
pop
ret
adc
mov
je
cwtl
push
popf
iret
dec
jmp
sbb
data16
pop
int1
jo
sub
aam
cld
pop
push
mov
es
inc
mov
hlt
jb
repz
pop
sbb
js
shrl
cmp
mov
rorl
arpl
lret
xchg
(bad)
mov
ror
test
fsts
pop
add
(bad)
out
shll
pushf
imul
pop
jle
aad
sbb
cltd
cmp
inc
push
enter
inc
sub
mov
aas
adc
mov
pop
cwtl
std
repz
pop
ror
jmp
jle
sbb
add
xchg
pusha
lahf
(bad)
jo
jg
dec
(bad)
sbb
push
arpl
lahf
dec
mov
pop
cmpsb
stc
mov
btc
out
subb
xlat
pop
lret
mov
sahf
fisubrs
jo
loop
xchg
sti
jns
xorl
scas
adc
enter
subb
pop
call
or
dec
(bad)
lods
xchg
pop
daa
jb
nop
aas
push
int
in
in
cwtl
arpl
sbb
out
neg
cltd
lret
cmc
andb
hlt
dec
pop
dec
jp
es
cmp
push
popa
ret
jge
jg
out
mov
inc
or
movsb
adc
mov
fdivl
pop
in
jmp
loop
lds
adc
call
outsb
insb
cld
das
cld
push
mov
mov
adc
cli
ficoms
xchg
or
iret
shrb
gs
sbb
jmp
and
hlt
call
jmp
iret
sub
pop
test
scas
std
cmp
scas
repnz
stos
repz
out
push
ss
outsb
jns
out
xlat
sbb
mov
push
stc
fcompl
popf
inc
mov
inc
xchg
test
sub
pop
lahf
xchg
inc
loopne
push
(bad)
stc
and
mov
jnp
popf
fwait
cli
repz
sbb
test
pop
lods
fcomp
jl
xlat
xchg
sahf
xlat
sbb
iret
fstl
adc
mov
aam
scas
push
ficompl
push
add
push
jno
add
insl
add
mov
cmpsl
mov
add
das
xchg
mov
cmp
mov
dec
cmp
lahf
stos
neg
cmpsl
fiaddl
xchg
test
popf
inc
hlt
push
pop
adc
add
lock
fists
xchg
in
jb
pop
(bad)
dec
popa
sbb
insb
jnp
and
mov
pop
add
inc
cli
add
int1
sub
dec
in
ret
in
sub
(bad)
push
lods
jge
(bad)
stos
test
inc
nop
mov
iret
mov
lods
mov
push
and
ret
sub
xchg
mov
cmpsb
es
sub
and
out
jae
or
xchg
inc
imul
cmpb
mov
shrb
mov
xor
and
in
jb
test
aam
fimull
test
or
test
or
dec
pop
mov
mov
arpl
out
mov
lods
insl
pop
push
and
std
mov
pop
pop
cs
cmp
add
je
rol
mov
sbb
push
xchg
imulb
(bad)
and
inc
bound
mov
repnz
sbb
cmpsb
lahf
int
lods
sahf
insb
cmp
insb
shlb
mov
pop
sub
test
lds
out
(bad)
insb
loopne
stc
movsl
aaa
imul
mov
das
xchg
jae
sahf
repz
mov
push
into
imul
(bad)
or
mov
lea
or
mov
xor
mov
in
pop
clc
mov
lods
jbe
rorl
jbe
mov
sub
repnz
faddp
pushf
sub
sahf
scas
xor
aas
sub
xor
out
rorb
lods
sbb
jle
jns
mov
test
pop
cmp
lret
sbb
jns
out
xchg
mov
jl
and
push
xchg
lret
cltd
inc
mov
xor
out
negl
push
pop
fdivrl
mov
fldt
les
test
movsl
xabort
adc
xor
cwtl
xchg
es
mov
add
es
pop
dec
xchg
stos
aam
fsubr
mov
in
cmp
adc
pop
pop
mov
rcll
cmp
in
xlat
andl
add
xchg
pop
jae
jl
daa
sti
lods
mov
mov
imul
lods
in
mov
sub
gs
ret
daa
ficoms
and
mov
adc
adc
sbb
mov
popf
outsb
cmpsb
inc
gs
sub
aaa
sahf
fwait
and
lret
add
insl
and
and
adc
adc
xchg
and
cmpl
rcrb
push
out
paddsw
adcl
inc
outsl
push
js
shl
fisubrs
stc
(bad)
dec
movsb
iret
push
cmp
aad
pop
jns
loope
push
(bad)
hlt
mov
and
jmp
out
repz
rcrb
add
mov
pop
fsubrl
gs
lock
iret
