loope
sub
xor
xchg
cmpsl
jae
and
dec
inc
dec
cld
jae
xor
inc
mov
sub
repz
lcall
inc
(bad)
jns
cmp
jmp
xor
test
cmpsb
or
jb
ret
lods
sbb
ss
or
mov
stos
(bad)
sbb
cmp
mov
and
clc
test
sbb
les
mov
hlt
(bad)
inc
and
ljmp
aam
xlat
test
sbb
mov
pop
(bad)
fistpll
inc
mov
shr
loopne
jns
cmp
xchg
adc
das
je
test
mov
mov
fnstenv
in
xchg
push
cld
mov
fnsave
push
sbb
imul
lcall
and
pop
sahf
pop
push
jbe
adc
andb
adc
and
jbe
push
xchg
popf
mov
mov
nop
data16
mov
aam
sbb
add
and
xchg
clc
jmp
mov
xor
cli
pop
mov
pop
and
mov
jmp
mov
add
mov
test
jl
mov
addr16
cmp
xchg
out
fidivrl
jnp
add
cwtl
and
jns
scas
jnp
mov
test
iret
push
lcall
(bad)
fisubl
or
xor
dec
push
and
in
pop
sarl
clc
mov
outsb
test
test
mov
roll
or
or
repnz
testl
mov
(bad)
pop
rcll
sub
add
adc
mov
mov
jecxz
pop
in
mov
mov
inc
aaa
xchg
mul
nop
dec
inc
lea
mov
les
mov
mov
mov
mov
xchg
add
pop
xlat
int
out
out
(bad)
js
mov
push
jg
lods
test
mov
sarl
(bad)
jb
sbb
push
clc
mov
cwtl
loopne
mov
ja
rep
mov
loop
inc
add
stos
nop
xchg
cmp
lahf
ret
cmpsb
es
lods
stc
out
std
lock
test
xchg
adc
mov
call
lret
jg
(bad)
(bad)
repnz
(bad)
movsl
pop
loop
gs
test
movsl
rcll
nop
out
rcr
mov
xchg
test
(bad)
ja
mov
add
test
jge
in
pop
jmp
push
rclb
pop
jmp
ret
jno
lret
adc
mov
bound
pop
dec
in
pop
ljmp
(bad)
clc
jge
jno
fisubrs
enter
sti
sbb
imulb
jne
test
push
shrl
ljmp
add
cmp
lret
stos
cwtl
leave
enter
repz
dec
dec
sbb
sbb
lock
das
in
mov
(bad)
mov
loop
in
mov
sbb
lock
xor
or
dec
add
sbb
in
pop
mov
fiadds
jge
(bad)
test
loope
mov
jl
in
repnz
pop
push
out
mov
jecxz
sarl
mov
insb
(bad)
js
dec
aam
cmp
pop
or
jecxz
mov
fistps
sbbl
in
out
pop
hlt
mov
fisubs
out
mov
sub
mov
cmc
imul
scas
adc
jmp
push
push
test
and
loope
aam
aas
xor
hlt
mov
cmp
movsl
js
dec
in
add
xor
or
movsl
fdivrl
push
cltd
repnz
aad
stos
cmp
adc
insb
add
sahf
scas
xchg
xchg
pop
lret
lods
ret
cmpsl
add
mov
(bad)
int
rolb
dec
leave
dec
inc
lret
xchg
pop
sub
add
xor
xchg
mov
add
popf
subb
cwtl
sbbl
call
lock
cli
xorb
insl
clc
(bad)
push
call
(bad)
xor
xchg
or
scas
or
mov
gs
add
and
pop
mov
add
push
fcompl
push
shrl
fdivrs
lret
leave
int
xchg
in
(bad)
popf
jge
repnz
xor
andb
adc
call
mov
std
adc
mov
adc
pop
mov
mov
and
pushf
push
adcl
pextrw
mov
cmp
shrb
(bad)
jp
sbb
jae
aam
lds
mov
pushf
push
mov
xorl
lret
leave
out
mov
xchg
sbb
mov
lret
loop
sbb
mov
inc
sti
or
lcall
jp
iret
inc
int
(bad)
inc
inc
jae
call
jmp
inc
sub
lcall
stc
inc
push
pop
mov
add
loopw
shlb
or
repz
add
xchg
xchg
xchg
lret
mov
cmp
add
rcll
dec
(bad)
orb
mov
and
cmpsl
leave
test
hlt
mov
xor
lods
out
xor
popf
sub
into
in
or
mov
out
push
and
or
aam
lock
xor
shlb
cltd
xor
movsb
fidivrs
jmp
cli
mov
test
push
mov
cltd
jmp
(bad)
pop
mov
lds
jecxz
iret
adc
ret
je
mov
mov
testl
mov
or
(bad)
lret
mov
(bad)
mov
out
lods
mov
dec
leave
cmc
test
mov
bound
inc
mov
cmp
das
mov
pop
int3
adc
inc
repz
ja
xor
pop
stos
push
xchg
clc
mov
sbb
xchg
cmp
lds
out
mov
mov
jae
mov
adc
loopne
xchg
lret
ds
shrb
test
(bad)
xor
mov
mov
(bad)
dec
or
jecxz
mov
stos
mov
jno
int
inc
cmp
mov
sbb
add
fistpl
xor
mov
in
mov
pop
jle
mov
iret
xchg
daa
andb
push
ja
and
jb
add
bound
out
xchg
pop
sbb
stos
in
add
rcrl
inc
mov
xchg
mov
jns
cs
test
cld
sti
add
and
cmp
pop
lret
ss
pop
dec
fwait
jg
lea
rorb
in
in
adc
insl
jb
fbld
adc
fmul
or
lcall
loop
(bad)
out
jmp
and
stos
mov
lea
aad
pop
cmpsb
xchg
(bad)
std
insl
(bad)
pop
fistl
xchg
mov
push
imul
jae
dec
mov
mov
in
xchg
mov
out
mov
adc
add
ficomps
cmovnp
push
repz
sbb
mov
jl
jo
jne
mov
leave
mov
arpl
mov
out
xor
mov
addb
mov
mov
mov
and
inc
test
add
dec
rorb
dec
sbb
movsl
arpl
stos
nop
add
and
out
xor
iret
inc
xor
lods
jp
in
xchg
mov
mov
jg
bound
mov
scas
cmp
ret
xor
pop
mov
jg
aad
in
push
xlat
fcmovb
mov
mov
mov
add
movsl
test
xchg
mov
enter
ss
out
or
mov
mov
or
jp
jecxz
adc
call
mov
cld
adc
(bad)
cld
test
loope
ja
test
push
mov
lock
mov
aam
arpl
push
fiadds
push
sbb
(bad)
jecxz
and
mov
call
das
adc
repnz
sub
sub
jle
dec
sbb
int1
daa
filds
dec
mov
arpl
pop
addr16
les
xchg
jmp
mov
stos
sbb
sahf
inc
mov
fnsave
mov
inc
pop
cmpsl
mov
mov
xchg
adcl
andl
int
jb
cltd
adc
lock
daa
mov
cld
inc
lahf
jns
je
lret
sbb
inc
mov
xchg
jbe
add
lret
stc
(bad)
bound
lret
pusha
cmp
out
into
aad
loope
rolb
fwait
xchg
jmp
xchg
and
mov
loopne
fdivrs
add
fcmovnb
lcall
mov
(bad)
lret
data16
shll
scas
(bad)
out
jae
add
aaa
mov
mov
lahf
cmpsb
out
(bad)
jge
pop
mov
fwait
mov
fsubl
fists
mov
mov
mov
dec
or
sbbl
xchg
call
lods
lret
xchg
(bad)
insb
cmp
(bad)
and
xchg
push
scas
faddp
mov
jae
sub
pop
and
subb
xchg
arpl
(bad)
pop
addr16
pushf
push
stos
xchg
stos
dec
loopne
lret
dec
int
pop
