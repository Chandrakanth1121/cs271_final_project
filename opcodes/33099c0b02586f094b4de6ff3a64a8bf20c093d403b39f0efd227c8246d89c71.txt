repz
imul
shrb
lods
add
or
push
sahf
adc
or
and
pop
mov
stos
xor
inc
shrl
and
lret
pop
mov
mov
sub
(bad)
dec
jo
sub
push
sti
mov
push
cmp
dec
sarb
lock
pusha
adc
cmp
in
sahf
insl
and
aas
jno
xchg
pop
sub
into
rcrl
iret
out
cmp
nop
lea
sbb
fs
sub
and
and
add
adc
rcl
int
adc
jl
dec
js
pusha
mov
hlt
sub
jmp
cs
xchg
mov
mov
or
orl
xchg
mov
insb
sub
xchg
or
cltd
xchg
rcll
sub
test
pop
sub
lahf
shlb
pop
push
jno
mov
das
jmp
out
push
add
and
cwtl
mov
jle
add
lahf
add
mov
dec
rcll
sbb
jo
(bad)
loope
lods
int3
xor
lahf
test
pop
dec
add
sbb
and
push
jns
loop
out
scas
xor
xchg
cs
push
int3
sbb
ja
and
and
aas
sub
xor
outsb
adc
inc
sarl
int
push
imul
int
jle
xlat
shlb
in
enter
popf
push
push
repz
pushf
mov
aas
add
push
ds
sbb
loope
scas
sub
inc
jmp
fnstsw
js
inc
push
jmp
sub
mov
or
xchg
mov
adc
mov
out
mov
adc
inc
inc
and
inc
test
sbb
aad
push
das
mov
pop
mov
daa
mov
mov
repnz
insb
sahf
pushf
das
add
xor
cmpsl
std
cmp
mov
imul
push
out
scas
enter
mov
xor
in
in
(bad)
adc
cld
xchg
and
mov
loopne
add
fldenv
cli
xchg
jo
sub
fldl
(bad)
movsl
cmc
pop
pop
and
ss
jb
pop
insb
xor
cmpl
and
mov
sub
das
test
xchg
lock
add
imul
adcl
call
cmp
loop
les
not
gs
popf
popf
mov
popf
sbb
subl
dec
jmp
jnp
cmpsb
and
dec
add
std
mov
les
out
dec
int1
and
sbb
std
fdivs
mov
cmp
ss
xchg
xchg
push
cmpsl
cmp
and
js
or
fidivs
push
cmpsl
mov
sub
mov
mov
jle
push
pop
(bad)
out
pop
scas
pushf
pop
repnz
test
mov
arpl
test
cmp
aad
xor
cmpsb
inc
cltd
ret
or
xor
cmp
cmp
loope
int3
xchg
dec
lods
mov
cmp
stos
sbb
dec
jp
sbb
ss
pop
push
mov
mov
lret
loope
movsb
inc
and
stos
add
dec
sub
popf
and
cmp
push
shlb
loope
jns
mov
popf
mov
cmp
imul
mov
pusha
dec
mov
iret
mov
sub
mov
jno
cmc
aas
dec
jno
repnz
sbb
cmp
faddl
scas
push
pop
inc
mull
out
push
cli
mov
insb
mov
mov
add
xchg
mov
lret
popa
inc
daa
mov
lea
cmpsb
fsub
fstp
aas
in
pop
adc
xor
mov
xchg
daa
leave
rcrb
mov
mov
movsb
jae
call
je
mov
das
xchg
aam
(bad)
jno
jmp
in
lods
imul
cld
sarl
cld
mov
in
lods
xchg
rcrl
sbb
out
mov
das
mov
add
dec
daa
lcall
mov
repz
out
mov
cld
pop
adc
sbb
mov
les
shl
in
cmp
insb
es
pop
out
xchg
hlt
aas
daa
aam
add
cld
cmp
mov
lret
dec
call
and
sahf
push
cmc
xor
in
lea
movsl
mov
sbb
and
pop
dec
ret
jo
mov
js
push
or
aam
xor
mov
daa
loopne
or
pop
imul
repz
fcmovbe
pop
lahf
loopne
or
sub
dec
outsb
sub
das
(bad)
pop
jp
mov
push
dec
pop
in
pop
dec
fidivs
mov
lea
jg
inc
xchg
loop
xor
add
xor
xchg
pop
mov
sub
pop
dec
xor
jecxz
xlat
jae
pop
sbb
fisttpll
cs
in
in
or
add
xchg
in
and
pop
scas
push
movsl
hlt
dec
dec
mov
pusha
cmp
in
or
stos
xchg
dec
or
test
lods
mov
in
testl
out
in
fwait
repz
gs
add
bound
ret
cwtl
push
std
in
out
inc
rcll
int3
roll
out
(bad)
fimuls
fnstcw
dec
out
pop
insl
int
pop
cmp
xchg
sahf
and
ljmp
or
push
es
dec
xchg
pop
or
fsts
repz
test
inc
add
dec
xchg
mov
cmp
push
cmp
ss
inc
test
into
inc
ds
test
mov
adc
mov
dec
loopne
or
int
xchg
push
inc
test
movd
ret
movsb
mov
push
adc
sub
and
jo
fnstcw
jno
scas
jns
sbb
ds
mov
cltd
iret
cmc
add
inc
add
sbb
(bad)
jg
push
int
repnz
mov
xchg
das
dec
test
scas
(bad)
shrb
push
pop
push
fsubl
jecxz
dec
stos
and
mov
jns
adc
dec
mov
and
sub
repnz
repnz
mov
lods
lahf
aas
lock
pop
dec
mov
mov
fldt
dec
pop
cmp
sbb
cld
fisttpl
adc
jge
stc
fisttpl
cmp
add
ljmp
repz
(bad)
pop
in
push
rcl
xor
jnp
leave
cwtl
adcl
popf
int3
sub
jmp
je
push
jl
sub
xchg
js
inc
mov
xor
sbb
cmpsb
push
rcr
push
movl
popf
sarl
je
mov
push
pop
mov
out
gs
mov
push
shll
sub
in
inc
sbb
add
(bad)
mull
insb
call
(bad)
fildl
in
shlb
roll
movb
into
add
es
daa
sbb
test
push
es
inc
adc
test
push
andb
push
inc
sbb
inc
xchg
push
in
subb
inc
adc
sbbl
scas
jl
sbb
mov
ljmp
adc
in
mov
mov
fcmovnbe
mov
pcmpgtd
mov
stc
pop
cmp
xchg
mov
and
inc
jecxz
testb
fwait
jge
push
mov
in
int
sbb
cmp
adc
adc
test
cs
loop
(bad)
cli
testb
or
cmp
sub
lret
cmp
pusha
hlt
adc
mov
pop
(bad)
ds
insb
push
adc
div
push
pop
mov
dec
dec
rcll
xchg
cs
cmp
pusha
push
push
mov
jne
adc
sbb
call
push
jl
mov
sub
int3
sub
push
pop
fisttpll
mov
out
adc
cmp
test
clc
pop
aad
test
lret
fists
lahf
push
or
jl
fistps
sbbb
xor
fcompl
outsb
data16
cmp
or
arpl
stc
into
fstpl
jge
outsl
insl
sub
pop
push
cmp
xor
arpl
int3
fisubrs
push
mov
lcall
rep
pop
clc
inc
push
adc
adc
push
aam
cmp
inc
leave
jb
push
sahf
or
leave
pop
shl
testb
out
and
test
lcall
push
pusha
cmp
mov
lods
imul
pusha
push
pushf
dec
adc
push
push
fsubrl
out
js
mov
lcall
sub
pop
lret
std
jg
enter
scas
or
in
fs
mov
inc
push
sti
jg
outsl
in
rcr
jo
les
xor
lcall
mov
or
pop
in
sbb
in
ja
mov
nop
