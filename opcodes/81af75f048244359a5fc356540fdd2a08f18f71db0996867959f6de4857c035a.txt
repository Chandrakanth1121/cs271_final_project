dec
push
mov
cltd
(bad)
xchg
in
scas
add
(bad)
xchg
test
adc
aas
stos
ja
scas
cltd
push
rol
sub
jle
xchg
cmp
adc
adc
push
rcrb
loop
(bad)
xchg
fisubl
xchg
popa
push
mov
push
movsb
dec
sub
and
(bad)
popf
push
mov
sub
push
push
xchg
and
push
ss
fcompl
mov
inc
push
(bad)
mov
push
cs
scas
push
jle
jb
mov
push
push
sahf
aam
stos
jne
dec
daa
push
and
xor
shll
(bad)
aam
xchg
sbb
pop
mov
sahf
testb
adc
call
sub
push
into
lea
fcompl
dec
cltd
push
repnz
mov
push
xchg
lods
adc
mov
ljmp
in
cltd
add
gs
lcall
sbb
test
nop
scas
mov
jno
xchg
hlt
movsl
xchg
inc
jb
mov
pop
mov
mov
jne
pop
fiadds
pop
inc
jg
or
test
sbb
popa
mov
lahf
les
pop
pop
shll
mov
dec
nop
rorl
xchg
mov
pushf
mov
xchg
fimuls
add
test
pop
sahf
hlt
in
addl
sahf
ffreep
and
dec
fiaddl
fcompl
mov
pushf
push
data16
push
pop
pop
sbb
xchg
mov
xor
pop
jp
xchg
fists
lahf
add
jp
mov
stos
mov
pop
dec
test
xchg
mov
adc
push
sub
push
mov
add
ss
cwtl
cmc
daa
mov
cmpsb
mov
push
clc
adc
iret
in
int
xchg
pop
inc
nop
xchg
mov
adc
and
jge
pop
stos
adc
inc
pop
adc
pop
popf
or
or
xchg
jg
mov
scas
sub
jecxz
sbb
lds
loopne
jo
mov
jecxz
jbe
pop
pop
(bad)
jl
sbb
in
ret
sti
cs
mov
add
aad
xchg
test
jnp
cmp
dec
nop
pop
fwait
sahf
xor
shll
sbb
lock
push
mov
xchg
pop
mull
repz
test
imul
xchg
or
pop
scas
movsl
sbb
xor
cmp
nop
dec
les
add
pop
ss
mov
push
ds
pop
adc
leave
mov
jge
je
cld
aaa
push
or
jge
decl
jmp
arpl
dec
adc
enter
mov
inc
(bad)
xor
int3
mov
popf
imul
clc
aam
jbe
fstpt
or
(bad)
aaa
ds
pushf
cmp
xor
insb
mov
lret
out
lret
xchg
std
mov
sub
xchg
lods
sbb
mov
jae
push
jbe
inc
cli
movsl
xchg
and
inc
int1
adc
dec
rcll
jecxz
mov
fnstenv
or
dec
pop
into
ror
fcoms
inc
adc
popa
push
cmp
fsubs
js
add
inc
jge
mov
push
mov
xor
dec
popf
xor
pop
sbb
mov
jno
xchg
or
dec
cmp
fnstcw
xor
mov
(bad)
mov
xor
pop
ss
popf
mov
outsl
stos
add
sub
adc
ja
jns
pop
inc
inc
mov
(bad)
aad
mov
lods
mov
loopne
mov
sti
lahf
(bad)
adc
add
cmp
roll
cmp
ficoml
dec
dec
xchg
jb
js,pn
lods
sbb
adc
cs
pop
xchg
push
mov
clc
mov
cmp
mov
adc
rorb
jns
jl
test
jg
sbb
rorl
mov
xchg
pop
jle
xchg
ds
pushf
filds
out
adc
jo
lods
sub
and
repnz
xor
sbb
jl
repz
xchg
cmp
outsl
ss
cli
jno
pop
inc
pop
mov
jae
and
lcall
addr16
cmp
jns
sub
filds
addl
sbb
jo
push
out
rorl
mov
ja
mov
jns
pop
dec
mov
andl
(bad)
mov
jge
jmp
iret
pop
mov
pop
cmp
mov
in
jp
xchg
sbb
dec
int1
das
jae
sub
jmp
testb
inc
mov
insb
daa
xlat
cmpb
testb
mov
jnp
dec
push
or
(bad)
cmp
or
xchg
xlat
mov
xor
adc
mov
xchg
loop
add
in
xchg
cwtl
pop
pop
mov
mov
dec
sbb
adc
xor
notl
sub
adc
xor
inc
ficomps
lock
add
insb
xchg
sbb
ficomps
pop
repnz
mov
lahf
aaa
jae
imul
jp
in
mov
in
jl
dec
std
adc
xchg
inc
nop
out
sbb
test
inc
xchg
int1
jne
sbb
or
adc
ret
les
pop
cmp
rorb
mov
pop
sbb
andb
cs
push
jge
dec
bound
mov
push
xchg
pop
jle
rcr
mov
enter
loope
and
in
cmp
mov
ficomps
mov
fcomp
js
stos
lahf
or
aam
add
sub
imul
enter
fisubs
(bad)
pop
fildl
and
dec
sbb
xchg
cmp
jge
fiadds
adc
or
xchg
subl
fldl
add
test
test
mov
mov
ja
out
bound
cmp
lret
sbbl
push
pop
mov
and
mov
mov
cmp
ret
mov
xchg
add
mov
cmp
xchg
sub
inc
cmp
push
dec
test
sbb
and
or
jo
push
sub
fistpll
(bad)
adc
in
adc
into
jae
and
cmpsb
loope
pop
push
cmp
andl
sbb
jle
pop
xor
popf
fmul
scas
dec
pop
pusha
xchg
ret
jno
popf
lret
fcomps
sbb
xor
xor
mov
mul
add
inc
add
push
clc
fisttps
cmp
add
js
sub
test
add
lds
mov
inc
push
or
fstl
xchg
mov
xor
dec
xchg
jg
shrb
cwtl
jmp
int1
and
cmp
xchg
addr16
shrl
nop
sub
(bad)
mov
popf
movsb
cmp
add
sbb
cltd
push
mov
cmp
sahf
mov
xor
nop
jae
mov
jb
push
cmpsl
shrb
push
ja
jno
dec
jo
fnstsw
mov
adc
jbe
pop
ret
push
in
pushf
inc
jno
in
mov
adc
jp
daa
aad
xor
jb
mov
push
(bad)
arpl
adc
push
lret
inc
cmp
lcall
mov
and
xor
sbb
and
imul
adc
lods
jne
add
jl
sbb
cmp
mov
or
and
jp
pop
push
or
pushf
outsl
int1
popa
cli
jbe
lods
in
add
mov
test
rolb
sbb
test
out
cmp
add
int1
dec
mov
cld
sete
loopne
hlt
dec
out
leave
jne
dec
std
or
call
mov
jmp
pop
jbe
xor
popa
out
jns
and
aas
jl
jg
cmpsl
xor
sub
xchg
dec
push
cmc
pop
leave
ret
and
jb
jne
lret
push
xor
in
roll
pop
pop
sarb
ficomps
pop
aas
lods
pop
xchg
xchg
mov
cltd
push
sbb
jge
imul
pop
add
pop
and
imul
mov
pop
xchg
and
fs
add
cltd
xchg
cmp
mov
sbb
adc
push
push
push
loop
dec
pop
cwtl
cmpsl
adc
cmp
in
out
cld
aaa
mov
leave
adc
int1
addl
idivl
sbb
and
cmp
jo
jbe
inc
pop
lods
push
into
mov
adc
aam
jg
add
inc
inc
aad
outsl
jne
fs
pop
mov
rclb
call
daa
int3
imul
pop
pushf
fidivs
je
lods
(bad)
sub
xor
aam
pop
adc
or
lods
sbb
dec
int3
cwtl
sarl
shrl
ficoml
xor
cmovns
jg,pt
or
jae
