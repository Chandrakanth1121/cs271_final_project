outsl
out
lock
pusha
out
add
inc
xlat
fdivs
adc
mov
mov
ret
clc
int1
sub
rcrb
scas
push
loopne
notl
insl
or
(bad)
mov
cmpb
or
mov
sbb
js
sbb
sbb
pushf
cmpsl
adc
cmpsl
add
push
mov
jo
cmp
loop
(bad)
mov
dec
test
inc
orl
lret
daa
out
imul
addl
fsubr
push
stos
mov
sub
jg
imul
dec
je
lea
sub
cld
insl
mov
sbb
add
std
out
incb
inc
and
xchg
test
stc
fwait
(bad)
test
setb
lods
pop
loopne
jecxz
das
pop
lock
xchg
aad
and
sub
adc
out
xlat
stos
and
adc
lea
out
jo
lea
out
in
in
sbb
xor
aaa
leave
rol
insl
shll
pop
push
fidivrs
xchg
int1
push
mov
and
adc
cmp
lds
jae
sti
jmp
pop
mov
lea
lock
pop
sub
mov
pop
xchg
shr
lea
fsubrs
movsb
mov
call
adc
dec
aam
push
add
xor
pop
outsl
or
push
data16
shl
arpl
ret
jb
or
in
call
push
xchg
(bad)
pop
repnz
xchg
sbb
cs
mov
mov
and
sub
xchg
sbb
sbb
and
aaa
rep
cmpsl
cmp
fstpt
test
mov
mov
hlt
and
inc
fidivl
xchg
jb
xlat
insb
pop
inc
ss
or
mov
xchg
mov
cmpsl
out
cltd
sbb
mov
sbb
ficomps
hlt
mov
cwtl
or
push
imul
sar
mov
sub
jbe
stos
neg
popa
add
xor
mov
lock
test
outsb
test
outsb
arpl
cli
mov
arpl
fwait
cmp
(bad)
test
ret
fnstsw
arpl
mov
jae
lret
push
fistpll
push
fbstp
inc
mov
jnp
pop
adc
dec
mov
popa
rorb
in
mov
lcall
lret
fcomps
(bad)
sbb
jae
nop
lea
mov
mov
mov
je
sbb
pop
fwait
popa
push
dec
jecxz
pop
(bad)
push
repz
je
imul
or
ljmp
xor
stc
or
jnp
xor
sub
rcrb
jl
push
push
mov
ret
into
push
mov
insl
cmp
pop
in
inc
push
repnz
scas
push
out
repnz
in
push
call
cmp
lods
fisttps
or
(bad)
mov
test
push
jne
aaa
sbb
and
jecxz
frstor
pusha
vmwrite
movsl
shll
mov
es
jmp
jb
incl
les
into
adc
js
aad
jmp
mov
xchg
push
(bad)
xchg
lea
pop
mov
std
(bad)
jo
loope
loope
cmpsb
out
aad
and
lock
or
hlt
mov
xor
sahf
sbb
xor
pop
dec
(bad)
lret
aas
ja
dec
push
push
shrb
insb
stc
shrl
insb
sub
sbb
or
lahf
xchg
cmpsb
pop
pop
ljmp
adc
ja
repnz
dec
xor
mov
jg
jecxz
jg
je
lods
cmpsb
rcrb
xchg
dec
scas
in
test
jns
push
xchg
dec
push
movsl
(bad)
rcll
adc
jnp
cmovbe
pop
js
fwait
push
mov
xchg
pop
mov
arpl
lods
pushf
cmp
cmp
or
ret
dec
mov
dec
mov
dec
or
es
(bad)
sub
cwtl
xchg
mov
mov
jp
xor
jbe
jbe
add
dec
cld
in
xchg
mov
sub
or
decl
(bad)
jecxz
repz
aam
sub
sub
int3
fcoms
dec
dec
xor
(bad)
adc
cs
leave
leave
je
enter
into
and
sub
(bad)
faddl
dec
fdivs
mov
pop
mov
xor
fs
les
cmp
lret
and
sub
mov
das
xor
sub
xchg
in
mov
roll
fnsave
cs
push
stos
aas
sub
jle
int1
enter
scas
sarl
imul
xchg
mov
jecxz
cmpl
xchg
mov
cwtl
mov
ljmp
out
int1
cmp
ret
inc
add
adc
hlt
pop
inc
test
inc
lret
jg
outsl
leave
xchg
loope,pn
pop
scas
out
idiv
and
cs
xchg
mov
sbb
sbb
fwait
stc
add
in
(bad)
in
inc
addr16
and
bound
daa
and
cmp
int1
dec
jge
mov
mov
push
inc
mov
hlt
int
adc
ljmp
mov
inc
lahf
les
std
jno
movsb
out
jno
outsl
jnp
repnz
imulb
lret
adc
ljmp
or
pop
push
test
aam
jmp
imul
inc
push
sub
mov
pop
pop
ret
fxch
pop
lcall
dec
push
cltd
aaa
mov
ljmp
dec
add
insl
jbe
inc
inc
pop
data16
cmp
cwtl
in
scas
ja
and
imul
push
mov
or
or
addr16
mov
or
pop
cmp
mov
cmp
mov
mov
lahf
sahf
adc
cmpsl
mov
adc
dec
jae
test
dec
js
lcall
dec
push
loopne
insb
push
dec
dec
dec
lcall
add
mov
aas
and
stos
push
int1
mov
lret
stos
out
mov
mov
inc
sub
dec
dec
jecxz
inc
out
mov
insl
pushf
subb
inc
inc
mov
fdivrl
cltd
xchg
nop
push
pop
insl
int
insb
push
push
shll
test
dec
(bad)
xchg
imul
mov
gs
cmp
jo
stos
xchg
decl
lods
ret
stc
dec
sbb
xchg
leave
lret
loop
dec
in
mov
stos
into
mov
bound
cmp
jl
mov
mov
sub
fstps
rolb
bound
add
int
das
aad
test
lahf
aaa
addr16
xor
loop
push
and
enter
adc
push
daa
arpl
loopne
push
add
fldenv
xchg
pop
add
leave
push
fists
push
(bad)
sahf
push
pop
jne
imul
adc
jbe
lods
add
daa
add
fwait
adc
adc
insl
dec
push
sbb
int3
std
add
adc
subb
pop
cmp
cmpl
jnp
ficompl
xlat
dec
ret
mov
xchg
push
push
dec
shl
js
pop
and
mov
fs
or
loope
pop
or
xor
cmpsb
mov
mov
jne
or
sub
lods
pop
sarl
mov
xchg
push
lahf
inc
jle
mov
cli
lods
mov
int
fwait
sub
loop
push
xchg
xor
mov
and
insl
dec
inc
jp
jnp
(bad)
xchg
sub
test
outsb
push
arpl
xchg
fcmove
mov
nop
mov
rcl
jne
inc
into
xchg
lods
lea
out
out
adc
pop
andb
push
in
push
push
or
mov
mov
xchg
and
pmulhuw
xchg
xor
dec
cs
mov
mov
lahf
stos
fisttpl
test
pop
data16
dec
jo
push
into
mov
ja
cltd
inc
sbb
adc
jl
mov
mov
push
jno
xchg
imul
xchg
outsb
test
stc
and
in
pop
sbb
xchg
xchg
sub
push
ret
jo
mov
daa
subl
sbb
jbe
pop
insl
jmp
pop
cli
cmp
out
ljmp
dec
and
mov
cmp
dec
cmc
pop
sub
mov
mov
cmp
inc
mov
(bad)
xor
or
(bad)
out
add
push
enter
testl
inc
shll
add
std
fcoms
fnsetpm(287
jae
inc
xchg
dec
cmp
push
(bad)
int1
stc
push
ja
shlb
lea
lret
je
xchg
xchg
adc
or
aad
pop
fldpi
add
jns
inc
add
sub
pop
mov
lea
je
nop
leave
and
and
