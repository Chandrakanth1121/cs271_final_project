rex.w
lea
jmp
mov
sbb
sbb
jns
adc
adc
cmp
rex.xb
cltd
adc
mov
rex.r
pop
push
or
mov
sbb
mov
mov
rex.r
(bad)
cmp
cwtl
xor
stc
and
je
mov
insb
adc
or
rex.x
or
insl
xchg
cmp
stc
adc
sbb
outsb
adc
rex.x
outsl
mov
loopne
jns
lock
or
mov
cmp
fsubs
cltd
adc
mov
rex.r
adc
and
jb
pushf
and
nop
mov
test
jae
js
cltd
or
stc
and
pop
je
push
mov
jne
cmp
jns
xor
(bad)
and
and
jbe
sbb
cltd
adc
stc
adc
xor
rex.r
mov
and
adc
mov
ret
and
(bad)
stc
test
adc
and
sbb
jl
jns
jo
flds
and
cltd
mov
and
pop
jge
xor
mov
sbb
sbb
jns
adc
fldenv
add
cmp
clc
fiadds
adc
mov
ret
and
(bad)
sbb
mov
and
ret
and
(bad)
stc
test
adc
and
mov
sbb
push
sbb
test
adc
test
cmp
cltd
mov
stc
and
xor
mov
mov
sbb
jns
(bad)
cmp
mov
and
adc
mov
ret
and
(bad)
sbb
mov
and
ret
and
(bad)
stc
test
adc
and
sahf
and
sbb
rex.rx
jns
xor
cmp
or
rex.x
jo
and
and
fcoml
sbb
rex.r
adc
sbb
rex.r
mov
lods
adc
mov
xchg
(bad)
sbb
mov
and
(bad)
and
(bad)
stc
test
adc
and
mov
xchg
and
(bad)
flds
adc
fcmovne
cltd
rex.r
(bad)
pop
rex.r
(bad)
mov
and
or
cltd
xchg
mov
(bad)
cmp
mov
and
pop
fwait
and
(bad)
sbb
mov
and
(bad)
and
(bad)
stc
test
adc
and
mov
lahf
and
ficompl
jns
lock
and
or
movabs
adc
sbb
movabs
movabs
adc
mov
and
mov
pop
movsb
and
(bad)
sbb
or
mov
and
cmp
rex.r
stc
adc
(bad)
test
adc
test
fcoml
jns
ror
rorb
and
(bad)
stc
test
adc
and
sbb
adc
ficoml
sbb
rex.r
pop
mov
and
mov
pop
lods
and
(bad)
sbb
mov
and
cmp
add
cmp
cltd
and
xor
or
mov
pop
mov
(bad)
and
mov
mov
xor
or
cwtl
and
rex.r
adc
or
and
mov
pop
and
push
mov
rex.r
rex.r
cmp
or
rex.x
and
or
xchg
adc
mov
mov
cld
xlat
or
test
and
adc
test
mov
and
xor
or
mov
pop
mov
rex.rx
sbb
mov
xor
mov
test
and
adc
pop
mov
(bad)
mov
sbb
adc
sbb
test
adc
mov
mov
stc
(bad)
or
pop
mov
mov
sbb
rex.rx
jns
rorb
cmp
adc
mov
and
xchg
mov
ret
adc
or
rex.x
or
(bad)
xchg
pop
mov
adc
pop
(bad)
rex.x
(bad)
xchg
sbb
jns
adc
adc
cmp
rex.xb
{rex2
adc
mov
rex.r
pop
enter
mov
leave
mov
and
adc
(bad)
cltd
and
and
rex.rx
mov
int3
rex.w
(bad)
jns
push
xor
or
cmp
rex.rx
cltd
adc
sub
jno
cmp
or
call
sub
sub
add
sub
rex.rb
ret
jne
hlt
rex.xb
and
test
cltq
(bad)
int
enter
add
push
rex.wrb
fnstenv
(bad)
ret
filds
xorps
cli
mov
sbb
jns
jmp
call
ret
(bad)
jae
pop
insl
push
fwait
add
(bad)
rex.rb
rclb
cmp
and
push
rex.wr
xor
fmulp
xor
fiaddl
es
rex.rx
(bad)
test
je
mov
iret
sub
(bad)
movabs
pop
test
je
rex.wrb
add
adc
addr32
movl
fcoml
(bad)
out
adc
mov
rex.r
nop
in
sti
subb
and
call
adc
lahf
push
addr32
mov
test
rex.xb
xchg
mov
mov
sbb
and
(bad)
sbb
or
mov
cmp
mov
or
cmpl
or
push
push
in
pop
(bad)
(bad)
(bad)
add
mov
incl
add
cmp
jb
rex.w
(bad)
rex.wr
mov
xor
(bad)
jnp
push
mov
(bad)
adc
outsl
ds
jmp
rex.wr
mov
rex.wr
in
fwait
sbb
ret
xchg
and
sbb
js
xchg
and
add
jmp
rex.w
outsb
test
mov
push
fcomps
in
rolb
(bad)
fbstp
pop
push
jb
loopne
xchg
pop
rex.w
(bad)
mov
jmp
andnps
lea
adc
sbb
mov
(bad)
jbe
outsl
xor
inc
xchg
call
(bad)
sbb
clc
pop
(bad)
call
adc
or
ja
rex.rb
mov
jne
lods
cmp
loopne
adc
clc
fwait
test
rcl
mov
push
rex.wrb
(bad)
pop
mov
fiadds
rex.rx
rex.x
(bad)
test
(bad)
rcl
and
or
movabs
adc
rex.wr
rex.xb
loop
jb
sarb
outsl
rorb
enter
pop
xchg
sti
mov
xchg
xlat
or
xchg
rex.x
rex
sbb
rex.xb
scas
pop
cmp
test
pop
div
or
jo
(bad)
mov
(bad)
test
mov
std
rex.xb
(bad)
xchg
pop
sub
sti
std
rex.xb
in
jg
jb
(bad)
scas
mov
(bad)
or
(bad)
ret
adc
mov
or
pop
push
sub
rolb
rex.r
jp
nop
rex
movups
mov
movntq
xchg
pop
testb
xor
and
add
add
adc
pop
int1
jnp
or
std
notl
in
sti
sub
rex.rb
repnz
rex
test
cmp
lea
leave
push
push
stos
testb
adc
lret
(bad)
mov
test
push
sub
sbb
or
mov
jge
xchg
adc
lss
(bad)
rex.r
mov
cmp
sahf
(bad)
and
push
(bad)
gs
jb
movabs
scas
xchg
or
repnz
sbb
and
add
mov
(bad)
push
test
mov
nop
or
add
sti
push
adc
mov
testb
(bad)
jae
add
mov
jns
(bad)
adc
scas
push
mov
(bad)
mov
and
or
movabs
sbb
lret
std
push
(bad)
and
std
push
sbb
(bad)
mov
push
(bad)
ja
call
(bad)
(bad)
and
and
rex.r
rex.wr
mov
adc
jae
adc
(bad)
jrcxz
pop
rex.wrx
mov
pop
(bad)
ret
call
int3
in
ret
cli
and
hlt
or
xchg
or
xchg
and
nop
ror
lret
xor
xchg
pop
sub
movsb
lods
add
sub
or
rex.r
rex.wb
(bad)
movsxd
add
call
(bad)
rex.r
sub
rex.r
jnp
pop
jae
mov
(bad)
(bad)
(bad)
adc
(bad)
in
nop
rex.r
rex.wrxb
mov
jge
mov
movsxd
ficoms
rex.xb
movabs
mov
jge
rex
rex.wr
(bad)
int1
out
movups
movabs
in
filds
(bad)
movabs
rex.rb
push
int3
rex.wrxb
xlat
mov
rol
(bad)
push
cmc
rex.wrb
stos
(bad)
and
rex.r
jb
pop
mov
rex.wx
ret
test
rex.w
rcl
push
xchg
hlt
mov
rex.wrxb
(bad)
ret
cmp
sub
jl
cmp
lods
mov
mov
rex.x
jrcxz
(bad)
(bad)
mov
rex.x
rex.wxb
gs
(bad)
and
in
sub
and
(bad)
imul
(bad)
movabs
rcll
adc
or
adc
adc
rex.wx
(bad)
sub
movabs
adc
and
rex.xb
sub
jge
(bad)
push
in
fisubl
data16
or
out
rex.x
rex.wx
ds
or
mov
test
cmpsb
repz
(bad)
cmp
test
rex.wxb
sbb
rex.xb
