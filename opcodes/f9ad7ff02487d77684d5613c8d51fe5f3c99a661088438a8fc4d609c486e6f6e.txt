nop
cmp
add
dec
add
add
add
add
test
add
add
add
push
inc
xchg
add
sub
or
xchg
lods
mov
sti
lods
xchg
xchg
push
xchg
cmp
and
sub
add
jns
int3
lods
bound
inc
lea
gs
(bad)
and
scas
add
mov
jle
fdiv
int
jno
shl
fcomps
push
aad
mov
push
adc
inc
(bad)
sahf
mov
push
mov
or
(bad)
mov
stos
pop
je
xchg
maxps
dec
imul
ret
pop
mov
xchg
add
jp
inc
add
and
(bad)
fimull
cld
pusha
rcr
inc
js
stc
addl
out
add
mov
mov
fwait
fwait
cld
and
cmp
adc
roll
push
cmp
mov
int
sbb
add
or
scas
jns
push
xchg
dec
sbb
xlat
(bad)
xchg
stos
xchg
jns
dec
push
in
lret
das
jg
sti
mov
ret
push
jl
xor
mov
cs
dec
sbb
mov
outsb
in
jg
xchg
sti
cwtl
je
vcvtss2sd
mov
pop
lret
mov
daa
mov
push
and
jmp
test
xor
cs
cmc
mov
cmp
cmp
xor
insb
mov
sbb
jbe
fs
fmulp
sub
jg
xor
pop
jmp
jp
jnp
fcmovnbe
fsubl
data16
cmc
roll
adc
dec
cmp
inc
fstpl
aaa
test
jl
(bad)
int
out
test
cmp
es
xor
push
mov
daa
mov
mov
jecxz
or
xchg
(bad)
mov
jmp
adc
jo
outsl
xor
or
cmp
dec
mov
adc
arpl
add
sarb
cmpsl
push
or
ss
test
sub
push
stos
bswap
(bad)
imul
sbb
inc
inc
(bad)
loopne
pushf
push
mov
negb
cmpl
out
fidivl
jmp
test
cmp
xor
loope
adc
sub
sbb
xchg
mov
sti
dec
scas
ret
sarl
ja
out
sub
cs
xor
stos
call
cltd
incb
mov
pop
repnz
sti
lock
pop
out
cmpsb
sub
movsb
pusha
lret
hlt
imul
pusha
mov
hlt
xor
call
push
call
xchg
mov
add
das
sub
sahf
mov
arpl
lret
adc
pop
adcb
dec
sbbb
outsb
jmpw
add
jle
jmp
int1
pop
out
mov
xlat
jb
add
dec
shrb
aad
loopne
ds
cmp
cmpsb
or
and
scas
test
sbb
mov
cs
fdivrl
test
repnz
orl
jbe
rcl
jp
xor
mov
out
pop
mov
js
xor
ret
popf
cmpsb
rclb
cli
shlb
jp
pushf
cmc
mov
call
subl
cld
cmpl
push
xchg
aam
pop
sub
in
sub
mov
inc
mov
jl
cmp
pop
inc
adc
int
ficomps
cltd
sbb
sbb
dec
lahf
push
or
or
popf
aam
mov
mov
movsl
inc
and
adc
and
jo
xchg
jae
mov
pop
sub
xchg
push
adc
push
(bad)
and
or
lock
jmp
sbb
xchg
cmp
call
dec
or
test
pop
mov
xor
dec
ds
xchg
rorl
mov
jecxz
pop
subb
and
push
fcomp
adc
pop
adc
mov
sbb
pop
mov
pushf
dec
and
add
ret
or
pop
xor
xchg
pop
sbb
dec
nop
add
dec
mov
ret
cli
fwait
push
pop
and
fildl
mov
outsb
add
push
jmp
adc
sbb
add
mov
mov
popa
(bad)
sub
decb
dec
adc
inc
mov
push
pop
pop
in
cld
inc
popa
lea
or
add
and
shl
(bad)
insl
es
pop
mov
dec
push
scas
ficoms
xor
fsubrs
test
jle
insb
jo
and
push
out
lock
xchg
adc
mov
sbb
lods
push
shll
lds
mov
shld
mov
and
(bad)
inc
mov
push
cmp
add
cmpsl
add
in
sbbb
push
loop
shrb
hlt
mov
pusha
mov
push
scas
jp
int3
(bad)
divl
pop
pop
cs
sbb
nop
pusha
xchg
jo
imul
push
mov
ds
mov
pop
mov
jle
mov
out
cmp
leave
call
fstpl
cmp
inc
mov
dec
out
insb
inc
stos
sub
in
aaa
adc
outsb
xor
cltd
lcall
fisubs
dec
fdivs
aas
(bad)
shlb
in
aas
xchg
sbb
jl
cmp
inc
fbld
adc
mov
xchg
pop
pushf
push
les
inc
or
mov
pop
insb
mov
push
inc
xorl
adc
pop
inc
fidivrl
add
xchg
cmp
iret
push
andb
and
cld
xchg
xor
(bad)
data16
cld
mov
pushf
mov
rcl
xor
hlt
xchg
dec
stc
pop
roll
(bad)
jecxz
and
data16
jnp
mov
loopne
sbbb
lock
cmpsl
pop
cmpsl
mov
loop
dec
add
mov
mov
pop
inc
sub
adc
sahf
mov
lahf
cmp
sbb
xchg
call
jns
addr16
enter
pushf
pop
pusha
mov
shrb
jecxz
sub
adc
mov
and
mov
sbb
loop
(bad)
lret
xor
push
add
cmp
(bad)
ficomps
push
sbb
testb
push
lahf
add
and
pop
xchg
mov
pop
xor
movsb
repnz
sbb
popa
rcrb
push
testl
sbb
add
pop
cwtl
push
imul
xchg
adc
and
sub
or
mov
sti
xor
pop
cmc
dec
stc
std
imull
test
jae
aam
popf
std
or
fdivl
fdiv
xchg
and
pop
or
add
pop
xchg
add
(bad)
movsl
jbe
pop
jge
pop
fcompp
hlt
outsb
scas
mov
lds
hlt
test
popf
mov
lahf
cwtl
xor
int
imul
pop
out
pop
(bad)
cmp
pop
loop
mov
test
test
cmp
mov
mov
testb
ficoms
mov
fcmovu
inc
aaa
(bad)
pop
jecxz
add
aas
dec
cmp
push
sbb
popf
insl
mov
popf
cmpsl
aam
cmc
mov
aad
push
xchg
pop
les
pushf
jo
(bad)
cmp
and
xlat
(bad)
cmc
xlat
sub
sub
push
push
jb
lock
inc
cwtl
insb
insb
outsl
jb
mov
aam
insb
xor
es
lea
sti
in
xchg
fisubl
add
rcr
xor
xlat
mov
rcll
xchg
in
rorl
in
xchg
insb
andb
inc
je
loope
fsubrs
push
jae
repz
xor
and
push
loope
push
andl
test
pop
cmp
push
mov
gs
lock
jns
mov
out
test
adc
mov
jmp
leave
pop
lcall
pusha
call
push
add
out
or
cwtl
mov
sub
(bad)
push
mov
enter
inc
add
pop
shlb
scas
jns
bound
inc
sbb
popf
lds
cmp
ss
(bad)
cltd
(bad)
call
adc
jmp
outsb
cmpsl
cmpl
sub
rcrl
sahf
lret
inc
push
dec
scas
insb
jb
inc
dec
das
leave
sbb
sub
jns
leave
outsl
pop
push
inc
push
fsubrs
mov
cld
shll
inc
je
pop
xor
inc
mov
leave
(bad)
dec
outsb
cmp
or
pop
pop
and
xchg
add
and
xor
cmp
enter
bound
in
imul
xchg
push
push
pop
subb
cltd
and
push
inc
and
nop
(bad)
cld
sub
inc
int
adc
dec
dec
push
test
cmp
cwtl
add
pop
adc
fs
sbb
nop
int1
mov
sahf
popa
mov
mov
test
lods
xlat
