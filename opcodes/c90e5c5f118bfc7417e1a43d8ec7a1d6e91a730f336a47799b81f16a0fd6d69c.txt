dec
dec
nop
ljmp
inc
lock
pop
cmp
jg
dec
aaa
or
outsl
divb
bound
aad
inc
xlat
outsl
(bad)
(bad)
clc
mov
lcall
mov
jl
xorl
and
repz
aad
into
mov
ja
bound
cmp
jp
mov
pop
sahf
or
xor
shlb
mov
and
subl
pusha
clc
mov
pop
fnsave
and
or
or
pop
(bad)
jg
movsb
sbbb
scas
(bad)
xor
push
enter
cmpsb
inc
scas
stos
and
add
dec
leave
pop
push
in
push
fldenv
pop
arpl
leave
(bad)
mov
adc
enter
xchg
cmpsb
out
add
shll
mov
and
mov
leave
nop
dec
fcoms
lods
repz
jg
xor
sar
push
test
shrb
sub
(bad)
xor
pop
xchg
enter
shlb
dec
test
fisubrl
outsb
loop
mov
leave
in
or
inc
xor
incb
push
int3
mov
orl
adc
(bad)
jbe
cmp
jp
sbb
inc
push
int1
cmp
push
hlt
dec
jle
xor
push
into
push
(bad)
std
adc
xor
cmp
push
in
imul
add
pop
dec
dec
aam
jl
inc
jl
stos
jecxz
pop
mov
insb
push
and
out
push
clc
cmc
jae
in
loop
sub
xor
jno
mov
add
sub
aaa
repnz
add
mov
mov
aam
arpl
fnsave
leave
xchg
and
imulb
lcall
xchg
orl
and
lea
rcrl
mov
mov
pushf
and
cmpsb
les
scas
mov
xchg
repnz
jecxz
cmpsb
inc
jge
add
sbb
pop
leave
mov
adcl
xor
inc
fbld
and
mov
movzbl
dec
sub
aam
movsl
xor
mov
cld
pop
lret
mov
pop
sub
fdivrs
pop
pusha
in
sbb
sbb
aas
es
jp
mov
es
jle
pop
incb
hlt
out
xchg
stc
rorl
and
cmp
test
mov
shl
add
jg
cli
and
jns
and
ret
xchg
in
pop
and
lcall
cwtl
or
xchg
sbbl
lret
dec
test
cli
out
inc
cld
cmp
jo
fisttpl
pop
push
stc
enter
push
(bad)
and
ljmp
add
dec
push
arpl
fildl
sub
rol
dec
lret
loope
aas
std
cmp
pop
pop
mov
fs
in
movsb
jl
movsl
mov
adc
or
push
fwait
imul
push
push
add
das
pop
ret
mov
add
lcall
test
xor
push
rcl
fnsave
(bad)
jl
ja
xor
outsl
push
out
pop
push
or
push
xchg
inc
mov
add
sti
ret
jne
mov
lds
in
fdivs
xchg
add
pop
cld
cmp
mov
cmp
mov
movsb
and
jnp
dec
sub
sbb
test
je
int
add
mov
enter
xor
insl
fiadds
shr
arpl
xor
es
mov
jb
cmp
in
mov
mov
lahf
js
mov
xor
insb
scas
out
int
dec
cwtl
pop
popa
mov
and
int
dec
jno
inc
xlat
es
leave
cltd
or
sbb
fcomps
sbb
jnp
xchg
or
(bad)
aas
mov
add
cmp
popf
repz
iret
shll
add
or
test
cmpsb
js
mov
addr16
lods
jbe
adcl
sub
or
(bad)
xchg
aaa
es
notb
mov
arpl
push
aaa
and
jnp
aad
xor
repz
(bad)
fidivs
mov
subb
daa
inc
std
(bad)
lock
xchg
or
jl
push
loopne
imul
adc
or
int1
dec
mov
or
les
push
rcr
and
test
or
iret
test
ss
mov
scas
adc
and
pop
outsb
out
insl
fstps
out
mov
cmp
or
fdivrl
decl
push
dec
je
or
gs
cmpsb
popa
sub
push
inc
std
inc
mov
fcoms
(bad)
in
test
pop
clc
insb
jns
scas
push
fldcw
jnp
dec
push
decl
repnz
dec
mov
in
sub
test
cltd
sbb
addr16
xchg
(bad)
sub
sbb
cmp
aas
fs
adc
into
outsl
mov
call
leave
mov
leave
and
movsb
push
jge
dec
sti
outsb
push
shrb
in
(bad)
xor
xor
jecxz
add
push
repnz
pop
mov
pop
xor
jmp
pop
ljmp
arpl
test
loop
and
aam
adcl
sub
or
mov
lods
and
mov
ljmp
popf
jmp
and
mov
push
fisubrs
push
arpl
xchg
mov
enter
imul
insb
ss
lret
daa
enter
pop
add
or
lcall
lahf
ds
add
rorb
inc
jbe
mov
jnp
je
pop
inc
addr16
pop
pop
sub
mov
and
out
push
xchg
sub
insl
add
fisubrs
leave
mov
test
xor
in
int
nop
fldenv
jp
sarl
lock
and
repnz
pop
jno
push
dec
(bad)
mov
or
bound
je
or
add
fstpt
sub
das
das
or
movsl
imul
cmp
or
pop
add
and
inc
cmp
and
push
inc
(bad)
loopne
sbb
dec
jne
cmp
sub
mov
dec
push
negb
lahf
adc
sub
dec
mov
es
std
into
mov
addr16
push
insl
pop
ss
fwait
lret
(bad)
mov
mov
jae
mov
xchg
imull
cmp
int1
(bad)
xchg
mov
mov
and
imulb
pop
addr16
cs
dec
dec
leave
jne
and
fs
inc
mov
sub
xchg
sub
cmp
repnz
mov
pop
or
int
adc
mov
dec
frstor
adc
std
cmc
sahf
jmp
roll
push
add
mov
hlt
mov
push
sbb
in
pop
push
js
and
or
sbb
dec
xchg
(bad)
repz
push
push
cwtl
dec
cmp
test
mov
push
pop
push
xchg
fcomps
stos
or
jg
push
sbb
outsl
jecxz
or
movsb
or
sub
loope
gs
imul
std
js
pop
sub
dec
push
stos
mov
mov
mov
aam
mov
loop
adc
sahf
stc
out
sti
sub
scas
aaa
add
lret
fcomip
mov
aaa
pusha
mov
das
inc
stos
cli
xor
(bad)
repnz
shll
insl
pop
out
movsl
sbb
jp
popf
inc
pop
lock
ljmp
jbe
mov
add
pop
mov
mov
scas
pop
xchg
xchg
lcall
jae
les
ret
stc
add
adc
andl
jnp
bound
and
pop
fs
or
les
cltd
int
pop
push
ret
into
ficompl
pusha
js
dec
out
call
xchg
xchg
push
cmp
shl
sub
fbld
push
jne
hlt
jbe
inc
scas
imul
lock
repz
arpl
lret
mov
call
scas
lds
enter
push
jl
(bad)
cmp
mov
mov
adc
add
mov
push
xchg
in
sbb
loopne
js
adcb
pop
adc
inc
jae
fadd
imul
jo
mov
fadd
cmp
dec
addb
and
pop
mov
sbb
cmp
or
mov
(bad)
jl
psubq
adc
testb
popa
aaa
scas
lcall
cmp
adcl
pop
les
jle
es
shlb
out
out
xchg
inc
movsb
lock
aaa
add
addr16
call
addr16
lods
sahf
fbstp
in
sbb
pop
in
jmp
jo
adc
out
adc
cld
mov
jne
xchg
imul
and
mov
cltd
into
test
aaa
sbb
divl
test
call
ljmp
lea
dec
divb
in
mov
loopne
adc
fistps
popa
mov
adc
inc
cmp
