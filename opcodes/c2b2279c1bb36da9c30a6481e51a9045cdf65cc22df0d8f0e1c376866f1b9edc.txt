into
push
js
dec
rcll
sbb
pop
dec
and
rcrb
lret
out
inc
insl
rcrb
xchg
dec
pusha
rcrb
or
std
test
mov
cmp
mov
inc
call
nop
cmpsb
adc
pop
sub
jg
inc
or
out
jge
cmp
ret
add
push
jbe
or
mov
jg
daa
jle
xchg
sub
outsb
test
pop
sub
inc
add
inc
pusha
sub
mov
daa
shl
jg
add
test
aam
dec
lret
lock
add
insl
dec
sub
jb
pop
dec
ja
sub
(bad)
jno
dec
popf
popa
mov
mov
cmp
lcall
dec
call
add
jge
int3
push
dec
sbb
leave
in
xor
mov
push
lret
mov
int3
lock
pop
dec
push
test
add
std
cmpsb
mov
cld
lret
std
cmpsb
mov
in
daa
lahf
xor
inc
imul
movsb
cmp
mov
mov
test
dec
sti
in
cmp
and
arpl
pop
dec
cltd
xchg
push
out
ret
xchg
pop
dec
cmp
or
sti
inc
movsl
pop
jl
pusha
xchg
pop
dec
sbb
imul
xchg
sub
mov
xor
mov
(bad)
add
xchg
mov
int
pop
insl
add
xchg
pop
(bad)
add
data16
sub
xor
dec
xchg
sub
sbb
mov
int
mov
cmc
dec
xor
int3
mov
pop
dec
int1
cld
sbb
sbb
add
mov
add
repz
and
and
pop
dec
jne
dec
neg
fistpl
cmpsb
cli
fcompl
jb
fistpl
and
dec
jo
adc
dec
outsb
pop
cmp
out
enter
add
insb
int
mov
das
xchg
xor
adc
add
pusha
outsl
scas
adc
add
int
jne
mov
stos
add
shrb
pop
cmp
rol
adc
jmp
jl
out
in
out
pop
dec
pop
push
mov
and
pop
dec
flds
arpl
jnp
mov
pop
dec
(bad)
cmc
repz
adc
fmull
cmp
pop
inc
testl
pop
inc
subl
dec
adc
jg
cmp
pop
dec
and
scas
add
pop
inc
imul
add
inc
in
jge
aas
xor
dec
push
jmp
pop
inc
mov
xchg
add
(bad)
jl
cmp
add
add
xchg
add
pop
inc
mov
pop
fucomip
add
neg
add
mov
push
dec
movsb
cs
dec
or
pop
dec
mov
ffreep
insl
pop
cmp
adc
mov
xchg
mov
pop
inc
cmp
adc
sbb
add
pop
dec
xchg
cmp
pop
inc
push
adc
add
adc
mov
jl
cmp
dec
adc
adc
lods
add
pop
inc
lcall
dec
hlt
ficoms
pop
dec
dec
lret
fld
jecxz
cltd
mov
pop
push
test
adc
adc
andb
push
ljmp
adc
xchg
mov
flds
scas
mov
fsubrs
pop
popf
daa
(bad)
js
fnstsw
cmp
ret
add
and
mov
pop
and
mov
xchg
adc
jbe
fnsave
jl
in
push
and
lock
pop
push
movzwl
lret
mov
pop
and
mov
and
enter
pop
mov
cld
fistpll
jge
insl
ret
insl
pop
xor
movaps
push
out
sbbl
dec
lock
cmp
roll
sub
pop
push
mov
movsl
(bad)
(bad)
cld
pop
pop
lds
sub
pop
pop
dec
imul
scas
rorl
std
mov
pop
pop
lahf
daa
xor
cmp
sahf
push
mov
(bad)
pop
cwtl
push
pop
imul
pop
cwtl
push
fimull
mov
popf
roll
mov
inc
sbb
mov
mov
enter
addr16
sar
shll
(bad)
addr16
subl
je
out
mov
pop
not
sub
mov
push
jb
out
(bad)
dec
cmp
pop
ret
pop
dec
jl
mov
xchg
js
sarl
call
jae
pop
inc
fwait
cmp
sar
push
pop
dec
or
sarl
pop
dec
push
adc
dec
sbb
pop
in
ja
aas
adc
xor
dec
dec
js
mov
push
xchg
xor
out
jl
int3
push
pop
push
std
pop
dec
sbb
pop
dec
mov
daa
add
xor
int3
dec
push
addr16
std
pop
dec
xor
stos
mov
and
in
divl
mov
mov
(bad)
inc
add
inc
flds
push
jp
dec
out
sub
sub
pop
pop
inc
and
pop
mov
daa
sub
sub
mov
inc
sub
sbb
inc
cmp
(bad)
jae
pop
cmp
insl
jae
outsl
jb
gs
insb
add
sub
adc
jne
xor
insb
lock
fcomi
and
jns
add
mov
int
rcll
outsl
jne
inc
repnz
stos
xor
loope
ror
sar
psrlq
cli
shll
cld
pop
inc
jnp
pusha
lcall
jp
shlb
xor
cmc
dec
int
and
jge
fs
popf
ss
sub
push
add
adc
sbb
pop
inc
push
psubb
dec
sbb
pop
add
pop
jecxz
jb
add
lock
sbb
pop
inc
sub
rcrl
dec
jmp
lods
pop
inc
mov
or
pusha
xor
inc
arpl
add
or
lods
pop
inc
xor
fsubr
(bad)
lods
pop
inc
mov
push
mov
jne
jne
dec
pushf
fadd
jg
lods
pop
inc
sub
add
cmp
mov
ja
movsl
(bad)
lock
cmp
inc
mov
(bad)
mov
ljmp
imul
dec
out
cs
inc
lret
int1
sub
sub
mov
aam
jl
cltd
pop
xor
cmp
mov
and
inc
inc
push
pop
inc
and
js
xor
rolb
inc
and
pop
pop
inc
outsl
inc
add
dec
daa
sahf
mov
pop
dec
(bad)
out
pop
cmp
scas
add
push
add
push
pop
inc
mov
lret
clc
mov
cwtl
xor
pop
aas
in
push
addr16
dec
cltd
and
test
out
in
xchg
mov
mov
mov
and
rclb
cld
aad
xlat
jns
aad
fcmovb
out
aad
fisubl
enter
push
pop
inc
cmp
pop
inc
je
pop
(bad)
add
add
hlt
loopne
push
dec
or
push
dec
cmc
add
mov
mov
lds
aad
sahf
mov
mov
(bad)
pop
inc
popa
fnstenv
push
mov
mov
mov
xchg
scas
xchg
mov
mov
xchg
pop
imul
add
mov
xchg
subl
push
in
pop
pop
imul
sbb
mov
mov
xchg
in
lds
mov
mov
xchg
jne
in
pop
push
mov
add
sbb
js
or
xchg
adc
jne
sbb
pop
pop
jp
jne
mov
pushf
and
pop
sub
pop
and
mov
packssdw
les
inc
ss
xchg
jae
jne
iret
cmp
jns
dec
lock
fldl
push
fsubl
les
adc
jl
xchg
mov
pop
pop
pop
in
les
test
mov
cmc
pop
lds
mov
xlat
jnp
push
inc
dec
xor
daa
and
dec
test
jno
fs
jecxz
pop
push
sti
inc
xor
xchg
dec
pop
pop
xchg
xor
mov
sub
fs
inc
outsb
cmp
pop
daa
fdivrl
push
out
dec
pop
pop
mov
lret
lahf
daa
js
cmpsb
xchg
dec
pop
cltd
lahf
xchg
push
out
ret
dec
pop
cltd
push
pop
jecxz
jo
jo
dec
js
pop
dec
pop
cltd
nop
mov
popf
