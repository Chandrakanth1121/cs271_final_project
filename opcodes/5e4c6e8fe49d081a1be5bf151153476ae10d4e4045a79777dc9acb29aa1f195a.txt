pop
mov
aas
in
les
cmpl
jae
lea
(bad)
insl
push
sbbl
adc
xchg
inc
sub
stc
popa
lds
jns
ja
pop
and
cmp
das
aam
loope
sti
cmpb
jp
and
lods
fsts
pop
push
or
and
cld
leave
and
and
sub
and
mov
pop
dec
jb
cmp
js
fldenv
dec
orb
mov
addr16
ficoml
mov
sbb
sarb
mov
sbb
xor
fwait
mov
fstps
test
jnp
lea
push
mov
jo
mov
popa
mov
and
mov
outsl
push
push
mov
ret
sub
in
jge
pop
popa
fsubr
ret
mov
and
leave
adc
mov
or
xor
cmpsl
dec
mov
mov
jnp,pn
xor
jnp
xor
dec
insb
add
out
shll
jmp
xor
dec
repz
pop
stos
outsl
js,pt
mov
ljmp
push
jmp
(bad)
pop
fnstsw
or
sar
mov
loop
dec
lds
scas
enter
add
jne
addr16
cmpsb
pop
out
pop
jb
das
inc
adc
pop
loopne
mov
std
sbb
sti
dec
aas
cli
bound
pop
sahf
repz
sbb
(bad)
lods
loopne
pop
mov
scas
fs
mov
or
imul
negl
pop
leave
adc
test
inc
js
loopne
mov
nop
pop
jne
pop
push
jl
and
xchg
sub
arpl
aas
stos
xchg
aaa
shr
sahf
addr16
fnsave
pop
pop
ret
loopne
rcr
jg
fnstenv
int1
sahf
loope,pn
outsb
mov
pop
jb
pop
mov
or
jae
mov
xor
pop
outsb
outsb
adc
mov
insb
in
or
fs
cld
inc
ret
fisttps
cmp
popf
mov
or
popa
(bad)
sub
cmpsb
sub
mov
push
leave
jmp
aad
insl
js
inc
inc
pop
mov
jg
lods
xlat
sub
and
ljmp
in
stos
mov
fdivrl
xchg
lock
xor
outsb
notl
sub
xchg
test
mov
addb
movsl
imul
pop
enter
enter
fucomp
fisubl
fdivrl
jp
stos
push
mov
add
popf
out
cmc
lret
bound
dec
sub
fmuls
mov
ds
fisttps
cs
lea
shrl
jnp
or
mov
mov
iret
sbb
sbb
(bad)
int3
or
mov
mulb
lcall
xchg
mov
jae
arpl
inc
jno
sti
je
add
test
xorl
loopne
xchg
dec
imul
fcom
add
call
mov
out
mov
mov
scas
inc
insl
std
or
mov
sbb
mov
(bad)
ljmp
cwtl
in
int1
dec
sub
sub
dec
je
xchg
jecxz
nop
inc
pop
and
arpl
dec
cmpsb
dec
inc
scas
(bad)
cmp
fisubl
xchg
into
adc
fcmovu
in
mov
(bad)
jnp
and
or
loopne
jns
add
xchg
shrb
ds
mov
lods
ds
dec
pop
and
ss
popaw
sti
divl
orl
xorb
mov
xchg
bound
(bad)
das
push
in
mov
pop
dec
les
imul
cmp
stos
(bad)
popa
ret
jge
flds
push
mov
lea
je
and
fisubs
repnz
int3
adc
dec
jb
fbld
(bad)
pop
sti
fwait
lcall
ss
fimuls
imul
adc
pop
mov
push
in
cs
fisubrl
arpl
pop
stc
mov
pop
adcl
imul
inc
fcoml
push
into
inc
push
mov
xchg
int
inc
dec
filds
dec
pop
pushf
loope
lcall
jge
inc
lods
sub
or
or
push
sub
add
xor
lea
lods
mov
inc
js
xor
xchg
cmc
aam
lds
xor
xchg
jp
fs
iret
aaa
mov
into
arpl
and
in
xor
lock
inc
inc
mov
inc
or
or
mov
sti
test
adc
loopne
(bad)
add
and
das
adc
add
sti
push
lea
insl
or
mov
mov
push
push
add
add
shll
stos
mov
adc
fldl
add
jns
add
ds
xor
push
lods
add
repz
fistpl
pop
add
imul
lds
es
mov
movsb
nop
and
add
sbb
sbb
cmc
xchg
jle
pop
adc
and
bound
dec
scas
gs
ljmp
dec
out
mov
ffreep
dec
or
mov
testl
cmc
push
push
mov
aad
sbb
lcall
movsb
out
mov
mov
shrb
fidivl
cwtl
or
in
fs
in
adc
adc
add
and
loope
dec
andl
inc
and
mov
push
or
sbb
outsl
mov
sub
js
add
add
ljmp
push
fmull
jl
outsb
out
jne
aas
lods
ss
daa
scas
int3
sbb
xor
dec
(bad)
scas
pop
movsb
push
push
(bad)
pushf
sbb
popw
pop
jle,pt
push
shl
xchg
sbb
mov
das
fcomip
sub
aam
cmp
into
adcl
insb
out
adc
out
movsb
adc
lret
jge
test
sbb
mov
and
out
add
mov
rcrl
fdivrl
pop
fadds
jns
test
sub
jmp
pop
and
and
pop
mov
mov
inc
ds
pop
xor
sub
lods
pop
sbb
cmp
and
sbb
ds
inc
je
fldt
xor
inc
push
mov
in
jecxz
fcoms
dec
jbe
cmpsb
xor
in
arpl
ds
fcomi
lock
je
xlat
je
lods
mov
and
loop
stc
daa
fstl
aas
cmpsl
sub
fldt
add
push
sub
mov
cmpps
aaa
(bad)
and
push
push
jle
and
insl
and
daa
jl
je
pop
mov
and
subl
das
and
jg
jnp
mov
int
mov
inc
leave
jo
pusha
nop
jecxz
inc
jne
aas
add
cs
add
jno
das
add
and
mov
adc
xchg
adc
and
mov
mov
scas
insl
out
add
push
xchg
jp
mov
pusha
in
or
adc
sahf
loope
rorl
mov
sti
xor
aam
int3
xor
xor
ds
jl
or
ficompl
mov
push
or
pop
jg
xchg
ret
pop
aam
mov
jb
sbb
sbb
cmp
imul
notl
push
shlb
or
dec
mov
scas
test
cmpsl
clc
sbb
std
es
mov
sbbl
fisubrl
sub
mov
cltd
sbb
cmpb
int
add
xchg
fmuls
dec
mov
test
cltd
xchg
gs
imul
stc
and
gs
mov
adc
insb
or
dec
mov
lock
pushf
ljmp
lock
outsl
out
stc
insl
sub
xor
jp
mov
mov
jns
pop
jmp
ret
enter
pop
xchg
mov
stos
push
orl
imul
jno
es
mov
add
push
mov
data16
cmp
inc
fdivrl
mov
push
sar
jb
pop
push
jg
add
jge
push
cwtl
inc
push
pop
add
loope
call
push
mov
mov
or
rolb
shrl
cmpsl
pop
push
dec
cmp
imul
adc
pop
not
sbb
or
xor
stc
es
xor
jmp
xor
into
jo
mov
push
xor
add
rclb
mov
push
imul
jp
scas
jns
push
cmp
jmp
iret
(bad)
orl
(bad)
or
es
je,pn
cwtl
jo
xchg
push
fwait
jno
and
push
mov
out
movsb
in
lods
mov
imul
pop
adc
pop
dec
int3
hlt
or
mov
lock
scas
mov
das
repnz
sbb
dec
int1
jg
sahf
pop
and
jmp
push
inc
sub
mov
mov
jmp
jb
aaa
jmp
xchg
inc
jl
pop
dec
push
and
ja
