pop
(bad)
gs
push
and
or
pop
xchg
add
(bad)
int
(bad)
add
rex
mov
add
add
lcall
fildll
ret
nopl
data16
add
sub
mov
xor
enter
movl
sbb
out
or
mulps
cmp
je
mov
add
mov
test
je
mov
or
(bad)
insb
fists
or
pop
adc
adc
(bad)
or
movlhps
fstpt
add
xor
(bad)
(bad)
sub
add
add
leave
sbb
lret
cmp
add
enter
imul
jne,pn
movzwl
loop
or
or
mov
xchg
(bad)
jbe
mov
sbb
fnsave
ret
lea
rex.x
cmpl
out
mov
pop
mov
(bad)
jg
rex.wr
adc
fucom
outsl
mov
or
adc
jle
mov
int
cmp
mov
xchg
imulb
mov
(bad)
cmp
movabs
push
push
push
push
push
sub
or
mov
(bad)
adcl
cmp
test
clc
ret
in
add
gs
xor
sbb
adc
or
rex.wxb
jmp
cmp
je
add
call
xchg
insl
rcr
call
xor
jne
xor
clc
lahf
fincstp
(bad)
cmp
push
and
adc
jmp
rex.w
rex.wrxb
add
mov
add
or
pop
mov
mov
mov
sbb
sbb
rep
insb
(bad)
xor
pop
adc
rex.wb
divl
push
sub
rex.xb
loopne
(bad)
add
jns
pop
(bad)
cmp
mov
sbb
pop
(bad)
movabs
mov
mov
mov
cmp
jle
mov
xor
(bad)
and
rex.r
int1
jbe
enter
push
pop
jne
jmp
pop
ret
jns
sti
push
jg
insl
ss
pushf
loope
int1
rex.rb
(bad)
je
idivb
add
insb
(bad)
pop
sbb
outsb
int1
jmp
movslq
shl
mov
jne
test
insb
cmp
xchg
jl
jle
lea
xor
or
mov
lahf
ds
push
lea
rex.wx
add
mov
rex.r
rcrl
sti
lcall
adc
fnsave
lea
rex.w
jns
sub
ja
cmp
(bad)
iret
push
adc
(bad)
xchg
loope
jb
cmc
pop
rex.wr
adc
jg
add
jp
or
pop
(bad)
cmp
sbb
or
sbb
push
pop
(bad)
xor
pop
pop
or
add
add
shl
insb
sbb
xor
jbe
(bad)
cs
mov
and
adc
cmp
pop
(bad)
sub
xchg
jmp
int1
cwtl
jg
sarl
(bad)
sub
mov
nop
out
mov
loope
pop
add
or
insl
adc
(bad)
fldt
pop
(bad)
movsl
push
in
ja
call
cmc
jl
nop
imul
pop
add
movsb
rex.rxb
testb
xchg
add
shl
lods
nop
add
jo
cmp
sbb
sbb
repz
cmp
jbe
or
lock
addr32
repnz
and
jl
sub
(bad)
sub
(bad)
add
and
out
mov
push
or
enter
rex.wrx
jmp
int3
add
fs
rex.wrb
mov
testq
test
rex.xb
movabs
outsb
(bad)
imul
or
in
or
cld
sar
add
stos
lods
leave
jge
xor
rex.wr
xor
(bad)
mov
mov
mov
xchg
jno
sbb
jb
(bad)
mov
scas
jo
fisttps
(bad)
and
clc
mov
(bad)
data16
test
jne
jne
xor
rex.b
stc
adc
mov
(bad)
fisubrl
and
shlb
mov
(bad)
movsbl
xor
mov
(bad)
jbe
add
shll
insb
lahf
and
and
(bad)
push
add
rex.xb
nop
rex.wr
sub
pop
mov
pop
cmc
mov
and
fmull
fistpl
and
rex.wrx
data16
mov
sub
add
rex.rx
adc
cmp
jne
jns
mov
jmp
fistpll
jne
sub
scas
outsl
pop
std
outsl
data16
sbb
jb
rex.wrb
add
insl
xchg
mov
(bad)
jne
adc
sti
(bad)
insb
jne
rex.wx
add
(bad)
sub
(bad)
push
rcr
outsl
mov
sub
mov
(bad)
rex
or
add
scas
filds
(bad)
add
adc
(bad)
cmpsl
stc
rex.r
and
(bad)
rex.w
out
and
add
or
int3
jo
mov
(bad)
(bad)
jrcxz
(bad)
cmp
sub
in
cmp
in
rolb
and
insl
sbb
nop
jl
rorb
ret
jmp
jge
pop
fs
lea
test
pop
sbb
jo
(bad)
insb
mov
cmpb
je
push
test
je
cmpb
fsubrs
push
(bad)
imul
rex.rxb
out
sbb
js
cmovno
lods
fistpll
(bad)
jg
lea
(bad)
(bad)
jbe
or
movabs
xor
sub
cmp
cld
inc
rex.wxb
push
xor
mov
jne
fs
or
ss
lret
adc
cmp
fdivl
add
sarb
or
cmp
fidivrl
enter
(bad)
rex.wb
cs
lods
cli
(bad)
shl
test
(bad)
cwtl
leave
jne
pop
mov
or
adc
mulb
jl
push
shl
loopne
jne
mov
(bad)
cmpsl
mov
(bad)
enter
mov
adc
sti
jbe
(bad)
movabs
rex.r
(bad)
mov
es
movb
rex.wx
add
rex
nop
pushf
mov
jrcxz
ds
ret
clc
(bad)
sub
test
(bad)
lret
movsl
shl
(bad)
or
jo
shll
insl
fs
(bad)
xchg
mov
xor
sub
fldenv
adc
ja
lods
loope
jb
push
fsubs
jl
fdivs
sbb
enter
(bad)
call
call
shlb
nop
mov
add
add
adc
mov
push
lea
rex.r
rex.wrb
ds
(bad)
mov
or
(bad)
(bad)
subl
or
in
jle
ret
(bad)
rex.wrb
rex.w
sub
ds
rex.w
movsb
xor
xor
rex
or
enter
lods
(bad)
jno
addb
rex.rx
(bad)
rex.b
mov
out
jo
rex.rx
rex.wrxb
rex.wr
xchg
lret
xchg
add
movsl
movabs
test
adc
cmpl
gs
jo
es
push
or
outsb
cmp
sbb
adc
xorps
out
in
mov
rex.wx
mov
add
add
sub
(bad)
jg
cmp
(bad)
jrcxz
rex.w
mov
add
ds
cmp
stos
add
sbb
mov
(bad)
fsub
(bad)
jb
repnz
mov
cli
test
fsubrp
loop
fmuls
rex.wr
sti
rex.wb
insl
lock
mov
add
xchg
adc
(bad)
rex.wx
out
lea
lea
lea
adc
and
cmpsb
cmpsl
stc
pop
xor
out
adc
sbb
(bad)
cmp
(bad)
enter
rex.wb
imul
fsubrs
(bad)
xchg
rex.x
sbb
or
or
adc
(bad)
rex.wrb
rex.wr
jmp
sub
add
push
pop
xor
push
jp
fidivrl
cmp
iret
sbb
rex.x
and
sub
scas
stc
mov
jle
rex.wrb
(bad)
and
mov
cmp
xor
rex.b
add
and
in
xchg
pop
movabs
push
jmp
out
movsl
cmp
out
std
ret
rex.wrb
movsb
(bad)
int3
ret
in
rorl
popf
jbe
rex.w
movabs
sbb
mov
cmp
mov
sti
mov
repnz
movsb
movsl
call
mov
cmp
adc
(bad)
add
pushf
in
mov
incl
or
lods
jae
jp
jno
(bad)
add
test
mov
(bad)
{rex2
data16
movabs
push
adc
sbb
and
xor
imul
test
(bad)
or
push
sarl
adc
(bad)
sbb
jo
sbb
xor
movsb
jge
sub
fstl
rex.wr
mov
adc
sbb
adc
or
and
xchg
clc
movabs
cmp
rex.wrxb
(bad)
xchg
(bad)
xlat
lea
jne
stc
cmpsb
sti
shll
fistpll
push
shrb
js
jmp
rex.w
jae
or
cmp
sub
stos
push
jle
and
sbb
or
xchg
fsubrs
mov
(bad)
movabs
stos
xlat
mov
filds
xor
or
fbstp
(bad)
xlat
lea
lock
or
in
hlt
ret
sbb
add
push
lcall
out
fadds
mov
cli
rex.wrx
ds
enter
mov
cmp
add
