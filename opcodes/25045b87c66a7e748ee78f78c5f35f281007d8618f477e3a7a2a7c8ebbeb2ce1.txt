je
rol
lods
std
or
cmpsl
loopne
mov
out
(bad)
enter
xchg
out
fimuls
add
pushf
or
sub
enter
mov
subb
dec
fdivrp
test
lret
xchg
xor
mov
sub
lds
movsb
jge
and
dec
push
fucomip
shrl
scas
pop
pop
outsb
jo
leave
outsb
pop
lret
call
int
cmpsb
scas
cmp
sbb
lods
lds
push
dec
sbb
mov
inc
out
push
jns
pop
movsl
inc
stos
and
inc
(bad)
push
mov
subl
scas
and
jne
fadds
insl
ret
jno
and
jb
shl
xor
add
adc
mov
insb
dec
lds
mov
and
jne
stos
aam
in
mov
ljmp
out
lcall
sub
sub
cmpsb
or
adcb
es
sub
xchg
rol
sahf
lahf
push
ja
pop
jg
cmpsl
movsb
mov
in
lcall
stc
popf
cmpsl
pop
push
fwait
mov
adc
xchg
cmpsb
movsl
lcall
fucomi
cmpsb
das
xchg
inc
pusha
hlt
daa
lret
cmpsl
jne
dec
(bad)
sub
sub
push
push
or
jno
fs
ljmp
cld
int
pop
xor
sub
push
xchg
js,pn
push
cmpsb
mov
add
push
pop
sahf
jp
shl
mov
imul
mov
call
xor
push
dec
sub
add
lret
pushf
std
xchg
jge
sub
or
mov
cmp
inc
lea
cwtl
insb
mov
sub
jb
outsb
mov
fisubrs
mov
jb
pop
inc
(bad)
jnp
arpl
mov
add
xor
es
push
pop
mov
adc
add
push
sbb
data16
cmpsl
xor
addr16
dec
xchg
pop
inc
mov
faddl
mov
fistl
ffreep
sub
ja
test
cmpsb
jmp
and
jbe
xchg
pop
jmp
sub
sub
out
scas
fmuls
popa
pop
cmp
xchg
mov
loopne
cmpsb
sti
outsl
rorl
sarl
cmp
leave
rorl
mov
(bad)
lock
scas
jns
xchg
xchg
out
ficoms
inc
mov
jns
fneni(8087
push
inc
cmp
les
adc
push
dec
(bad)
and
add
xchg
cmp
imul
add
ss
fstl
iret
lock
sbb
push
fimuls
out
jle
mov
pop
lcall
rcrb
mul
or
test
cmp
mov
movl
inc
sub
push
push
pop
mov
xor
sbb
movsl
xchg
(bad)
fs
bnd
xchg
push
imul
xorl
jo
aam
lret
call
mov
push
cmp
lcall
mov
test
enter
pop
mov
adc
mov
mov
in
mov
adcl
into
and
pop
mov
inc
cmp
sub
movsb
mov
bound
sub
flds
popf
sahf
cld
xor
out
mov
jo
inc
sub
mov
adc
push
mov
ret
xorl
pop
mov
imul
push
lret
mov
jbe
lret
pop
(bad)
ror
mov
or
rorb
sbb
aaa
xor
fistl
mov
push
jge
inc
je
movsl
fisubl
sbb
lahf
fldl
mov
xchg
popa
mov
fnstcw
inc
pop
int3
andl
adc
mov
xchg
clc
adc
mov
call
xchg
sub
loopne
test
adcb
cld
imul
cmp
scas
int3
mov
out
ds
outsl
ja
sub
dec
fadd
leave
dec
in
jbe
push
jnp
mov
adcb
or
cs
shlb
jl
call
scas
scas
dec
test
hlt
push
pop
mov
jne
stc
push
mov
mov
mov
add
fadds
mov
xor
outsb
sub
push
jo
xchg
xchg
je
outsl
sub
stos
pop
push
jno
cli
pushf
lret
push
ret
int1
jle
pop
lods
cmp
xchg
int
xchg
cltd
or
sarb
sbb
rorb
xor
shll
scas
dec
sahf
mov
sbb
outsb
pop
sub
loopne
inc
xor
mov
(bad)
xlat
sbb
or
mul
xchg
call
pop
fisubrs
and
imul
sbb
shll
push
int3
ss
add
sub
inc
iret
in
ja
mov
clc
push
xor
pop
mov
push
cmp
mov
mov
int
fidivs
insl
lahf
imul
mov
lret
jle
adc
lods
ds
add
inc
inc
shlb
and
inc
pop
inc
cmp
scas
imul
fwait
and
cs
dec
test
lahf
fisubs
or
popf
sahf
sti
(bad)
sub
xchg
sub
popf
xchg
pop
subl
das
jecxz
(bad)
mov
cmp
out
mov
stos
dec
and
inc
pop
pop
or
jno
enter
adc
xor
or
xor
add
pop
rcll
mov
cs
pop
inc
(bad)
lcall
std
inc
jae
cmpsb
das
inc
mov
stos
test
daa
movsl
in
or
in
bound
and
dec
pop
loopne
bt
sub
inc
sbb
cmpsb
mov
adc
fcomps
dec
xchg
xchg
rolb
lods
push
mov
mov
fs
adc
lret
out
pop
cmp
xchg
sub
rcrb
sahf
mov
sub
das
in
pop
out
xor
mov
mov
addr16
dec
sub
mov
add
cmpsb
out
mov
inc
inc
jo
push
and
movb
dec
(bad)
xchg
mov
dec
es
fistpl
orb
mov
cltd
lea
addb
add
sub
in
mov
sbb
sub
cmp
jbe
roll
das
das
jne
aas
jbe
push
lea
in
into
xchg
repnz
xchg
jp
mov
popf
sbb
shl
sub
and
cmp
insb
(bad)
push
iret
sub
or
iret
fcomip
scas
setne
(bad)
setns
lods
jecxz
push
dec
adcb
cmc
jl
sub
mov
sarb
popa
sti
pop
jo
adc
lods
sbb
loopne
call
mov
jg
repnz
mov
aaa
cmpsb
push
lcall
xor
outsb
scas
test
lahf
add
jmp
fldt
rclb
push
adc
sub
(bad)
fwait
lods
xchg
or
sub
or
cmp
daa
dec
xor
inc
imul
cli
fisubrl
adc
cld
dec
cmp
mov
fsubl
(bad)
mov
das
inc
outsl
call
mov
bound
jl,pn
das
leave
add
ja
dec
cltd
subb
mov
xor
sub
loop
fdivrp
mov
and
and
(bad)
jae
cmpsb
xor
mov
xor
cmpsb
adc
fcomps
mov
ficoml
pop
and
aad
fiadds
jmp
add
jae
fstpl
pop
or
std
or
fildl
mov
push
loopne
dec
and
nop
ficomps
outsb
subl
out
or
add
repnz
adc
adc
jg
scas
rorl
inc
push
dec
xor
push
xchg
mov
enter
or
outsb
rclb
add
into
mov
rorb
mov
push
addr16
mov
push
pop
mov
outsl
aad
cmp
(bad)
pop
mov
mov
mov
in
mov
mov
insl
sub
sti
aad
xchg
push
jb
sbb
stos
cmpsl
pop
lods
add
(bad)
es
xor
lods
dec
mov
sbb
stos
and
or
xlat
rcll
scas
mov
cwtl
xor
in
inc
sub
lret
push
inc
dec
inc
loopne
cmc
sbb
sbb
sub
daa
jp
add
popf
loop
mov
dec
cmpsl
cmp
add
inc
fwait
lcall
das
jne
mov
ja
push
or
je
aad
das
sbb
xchg
movsb
pop
pushf
sarl
(bad)
add
ja
shlb
pop
jo
jl
add
push
repnz
add
adc
adc
ds
mov
daa
jecxz
lods
sub
int1
xchg
mov
js
sbb
loop
cmpsb
iret
test
addr16
pop
arpl
adc
inc
mov
mov
inc
cmp
mov
dec
cmp
das
lds
mov
stc
