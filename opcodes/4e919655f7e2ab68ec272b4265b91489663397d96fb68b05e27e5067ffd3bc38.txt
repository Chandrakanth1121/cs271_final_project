syscall
call
call
syscall
call
push
enter
adc
(bad)
mov
loopne
mov
or
add
jbe
add
out
in
jge
mov
mov
rex.wrxb
loope
cmp
test
shll
movsl
rex.xb
push
stos
sub
jnp
shll
(bad)
rcrl
and
xchg
(bad)
(bad)
(bad)
int
rex.wb
rex
addr32
cmpsl
adc
mov
ror
adc
movabs
lret
sub
ja
shlq
push
movsb
cltd
(bad)
(bad)
sti
sbb
shll
pop
mov
rorl
stc
(bad)
js
notl
in
(bad)
out
xchg
stos
popf
push
orl
cmp
mul
and
sub
rcr
(bad)
enter
call
xor
jo
movsb
fucomi
int3
movabs
out
mulps
popf
test
hlt
sahf
jnp
lahf
(bad)
rex.x
jo
loopne
xchg
pop
xor
lahf
xor
mov
jmp
adc
xchg
xchg
imul
cmp
vmwrite
int1
(bad)
fnstcw
sbb
mov
scas
(bad)
add
adc
sub
ret
xor
and
(bad)
cmp
ja
sti
cwtl
je
sti
rex.wr
mov
and
leave
sbb
push
rex.b
xchg
sbb
pop
fildll
jp
stos
(bad)
iret
jge
jmp
out
sub
ja
(bad)
in
ja
xor
mov
cmpb
mov
rex
jo
cmpsl
jns
(bad)
mov
call
jg
cltd
cli
movabs
jrcxz
(bad)
loope
sbb
rex.wrxb
imul
push
(bad)
push
movsxd
cwtl
(bad)
(bad)
(bad)
jns
(bad)
sbb
sbb
mov
sbb
cltd
cmpsl
outsl
jno
shl
sub
(bad)
or
sbb
rex.wrx
call
call
rex.wx
fldcw
sub
fsubs
(bad)
(bad)
(bad)
pop
(bad)
fsubl
(bad)
push
movabs
ret
sti
int3
sub
in
shll
(bad)
jmp
cmp
add
mov
push
lods
(bad)
cld
mov
adc
lods
lock
fcomps
jo
std
es
mov
(bad)
mov
add
(bad)
push
sahf
(bad)
(bad)
fadds
(bad)
jo
stc
lods
jle
cmp
rex.wxb
sbb
jnp
loopne
(bad)
fwait
or
adc
push
sti
cli
pop
in
nop
punpcklbw
jmp
jg
add
and
and
insb
add
jmp
rex.b
cmpsl
rex
add
(bad)
incl
jge
shl
nop
mov
cld
js
outsb
xor
ret
rex.rb
(bad)
movabs
cmp
adcb
cmc
movabs
call
jle
add
(bad)
jae
fcompl
mov
cwtl
ss
fwait
or
rex.wrx
shll
loopne
cmp
rorb
mov
rex
rcrl
data16
repnz
addl
cmpsb
(bad)
or
rex.wx
and
push
cmp
mov
mov
shlb
std
out
jae
sti
mov
sti
and
(bad)
jae
sti
push
push
xchg
sbb
(bad)
mov
outsb
insb
mov
pushf
mov
outsb
insb
mov
mov
mov
rep
insb
mov
or
rex.xb
insb
mov
rex
sbb
ds
push
stc
mov
xchg
jge
iret
movabs
ret
sar
jg
sarl
scas
(bad)
mov
pushf
(bad)
sarl
sarl
clc
(bad)
cmp
sarl
jbe
int1
sarl
out
xchg
sarl
ror
or
jbe
in
jbe
jne
add
rex.x
rex.rb
pop
movabs
add
imul
cmp
clc
add
lock
(bad)
fiaddl
imul
jb
xchg
test
adc
(bad)
fisubrs
ret
sarb
clc
adc
clc
movsl
js
sarl
stos
mov
sarl
insl
nop
jge
(bad)
clc
ret
sarl
push
add
lret
fisttpll
fmul
mov
(bad)
(bad)
out
mov
(bad)
(bad)
lock
iret
fsubrs
(bad)
(bad)
(bad)
mov
cmp
(bad)
rex.wrxb
cmp
(bad)
decl
scas
invd
adc
(bad)
(bad)
sbb
mov
pop
std
out
subl
xor
(bad)
fndisi(8087
mov
xor
lea
pop
push
lea
cmp
mov
pop
xchg
xchg
xchg
adc
mov
enter
mov
mov
cld
scas
xor
mov
(bad)
mov
(bad)
(bad)
push
mov
insl
push
(bad)
(bad)
and
(bad)
movabs
fdivs
cmp
xor
mov
negb
loope
jl,pn
sbb
or
pop
lret
rolb
mov
rex.wrb
add
sub
cli
addr32
rcrb
sbb
(bad)
or
(bad)
std
in
stos
popf
sub
enter
rex.rxb
jae
xchg
(bad)
cli
(bad)
jl
sbb
(bad)
test
xor
data16
fisubrs
rol
jmp
rex.wx
(bad)
jb
jmp
fistl
add
out
jb
pop
xor
(bad)
pop
xchg
xchg
cmp
movabs
repnz
xchg
(bad)
jge
in
sub
xor
pop
push
mov
ret
(bad)
mov
jl
sbb
xchg
sbb
jbe
fcoml
loopne
adc
sub
in
jo
ret
sbb
jo
mov
and
(bad)
adc
and
sbb
(bad)
shl
rex.wrxb
cmp
add
adc
ret
lods
mov
xchg
lea
stc
pop
lahf
mov
sbb
data16
lret
mov
cmp
xabort
mov
setns
cmp
ds
nop
add
jl,pn
sbb
lret
add
rex.rb
rex.rx
adc
je
test
or
adc
stos
(bad)
jae
iret
fwait
mov
cmc
sub
movabs
cmp
or
int3
movabs
push
xor
mov
mov
roll
pop
sub
and
cs
and
(bad)
(bad)
{rex2
mov
(bad)
xchg
ds
sub
xbegin
fstpl
cmc
movsxd
rex.wb
mov
push
roll
xor
imul
push
jl
sar
or
jmp
test
jmp
lret
pushf
call
roll
cmp
je
adc
(bad)
and
push
out
scas
jne
xor
xchg
xchg
xlat
xchg
out
mov
add
insb
std
mov
sbb
add
test
cmpsl
mov
adc
adc
mov
cli
shlb
{rex2
cld
(bad)
movsxd
sbb
rex
rex.wr
movb
sbb
stc
pop
jl,pn
repz
or
xchg
push
add
(bad)
jmp
jae
push
out
rex
scas
push
nop
shr
mov
jl
or
out
(bad)
(bad)
cmc
jp
movabs
or
pop
(bad)
rex
jg
imul
cmp
add
xor
sbb
movabs
ficompl
out
jns
in
(bad)
cld
cwtl
xor
movabs
nop
jmp
cmp
and
xchg
int
mov
(bad)
or
mov
push
adc
call
decl
mov
add
or
xorl
xor
mov
jns
(bad)
(bad)
cmpsl
(bad)
cmp
jno
push
jl
pushf
and
call
jle
add
(bad)
lahf
movl
and
and
sbb
cld
adc
leave
fs
xchg
(bad)
cmpsb
cmp
jg
pop
stos
mov
xor
push
xlat
push
xchg
xor
movabs
lret
imul
pop
lods
jmp
add
cltd
(bad)
fcom
(bad)
xchg
pop
mov
ret
data16
roll
sub
lea
ret
rcrb
clc
mov
lret
int3
(bad)
clc
movsxd
cmp
imul
clc
repz
(bad)
rex.wxb
(bad)
clc
and
sti
int3
(bad)
clc
stos
(bad)
fisttpll
movl
call
xchg
and
pop
scas
(bad)
xor
fs
cwtl
sub
fs
pop
clc
sub
rex.wb
cmpsl
rex
xor
test
out
pop
sub
shll
sbb
and
xorl
movl
int3
(bad)
mov
lahf
xor
rcr
gs
out
std
jg
(bad)
push
scas
stc
push
ror
lahf
out
(bad)
enter
sbb
ss
(bad)
cli
scas
adc
xchg
stc
sahf
sub
imul
jae
out
testb
or
cli
movabs
rex.wrxb
lret
jae
fs
rol
rex.x
mov
loopnel
fisubs
rex.x
cmp
or
mov
rex.rx
push
push
rex.wx
test
test
roll
cwtl
sahf
(bad)
rex.wrb
call
mov
fiadds
lret
scas
adc
adc
(bad)
rorw
rcl
sti
in
(bad)
clc
and
iret
(bad)
clc
popf
cmp
iret
(bad)
clc
mov
