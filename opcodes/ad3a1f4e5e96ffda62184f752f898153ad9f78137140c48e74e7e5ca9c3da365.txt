stos
leave
aas
mov
mov
adcb
(bad)
ret
jo
or
fs
ret
dec
inc
cmp
popf
jne
or
mov
xchg
adc
divl
scas
lcall
sub
xchg
pop
jecxz
jle
rorl
mov
mov
mov
insl
insb
outsl
in
push
mov
add
testl
or
mov
adc
push
shrb
shlb
mov
sub
cld
inc
add
loope
xchg
add
(bad)
push
scas
sub
push
mov
cmp
inc
shl
mov
movsl
(bad)
sub
xchg
pop
xor
das
lods
test
cli
in
and
push
stc
pop
mov
sub
add
inc
sbb
mov
pop
stc
shl
iret
and
cmp
jns
mov
loop
(bad)
pusha
fwait
mov
adc
mov
cltd
loope
ret
dec
mov
cmp
(bad)
add
mov
(bad)
stos
sahf
scas
add
mov
cld
je
inc
stc
outsl
js
push
test
(bad)
imul
iret
int
adc
cmp
jo
(bad)
ljmp
cmpsl
sbb
mov
aad
aaa
sub
loopne
jns
xlat
dec
sub
push
loopne
ret
adc
push
push
mov
add
(bad)
jg
sub
jecxz
jle
pop
xchg
ret
mov
adc
cld
into
pop
mov
lret
xchg
inc
and
sbb
je
add
push
push
jo
aaa
sbb
clc
(bad)
ffreep
cmpsl
mov
lahf
mov
pop
pusha
mov
add
hlt
dec
or
test
pop
iret
mov
mov
hlt
(bad)
neg
push
mov
mov
inc
imul
jecxz
add
ret
call
sub
jp
xor
sbb
cld
push
cld
pushf
adc
stos
jp
imul
daa
js
jno
ljmp
jle
jmp
sbb
xor
int1
sahf
pushf
fcomip
sarb
loopne
gs
addr16
xor
add
mov
sar
cli
mov
or
lock
aam
jb
mov
mov
subl
(bad)
sub
mov
sbb
ss
sbb
repnz
cmp
daa
inc
iret
mov
movsb
das
mov
mov
lds
fst
inc
ficoms
int3
(bad)
loopne
mov
in
adc
fcmovne
cmpsl
cmpsb
lds
inc
fildll
leave
dec
in
push
int1
into
adc
dec
pusha
inc
(bad)
loope
lock
jne
mov
jns
sub
pop
in
xor
fdivrs
leave
push
push
inc
(bad)
pusha
out
les
xor
aas
xor
sbb
in
xor
inc
dec
adc
repz
xbegin
add
cmp
popf
pop
pop
mov
stos
sub
filds
ficomps
mov
test
mov
adc
hlt
(bad)
or
std
jl
pop
dec
cmp
adc
xchg
cmp
mov
arpl
jl
sbb
adc
inc
sub
scas
jbe
jae
inc
popa
add
pushf
and
inc
lods
movsl
push
xchg
pushf
inc
push
insl
aam
adc
(bad)
mov
andl
test
push
jb
inc
sbb
add
mov
lret
movsl
sub
mov
pop
test
cmp
loop
and
sbb
inc
mov
and
push
mov
pop
push
pop
cmovb
cmp
shlb
and
mov
iret
mov
shrb
jg
and
insl
cmp
ret
cmp
lods
loop
jl
sarb
mov
insl
add
adc
xor
xor
mulb
cwtl
adcb
in
xchg
mov
gs
pop
push
nop
sbb
je
movsb
mov
push
iret
mov
mov
and
shlb
das
das
inc
push
roll
add
inc
sbb
(bad)
in
cli
sbb
mov
mov
mov
cltd
in
aam
or
cmp
mov
add
ds
push
cmpsb
jmp
int3
mov
movsl
cwtl
frstor
ljmp
pop
sub
jae
add
adc
(bad)
mov
lods
ret
or
and
lock
repz
(bad)
cmpsl
adc
loopne
cmp
fiaddl
push
repz
lea
pop
sbbb
jge
fmuls
aad
aam
clc
dec
jle
(bad)
push
adcb
shlb
mov
sub
stc
hlt
add
(bad)
jne
push
dec
xchg
lea
pop
dec
xchg
lret
push
into
fadds
aas
test
int3
cmp
hlt
call
push
shll
adc
outsw
push
inc
push
mov
dec
xchg
sub
pop
mov
xor
fmuls
leave
cmpsl
push
inc
(bad)
pusha
out
les
mov
shr
jno
cmp
jne
sub
mov
xor
fnstsw
mov
xchg
xchg
lods
das
dec
xor
int3
dec
imul
insl
and
jl
jne
mov
(bad)
pop
ret
call
pop
js
pop
jecxz
fdivrs
clc
loopne
movsb
enter
mov
xchg
dec
lock
ss
xor
xchg
xor
call
testl
adc
cmp
std
das
lock
aad
pop
xchg
jp
mov
sbb
wbinvd
mov
shll
pop
(bad)
std
sbb
divb
push
(bad)
cmp
add
lretw
lahf
(bad)
cmc
testl
gs
sbb
outsb
adc
cs
loop
stos
dec
jae
push
test
xorb
cmp
push
mov
sub
rolb
sub
mov
pop
shlb
pop
std
ret
jno
fs
jns
inc
stos
push
jmp
add
loopne
mov
cmp
movsl
mov
mov
adc
mov
in
push
lahf
dec
sbb
push
shrb
push
mov
hlt
mov
adc
pushf
sbb
pop
pusha
mov
push
(bad)
pop
and
xor
mov
push
das
iret
dec
cmpsb
(bad)
mov
int3
bound
mov
loopne
loop
cltd
aad
sbb
rorl
cli
pop
clc
out
lea
into
xor
movsb
mov
cmpsl
or
cs
cmpb
pushf
fs
outsl
aad
push
ret
lcall
mov
inc
es
sbb
inc
sbb
xchg
mov
lods
hlt
pop
shll
add
xor
mov
pop
cs
xor
fs
les
ljmp
ficoms
pushf
hlt
mov
xor
dec
jb
and
dec
cwtl
loopne
out
test
jns
and
repz
lea
cmp
cmp
push
sbbb
test
not
mov
subb
lock
pop
push
out
(bad)
mov
repz
idivl
xor
inc
gs
outsl
mov
mov
cmp
adc
sub
mov
xor
int3
push
idiv
enter
inc
sbb
lock
js
mov
pop
loopne
add
sbb
add
imul
lods
jo,pt
jno
sbb
jbe
mov
(bad)
insl
jb
jo
or
xor
hlt
and
js
cltd
xor
iret
push
(bad)
pop
repnz
fidivl
jo
mov
push
jmp
jg
jne
mov
inc
jmp
add
shlb
mov
lock
loopne
mov
xchg
sbb
sub
lea
jg
outsb
es
sahf
call
cmp
mov
jne
insl
jp
data16
ljmp
pcmpeqb
and
clc
mov
(bad)
int3
push
push
pop
mov
call
inc
ret
push
hlt
mov
pop
int1
ffreep
out
movsl
out
xor
out
dec
jle
push
cmp
daa
pop
mov
xchg
add
outsl
or
jg
jo
popf
bound
fwait
mov
rorb
xchg
jecxz
xor
fcoml
add
iret
mov
push
cwtl
inc
stc
add
jo
inc
aad
add
lock
andl
add
ljmp
push
sbb
int3
cmp
sub
sub
daa
sti
test
xchg
mov
adc
fucomip
sbb
xor
mov
mov
jbe
dec
pop
pop
ucomiss
sbb
enter
jb
imul
inc
cld
cmp
push
mov
rcrb
and
mov
ljmp
or
(bad)
fdivr
cmpsb
sbbb
mov
mov
mov
jge
addr16
jbe,pt
int
lods
pop
inc
loopne
mov
jle
xchg
scas
(bad)
ss
aam
clc
mov
fidivl
fcomps
cmp
fucom
mov
push
and
lret
fisubl
xchg
push
