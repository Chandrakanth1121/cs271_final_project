mov
adc
add
inc
outsl
outsl
insb
gs
outsb
add
or
add
mov
insb
jae
add
jb
lea
sub
add
push
outsl
(bad)
testl
pop
dec
outsb
je
addr16
and
rcrb
xor
add
jns
insb
daa
push
outsl
jb
add
pop
jns
incl
outsb
(bad)
mov
repz
add
cwtl
or
jae
jb
movsb
push
sub
stc
decb
or
fs
pop
mov
or
push
insb
mov
popa
hlt
or
push
add
add
iret
imul
mov
push
cwtl
pushf
nop
lcall
(bad)
xor
pop
push
dec
bound
arpl
or
cmp
roll
jns
movsb
insl
xchg
imul
(bad)
dec
int1
jb
popa
arpl
pop
daa
mov
add
pop
inc
add
pop
or
imul
xor
pop
add
mov
aas
add
int3
addl
jmp
adc
jnp
in
or
int3
int3
xchg
sbbb
pop
fildl
cltd
mov
or
sub
dec
aas
or
mov
sarl
mov
add
mov
fs
(bad)
and
sysenter
xor
outsb
daa
sub
sub
dec
dec
dec
dec
sbb
adc
daa
and
or
in
or
outsb
daa
daa
nop
add
cld
clc
pushf
pushf
pushf
fmull
hlt
lock
call
in
(bad)
pushf
pushf
pushf
pushf
aam
ror
pushf
pushf
pushf
pushf
enter
pushf
pushf
pushf
pushf
(bad)
shrb
pushf
pushf
fs
pushf
pushf
mov
push
add
mov
mov
add
imulb
je
movzwl
mov
ss
fisttpl
inc
pop
ret
addr16
push
ja
js
mov
push
inc
popa
fmull
and
jb
mov
add
imul
fdivrp
and
xor
xor
or
jb
and
imul
or
and
data16
push
pop
cmp
fildll
push
push
je
popa
inc
inc
gs
insb
outsl
jo
xor
lock
idiv
int1
cmpxchg
ret
out
or
mov
dec
add
inc
or
imul
sub
ds
fisubrl
cmp
imul
lods
imul
add
sbb
cs
jp
mov
lcall
inc
and
rorl
dec
nop
inc
popf
imul
pop
mov
cmp
imul
sbbb
sub
jbe
decl
enter
fnstcw
fistpll
jl
push
cmp
cltd
fnstcw
js
and
mov
inc
pop
(bad)
xchg
add
dec
or
mov
add
pandn
cmp
mov
mov
jmp
mov
mov
shr
movzbl
mov
and
sti
sub
pop
mov
and
ljmp
push
shr
adc
add
leave
and
add
ja
or
xchg
mov
cmp
mov
add
inc
les
(bad)
cmp
loopne
(bad)
sbb
loopne
cmpl
or
outsl
mov
cld
add
orl
or
xor
add
clc
cmp
mov
pop
mov
cld
sub
idivb
and
or
idivb
jmp
pusha
push
mov
inc
push
js
add
add
pusha
push
fucomp
add
(bad)
int3
test
adc
or
pcmpeqd
mov
(bad)
mov
mov
mov
add
in
add
push
mov
sarb
(bad)
idivl
mov
mov
mov
int
push
in
sub
sbb
xor
mov
xor
cmp
cmp
frstor
repz
xchg
add
dec
test
roll
sbb
xor
jle
push
push
mov
lea
adc
dec
add
and
in
fwait
and
xchg
movb
mov
or
pushf
pop
pop
mov
(bad)
mov
mov
ss
add
mov
ret
adc
pop
pop
(bad)
mov
out
clc
std
fmull
jae
(bad)
jle
adc
mov
push
inc
mov
(bad)
or
test
jne
in
outsb
loop
jns
(bad)
cmpsl
aam
xor
jmp
or
cmp
in
push
push
jmp
rcrb
pusha
pop
push
cli
(bad)
mov
push
mov
cmp
jbe
sub
add
jmp
test
jne
cmp
push
mov
add
fiadds
dec
mov
add
nop
inc
or
jle
mov
mov
sub
pusha
cmp
and
jmp
rcr
rcrl
pop
shll
add
cmp
jbe
sub
sub
mov
adc
clc
sar
xchg
xor
push
mov
cmp
sub
add
and
mov
stos
ja
repz
shlb
mov
add
dec
and
cmp
cmp
jae
fdiv
and
rorb
lea
push
inc
pop
push
mov
shl
aaa
xchg
jecxz
pop
or
pusha
or
(bad)
push
push
std
sub
add
jbe
ret
push
lods
roll
mov
inc
adc
xchg
mov
outsl
clc
or
jl
shr
cmp
jb
addb
das
mov
rcll
(bad)
and
sar
jle
mov
cmpl
add
pusha
bound
sbb
xchg
test
je
shl
mov
lds
push
mov
inc
or
clc
mov
fisubl
sub
ret
dec
idiv
je
(bad)
and
add
(bad)
mov
dec
add
sarl
or
jbe
mov
cmp
imul
aas
adc
es
mov
lods
pusha
and
and
cwtl
scas
cmp
pause
jns
clc
fsubs
je
cmp
jae
lods
cmp
cmp
dec
jnp
and
xchg
pop
lock
mov
or
mov
mov
mov
lea
mov
shlb
leave
cld
mov
cmp
add
mov
test
add
cmp
jne
mov
movsl
ret
test
btr
mov
push
jle
pusha
or
insb
mov
dec
push
dec
add
jnp
sub
lea
mov
loope
jmp
sbbb
das
cmp
jb
mov
mov
sbb
add
jle
(bad)
sub
cmp
and
inc
sbb
(bad)
mov
adc
andb
lea
push
mov
xor
das
mov
mov
movl
insb
int1
adc
adc
push
or
imull
iret
mov
dec
or
pop
addr16
fisttps
xchg
sub
lea
out
div
mov
movsb
or
faddl
(bad)
sarb
xchg
shl
sbbl
mov
fdivs
insb
cli
push
je
loope
rol
or
jmp
mov
das
fisubl
xor
add
sub
stc
iret
push
bsf
mov
shl
xor
jnp
fnstenv
adc
fdivs
push
decb
pop
push
mov
jmp
mov
dec
loope
sbb
rcr
push
xchg
inc
inc
cmp
movl
adc
test
push
pop
xorb
xchg
adc
jb
xchg
or
testl
fisttps
pusha
rorl
jnp
mov
cli
nop
and
mov
test
rep
stos
sub
add
mov
jne
subl
lahf
adc
ljmp
or
inc
inc
fadds
data16
imul
aam
pushf
dec
xor
test
sbb
aad
inc
adc
cmp
jne
sbb
and
push
cld
iret
sub
jge
xchg
scas
jae
scas
js
push
push
mov
pop
leave
outsl
pop
(bad)
popf
mov
aaa
inc
addb
sbbb
loop
fmull
inc
mov
inc
xor
sub
xor
dec
clc
aas
adc
inc
cld
or
cmp
inc
lock
cmpsb
fiadds
xor
xchg
mov
xlat
arpl
fdivs
movsl
pop
mov
cmp
jmp
dec
clc
sub
sub
sbbl
jne
in
mov
lahf
pop
and
stos
flds
fiadds
sbb
add
inc
cld
popa
ret
movl
loopne
add
lcall
xor
or
in
push
enter
sub
pop
cmp
jb
jns
jb
clc
das
sub
mov
ret
jg
jmp
pop
loopne
movsb
test
lea
push
mov
loopne
imulb
sub
adc
and
add
hlt
out
sbb
mov
push
popa
xor
call
xchg
xor
loope
addr16
mov
mov
add
jecxz
mov
lret
cvttps2pi
cmp
jb
lods
jge
in
sbb
ljmp
mov
add
