mov
(bad)
scas
leave
stos
fmulp
cmp
pop
cmp
cmpl
mov
mov
jbe
out
out
push
pop
ja
scas
mov
mov
mov
xor
out
inc
iret
xchg
stos
fmulp
cmp
pop
cmp
pop
cmp
pop
cmp
pop
cmp
cmpl
mov
mov
jbe
scas
out
iret
xor
pop
fcmove
mov
cs
dec
jbe
cltd
mov
pop
xchg
jle
inc
outsb
or
dec
ja
jnp
push
test
cmc
or
jno
ret
pop
outsl
push
dec
mov
scas
lret
push
mov
pop
push
push
push
enter
aam
cltd
fmul
jae
test
lret
cmp
ret
dec
jp
les
repnz
mov
stos
fmulp
cmp
pop
cmp
pop
cmp
pop
cmp
pop
cmp
adc
je
lret
repnz
lret
mov
xchg
lret
lret
mov
push
fiadds
jnp
push
mov
fistpll
push
aam
in
out
lret
lret
inc
xor
mov
repnz
pop
out
inc
iret
xchg
jnp
scas
mov
pop
cmp
repnz
pop
outsl
or
mov
mov
inc
mov
xlat
inc
mov
sbb
outsl
sbb
push
decb
aam
jne
lret
lret
inc
xor
mov
repnz
pop
out
sbb
xchg
inc
xchg
scas
mov
pop
addb
dec
pop
outsl
or
mov
mov
mov
rcll
jns
scas
sarl
jb
int1
lret
lret
inc
push
lock
jno
lret
repz
lret
idivl
scas
mov
jnp
jo
sub
lret
lret
mov
(bad)
int1
cltd
fmul
jae
xchg
lret
cmp
ret
dec
jp
(bad)
mov
add
lret
mov
cli
xchg
and
repnz
lret
dec
sbbb
sbbb
sbbb
cmc
adc
je
ret
xchg
sbb
mov
push
lock
jno
lret
repz
lret
imull
fbstp
jnp
push
cmpsl
mov
lret
lret
cmp
int3
fidivrs
repnz
in
(bad)
lret
int1
lret
lret
cmp
into
idivl
repnz
lea
fsubr
int1
mov
xchg
lret
cmp
ret
jo
jb
lret
push
sarb
lock
aam
repz
lret
mov
cmc
push
pop
mov
out
mov
xor
int
mov
inc
mov
stos
jecxz
and
repnz
dec
jbe
push
mov
in
adc
lret
lret
mov
pop
stos
outsl
gs
in
loopne
dec
xor
lret
lret
cmp
int
mov
repnz
in
iret
lret
lock
lret
cmp
dec
mov
dec
adc
cmp
fsubr
int1
mov
repnz
pop
outsl
or
mov
mov
ja
ror
pusha
push
cmp
mov
cltd
jns
scas
mov
fmulp
push
push
push
fcoms
jnp
scas
rcrl
outsl
gs
mov
repnz
or
jnp
scas
lds
rorb
cmp
pop
cmp
ljmp
insl
cmp
cmc
dec
sarb
push
pop
cmp
pop
cmp
pop
cmp
or
jno
ret
xchg
or
leave
lods
es
sbbb
sbbb
sbbb
jno
scas
mov
scas
out
movl
or
mov
lret
mov
push
inc
call
out
dec
mov
jnp
push
mov
pushf
shll
mov
push
lock
popf
cmc
push
ds
push
les
dec
sbbb
cmc
or
jb
lret
cmp
adc
cmp
cmp
outsb
inc
dec
inc
pop
xchg
notb
out
dec
setbe
inc
push
scas
out
stos
inc
xor
inc
mov
cmc
dec
call
testb
push
testb
dec
jp
ret
push
testb
push
testb
push
testb
dec
jp
inc
setbe
ja
mov
sbbb
sbbb
sbbb
jnp
scas
inc
push
and
mov
cmc
dec
les
push
pop
cmp
pop
cmp
pop
cmp
lret
gs
cli
data16
mov
mov
sub
push
dec
bound
lret
cmp
adc
jno
ret
xchg
push
fmul
mov
jbe
sbbb
sbbb
sbbb
jnp
scas
inc
push
inc
call
cmp
cmc
dec
xor
push
pop
cmp
pop
cmp
or
jno
ret
xchg
push
fmul
lods
es
sbbb
sbbb
sbbb
jno
scas
mov
scas
out
mov
mov
movl
les
jns
movl
lret
lret
mov
jns
scas
xchg
outsl
add
mov
or
inc
cmp
mov
roll
xlat
aam
in
mul
in
xchg
push
cmpsb
push
clc
mov
scas
inc
call
sbbb
sbbb
sbbb
cmc
or
jb
lret
cmp
push
aam
pop
cmp
outsb
or
dec
out
push
enter
cmp
xchg
push
and
push
repnz
dec
jbe
cmp
xchg
cli
and
jbe
cld
addb
out
les
out
adc
push
push
push
enter
cmp
pop
xchg
jle
inc
fists
incl
xor
mov
push
add
push
jns
in
dec
mov
pop
rolb
inc
clc
inc
std
mov
add
mov
or
inc
cmp
enter
push
lret
xlat
popa
inc
push
lret
mov
lods
(bad)
lret
mov
cli
lret
lret
mov
repnz
lret
mov
repnz
push
clc
add
outsb
jno
leave
ljmp
(bad)
jns
rorl
pop
push
outsl
gs
(bad)
mov
cmp
fildll
add
mov
pop
cmp
rcrl
inc
mov
les
push
repnz
xchg
jle
xchg
sbb
dec
imul
inc
or
xor
xchg
jle
pop
xchg
jle
mov
lcall
mov
mov
out
jmp
push
inc
out
add
mov
xchg
inc
mov
outsl
or
ret
shll
shlb
es
inc
bound
cld
pop
jno
mov
and
cmc
push
repz
lret
push
decb
lock
xor
mov
int1
push
repnz
dec
jbe
inc
mov
dec
mov
mov
sti
push
insl
movsl
fcmovne
mov
repz
out
mov
xchg
mov
mov
lret
cmp
ret
dec
jp
fcmovne
jbe
push
jo
ja
scas
mov
pop
iret
lcall
(bad)
daa
in
imull
clc
jnp
scas
inc
scas
out
ret
xor
mov
lret
inc
mov
mov
xchg
jns
scas
xchg
jnp
sbb
repnz
out
adc
arpl
pop
cmp
pop
cmp
cmp
push
in
cmpsb
push
lret
sbb
fidivs
repz
xlat
xchg
es
ficoms
out
out
aam
lods
int3
push
add
or
push
dec
mov
ja
outsb
div
inc
enter
cmp
in
aam
aad
lret
mov
arpl
and
jp
dec
push
mov
push
dec
cli
mov
pushf
les
jno
lret
mov
jno
scas
shl
mov
stos
inc
(bad)
in
inc
pop
dec
arpl
push
fdivl
sti
out
pop
cmp
pop
cmp
pop
cmp
pop
cmp
inc
mov
push
add
or
and
jbe
push
mov
mov
mov
out
mov
xchg
adc
popa
sub
outsl
sbbb
jns
scas
cmp
int3
push
(bad)
push
lret
sbb
cmp
fidivs
inc
xlat
xchg
ja
lret
out
aam
sti
inc
adc
dec
mov
adc
xchg
add
lret
mov
pusha
cmp
iret
scas
cmp
int3
push
mov
jp
enter
jb
cmp
ret
jb
cmp
(bad)
jb
cmp
xchg
leave
inc
das
iret
jnp
sub
cmp
jbe
out
xlat
mov
shr
adc
mov
mov
testb
xchg
outsl
es
lret
iret
dec
int3
adc
xchg
mulb
out
lret
lock
lret
mov
scas
out
mov
jmp
inc
setbe
iret
and
