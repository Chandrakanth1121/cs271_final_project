rclb
ret
test
push
sti
mov
ljmp
(bad)
scas
call
daa
dec
test
mov
out
push
push
ret
lcall
add
cmp
enter
xorb
cwtl
pop
or
and
inc
inc
jge
adcb
lock
pusha
mov
clc
(bad)
aam
(bad)
pop
sbb
rcr
cmc
sub
stos
xchg
mov
jb
push
bound
fistl
xlat
or
xor
push
add
rorl
mov
loop
inc
pushf
jae
mov
pop
fnop
f2xm1
pop
xlat
pop
mov
outsl
aas
lcall
int
loopne
add
push
jo
and
addr16
iret
sahf
enter
mov
repz
or
mov
add
out
movsl
mov
andb
mov
xchg
sbb
fidivrs
fwait
push
out
cltd
pop
xchg
ds
test
fcmovnbe
loopne
pop
sub
mov
or
sahf
mov
in
lcall
mov
jge
or
rolb
inc
cmp
sub
xchg
pop
ret
inc
mov
movsl
push
cmp
pop
mov
sbb
or
pop
js
stc
je
adc
pop
cltd
fimull
ret
fsubs
rorl
jns
push
jl
mov
or
pop
xchg
popf
sbb
sbb
cwtl
arpl
jl
std
pop
sbb
xchg
or
xchg
sbb
loope
std
add
pop
cltd
push
lret
sbb
inc
lock
xor
or
mov
xchg
mov
addr16
loope
int3
rcrb
sahf
fsubrs
lock
sti
mov
xchg
pusha
(bad)
ds
sub
fbld
sub
loope
out
push
xchg
xor
cmp
mov
sbb
pop
js
aaa
push
adc
mov
(bad)
and
call
pusha
push
dec
cmpsl
push
ffreep
xchg
pop
pop
loope
movsb
adc
leave
and
repnz
fldenv
add
sbb
jge
and
mov
cmpsb
jge
push
xchg
jae
cmp
call
add
iret
pop
jle
mov
cmp
push
(bad)
stos
and
pop
fucomp
mov
test
push
inc
mov
lret
mov
sbb
ja
sub
pop
inc
ffreep
jnp
jecxz
inc
push
jge
rclb
mov
fists
test
xor
jl
push
sbb
xchg
dec
ficomps
stos
out
inc
xchg
pushf
mov
pop
pop
test
std
sub
pop
cwtl
pushf
cmc
fcmovnu
mov
pop
sbb
and
inc
test
in
jg
fdivrl
cmp
jo
int
cmc
pop
out
sahf
ss
sbb
xor
mov
shlb
xchg
enter
lds
test
add
jp
rcll
fiaddl
dec
jnp
sbb
fs
stos
push
aad
add
loope
lret
fidivl
pushf
pop
add
ss
fdivrs
aam
mov
in
insb
pop
mov
sub
cmp
pop
pop
ds
fildl
(bad)
stos
loope
or
call
rcrb
jl
and
repnz
clc
add
adc
lcall
subb
dec
and
mov
mov
mov
add
daa
fs
or
sbbl
movsb
cmp
pop
aam
jbe
jno
xchg
mov
test
xchg
ja
jge
lock
pop
mov
pop
push
xor
mov
push
addr16
adc
mov
push
leave
xchg
ret
mov
mov
out
addb
stos
mov
push
jae
fidivrs
adc
jp
shll
rcll
inc
push
mov
mov
and
ja
xchg
jp
lea
mov
lcall
adc
jns
push
or
lds
pop
inc
je
dec
jne
xchg
negl
push
daa
iret
cmp
outsl
loope
xchg
fiaddl
jbe
jns
jle
movsb
jecxz
push
push
call
mov
cmc
out
inc
and
int1
pop
or
test
in
hlt
mov
sbb
add
jmp
cld
lock
and
data16
mov
and
mov
test
cltd
in
pop
xchg
fadds
inc
pop
(bad)
jnp
stc
sub
cwtl
pop
test
bound
outsl
insl
cmp
imul
push
pop
jo
adc
push
in
pop
mov
mov
fldl
cmp
mov
pop
push
xchg
(bad)
movsl
cmp
ret
xchg
push
cld
out
ret
fistpll
cmp
push
adc
jp
shlb
sub
cmpsl
out
mov
les
mov
test
jne
adc
test
ret
push
int1
push
sub
inc
dec
inc
jmp
mov
ja
clc
adc
sbb
adc
imul
out
inc
inc
lods
lea
inc
jns
cmpsl
and
inc
jo
xor
testl
pop
mov
or
fadds
mov
or
or
sbb
pusha
and
fbstp
mov
push
rol
push
arpl
fldcw
pusha
mov
fldenv
clc
sbb
mov
call
jne
loope
jbe
inc
in
add
addr16
sbb
mov
mov
rolb
adc
in
enter
test
fmuls
lods
adc
sub
fistpl
pop
pop
fs
(bad)
sub
sbb
inc
and
ja
mov
nop
jb
das
(bad)
and
jne
fimuls
jae
sbb
sbb
enter
dec
lods
std
xor
ret
je
jp
leave
lea
decb
push
aad
pop
js
sbb
clc
mov
sub
cmp
fmuls
jge
push
push
lods
rorl
and
negb
mov
iret
push
rol
xorb
notl
loop
(bad)
pop
enter
test
mov
or
pop
test
sbb
movsb
and
fistps
(bad)
fcmove
rolb
fsubrs
movsl
rolb
push
and
mov
mov
push
cmp
push
and
inc
in
mov
leave
int3
and
(bad)
jg
(bad)
jmp
fwait
test
adc
mov
jmp
push
lds
fists
or
pop
bound
sbb
sbb
test
jg
outsb
fadd
xor
test
jne
shrl
push
inc
push
(bad)
mov
enter
jnp
dec
negb
inc
cwtl
lcall
cmp
xchg
mov
sub
test
sub
pop
(bad)
insb
pop
pop
(bad)
xchg
push
ljmp
jp
int3
(bad)
aas
push
int
insb
popa
dec
jne
pop
shrb
xor
xor
repnz
out
add
popa
push
cld
mov
stos
loopne
pop
stos
cld
cmp
(bad)
gs
sbb
mov
add
lods
int3
lea
movsb
cs
jmp
(bad)
jbe
inc
ret
adc
ja
add
shlb
cltd
pop
fwait
(bad)
stc
stos
pop
shll
pop
cmp
nop
fs
sbb
mov
pop
cmp
mov
into
movsl
dec
loop
xor
sub
test
pusha
in
lods
adcb
xorl
push
cmp
lods
pop
xchg
xor
lods
int
mov
sahf
adc
adc
push
data16
push
sti
rcrl
inc
sub
pop
xchg
test
mov
movb
pop
lret
je
mov
rcr
pop
adc
(bad)
jne
pop
adc
dec
rcll
lods
add
inc
popf
inc
lock
add
cmp
aaa
hlt
sub
aas
ss
jo
push
xchg
cmc
xlat
push
add
or
cmpb
push
jbe
lret
pop
clc
nop
in
das
mov
nop
push
xchg
cmp
js
addr16
pop
xor
dec
mov
adc
xlat
fstps
int
fmuls
push
or
into
clc
shlb
xor
push
mov
inc
or
push
and
lcall
jmp
loopne
imul
fadds
add
arpl
xchg
pop
pop
mov
ds
in
repnz
in
adcl
pop
loopne
jle
mov
sbb
fs
or
and
insb
mov
out
aas
inc
adc
sbb
imul
inc
sti
xor
ja
pop
ss
(bad)
or
repnz
adc
mov
std
imulb
pop
lock
cld
xlat
test
pop
adc
xor
inc
loope
inc
and
jg
adc
mov
shlb
rorb
movsb
mov
cli
mov
cmpb
stos
mov
jecxz
lcall
jbe
cmp
lock
mov
lods
iret
push
and
mov
