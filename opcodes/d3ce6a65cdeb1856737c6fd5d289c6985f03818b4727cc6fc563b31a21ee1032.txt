ja
popf
push
out
mov
xchg
fdivrl
and
push
movsb
push
adc
jnp
cmc
sub
dec
xchg
pop
pop
imul
mov
mov
loopne
(bad)
loop
fiaddl
ljmp
mov
pop
mov
jl
dec
xchg
xchg
addr16
inc
popa
repnz
popf
(bad)
jge
bound
fsub
sub
shll
lahf
bound
mov
or
mov
scas
movsb
mov
ficompl
push
pop
push
(bad)
add
jl
push
std
repnz
loope
xor
push
in
insl
ss
sub
jb
jmp
test
(bad)
lret
mov
ljmp
inc
(bad)
rorl
sub
dec
std
scas
scas
test
addr16
popa
mov
lea
rorl
aas
sub
jo
test
in
decb
inc
popa
sub
iret
mov
movsl
(bad)
arpl
xchg
rcll
and
clc
inc
and
mov
push
dec
push
push
and
xor
addr16
or
mov
addb
orl
add
inc
addr16
cmpl
adc
xor
ljmp
sub
add
mov
jg
test
or
jmp
pop
mov
cmp
ret
inc
inc
and
in
add
add
fbld
iret
sbb
addb
inc
adc
sti
xor
outsl
loopne
cmp
add
and
sbb
subb
stos
cs
sbb
add
fs
(bad)
xchg
repz
jmp
das
jle
inc
inc
outsl
push
jecxz
push
cmp
ss
add
xchg
int3
pop
mov
(bad)
jmp
cs
cmp
(bad)
stos
jnp
outsb
les
and
lods
cmpb
sbb
test
mov
sub
mov
imul
mov
pop
sbb
(bad)
mov
fwait
lcall
mov
dec
and
jne
mov
shrl
adc
add
fstl
mov
mov
loop
mov
adc
int
dec
add
pop
xor
test
xchg
imul
dec
insb
test
mov
sub
xchg
dec
(bad)
mov
xor
jle
mov
ret
push
adc
mov
arpl
jmp
dec
out
mov
add
fsubl
popa
push
test
imul
leave
fs
xor
mov
inc
adc
jecxz
mov
cmpsb
mov
sahf
loopne
lea
lret
sahf
sti
xchg
leave
mov
xchg
rcrl
imul
or
sub
pushf
popw
jbe
dec
cmp
push
and
pusha
xor
int
fwait
push
scas
rorl
andb
in
mov
cmp
loopne
rdtsc
mov
fadds
bound
orb
scas
inc
arpl
jecxz
sbb
inc
mulb
dec
sbb
test
dec
jecxz
jb
stos
jle
insb
sbb
xor
jecxz
(bad)
fildl
mov
call
adc
sbb
jb
dec
in
cli
out
sub
int1
stos
dec
or
addr16
bound
rorl
shll
insl
cltd
jbe
inc
nop
jno
outsl
cmpsl
and
fstpt
xor
cld
jl
inc
adc
and
pop
xchg
mov
xchg
sub
cmp
mov
cmp
sub
push
lods
mov
mov
push
or
xchg
inc
jge
mov
cwtl
sub
jo
das
dec
inc
mov
pushf
mov
popa
and
ret
ds
xor
xor
(bad)
lret
mov
decl
xor
dec
and
adcl
ja
push
clc
inc
or
lret
mov
sbb
jnp
out
push
sub
int1
shl
xor
mov
xor
repz
enter
std
mov
xchg
sub
push
push
and
inc
stc
enter
js
addl
jae
jae
cld
(bad)
mov
(bad)
jmp
ss
mov
int1
xchg
sub
insb
clc
movsb
je
xor
mov
or
mov
int1
xor
sbb
ja
nop
add
xlat
fistps
loop
mov
xchg
push
xor
cmp
subl
daa
mov
xor
mov
inc
int3
es
sbb
mov
and
loopne
sub
(bad)
jmp
sarl
add
(bad)
loop
dec
fcomps
jge
popf
es
jo
movsb
cmp
mov
into
das
mov
and
pop
es
lret
shll
into
adc
jo
pop
push
xchg
push
jae
xchg
shl
mov
je
cwtl
mov
imul
mov
js
or
pop
fwait
jns
adc
xchg
push
jle
rcrb
jg
rorb
sbb
hlt
int
imul
xor
loop
mov
xor
std
xchg
pusha
push
aas
insb
mov
dec
cmp
bound
imul
push
cli
(bad)
pop
sbb
(bad)
sahf
bnd
pop
stos
mov
movsb
in
daa
mov
and
arpl
or
push
loopne
ja
or
loop
inc
imul
mov
or
mov
es
out
add
adc
scas
sbb
jge
sbb
and
cs
in
aas
or
sub
in
dec
mov
and
cltd
cwtl
sbb
and
ja
in
inc
outsb
jecxz
outsl
pop
rcrl
and
and
imul
cs
mov
push
out
xor
outsl
pop
lea
in
or
mov
push
in
aaa
mov
add
cmp
pop
fstpl
shrl
sbb
add
test
cmp
filds
or
inc
or
insb
cmpsb
mov
int
cmp
xchg
pop
lods
and
pop
mov
sub
sub
scas
mov
add
and
inc
rclb
xchg
push
inc
imul
add
pop
inc
push
sbb
mov
pop
jne
andb
sub
and
cmpl
je
mov
mov
fistpl
or
push
cltd
xor
add
shll
int3
int
lret
xchg
jmp
add
push
insb
mov
jmp
lea
pop
push
push
pop
cmp
and
and
loop
cmp
insb
and
aaa
and
arpl
lods
cld
push
add
test
xchg
ficompl
enter
repnz
cmp
dec
mov
lods
mov
cmp
adc
dec
test
mov
mov
xor
sub
add
rol
cmp
shlb
and
movsb
aad
mov
(bad)
inc
sbbb
pop
scas
movsb
jp
add
jl
das
xchg
dec
lds
sub
stos
in
lds
and
fsubrs
cmpsb
dec
and
add
or
xor
stos
sub
clc
and
pop
sarb
cmp
fisttpll
and
ret
jmp
jno
inc
pop
out
xor
hlt
das
xor
adcb
outsb
fstps
das
jl
xor
sub
mov
xor
jb
dec
xchg
lahf
mov
mov
cmp
xor
in
mov
xchg
mov
sub
jno
(bad)
xor
sbb
xor
sbb
cwtl
mov
stos
shlb
stos
mov
cmpsl
push
jne
cmp
mov
sbb
sahf
jne
bound
and
lds
xor
lods
cmp
inc
sarl
and
jmp
mov
out
ret
push
scas
loop
je
jmp
(bad)
cmpsb
mov
jle
dec
dec
loope
loop
sbb
insl
mov
rolb
adc
add
sbb
xchg
mov
test
push
sbbb
jecxz
jbe
int
lock
jno
aad
or
inc
adc
imul
loopne
cwtl
shll
in
in
pop
sbb
xor
into
int1
adcl
mov
insl
imul
adc
jge
idivl
out
mov
aaa
pop
divps
push
lea
sub
pop
inc
jmp
scas
outsl
cmp
call
add
push
xorb
fs
imul
push
(bad)
sbb
sub
jne
pop
mov
lret
int3
pop
dec
push
(bad)
cmp
pop
fisubs
add
lcall
push
inc
adc
scas
int3
mov
mov
stos
and
adc
sbb
mov
scas
sbb
push
adc
cli
pop
sbb
cmp
push
aas
xchg
ss
stc
fisttps
gs
insb
and
or
fmul
mov
dec
and
push
lret
cli
enter
dec
cmpsl
pop
pop
dec
rcrb
dec
rclb
int
mov
popa
jnp
add
loope
jne
(bad)
loop
out
cmp
dec
fildl
dec
cwtl
dec
cmpsb
into
jbe
les
nop
dec
cltd
