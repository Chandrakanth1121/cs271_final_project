into
lock
mov
lock
add
add
ret
add
out
add
lock
add
add
add
push
out
add
and
add
xor
add
inc
out
add
push
out
add
fs
add
je
add
mov
add
sahf
out
add
mov
add
(bad)
out
add
ljmp
add
add
and
add
xor
add
dec
lock
lock
jb
add
test
add
xchg
lock
mov
add
movsb
out
add
xchg
out
add
mov
add
jp
add
fsubr
add
pusha
out
add
inc
int1
add
pop
int1
add
jbe
add
xchg
int1
add
test
add
mov
int1
add
fdiv
add
out
int1
add
(bad)
int1
add
adc
add
sub
add
inc
repnz
dec
repnz
pop
repnz
jbe
add
mov
add
cwtl
repnz
shl
add
repnz
in
add
cld
repnz
adc
add
push
repz
sub
add
cmp
add
inc
repz
pop
repz
push
add
xor
add
repz
scas
repz
mov
repz
loopne
add
in
repz
cld
repz
push
hlt
add
sbb
add
sub
add
ds
add
dec
hlt
add
add
add
sub
add
add
add
push
int1
add
push
xor
lret
add
inc
add
jp
add
add
add
jbe
add
xor
aaa
mov
pop
add
add
add
add
js
add
lock
add
add
add
adc
sbb
inc
add
add
jne
insb
add
add
add
add
outsb
jne
insb
sub
add
add
add
add
push
add
add
adc
add
add
add
add
inc
inc
add
xor
add
add
and
push
pop
pop
or
aaa
xor
push
push
pop
add
and
or
add
add
pusha
push
add
js
js
js
or
or
add
add
or
add
or
or
pop
or
cmp
add
add
add
inc
pop
mov
in
add
in
mov
daa
cmc
xchg
cmp
cmp
ret
scas
frstor
aas
cltd
sub
imul
cmp
and
dec
jmp
gs
xor
loope
add
mov
cli
adc
cld
pop
out
add
mov
push
lea
lahf
ret
cmp
and
or
aas
or
mov
cmp
shrb
xchg
mov
jbe
jmp
loopne
add
sbb
mov
xchg
std
sbb
loopne
add
mov
or
shll
and
cmp
(bad)
mov
mov
push
push
(bad)
loope
add
aaa
movsb
mov
call
sbb
cmp
popa
mov
aas
or
mov
fnop
nop
and
aas
pop
push
sbb
cmp
cmp
aas
jl
jge
mov
xor
mov
jle
fwait
or
repnz
add
pop
or
sub
ds
inc
lods
lret
cmp
cmpsl
daa
dec
push
and
rolb
pop
cmp
test
aas
ds
mov
lret
add
xchg
mov
ret
arpl
jno
cmp
fcmovnu
cmpsl
lock
aas
jb
stos
fmul
add
add
movaps
mov
pop
negb
cmp
daa
out
int3
pusha
data16
xor
add
push
sarb
shl
lcall
decl
push
ret
cmp
in
outsl
pop
(bad)
out
aas
inc
lahf
out
cs
cmp
cmp
xchg
in
adc
mov
pop
push
call
imul
aas
idivb
sub
add
movlps
rcrb
add
mov
jmp
repz
stos
stc
int3
cmp
int3
push
scas
adc
mov
sbb
fnstcw
cmp
pop
push
outsb
inc
xor
in
cmp
mov
and
test
aas
fcmovnbe
sbb
int1
add
outsb
sbb
call
cmp
fsubrl
add
pop
pop
stos
popf
mov
(bad)
lds
loopne
jmp
cmp
push
call
aas
std
popw
fadds
movsl
cmp
sub
aas
popa
lods
leave
fnstenv
ljmp
sub
xchg
cmp
out
add
mov
push
mov
cwtl
sbbl
cmp
das
subl
push
movsb
push
jmp
aas
inc
je
mov
add
or
test
subb
push
fdivrs
xchg
lahf
sahf
add
mov
and
and
popa
push
sbb
pop
inc
in
mov
add
outsb
dec
mov
mov
lcall
or
cvtps2pi
jg
sub
cmp
push
adc
insb
insl
mov
in
aas
xchg
loopne
add
mov
aas
push
jecxz
sub
cli
mov
add
dec
sub
push
lea
inc
mov
add
shrl
cs
adc
add
fxtract
outsb
mov
sub
(bad)
ficoms
scas
mov
aam
pushf
in
add
out
ret
out
mov
xor
xchg
test
lret
mov
mull
push
adc
aas
add
mov
cmp
scas
mov
pop
mov
aas
xchg
mov
jnp
jmp
add
add
aas
pop
push
test
cwtl
lock
cmp
xchg
inc
sbb
daa
nop
add
cli
roll
cmp
dec
mov
pop
jb
aas
shr
scas
inc
int3
add
cmp
jae
shlb
stos
(bad)
rol
in
cmp
ja
mov
mov
xchg
outsb
daa
and
cmp
loopne
xor
xor
adc
aaa
fnstcw
pop
lea
add
aam
cmp
ret
in
mov
pusha
mov
push
(bad)
or
aas
push
adc
cmp
push
push
push
ljmp
sarb
mov
(bad)
out
sarl
xor
clc
test
aas
sub
and
cmp
jb
rorl
lods
sarb
push
inc
adc
or
cmp
dec
sahf
out
pushf
in
sarb
js
int3
in
cmp
lock
pusha
das
sub
clc
mov
and
cmp
fimuls
aas
(bad)
ja
subl
sarl
and
inc
sar
cmp
insb
pop
pop
add
sarl
scas
pushf
inc
add
nop
jnp
movsl
das
ret
test
sbb
pop
cmc
cmp
pop
push
aas
bound
pop
sub
movsl
leave
cld
mov
aas
test
iret
mov
jae
int1
ret
mov
hlt
cmp
mov
data16
aas
mov
and
add
cmp
fidivs
and
aas
push
(bad)
or
cmp
add
ret
aas
cltd
mov
ja
mov
cmp
dec
cs
stos
hlt
ret
aas
dec
mov
call
dec
ja
les
in
xchg
cs
nop
cmc
cmp
sub
dec
jbe
aas
dec
or
in
repz
add
les
jecxz
push
mov
repz
cld
jbe
cli
test
out
push
and
cmp
imul
aas
add
cli
cmp
cmp
mov
lds
inc
lods
loope
push
jecxz
cmp
or
aas
ret
js
inc
enter
add
call
aas
aam
stc
call
cmp
popf
repz
out
fiaddl
out
jmp
aas
movsl
lcall
add
(bad)
aas
fxch
std
popa
inc
cmp
add
(bad)
aas
cmpsb
sbb
movsl
xchg
xchg
sarl
int3
int3
scas
inc
(bad)
aas
mov
sbb
xor
les
cs
sbb
cmp
and
aas
popf
dec
xchg
test
hlt
sarb
rcr
int
add
aas
stc
(bad)
(bad)
or
shrb
inc
enter
(bad)
mov
sar
add
rcll
enter
xor
gs
cmp
mov
aas
(bad)
mov
enter
lret
fwait
(bad)
or
aas
aad
shll
lods
pop
or
aas
and
push
dec
aaa
cmp
cmp
(bad)
das
mov
cmc
cmp
cmp
dec
pop
loop
int3
leave
aas
push
cmp
aam
repnz
(bad)
push
aad
or
insl
test
pusha
iret
cmp
bound
stos
push
dec
lret
push
fs
daa
