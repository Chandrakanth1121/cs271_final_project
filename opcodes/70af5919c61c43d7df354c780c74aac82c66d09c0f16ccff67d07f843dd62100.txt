(bad)
(bad)
(bad)
call
in
push
push
push
mov
xor
cmp
je
mov
cmp
je
mov
cmp
je
mov
iret
out
(bad)
(bad)
cmp
je
mov
cmp
je
mov
mov
cwtl
jmp
or
jmp
mov
jmp
jb
pushf
mov
ret
push
push
push
call
(bad)
lcall
push
mov
mov
mov
mov
inc
adc
movsl
nop
add
ljmp
out
mov
push
adc
push
and
rcrb
movb
mov
outsb
fistpll
je
push
push
xchg
inc
pop
orb
ret
push
mov
pop
popf
cwtl
jmp
add
adc
dec
cmp
sub
or
or
pop
sub
in
movb
xchg
add
fdivrs
rcll
add
pusha
pop
faddl
mov
push
jbe
jae
add
sbb
and
mov
(bad)
(bad)
xlat
(bad)
ficoml
push
push
push
pushf
pop
push
add
xor
(bad)
call
fistpl
add
popf
jmp
clc
ret
pop
scas
inc
sub
inc
push
mov
inc
xor
jne
xor
jmp
sbb
in
mov
notl
add
pop
je
data16
mov
jle
or
lcall
cld
test
or
add
cmp
jle
lea
mov
or
mov
xorb
push
sbb
fwait
std
incl
add
or
pop
jl
lret
inc
and
cmp
cld
push
dec
cmp
jl
mov
add
push
popa
mov
mov
cmp
je
xor
aam
jle
mov
scas
pop
mov
inc
cmp
jl
sub
push
mov
mov
add
or
mov
testl
test
pop
and
xor
mov
sbb
xorl
imul
mov
adc
add
shl
cltd
flds
dec
pushf
idiv
fildl
add
fxtract
fistl
(bad)
mov
cltd
cmp
cld
mov
decb
jb
imul
cltd
mov
sti
shl
(bad)
push
xor
decb
ja
std
or
clc
mov
cltd
mov
mov
push
cmpsl
in
out
jnp
or
fdivs
sahf
xchg
xor
mov
aas
cld
adc
dec
int3
movl
pop
inc
(bad)
out
jl
movzbl
(bad)
and
sub
orl
ja
rclb
cmp
es
push
dec
pop
imul
or
(bad)
jp
mov
adc
imul
std
lret
push
es
sti
sti
adc
sbb
inc
push
push
adc
pop
add
js
lret
ljmp
pop
outsl
push
imul
(bad)
adc
xchg
adc
movsb
call
in
adc
clc
out
fistps
inc
in
push
push
int3
(bad)
cwtl
movw
lahf
sbb
lret
lock
hlt
xchg
add
pop
push
out
mov
mov
ja
mov
push
push
mov
sbbl
fs
or
and
cmp
cwtl
movl
sub
or
mov
adc
adc
cmpsl
pusha
lds
scas
jle
pop
and
pop
pop
sub
and
cmp
mov
repz
sub
or
adc
mov
nop
fwait
lods
push
push
push
and
mov
ljmp
adc
pop
sub
push
pop
ret
movb
std
fstl
lods
je
pop
jo
jne
push
jge
jmp
dec
or
gs
sub
push
lock
sub
push
je
ds
add
adc
xchg
jne
addr16
xchg
adc
movsb
lahf
adc
push
imul
les
(bad)
pop
and
inc
xchg
mov
push
je
cmp
push
jle
imul
pop
xor
inc
ret
cld
inc
sbb
fwait
(bad)
add
mov
aad
dec
add
mov
fcmovnbe
jge
jbe
test
xor
mull
sbb
adc
sub
sub
add
add
std
push
mov
ja
loopne
je
cmp
push
jle
or
jg
mov
(bad)
sub
push
mov
sarb
leave
jge
or
sub
sbb
pop
mov
cmp
mov
fildl
fadd
fdivr
lock
fstpl
je
sbb
xor
lahf
jmp
sub
mov
jo
enter
and
cmpb
flds
dec
xor
cmp
mov
or
jne
xchg
call
jmp
out
mov
add
dec
jne
mov
sub
scas
or
fnop
push
test
ret
jmp
and
jmp
rcll
rcrb
or
cmp
setge
dec
and
test
or
(bad)
push
fdivrs
jnp
push
jo
imul
mov
dec
add
rclb
pusha
adc
js
lock
add
jmp
lahf
loope
andb
dec
pusha
cmp
jle
and
ret
cmpl
xor
push
ret
ss
in
loope
xor
sub
insl
ljmp
loop
and
sub
xor
sbb
xor
add
dec
jne
repnz
fwait
sub
je
inc
sbb
inc
xor
inc
mov
subl
adc
clc
push
shlb
jl
lcall
xor
jle
push
pop
sub
mov
pop
xchg
adc
xor
push
adc
neg
push
ds
lahf
mov
pop
mov
sub
cmp
adc
add
push
mov
pop
pop
in
pop
cmp
lea
rclb
sbb
adc
lahf
add
movzwl
cmp
mov
testb
je
lcall
cmp
jne
inc
and
pop
fmull
fmull
push
xor
sbb
add
jne
mov
xor
add
inc
add
fldt
shl
dec
cmp
jne
je
mov
mov
push
xor
jl
ds
cld
or
jmp
mov
lcall
fcoml
inc
adc
add
mov
jmp
push
xchg
and
push
and
fidivl
(bad)
cltd
adcb
mov
hlt
inc
cmp
mov
incl
jmp
sbb
or
mov
or
insb
cwtl
push
pop
sub
adc
incl
mov
or
es
lock
stc
adc
or
ja
pop
leave
sub
and
cs
inc
int
sbb
mov
in
add
cmp
ja
(bad)
jmp
dec
movaps
jns
andl
push
xchg
push
loop
and
add
push
adc
shl
cmpsb
jge
inc
xchg
dec
mov
lock
into
in
jle
xchg
mov
pop
adc
adc
adc
pushf
fnstenv
pop
adc
add
nop
je
shl
je
stos
ljmp
pusha
dec
mov
ds
ja
flds
or
(bad)
push
mov
cmpsb
mov
mov
test
shrl
popa
(bad)
pushf
dec
hlt
test
nop
enter
cmp
mov
rolb
lock
jge
push
ja
ds
mov
mov
push
sub
mov
add
(bad)
jmp
mov
inc
or
jp
in
adcb
pop
adc
cltd
pop
fiadds
clc
push
outsb
jle
cli
add
imul
or
adc
fimuls
(bad)
stos
pop
cld
pop
and
mov
repnz
into
pop
jl
sbb
add
xor
das
adc
pop
mov
aam
cld
je
mov
int3
pushf
adc
decl
sbb
add
addr16
testb
jle
jmp
les
pushf
imul
add
sbb
(bad)
divb
and
andl
jle
or
(bad)
das
cld
pop
imul
push
lea
out
fistpll
xor
push
add
push
fs
repnz
in
add
inc
das
mov
push
push
xor
mov
jnp
imul
push
sub
jle
sub
andl
push
sub
mov
or
sbb
insl
inc
adc
adc
das
inc
fildl
fmulp
fimull
fimull
mov
call
and
int3
adc
adc
adc
mov
mov
test
jl
lods
jmp
sbb
mov
sub
inc
push
xchg
pop
lea
rcrb
idivl
dec
sub
ds
pop
scas
sub
dec
adc
pop
cmp
jle
mov
addl
cmp
mov
iret
fldenv
jnp
or
cwtl
ss
leave
inc
inc
sti
loopne
je
push
inc
and
aaa
jo
bnd
mov
and
loopne
aas
enter
push
mov
mov
(bad)
ds
(bad)
dec
