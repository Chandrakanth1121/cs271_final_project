std
pop
pop
cli
cld
je
clc
aam
xchg
fimull
insl
sbb
jae
sbb
je
pop
std
ret
js
nop
ljmp
mov
push
repz
repnz
stos
arpl
mov
sbb
jns
repz
in
sub
cltd
jg
clc
mov
mov
int3
mov
clc
int3
pop
(bad)
mov
test
mov
add
aas
add
push
inc
sti
les
cmp
fiadds
fwait
pop
xor
dec
mov
or
pushf
and
ret
ljmp
dec
mov
pop
in
xor
cmp
popa
push
mov
(bad)
dec
push
imul
sahf
add
in
mov
mov
sbb
outsl
pop
daa
add
mov
sbb
inc
lods
cld
cltd
jbe
jp
les
xor
pop
add
shll
inc
and
sub
inc
jb
pop
add
jo
cmp
lcall
mov
dec
scas
lea
shlb
pop
mov
push
cmp
lea
call
leave
jbe
in
les
cmp
mov
mov
imul
inc
lods
mov
es
mov
pushf
hlt
push
add
cmp
pop
cmp
jo
cmp
imul
cmp
cmpsb
ret
cli
lods
gs
stc
fs
aaa
je
inc
jbe
sub
clc
jns
push
mov
mov
push
stc
xor
gs
adc
jae
adc
adc
jle
mov
or
outsl
aaa
or
imul
cmp
cmp
jne
cmp
sbb
test
mov
fnstcw
daa
lret
popf
or
testl
lock
lea
pop
movb
jo
es
inc
clc
pusha
lretw
aaa
mov
cwtl
in
mov
push
cmp
mov
mov
and
inc
mov
mov
xchg
and
sub
mov
sarl
pop
sub
mov
out
imul
lcall
push
inc
jg
dec
sub
sbb
fildll
and
les
mov
(bad)
je
mov
and
adc
lock
pop
lcall
outsb
in
ret
mov
xchg
xor
(bad)
loopne
cmc
data16
stc
(bad)
call
inc
cwtl
mov
repz
push
ljmp
push
adc
in
jb
shlb
push
int
sub
pop
in
sahf
dec
fidivrs
sbb
push
or
aaa
repnz
mov
jo
movsb
jle
cmp
xchg
push
dec
scas
testl
push
lods
add
into
in
mov
jge
jae
sbb
inc
lcall
rclb
popf
adc
mov
and
clc
outsb
sbb
xlat
inc
push
out
mov
push
mov
mov
popa
cltd
int1
lods
xbegin
cmc
lods
clc
mov
setge
push
test
dec
sub
add
add
insb
sbb
sub
dec
push
xlat
add
sti
and
or
sarb
pop
jge
das
xchg
(bad)
addr16
jl
outsl
inc
insl
xchg
jp
imul
rol
sbb
xor
dec
js
stos
sub
jle
inc
sahf
push
inc
pop
rcrb
add
pop
or
(bad)
daa
dec
jnp
mov
clc
fisttpl
aaa
shll
test
movsl
stos
adc
rclb
lods
and
and
cltd
cmp
fsubrs
notl
lock
dec
cmp
dec
adc
mov
out
rclb
lret
dec
sub
jmp
cmc
add
inc
mov
add
or
fcom
mov
xlat
cs
sti
jle
xor
dec
sub
and
pop
data16
cli
idivl
xor
pop
stos
test
testl
int3
int
push
or
cmc
cmp
jl
insb
jp
xchg
xchg
mov
pop
mov
ret
dec
push
fstpl
or
in
aas
subl
xchg
ret
ds
sti
mov
dec
dec
test
xor
jne
(bad)
xchg
fistps
xor
push
stos
mov
arpl
addps
rcrb
xlat
jg
xchg
fs
aas
int3
aam
inc
jae
mov
jecxz
lock
out
shl
inc
mull
imul
in
test
out
dec
jo
add
dec
lret
in
mov
cltd
pmaxub
or
bound
mov
movzbl
or
sbb
outsb
mov
push
xchg
daa
inc
outsl
sub
iret
inc
dec
push
mov
add
pop
mov
pop
les
mov
cmpsb
mov
bound
movl
daa
sbbb
cmc
jns
inc
aas
mov
in
rclb
mov
push
nop
jg
pop
jle
inc
cs
lea
out
jae
out
stos
add
and
pop
mov
in
jbe
jmp
dec
rcll
repz
cmpsl
xor
ja
jbe
mov
dec
jecxz
into
dec
mov
in
pop
pop
mov
out
adc
dec
xor
sub
addr16
pop
push
cmc
xor
sti
repz
mov
mulb
xor
sub
cli
mov
cs
fbld
sbb
mov
cmc
aam
dec
cmp
jle
jbe
fnstcw
xchg
mov
hlt
scas
js
cmpsb
push
inc
sbb
test
test
xor
xor
aad
mov
or
lcall
in
scas
push
xchg
jbe
inc
xor
outsl
mov
subl
int1
popa
in
pusha
outsb
out
cmpb
or
aaa
dec
jne
je
int3
and
out
push
adc
ss
xchg
bound
in
addr16
jbe
dec
xchg
shl
or
jae
push
or
in
or
mov
out
cwtl
xor
outsl
jbe
mov
cmp
fnstenv
ss
xor
push
inc
pop
lret
push
notb
cmp
mov
mov
incl
lods
ljmp
imul
or
pop
mov
push
or
(bad)
clc
pop
in
cmp
push
outsb
flds
ja
scas
or
push
scas
fimuls
cltd
imul
imul
jb
and
push
rep
imulb
dec
hlt
(bad)
cmp
sub
int
les
(bad)
test
mov
aas
hlt
shl
sti
test
js
push
hlt
ljmp
fiadds
jno
into
sysenter
outsb
pop
aas
xor
les
xor
aaa
sbb
cli
adc
pop
mov
outsl
aas
jl
mov
insb
mov
inc
xor
xlat
xchg
sub
cmp
push
nop
je
pop
mov
das
jmp
xchg
test
addr16
mov
popf
xor
jl
je
pop
mov
ljmp
xchg
sbb
ljmp
in
sbb
jl
xor
lods
out
mov
add
sbb
mov
lods
lret
mov
mov
add
mov
popa
fcoml
shlb
out
ljmp
cs
pusha
cmp
sti
mov
add
sub
shll
xchg
jb
lret
xor
mov
jp
rcrl
lea
dec
jle
mov
push
(bad)
mov
insl
arpl
dec
xchg
push
adc
test
pop
sbb
adc
in
mov
ss
in
mov
mov
xlat
push
fldt
jnp
xorl
cltd
rolb
xor
sub
mov
or
orb
jmp
cmp
fdivs
test
into
mov
imul
push
int
push
sbb
fcmove
or
cltd
ret
mov
sbb
inc
mov
inc
dec
imul
inc
xchg
cli
mov
xchg
jne
test
scas
push
sub
testb
push
sbb
fidivrs
push
or
pop
aam
cmpsl
outsl
ja
sbb
mov
sbb
inc
stc
mov
shlb
cmp
mov
aaa
pop
xchg
xchg
adc
push
inc
mov
movl
push
pop
sbb
std
ffreep
xchg
(bad)
cmp
in
fcoml
ja
rolb
push
pop
jnp
cld
pusha
dec
movsb
xchg
testb
xchg
lds
imul
stos
jno
je
xchg
sub
test
adc
xchg
pop
test
sbb
andl
dec
imul
add
mov
push
das
out
roll
add
jecxz
pop
push
dec
cmp
push
lea
stc
add
daa
lock
mov
adcb
jge
call
mov
mov
or
mov
(bad)
in
sub
dec
ja
inc
in
fs
push
xchg
call
xor
inc
cmp
outsb
add
adcl
cwtl
