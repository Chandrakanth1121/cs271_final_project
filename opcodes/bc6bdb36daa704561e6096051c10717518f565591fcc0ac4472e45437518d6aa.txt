cmp
xchg
int1
push
jp
lret
lds
lock
iret
adc
xchg
into
push
xchg
lret
ret
mov
adc
dec
scas
lret
mov
xchg
ret
lahf
pop
movb
cmp
andb
mov
loopne
fwait
ret
mov
rcl
pop
inc
jb
mov
adc
dec
sbb
orl
cmp
(bad)
adc
shlb
dec
xchg
rorl
aam
xchg
mov
sbbb
and
xchg
movsb
scas
cs
jmp
cli
inc
ja
or
pop
or
sbb
(bad)
sub
mov
mov
inc
adc
or
jns,pn
pop
out
je
mov
movsl
and
mov
push
xchg
sysexit
inc
sbb
roll
push
mov
je
sub
stc
sbb
push
orb
inc
cmpsb
out
pop
cmpsb
movsl
lahf
or
mov
shll
xchg
jns
xchg
lea
loope
test
test
pop
push
fisubrs
call
push
in
cmp
mov
aaa
mov
mov
sub
xchg
ja
int1
fsubrl
inc
jecxz
sbb
orb
push
mov
(bad)
stos
lret
leave
push
pop
pop
rorb
pusha
ret
dec
xchg
fstps
push
hlt
or
out
add
xchg
mov
(bad)
adc
imul
out
dec
mov
dec
fwait
lods
out
loop
movsb
and
xorl
or
xor
mov
pop
mov
xchg
xor
push
cltd
mov
jge
inc
hlt
mov
pop
lahf
int3
push
adc
mov
push
repnz
(bad)
jno
add
(bad)
sahf
insl
cmpsb
jge
and
arpl
imul
fstl
bound
psubd
or
pop
fistpll
and
fstpt
mov
pusha
xchg
data16
js
jmp
adc
cmpsb
sub
mov
in
pusha
jb
(bad)
fadds
mov
cmp
cmpl
and
cmp
jnp
aam
pop
dec
jno
or
dec
ja
jno
cs
sub
cmp
sti
(bad)
jge
xlat
push
push
xchg
push
push
pop
adc
cmpsb
jle
(bad)
jmp
out
(bad)
adc
add
in
add
gs
sarb
pop
xchg
xor
sub
xchg
sub
mov
inc
jmp
repnz
pop
js
dec
push
mov
mov
and
movsb
popf
sbb
jmp
add
int3
cmp
pop
cmpsb
push
xor
add
out
sub
insb
mov
stc
mov
into
mov
lret
mov
aas
outsb
adc
xor
push
inc
outsl
sarl
jle
lock
xor
pop
ljmp
jge
mull
sub
dec
dec
sub
xor
push
sub
xchg
cmp
mov
lret
fmul
into
std
stc
(bad)
pop
add
push
jno
xor
sub
arpl
stc
cmc
dec
outsl
and
and
cld
js
inc
mov
mov
(bad)
dec
pop
(bad)
(bad)
fnstenv
repnz
out
sub
(bad)
pop
add
mov
mov
jge,pt
lret
inc
xchg
shl
ret
and
les
or
lods
(bad)
jge
and
fcomi
push
lsl
mov
imul
cmp
fdivs
subl
fcomi
mov
cs
mov
data16
or
fidivrs
addr16
popa
sbb
and
out
and
sub
mov
mov
xchg
jnp
inc
xchg
sub
stos
jp
mov
sub
adc
xchg
or
pop
rclb
push
cld
sub
dec
xor
movsb
mov
xor
cmp
es
xor
mov
insl
adc
mov
cld
adc
xor
loop
das
pop
cmpsb
out
xchg
(bad)
fwait
rcll
gs
ret
xchg
and
and
cwtl
mov
dec
mov
push
rorb
fisubl
cld
test
popa
cmp
push
cmp
mov
mov
jns
mov
lcall
mov
(bad)
jns
jo
xchg
arpl
pop
dec
push
mov
adc
or
pop
shl
shll
iret
adc
inc
jne
jne
in
push
xor
in
push
fwait
imul
mov
into
mov
xchg
mov
rcll
sarl
and
cmc
pop
inc
pop
lret
fsubrl
imull
jecxz
dec
scas
jne
and
rorb
je
jne
mov
adc
call
or
xchg
mov
in
fwait
xor
pop
xchg
or
sbb
jl
cmp
pop
inc
mov
(bad)
push
lock
cmp
jg
rcrl
fwait
cmc
mov
add
int3
inc
mov
or
xor
cmp
shlb
stc
popa
push
rolb
push
sub
mov
mov
sbb
jge
xor
(bad)
push
subl
sub
sbb
or
adc
test
int1
mov
in
addr16
mov
les
popa
in
das
scas
scas
mov
test
es
aas
rcl
xor
lret
test
sahf
fcompl
pop
ss
cmpsl
fidivrs
mov
sbb
js
xchg
lock
cmc
mov
add
dec
clc
shlb
cli
out
pushf
sub
or
lods
lods
cwtl
sti
mov
add
mov
push
mov
dec
mov
and
add
cltd
les
jns
lock
mov
repz
pop
lock
cmp
mov
mov
push
(bad)
cmp
adc
jnp
aas
push
and
xor
sub
fadd
dec
and
test
mov
pop
inc
sub
push
pop
sbb
adc
jp
jno
xor
inc
repnz
mov
push
add
jne
xchg
dec
ja
jno
xchg
pop
sbb
ds
dec
xchg
ret
xchg
jae
sub
test
nop
mov
jg
jge
xchg
xchg
(bad)
leave
jp
arpl
cs
(bad)
sahf
gs
(bad)
xlat
stos
sbb
xchg
mov
jmp
jo
or
orl
js
in
and
sub
add
jo
mov
xchg
pop
inc
insl
popf
mov
inc
xor
stc
dec
fsubr
out
sbb
loope
pop
cmp
xor
adc
in
aaa
in
and
mov
pop
add
(bad)
mov
and
sbbl
push
pop
add
repnz
mov
fildl
sarb
push
lret
rcll
mov
jne
and
xor
cmp
jbe
inc
out
jno
aaa
cmp
and
cmp
scas
xchg
dec
outsb
dec
ficompl
clc
push
ljmp
adcb
fnstsw
sbb
inc
mov
push
xchg
cmpsl
int
cs
jecxz
fistpll
mov
sbb
inc
lea
mov
dec
ret
sub
xchg
and
setbe
dec
and
stos
pop
xchg
popf
inc
jnp
testl
(bad)
inc
movl
push
test
fdivs
jne
cmp
or
xor
jg
xor
test
add
test
fidivrs
ja
sbb
pop
add
xlat
aas
sahf
xor
mov
or
cmp
cmp
adc
cmpsl
int
jns
add
sbb
jmp
cmp
jle
or
adc
cmpsb
std
hlt
dec
xor
insb
(bad)
imul
push
inc
cld
mov
mov
xchg
stos
insb
inc
mov
sub
xchg
pop
jbe
or
shlb
xor
xchg
xchg
in
into
iret
mov
out
cmp
mov
out
es
inc
loope
bsr
jmp
pop
dec
push
dec
mov
orb
push
in
pop
outsl
or
lods
in
adc
sti
bndldx
fisubs
ret
sub
jns
in
scas
add
lea
aaa
pop
out
xorb
jnp
stc
and
add
sub
push
xor
shrl
mov
std
mov
add
dec
movsb
xor
out
mov
test
test
and
jge
in
incl
sub
dec
roll
(bad)
loop
jno
ss
movsb
in
cld
mov
cli
adc
(bad)
movsl
or
pop
cli
dec
(bad)
in
jns
and
dec
pusha
sbb
dec
pop
cmp
and
pop
gs
js
and
mov
call
adc
pop
push
sahf
add
xor
mov
subl
cmp
into
mov
pop
sbb
js
mov
test
pop
insl
mov
bound
fisttps
ret
add
dec
sbb
jmp
sub
