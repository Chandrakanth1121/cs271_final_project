adc
rex.wr
(bad)
imul
push
cmp
rex.wrb
clc
xor
rex.wrx
fs
rolb
lods
mov
(bad)
mov
or
cmp
push
adc
mov
cmpl
xor
movsxd
xchg
cld
(bad)
std
stc
out
lods
sbb
rex.xb
xor
xor
stc
cs
xchg
movsb
(bad)
int3
jnp
scas
and
lods
(bad)
add
xor
call
xor
out
mov
(bad)
test
rex.wrxb
rex.w
neg
enter
xchg
out
movsb
jb
(bad)
subb
cvtdq2ps
mov
mov
mov
rex.wrb
rex.wx
in
mov
sarb
jb
xor
mov
lret
push
insl
mov
sub
xchg
(bad)
(bad)
movabs
mov
popf
imul
sbb
std
sbb
int1
xor
and
(bad)
fidivrl
stc
jge
add
rex.wb
jp
cwtl
out
xchg
cld
mov
(bad)
repz
xor
(bad)
fwait
rex.xb
jnp
(bad)
(bad)
mov
insl
(bad)
push
or
pop
ds
loope
add
rex.wr
add
sub
repnz
lahf
push
push
(bad)
fadd
push
adc
mov
fnstsw
sub
cmp
rex.xb
cmp
mov
test
outsl
or
(bad)
or
movabs
(bad)
sub
in
and
leave
orb
mov
xchg
movsl
xchg
pop
xor
jne
cmpsl
(bad)
test
rex.wrb
mov
rex.wr
std
js
fildl
outsb
fdivr
in
pop
movsl
movsxd
(bad)
nop
rex.wxb
stc
fs
in
(bad)
mov
(bad)
adc
adc
in
cmp
mov
(bad)
scas
in
mov
loopne
xor
lods
xor
shrl
and
fucompp
cmp
in
mov
ds
out
or
scas
push
rex.rx
rorl
xchg
(bad)
clc
notb
clc
sub
divl
rcl
out
adc
cmc
sbb
loop
test
mov
rex.r
divb
(bad)
pop
ja
sbb
jg
lahf
or
and
rex.wxb
(bad)
(bad)
mov
xchg
rol
insl
xor
clc
leave
stc
mov
rex.rxb
andl
test
mov
and
sbb
fdivrs
xchg
cmpsl
ljmp
mov
test
lea
je
rex.wx
jne
and
movsb
movabs
push
rex.rx
movabs
(bad)
xchg
or
xchg
adc
xchg
scas
jge
test
enter
xor
add
(bad)
out
out
mov
sub
cmc
ret
in
xor
xor
fcomip
or
out
xor
cld
sahf
mov
fs
int1
fwait
and
mov
mov
push
(bad)
stc
ret
xor
rol
testb
mov
rex.rx
mov
mov
cmp
cmc
(bad)
cli
or
imul
es
jno
add
sarl
out
push
pop
jbe
lods
mov
(bad)
push
push
ss
clc
or
bnd
jmp
xchg
lret
adc
es
in
mov
loopne
js
int3
cmp
mov
sti
sbb
jne
(bad)
pop
rex.x
rex.wx
fsubr
sarb
out
enter
in
hlt
pop
and
(bad)
sbb
(bad)
(bad)
mov
mov
adc
cli
incl
mov
fucomp
jb
xlat
adc
(bad)
shrb
mov
lods
stc
out
rex.b
cwtl
rex.wrx
movabs
pop
jg
cmp
(bad)
rorl
jrcxz
mov
(bad)
shlb
jmp
xchg
out
rex.wxb
leave
rex
shlb
add
test
xchg
movabs
loopne
push
jb
mov
mov
or
mov
jrcxz
xor
rex.xb
outsl
and
cmc
andl
xchg
rex
int1
push
sub
and
movabs
sub
mov
xchg
mov
cmpl
movsb
and
and
in
int3
out
fs
and
jle
leave
rex
cmp
repnz
int
fimuls
mov
cmp
add
js
(bad)
leave
int
(bad)
(bad)
rex.wrxb
{rex2
and
jp
rex.r
ret
imul
or
(bad)
in
rex.wb
mov
rex.w
ds
ja
movabs
fmuls
ja
mov
mov
cmp
loop
(bad)
xorb
push
mov
shlb
jp
movsl
insl
xchg
imul
cmp
rex.r
lods
rolb
push
bnd
or
in
cmpsl
out
(bad)
xor
add
cli
push
rex.x
push
cmpsl
adc
mov
add
or
scas
rclb
repz
jnp
rex.w
sar
fisubrl
lea
sbb
ret
cmpl
jae
out
cli
ret
(bad)
or
sti
(bad)
xor
addb
(bad)
sarl
scas
xchg
and
rex.wrx
fistps
sbb
adc
mov
sub
stc
mov
rex.b
or
cmp
loope
in
cld
jno
out
or
int
nop
movsxd
fstl
sub
mov
pop
xchg
imul
jrcxz
cltd
push
(bad)
cmp
(bad)
mov
(bad)
mov
(bad)
lret
addr32
mov
pop
rex.b
pop
rorl
jne
(bad)
jmp
rex.r
cld
mov
(bad)
ja
fsubl
xor
(bad)
sbb
(bad)
sarl
mov
jmp
add
and
mov
jge
pop
rex.wrxb
add
cmp
or
jmp
(bad)
pop
(bad)
movabs
jmp
ror
sub
shl
jg
repnz
mov
ret
pop
mov
push
out
sbb
test
(bad)
cli
scas
repz
(bad)
out
rcrb
pushf
jg
cmp
sbb
and
cmp
ja
cmp
jp
lea
loopne
sbb
(bad)
cwtl
sbb
outsl
(bad)
push
decb
rol
js
lahf
imul
mov
sarl
lea
insl
xor
in
push
(bad)
rorl
in
sub
(bad)
scas
(bad)
scas
adc
(bad)
xchg
cmc
test
xor
movsl
(bad)
imul
in
mov
in
iret
in
pop
imul
ja
lahf
outsb
jne
adc
xchg
jl
ret
cmp
int3
cmc
clc
test
je
push
mov
add
ja
sub
outsl
adc
fnstcw
jrcxz
nop
sbb
mov
shll
or
adc
xchg
cmp
mov
or
adc
in
xchg
(bad)
int1
rex.wrb
or
out
movabs
scas
(bad)
es
adc
pop
leave
or
(bad)
ret
or
mov
negl
ret
xor
and
movabs
(bad)
mov
stos
pushf
push
add
ret
(bad)
mov
add
cmp
rol
sbb
push
movsb
rex.rxb
adc
or
ret
push
xor
in
xor
add
ret
test
cs
stos
cmc
(bad)
sub
cmc
xchg
repnz
push
decl
cmp
mov
stos
(bad)
and
rex.wrxb
addr32
shlb
jno
add
(bad)
push
jo
loop
leave
(bad)
jbe
add
(bad)
add
int3
or
mov
adc
xlat
(bad)
inc
scas
add
adc
adc
mov
sub
push
addr32
and
mov
mov
(bad)
shrb
rex.r
mov
jl
push
shll
(bad)
rex.x
cmp
mov
sub
or
pop
loope
test
cmp
(bad)
and
sbb
xchg
data16
int1
rex.wrx
mov
movsxd
ret
rex.x
repz
mov
lods
ds
shlq
mov
insb
rex.x
adc
fwait
lock
cltd
(bad)
push
popf
rcrl
movabs
fsubr
rex.wxb
in
hlt
(bad)
rex.x
or
iret
push
mov
and
scas
{rex2
ror
(bad)
fsubl
in
sahf
rex.wx
cmp
and
ret
xchg
clc
rex.w
rex.rb
jno
push
xchg
fidivl
jge
out
loopne
push
addr32
rol
mov
(bad)
popf
jp
nop
in
int
mov
imul
mov
rex.rx
repnz
jnp
push
cli
mov
lret
data16
push
jns
and
stc
mov
or
jnp
in
fsubl
sbb
mov
fstpl
ss
push
jns
and
rex.wrxb
sbb
mov
rex.x
cli
es
rex.wxb
outsb
mov
mov
imul
rex.wrxb
fxam
adc
xchg
fsubs
jnp
lea
lret
mov
rex.wx
push
add
xchg
mov
pop
jg
mov
andb
fs
outsb
(bad)
(bad)
mov
or
jmp
mov
int
push
xchg
mov
nop
rex.rx
xchg
ret
xchg
test
cmp
ret
rex.wxb
cmp
mov
jrcxz
jnp
pop
(bad)
xor
cmp
mov
and
movsl
lret
popf
or
adc
