cmc
mov
fcmove
lds
jo
inc
dec
mov
pop
sbb
mov
adc
or
rcrl
or
inc
shrb
ret
arpl
xchg
imul
cltd
pushf
lods
insb
stc
fs
cmp
add
cwtl
pop
cmp
movsb
movb
lahf
insl
(bad)
pushf
and
dec
out
stos
aas
or
cltd
dec
fstpt
int1
dec
xchg
call
pop
popf
int3
push
pop
pop
movsl
push
rcll
adc
xchg
fs
inc
cmp
mov
or
sub
add
mov
pop
push
lcall
sub
mov
outsb
cmp
mov
dec
stos
movsl
(bad)
dec
test
add
mov
movsb
ljmp
lret
aad
das
test
testl
(bad)
pop
mov
mov
jg
ss
cmp
push
inc
aad
push
mov
dec
pusha
and
sbb
call
mov
rclb
xor
mov
xlat
clc
or
xchg
dec
mov
pop
cmp
mov
hlt
add
mov
adc
cwtl
cmc
adc
aad
(bad)
fmuls
pop
sbb
shll
inc
sahf
inc
(bad)
pop
dec
add
or
pop
xchg
dec
push
jns
aad
mov
aam
lods
push
xlat
dec
leave
jo
push
imul
xor
test
push
jle
roll
bound
xchg
sub
popf
dec
call
or
repnz
xor
dec
sahf
outsl
xchg
je
push
xor
hlt
bound
and
imul
ds
in
int3
pop
aad
std
fmul
loop
orl
(bad)
nop
loope
std
xor
mov
insb
push
adc
adcl
adc
dec
mov
aam
cmp
sbb
in
stos
lret
dec
daa
into
mov
sbb
mov
cli
mov
jbe
popa
outsb
(bad)
and
cltd
sbb
lret
push
mov
push
ss
leave
or
sbb
lahf
js
add
jmp
jbe
pushf
adc
sbb
test
add
push
jo
add
sub
ficoms
and
mov
fsubrs
cli
pusha
adc
repz
lock
pop
sub
sub
fwait
xchg
shr
inc
push
xchg
inc
xor
outsl
xor
arpl
pop
daa
test
adc
enter
push
lret
add
inc
jbe
and
sub
adc
add
ja
enter
insb
push
imul
jg
jns,pt
mov
lret
stos
xchg
inc
and
pop
jo
dec
in
and
aad
inc
push
xchg
jb
je
and
or
js
push
jnp
pusha
or
sbb
lret
dec
inc
(bad)
xor
scas
and
orb
jl
mov
test
loopne
test
clc
mov
(bad)
int3
xor
scas
out
je
int1
pop
mov
xchg
fdivl
sbb
into
rcll
sub
stc
dec
fwait
or
lcall
test
clc
lock
mov
ret
in
out
jg
mov
std
add
stos
out
sub
pop
daa
mov
pop
rcl
mov
adc
mov
clc
pop
inc
cmpsb
sbb
push
popf
idivl
lahf
dec
pop
add
cld
enter
xchg
xchg
(bad)
lock
popf
adc
dec
sbb
std
adc
imul
loope
sbb
insl
push
cltd
and
dec
lea
popf
jmp
clc
jge
(bad)
xor
repnz
mov
add
and
into
inc
call
nop
jae
sub
mov
mov
sahf
sbb
scas
dec
or
sub
inc
mov
jp
cli
cwtl
shl
lock
ljmp
cmpb
add
fisubrs
xor
mov
inc
rorl
lods
xchg
data16
mov
fidivrl
push
sub
movsl
or
cld
(bad)
push
dec
(bad)
dec
lret
xchg
sbb
mov
shrl
das
mov
in
dec
in
imul
mov
iret
cmpsb
aaa
push
and
jbe
push
mov
repnz
and
ljmp
push
dec
mov
jl
push
inc
mov
sub
mov
test
inc
mov
loopne
in
sbb
mov
cltd
mov
push
inc
add
movsb
adc
cmc
jae
inc
adc
adcb
jle
pop
(bad)
cs
arpl
andb
or
call
pusha
sbb
add
mov
out
inc
sub
adc
insl
sbb
aam
sbb
sub
dec
or
add
xchg
pop
push
mov
adc
push
mov
cmc
push
sub
popf
dec
dec
leave
cmp
mov
pop
imul
dec
out
orb
add
jne
and
repz
or
out
aas
int3
out
jne
fistl
mov
repnz
in
pop
mov
and
mov
cmpsb
(bad)
in
cwtl
adc
or
xor
arpl
jno
out
pop
xor
inc
pop
repz
lea
lret
scas
cs
shll
fstpt
pop
sbb
cmp
ds
dec
mov
or
cmp
push
cmp
int3
push
adc
add
add
lds
xor
dec
sbbb
or
pusha
or
cli
mov
inc
ljmp
jno
sahf
or
jl
jbe
xor
(bad)
xor
sbb
sub
adc
or
hlt
shrb
ds
pushf
mov
testl
movsl
aam
mov
or
mov
enter
xchg
mov
sub
std
push
cwtl
das
sahf
loopne
mov
out
mov
inc
fiaddl
adc
xor
or
enter
cmp
mov
call
mov
jp
or
or
repnz
mov
mov
cmp
outsb
jnp
test
sub
mov
lahf
push
test
push
add
pusha
push
mov
xchg
dec
push
dec
lret
add
out
pop
or
sbb
sahf
or
inc
fistpll
sbb
pop
aas
and
cmp
xchg
cmp
mov
mov
data16
mov
(bad)
imul
incl
js
cltd
(bad)
arpl
sahf
fbstp
daa
(bad)
add
push
cld
int1
xchg
cltd
cmpsl
sbb
rorb
xor
fmuls
outsl
push
dec
push
inc
in
xor
stc
xchg
sub
add
pop
test
mov
xor
iret
mov
popa
xorb
fidivl
sahf
mov
xor
js
mov
jg
and
inc
out
mov
mov
mov
sti
mov
aad
(bad)
pusha
cmp
push
pushf
sbb
outsl
mov
add
xchg
dec
inc
es
inc
jo
repz
jecxz
push
in
out
popa
adc
mov
jo
mov
in
mov
outsl
pusha
sti
aas
sbb
inc
sub
das
push
or
cmp
dec
int1
xchg
fs
popf
add
test
adc
adc
popa
and
mov
imul
sbb
lahf
jb
jl
push
(bad)
int1
push
sub
push
pop
idivl
ss
hlt
push
or
push
leave
dec
scas
bswap
xor
outsl
push
push
dec
cmpsb
fs
rcrl
mov
adc
sub
mov
mov
cmc
cmp
testl
and
out
pop
dec
push
daa
add
aas
mov
xchg
out
cmpsl
ds
cmp
ja
adcl
loopne
aad
and
enter
inc
mov
cmp
jp
cli
jecxz
add
push
lock
dec
xor
flds
sbb
cmp
sub
loop
inc
xchg
adc
shlb
dec
std
push
test
push
mov
nop
push
sahf
in
outsb
adc
sbbb
mov
sti
lods
lret
ja
stos
(bad)
mov
fmuls
xor
ss
sysenter
mov
adcb
push
push
inc
mov
xchg
jle
cmp
out
sti
mov
push
and
int1
pusha
test
mov
inc
add
mov
mov
jbe
repnz
and
sbb
rorl
push
loopne
sbb
ds
es
lcall
je
xor
fiaddl
cmpb
jp
loopne
pop
mov
push
mov
sbb
movsl
test
sbb
and
sbb
aam
adc
mov
pop
jl
int
fwait
adc
push
pusha
mov
push
test
js
aas
dec
mov
cltd
or
push
mov
xor
call
push
mov
inc
