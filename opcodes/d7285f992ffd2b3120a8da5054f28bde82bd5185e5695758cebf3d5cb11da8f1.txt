outsl
mov
int
push
(bad)
roll
xchg
xor
add
mov
lds
fcmovbe
lahf
mov
jne
add
mov
lahf
mov
inc
adcl
bound
push
les
sub
push
repz
rcll
inc
push
sti
pop
scas
imul
and
cld
popf
scas
pop
jnp
cmp
lcall
xlat
(bad)
mov
mov
sub
and
xor
cmpsb
insl
xchg
pop
in
cmp
push
les
scas
hlt
pushf
pop
ds
pop
adc
sbb
xchg
sub
fadds
cmp
cld
xchg
nop
push
insl
xchg
push
adc
gs
xlat
xchg
inc
and
repnz
and
loope
lahf
and
and
popf
shrl
dec
push
insl
out
or
ret
imul
cmp
sub
daa
adc
dec
test
lret
lret
add
xor
cmp
lds
(bad)
(bad)
adc
hlt
mov
movsb
cld
nop
ljmp
mov
or
xlat
or
enter
pusha
in
stos
pop
fwait
jg
lea
ret
jge
or
insl
stos
lcall
fnsave
add
jne
movsb
push
xchg
xchg
popf
cli
in
or
xchg
pop
lcall
pop
push
faddl
inc
xor
dec
in
xchg
(bad)
cmpsb
mov
push
(bad)
jne
mov
jns
insb
(bad)
jae
lcall
popf
mov
sub
ljmp
xor
movsl
rdpmc
and
mov
push
and
add
rorl
pop
mov
inc
push
inc
mov
sar
in
jo
loop
push
int
xor
push
call
pop
or
in
sub
sub
out
repz
out
ret
insl
repnz
sbb
in
mov
testl
add
mov
sub
or
shrl
cwtl
mov
pushf
aam
sti
je
push
std
pushf
jno
sti
fidivl
sbb
aam
inc
ja
inc
jnp
mov
clc
enter
ss
loop
xchg
(bad)
in
stos
cld
cmc
mov
cmp
pop
jg
mov
mov
aaa
out
jns
or
(bad)
gs
jns
hlt
(bad)
xchg
mov
jl
test
jae
fwait
stc
xor
mov
or
cmp
push
push
into
lea
leave
dec
enter
xlat
sbb
adc
testl
inc
fisubs
sbb
mov
outsb
daa
sysret
push
mov
testl
or
cmpsb
iret
decl
(bad)
nop
cmc
test
jg
aas
inc
and
xchg
das
xchg
rcrb
cmp
mov
cmp
out
movsl
and
fwait
out
mov
andb
cwtl
mov
pop
scas
outsb
bound
clc
out
xor
sarb
xlat
das
xchg
mov
hlt
out
inc
adc
add
or
(bad)
xchg
jp
jbe
lret
or
push
push
fucom
pop
rol
loop
js
das
imul
and
mov
ljmp
ljmp
mov
les
add
repz
sub
and
xchg
iret
xchg
xor
rcr
dec
je
nop
testb
xor
js
mov
mov
dec
shrb
fsubl
adc
or
test
je
add
xchg
ljmp
xchg
out
adc
sbb
mov
push
lret
insb
or
in
lea
leave
and
pop
adc
push
(bad)
cmp
sub
data16
test
sti
add
add
psrlw
xchg
mov
fsub
daa
fiadds
jecxz
loope
push
jo
inc
scas
xchg
(bad)
jg
inc
loop
pop
lcall
mov
or
inc
sub
cs
xchg
dec
pop
(bad)
mov
push
les
mov
add
xchg
xchg
push
test
iret
push
jb
jg
popf
gs
cmp
push
cld
xchg
subb
popa
push
stos
rcrb
push
jle
jle
add
int1
stc
adc
jbe
mov
jmp
ljmp
pusha
inc
inc
hlt
out
adc
dec
mov
add
inc
adc
(bad)
and
jp
gs
ja
je
xchg
mov
cmp
insb
xchg
adc
adc
nop
enter
mov
jg
add
xor
mov
push
out
hlt
int
cmp
sbb
sbb
pop
mov
shr
jl
sti
imul
fs
call
add
orb
pop
out
addr16
adc
push
or
xchg
mov
xchg
lret
xor
mov
mov
sar
scas
lods
mov
and
sti
lods
push
popf
add
lods
mov
call
(bad)
jmp
mov
mov
adc
lods
mov
aaa
popf
push
(bad)
cld
into
lods
pop
jnp
loop
in
pushf
insl
or
mov
in
lods
sahf
adc
cmp
leave
shlb
popa
inc
inc
jp
push
int1
add
and
adc
incb
xor
cmp
mov
out
lea
jb
mov
fwait
cmp
adc
or
push
int1
xchg
add
and
popf
iret
je
mov
inc
rcll
inc
mov
add
jno
push
lcall
inc
js
int
mov
push
mov
fmulp
jmp
push
imul
inc
jnp
mov
fsubrs
add
jmp
jl
aam
out
adc
cwtl
jge
adc
lds
sbb
(bad)
fstpl
fucomip
jb
or
or
movsb
cli
xor
xlat
adc
adc
loop
xchg
int3
aaa
inc
shrl
movsl
sub
lret
insb
sub
xchg
mov
pop
fidivs
pop
(bad)
sub
sub
cli
inc
sbb
test
gs
mov
lcall
sti
pop
outsl
or
mov
(bad)
sbb
fisttps
fsubrl
lods
fdivl
jp
ficoml
pop
aam
inc
sbb
xor
roll
clc
inc
inc
xor
cs
ja
jns
loopne
pop
hlt
insb
dec
scas
sbb
lret
(bad)
int3
xor
sahf
mov
dec
imul
out
aaa
xor
out
push
xchg
cmp
out
jnp
lahf
xchg
jno
pop
fldl
pop
and
cltd
sbb
lods
dec
pop
test
mov
mov
enter
insb
mov
sbb
mov
xchg
pusha
in
mov
pop
jnp
jp
out
cmp
and
pushf
cmp
adc
enter
stc
and
add
mov
mov
loope
dec
pop
pusha
fbld
xchg
imul
ret
mul
jmp
mov
imul
xor
mov
clc
rorl
lret
cs
out
jbe
lret
(bad)
and
lcall
push
and
test
repz
out
aaa
lds
and
sub
xchg
mov
mov
dec
mov
jle
int
scas
jae
nop
push
in
dec
add
mov
pop
dec
pushf
out
cmp
aaa
jle
js
insl
(bad)
bound
pop
xchg
xor
and
and
jbe
inc
clc
inc
xchg
pop
pop
je
pop
(bad)
aas
pop
or
fs
addl
outsb
or
adc
mov
(bad)
push
xchg
adc
dec
dec
call
hlt
les
mov
add
adc
dec
lods
pop
adc
and
pop
mov
sbb
data16
sbb
loop
fsubl
mov
jae
fstpt
pop
cmp
pop
nop
cmp
imul
fwait
mov
test
dec
pop
push
xchg
(bad)
pop
les
into
inc
repnz
xchg
shll
adc
mov
jge
daa
sti
pushf
out
inc
fwait
enter
test
das
dec
jl
pop
jmp
stos
aam
out
push
lods
jbe
pushf
ss
imul
lods
or
lds
pop
sbb
pop
repnz
mov
rol
adc
jns
pop
cmp
and
xor
mov
enter
or
mov
sti
movsb
iret
rclb
inc
adc
loopne
adc
inc
pop
sbb
jl
dec
or
pop
inc
rcl
cltd
and
lret
movsb
xchg
cmp
mov
mov
mov
xor
cmp
xlat
iret
mov
test
jmp
out
int3
adcl
insl
adc
cmpsb
das
mov
xchg
mov
cmp
mov
outsb
mov
add
pop
jns
sarb
sbb
lock
dec
rcll
jnp
mov
