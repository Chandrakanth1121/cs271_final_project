push
cmc
push
push
push
into
inc
push
(bad)
ja
mov
inc
jb
enter
into
aaa
ja
cltd
ss
inc
ja
jge
inc
cli
adc
mov
cmp
mov
inc
aaa
shrl
test
aad
push
adc
push
push
mov
push
sahf
sbb
sbb
lods
inc
jnp
pop
pushf
pop
dec
push
inc
or
jne
push
sahf
xor
jecxz
mov
mov
push
inc
fdiv
pop
pop
lret
mov
push
adcb
fiadds
adc
xorl
sbb
je
sub
adc
cmpsl
and
mov
aam
cmc
enter
lds
sbb
sarb
add
xor
xlat
sahf
add
into
cmpsl
adc
xor
push
adc
add
sbb
fsts
sbb
(bad)
jno
push
inc
lock
push
ret
gs
lcall
pop
fsts
xchg
jg
mov
add
dec
mov
xchg
jno
sbb
xchg
adc
or
pop
cmpsl
cmove
push
mov
mov
inc
xchg
cmpsb
xchg
push
jbe
lods
adc
cmc
jp
and
sub
push
lret
mov
add
ja
xchg
xchg
mov
push
xchg
push
(bad)
xchg
cltd
xchg
into
test
push
ror
or
lret
push
xchg
pop
aaa
and
push
jnp
inc
(bad)
push
dec
sarl
adc
xchg
dec
cmpb
lret
flds
fcmovu
int
and
ja
push
rorl
adc
je
flds
adc
into
hlt
adc
adc
pop
ss
loope
in
pop
sar
mov
lret
push
lcall
jne
lods
test
(bad)
mov
(bad)
cmp
sbb
dec
adcl
push
movsl
call
daa
dec
adc
inc
stc
inc
into
jne
push
xor
shl
ret
dec
int
es
xchg
andl
aad
inc
or
xchg
sbb
inc
push
bound
mov
and
jg
and
push
jle
sbb
xchg
addl
xor
xorl
pushf
cmc
dec
aas
outsb
pop
mov
scas
sub
push
into
mov
outsl
repnz
cmp
rcrl
or
jp
lods
lods
push
mov
and
dec
(bad)
and
scas
push
(bad)
rorb
dec
bnd
arpl
loopne
aam
lds
fisubl
mov
inc
jge
addb
or
push
cmp
sub
jno
pop
inc
adc
mov
sub
mov
cld
inc
test
cmp
dec
data16
inc
inc
mov
daa
hlt
jbe
inc
or
aad
leave
dec
jae
sbb
int1
rcll
push
push
cmp
xchg
fcmovbe
ficoml
movsb
xor
xor
test
sbb
or
pop
xchg
push
aaa
es
pop
xchg
int3
jnp
push
inc
dec
subb
(bad)
gs
pop
adcb
mov
daa
cmpsb
ss
fwait
add
(bad)
dec
mov
and
mov
dec
dec
aad
add
xor
fistpl
inc
int
ss
dec
and
call
add
mov
bound
rol
jae
push
mov
(bad)
pop
call
out
jne
pusha
adc
mov
push
jno
test
int
jnp
int1
inc
or
jns
dec
cwtl
jp
add
clc
mov
cmp
cs
mov
adc
cs
movsb
test
shlb
shll
jno
aas
cmp
pop
cli
ja
lods
mov
xlat
push
fisttpll
fwait
jno
push
pop
pop
xchg
add
ds
mov
dec
mov
stc
push
inc
out
inc
xor
push
aam
jl
dec
shll
out
and
mov
dec
mov
rorb
push
add
lds
jns
js
adc
jae
xchg
xor
(bad)
sub
movsb
scas
sbb
(bad)
loope
xor
sbb
adcb
xor
mov
pop
mov
add
(bad)
cmp
or
pop
xchg
and
gs
or
jae
mov
jne,pn
sbb
mov
mov
push
dec
cmp
xlat
fcoms
dec
push
pop
inc
inc
and
dec
pop
push
outsb
rcrb
pop
dec
mov
cmc
fwait
into
cli
mov
mov
rclw
or
ja
and
dec
add
cmc
stos
cli
je
mov
sti
sarl
dec
push
stc
ret
addb
xchg
aaa
push
mov
out
or
xor
cmp
add
pop
lret
aas
arpl
mov
insb
add
push
inc
jae
data16
or
xchg
in
addr16
test
sbbl
push
cmp
jg
and
outsl
rcrl
sbbl
inc
int
aad
xor
push
insl
dec
jnp
rcrl
add
push
push
push
mov
xchg
mov
loope
push
mov
das
pop
adc
test
lcallw
int
das
sbb
aam
das
(bad)
loopne
adc
and
inc
push
xor
dec
(bad)
sbb
pusha
push
movsl
mov
into
jno
out
jl
jns
push
dec
imul
cwtl
or
add
push
mov
mov
ret
cli
outsb
pop
outsb
pop
pop
xchg
incl
dec
(bad)
mov
xchg
leave
adc
(bad)
stc
pop
ret
jmp
dec
call
mov
mov
(bad)
fcompl
dec
xchg
popf
(bad)
xchg
rolb
mov
mov
cwtl
inc
movsl
(bad)
mov
pop
adc
cmp
popa
hlt
pop
jg
out
fistpll
fstpl
jp
fisttpl
mov
cmp
cmp
and
imulb
inc
dec
jbe
ffree
cmp
push
cmp
and
sahf
mov
test
inc
neg
shll
or
push
cmovb
leave
sbb
or
jg
mov
(bad)
push
xchg
cwtl
mov
xchg
nop
add
jmp
adcb
mov
mov
lock
pop
adc
xchg
arpl
sbb
test
pop
scas
sbb
xchg
call
rorl
stos
dec
pop
addr16
hlt
lret
mov
inc
mov
int3
(bad)
call
push
lods
inc
and
inc
xchg
cli
sbb
int1
shrl
push
xchg
pusha
add
aas
fadd
lea
xlat
jmp
pop
in
inc
cltd
orl
mov
inc
jne
loop
ds
cmp
int1
sub
sub
iret
outsl
lods
or
push
scas
fisttps
sbb
inc
rcl
in
mov
andb
sbb
lret
xor
mov
adc
(bad)
push
in
xor
mov
int3
in
cs
mov
lds
push
xor
dec
mov
xor
adc
lock
lret
inc
adc
(bad)
and
pop
call
hlt
lret
inc
addr16
ficomps
loope
cli
sbb
mov
dec
addr16
cmc
or
mov
(bad)
pop
pop
mov
jecxz
shrl
lods
adc
inc
in
jp
in
in
mov
aam
or
int3
or
inc
pop
inc
mov
inc
stc
inc
xchg
push
clc
scas
aas
add
std
mov
lahf
push
sbb
xchg
scas
dec
mov
xor
int
aaa
or
push
lods
andl
mov
jle
cmp
inc
sbbb
orl
fdivrs
(bad)
cli
jmp
xor
je
cli
int
aam
or
xchg
fidivrs
andb
int
shrb
jb
(bad)
scas
pop
imul
push
inc
ficomps
cltd
mov
sbb
daa
je
inc
insb
pop
mov
shlb
adc
xchg
lcall
out
sbb
les
lret
xchg
mov
dec
mov
sbb
sbb
push
adc
xor
add
xchg
movsl
cmpsb
or
hlt
inc
lahf
insl
jmp
lods
mov
es
or
int1
xchg
inc
cmp
pop
jno
lock
push
lahf
test
inc
subl
jno
dec
loope
mov
addb
fisubrl
jne
pusha
sub
ja
pop
mov
cmp
daa
sarl
hlt
adc
outsb
mov
cli
sub
or
inc
mov
dec
cwtl
jmp
mov
add
lcall
into
popf
repz
ljmp
push
inc
and
iret
out
shlb
shll
add
