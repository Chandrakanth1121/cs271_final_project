roll
testb
pop
jno
cmp
rolb
in
jle
fsub
in
xchg
mov
ljmp
xchg
ret
sbb
psubsb
push
ret
dec
aam
insl
dec
fsubrs
pop
jmp
inc
pop
pop
mov
and
dec
or
int
lods
std
push
push
push
neg
push
outsb
dec
shrl
out
or
(bad)
mov
clc
xorl
cli
mulb
pop
sti
ds
rcrb
push
sub
and
sub
xchg
xchg
pop
repz
xor
pop
mov
bound
sbb
ja
push
add
jge
pop
sbbb
pop
sbb
inc
cmpps
pop
aaa
jmp
ja
jge
hlt
out
pop
push
imul
pop
or
rcll
pusha
pop
fs
imul
pop
jns
xor
leave
add
pop
daa
sahf
add
jnp
cmp
call
movsl
aad
jp
jns
dec
lcall
je
lea
shrb
daa
add
jo
les
imul
add
sahf
cmp
pop
push
or
dec
dec
mov
decl
sbb
roll
in
cwtl
and
xor
insb
mov
in
push
mov
jb
mov
and
inc
loope
inc
aam
pop
pop
out
dec
cmp
push
xor
or
repz
leave
sarl
movsb
dec
mov
in
sub
add
and
popa
dec
adc
cmp
pop
or
dec
in
mov
andb
iret
sub
nop
inc
push
ret
mov
sbb
addr16
pop
pop
shll
in
adc
aaa
bts
dec
repz
sarb
sub
push
mov
ret
push
cmp
movsb
int3
mov
cmpsl
popa
pop
jl
jmp
out
add
(bad)
iret
out
es
stc
js
in
xor
push
cmc
imul
cld
aam
jns
pusha
jns
cmc
mov
gs
lahf
push
lods
inc
jmp
into
imul
jns
push
in
push
ljmp
cmp
jl
and
dec
ficompl
mov
xor
stos
in
inc
insb
outsb
sbb
andl
stos
out
es
sub
mov
cld
inc
xor
inc
das
daa
xchg
jns
inc
arpl
mov
inc
pop
sbb
cmp
outsb
sbb
dec
sub
xor
sti
fs
cmpsl
divl
mov
fs
xor
sbb
xchg
addr16
xor
and
movl
or
mov
xor
and
push
xor
pusha
bound
mov
in
push
rorb
loope
mov
movsl
mov
lds
lahf
jb
aas
hlt
lcall
arpl
das
xor
push
mov
mov
mov
jo
mov
arpl
lret
inc
jnp
push
divl
mov
mov
loop
adc
jle
sub
or
push
gs
aas
imul
dec
adc
rcrl
insb
scas
push
lcall
inc
int3
test
lds
and
cmp
shr
push
pop
or
push
jle
lret
and
inc
aad
fisubl
dec
cld
dec
push
es
nop
or
dec
xor
xchg
inc
pop
push
or
pop
push
push
inc
cmp
and
dec
or
xor
int3
xor
and
cld
in
push
xlat
pusha
stos
ret
and
xor
(bad)
(bad)
pop
sub
xor
or
cmc
sbb
jno
xor
inc
daa
les
cmp
arpl
jne
push
movsl
push
insb
or
mov
mov
pop
cld
xor
mov
insl
js
test
push
pushfw
outsl
and
dec
(bad)
ficomps
xchg
mov
aaa
repnz
xchg
incl
sarl
pop
dec
push
lds
subl
pop
adc
mul
test
mov
push
dec
pop
xorl
mov
cmp
test
je
adc
and
shrb
(bad)
cwtl
sbb
pop
jp
xor
jno
dec
cmc
insl
mov
pop
mov
xchg
xor
jno
in
pusha
push
bound
nop
enter
cmp
xchg
movsl
push
pop
xor
es
rolb
push
aaa
insb
xchg
imul
fdivl
and
xor
mov
test
daa
or
mov
in
push
sbb
cmp
and
cmp
sahf
or
adc
xor
jbe
pusha
mov
push
outsb
add
and
fs
sbb
push
pushf
sub
push
jae
mov
add
shlb
adc
sbb
xchg
ljmp
push
sub
(bad)
or
jo
dec
cmp
and
dec
pop
xrelease
repnz
pop
mov
xchg
fwait
or
push
aad
hlt
xor
or
ds
mov
sbb
insl
aam
addr16
pop
imul
daa
jns
xor
cmp
push
fimull
fsubs
jp
cli
jns
stos
stc
daa
je
xchg
mov
jbe
xor
pop
cmp
lock
dec
rcrb
mov
sub
aad
bound
aaa
cwtl
and
pusha
and
sbb
dec
bound
dec
pop
int
and
mov
sbb
push
(bad)
inc
out
test
xor
sti
sub
outsb
pop
insl
inc
bound
pop
adc
ja
bound
ja
jg
inc
push
in
or
lds
xchg
mov
call
dec
dec
data16
dec
(bad)
cmp
clc
jnp
inc
imul
pusha
gs
pop
push
xchg
imul
mov
mov
clc
push
movsb
jp
sub
faddl
mov
dec
add
inc
cmc
aas
jnp
out
inc
sbb
jbe
adc
rolb
add
mov
xor
pop
jno
das
adc
movb
out
cmp
jno
imul
in
jl
aam
pop
inc
fwait
push
jbe
arpl
lcall
jno
shrl
push
cmp
pop
sub
inc
pop
adc
xor
pop
adc
sbb
pop
push
lods
sti
mov
add
and
xchg
and
addb
out
cmovge
and
cmp
xchg
push
les
pop
add
or
add
xor
mov
push
push
(bad)
imul
popa
imul
mov
je
push
pop
pop
pusha
or
jmp
cmpsb
cmc
js
jp
bound
jl
das
mov
arpl
addl
push
pop
ror
xor
lret
jns
adc
jp
aad
or
lods
addr16
insl
inc
inc
mov
inc
fwait
int
subl
mov
test
xchg
shl
data16
adc
sub
sub
inc
gs
sub
xor
push
sub
dec
ds
stos
subps
mov
jge
xlat
or
cmp
xor
hlt
adc
mov
ss
xchg
xor
(bad)
and
int1
cmp
in
push
mov
dec
pop
pop
dec
or
or
pusha
lea
jo
ja
ret
adc
pop
jbe
insb
push
out
jb
push
imul
push
or
pop
push
pusha
mov
push
xor
lcall
adc
sub
push
push
jecxz
cli
push
cmp
lea
std
stos
aam
cld
cmp
pop
cmc
fistpll
push
lods
ss
mov
js
sti
fists
pop
idivb
and
js
and
xchg
jbe
addr16
fs
mov
sbb
arpl
cmpsl
add
add
or
movsbl
or
or
testb
push
bound
sub
jno
pushf
pop
cmpsl
imul
sbb
cmp
adc
lods
adc
aam
out
cmp
punpcklbw
sbb
pop
push
inc
push
pop
adc
enter
imul
jg
jbe
fnsave
push
stos
ret
addr16
andl
cmp
mov
loop
ds
sub
sbbl
and
xor
mov
repz
mov
jnp
cltd
out
xchg
ds
xor
pop
xor
jne
xchg
mov
cmc
push
mov
pushf
mov
xchg
push
out
cmp
mov
sub
inc
iret
loop
inc
mov
xor
xchg
int1
fnstcw
call
and
xchg
adc
arpl
lods
jecxz
fwait
out
cmp
xchg
and
ret
(bad)
dec
sbb
pop
pop
add
push
scas
inc
and
fs
adc
unpckhps
cmpsl
test
or
popa
inc
push
mov
(bad)
ljmp
