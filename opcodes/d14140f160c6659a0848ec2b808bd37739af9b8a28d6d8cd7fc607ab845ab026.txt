xor
dec
and
fwait
lds
sbb
scas
jb
clc
loop
aam
cld
pop
push
mov
adc
dec
cmp
test
fs
sbb
inc
and
cmc
mov
out
or
and
and
xor
xlat
sbb
dec
inc
out
jge
cwtl
add
or
(bad)
cld
or
and
aas
fnsave
adc
cmpsl
xor
mov
dec
cmp
(bad)
mov
stos
fsub
cmp
fnsetpm(287
out
xchg
loope
fmuls
(bad)
(bad)
lret
repnz
sub
cmp
push
ja
adc
and
mov
sbb
imulb
cmp
cltd
jge
es
pop
ret
adc
mov
pop
jmp
fimuls
andb
sbb
add
stos
mov
xchg
mov
mov
push
outsb
mov
xchg
xor
ret
or
enter
push
add
or
inc
daa
loop
outsl
ret
fidivrl
sbb
cltd
in
cmpl
mov
fisubl
cwtl
mov
mov
xchg
test
cld
ljmp
sub
lods
cmp
loop
xor
out
loope,pt
mov
daa
data16
and
add
xlat
add
stos
ja
mov
mov
cltd
add
sub
mov
cld
cmpsb
int3
mov
push
sub
push
sub
out
sti
mov
xchg
push
mov
xchg
cmp
das
inc
lret
sbb
xor
aad
adc
jae
lcall
fistpll
inc
sub
mov
fcom
dec
ss
les
decb
mov
ds
sti
pop
xor
pusha
aam
cmp
(bad)
xchg
xchg
sti
scas
sub
mov
xchg
push
pop
pop
into
insl
fildl
sarl
mov
sbb
mov
shrb
push
mov
shrb
ja
rcr
in
add
jecxz
leave
mov
pop
incl
call
cld
push
mov
flds
sub
mov
lods
aad
punpckhbw
repz
test
fs
and
xchg
sbb
in
or
push
sub
dec
dec
xor
je
mov
addr16
push
inc
mov
add
xchg
in
mov
enter
inc
mov
data16
rcrb
stos
fadds
mov
lahf
jb
inc
imul
(bad)
lods
jge
out
iret
int
push
xlat
nop
in
xchg
jmp
test
sub
adc
xor
sarb
jg
(bad)
sub
movsb
(bad)
loope
ds
mov
pop
aaa
cmpl
sub
loopne,pt
and
(bad)
dec
cs
cmp
mov
ss
ljmp
inc
add
xchg
cli
xchg
mov
jbe
aaa
dec
aaa
mov
test
repnz
lds
jno
pop
xchg
add
ficompl
push
(bad)
sti
je
in
or
mov
and
sub
lock
stc
add
lcall
mov
je
adcl
mov
fistl
add
ss
lods
test
pop
push
das
es
outsb
(bad)
cmpb
jae
adc
xlat
xchg
out
and
imul
add
mov
push
(bad)
out
xchg
insl
inc
cmp
lret
cli
or
push
mov
sub
mov
aaa
add
xor
roll
or
int
stc
or
push
(bad)
(bad)
sub
mov
std
aam
out
fldenv
(bad)
mov
lock
test
adc
inc
xchg
cmp
lock
mov
jne
dec
mov
sar
stc
subl
push
pop
cld
jbe
sub
mov
dec
add
fsubrl
xchg
test
inc
leave
jecxz
ss
lods
or
push
adcb
push
dec
(bad)
push
pop
arpl
data16
or
add
roll
mov
and
test
aaa
es
adc
lret
dec
ja
xlat
mov
notl
push
movsb
clc
sub
push
mov
jl
xchg
hlt
paddq
js
lea
fidivrl
sarb
pop
sbb
loopne
sbb
je
das
jle
and
fdiv
pushf
jb
stc
jnp
mov
pop
sbb
jmp
imul
fstpl
push
push
fisttpl
mov
subl
leave
(bad)
pop
sub
or
(bad)
xor
sbb
lds
insl
cmp
(bad)
shlb
stos
or
imul
les
inc
jnp
inc
fwait
fwait
jno
popa
mov
mov
and
rorb
push
cmpl
cltd
ficoms
addr16
shl
inc
insb
fs
imul
push
data16
and
lea
jae
sbb
cltd
add
cmp
call
xor
fsub
xor
push
xchg
in
fs
or
push
jb
mov
(bad)
add
push
jo
cmp
rcr
mov
dec
jnp
(bad)
int
mov
ret
mov
cmp
popf
pop
fs
bound
in
mov
add
pop
push
rorb
ret
mov
sub
or
pop
pop
mov
dec
pop
cmpsl
adc
sub
insb
bnd
or
push
sub
popa
scas
inc
cmpsl
(bad)
shrl
inc
and
cmp
arpl
adc
adc
sbb
scas
sbb
xor
sbb
mov
aas
push
or
dec
lret
movsb
mov
ja
mov
test
cmp
sti
(bad)
sub
and
jae
and
gs
call
mov
push
mov
mov
dec
or
orb
pop
push
dec
lret
cmp
js
mov
sub
iret
out
pop
gs
call
arpl
cltd
pop
cmp
adc
test
int
jl
mov
adc
adc
push
adc
pop
and
xchg
jae
mov
cmp
add
xor
call
pop
sub
xor
out
sbb
inc
mov
push
in
push
movsl
push
inc
jne
pop
in
jg
mov
xchg
sarb
jle
popa
std
aas
popf
ja
mov
call
jg
or
pop
jg
test
lea
out
das
push
data16
in
sbb
xor
add
mov
push
push
enter
lds
ljmp
adc
pop
sbb
mov
push
jns
add
mov
(bad)
lods
pop
add
lcall
in
inc
cwtl
enter
xchg
fiaddl
cwtl
cmp
int
cmpsl
ficomps
adc
cmpsb
and
mov
out
insl
add
xchg
jmp
sbb
pop
mov
imul
mov
xor
pop
fdiv
fstpl
mulb
popf
fidivrs
sbb
int1
xor
lret
fdivs
or
lds
pop
clc
outsb
sub
lds
in
sub
sbb
xchg
push
cld
(bad)
int3
xchg
cmp
xchg
adc
xlat
cltd
jge
hlt
imul
sahf
rcll
cltd
jmp
push
in
jecxz
add
ja
das
inc
lcall
and
in
bound
mov
bound
sub
rcl
sub
push
call
mov
rcrl
in
das
xchg
popa
fwait
xchg
push
cli
and
xor
and
ljmp
add
or
mov
mov
dec
in
sbbl
jl
or
jg
sub
outsl
jno
mov
mov
sub
(bad)
movsl
xlat
fwait
out
daa
arpl
fisubl
les
aas
addr16
jae
sbb
in
or
and
pop
push
push
jmp
sub
and
inc
or
lods
dec
jo
mov
mov
xchg
inc
xor
push
notb
mov
dec
xchg
ret
shlb
mov
xlat
mov
mov
les
jne
cmp
xchg
notb
int
insl
jmp
cli
lret
jmp
jbe
mov
imul
(bad)
out
cltd
test
les
jne
mov
cmp
out
in
gs
sub
in
int3
leave
or
mov
pushf
inc
mov
cmpsl
test
lcall
vpsubsb
lods
xor
out
imul
sub
xor
mov
es
fidivrl
mov
cmp
dec
lds
push
subl
movsb
xor
pop
(bad)
loopne
mov
mov
ret
push
jge
mov
sub
test
pop
call
add
xlat
cmp
pop
ret
jge
inc
jp
cmp
sub
mov
je
adc
mov
inc
or
jb
in
cmp
sbb
fistps
movsl
in
stos
mov
inc
repnz
jle
nop
sbb
(bad)
jae
int1
mov
cmpsb
inc
adc
roll
in
pop
xchg
mov
lods
fsubrs
stos
or
stos
cmp
and
aam
push
