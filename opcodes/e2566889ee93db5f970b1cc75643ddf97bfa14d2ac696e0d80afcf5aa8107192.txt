inc
or
bound
mull
and
inc
daa
pop
andb
aaa
cmc
inc
imul
inc
sub
addl
adcb
ret
ds
repnz
xchg
fstl
movsb
mov
mov
mov
inc
lret
pop
(bad)
push
mov
mov
hlt
pusha
pop
dec
cli
push
addr16
lock
inc
inc
lahf
in
push
mov
sub
mov
repnz
hlt
shrl
test
sbb
pop
adc
inc
das
dec
xor
push
push
lods
xor
dec
ds
ds
adc
and
js
cmp
insb
stc
jle
push
popa
jbe
add
xchg
adc
adc
movsb
insl
and
xchg
inc
xor
dec
sarl
pusha
inc
loop
push
pop
xor
jl
sub
movl
fs
and
addr16
insb
aaa
adc
mov
sbb
jb
sub
imul
iret
clc
xor
sub
and
imul
add
pop
es
je
int3
add
data16
repnz
rcl
shlb
and
inc
fisttpl
loope
addl
clc
mov
addr16
mov
(bad)
insl
movsb
lret
dec
push
div
push
inc
inc
cmc
sub
jno
xor
mov
stos
inc
adc
scas
mov
into
and
push
cwtl
inc
xor
stc
int
jne
xor
ret
adc
mov
std
sub
and
lret
jo
es
sub
(bad)
xor
push
stos
stos
iret
sbb
(bad)
andb
(bad)
sub
scas
push
insl
mov
out
mov
jb
cmp
je
cmp
stc
push
ljmp
push
aaa
inc
and
mov
rcll
sbb
into
add
arpl
bound
push
es
pop
(bad)
jg
movsb
add
sub
cld
mov
inc
in
push
fsubl
lods
push
cld
and
hlt
leave
push
aaa
shrl
adc
das
(bad)
or
cld
std
jge
test
nop
enter
(bad)
ret
cmp
outsb
lods
jae
mov
or
je
lret
shlb
cmpb
aaa
mov
movsb
xchg
stc
xchg
or
sti
jle
fldcw
inc
mov
sbb
inc
aaa
aas
mov
js
sbb
jne
jne
mov
dec
dec
call
orl
cmp
divb
mov
sarl
xchg
pop
or
fnstenv
jnp
cmpsl
pusha
jae
mov
test
pop
inc
mov
dec
adc
ss
xchg
(bad)
xchg
cmc
fs
cwtl
jecxz
cmpsb
call
fistps
jae
sbb
inc
test
xchg
dec
into
aam
fxch
sub
xor
rol
inc
mov
mov
mov
mov
sbb
add
loope
push
out
movsl
lret
mov
lds
mov
mov
mov
in
and
sub
or
or
loope
aad
stc
rorl
popa
and
movsb
enter
mov
insb
dec
loopne
pop
jnp
imul
aam
shlb
push
push
add
push
pop
mov
or
pop
ja
xchg
cmp
mov
in
inc
nop
je
fisttpl
shlb
scas
mov
xchg
int3
out
std
(bad)
iret
idivl
xchg
pop
inc
inc
negl
push
xchg
jae
fs
in
int
mov
add
sbb
(bad)
sbb
mov
inc
mov
cltd
test
iret
out
mov
std
test
int1
mov
in
add
inc
jp
scas
push
dec
dec
cld
and
xlat
sub
cwtl
lret
cmp
and
and
or
lret
sbb
and
cwtl
mov
and
xor
mov
pop
mov
jb,pn
outsb
leave
inc
mov
mov
insl
mov
enter
aam
clc
(bad)
sub
sarb
mov
pusha
(bad)
je
(bad)
mov
movsb
jno
xchg
mov
adc
jo
jno
lahf
mov
lret
iret
test
shl
loop
push
lods
divb
nop
fidivrs
sbb
pop
jecxz
xor
inc
test
jb
outsl
pushf
and
hlt
ds
lcall
std
pop
daa
sbb
rcl
mov
dec
inc
movsl
ja
push
bound
cld
and
jns
jnp
pop
(bad)
or
loop
das
dec
or
cmp
inc
push
(bad)
push
inc
cmpsl
cmc
ja
sar
adc
inc
ficoml
out
sti
mov
lods
mov
bound
popf
mov
mov
mov
adc
and
or
sbb
xor
pop
lret
or
lret
(bad)
inc
mov
jle
add
push
xchg
jmp
or
filds
xor
and
mov
pop
jae
mov
insl
add
sarb
psllq
mov
pop
in
add
les
cld
xor
loop
int1
mov
dec
mov
sbb
std
in
sub
add
out
fsts
adcb
mov
loope
ljmp
add
jle
push
lret
sbb
stos
test
xor
(bad)
ljmp
mov
fcomps
mov
pop
pusha
xor
ds
xor
sbb
add
mov
sub
aam
add
or
add
imul
or
push
mov
adc
and
push
stos
mov
xchg
dec
pop
dec
xchg
call
out
xor
jge
lret
lret
out
mov
dec
loope
inc
in
sub
adc
out
addr16
cmpsb
mov
lock
bnd
sub
test
pop
jb
(bad)
movsl
mov
les
xchg
(bad)
arpl
lret
loope
pop
int3
jbe
in
repz
and
mov
cli
push
xor
inc
lcall
ret
cmp
ss
sub
xchg
addr16
sub
sub
stc
sbb
xor
aas
push
inc
stc
mov
and
push
les
pop
enter
out
(bad)
dec
repz
inc
jns
push
mov
mov
jne
sahf
push
add
dec
ljmp
sarl
outsb
cmpsl
sbb
repz
iret
xchg
and
mul
mov
scas
fdivs
inc
or
cli
call
pop
xor
jmp
inc
push
notl
(bad)
mov
jmp
out
fsubs
cmp
mov
ja
repnz
cmp
sub
adc
daa
repnz
test
in
jns
mov
out
push
mov
(bad)
out
push
or
push
mov
fistpl
es
loopne
adc
xchg
dec
cmp
sub
xor
pushf
mulb
mov
loope
test
mov
inc
js
inc
xlat
or
test
fnsetpm(287
jge
orb
mov
movsl
(bad)
and
arpl
jne
hlt
and
ds
sub
stos
sbb
int3
inc
cli
bound
shll
add
mov
loop
inc
xchg
sarl
in
aaa
jmp
xchg
jmp
inc
or
mov
pop
fnstsw
ja
fimull
int1
add
cmp
inc
cld
sbb
xlat
push
(bad)
leave
push
imul
mov
pop
inc
add
sbb
sub
loope
hlt
adcl
daa
ficoml
in
xchg
fcompl
and
cmpsl
mov
js
test
iret
inc
push
jae
bnd
(bad)
jns
cmp
lret
rolb
jns
ret
out
outsl
test
or
mov
mov
add
out
cmp
lds
sbb
iret
ret
daa
sub
mov
sub
cmp
push
xchg
call
jmp
nop
cmp
add
sub
mull
push
mov
jecxz
and
sub
loop
addr16
mov
out
(bad)
mov
pop
adc
or
push
cmp
pop
fists
pop
jecxz
cmpsb
push
rcll
cmp
add
and
push
js
cli
inc
jae
out
data16
sti
shrl
ss
pop
and
sbb
mov
inc
sub
mov
les
sbb
repnz
and
xchg
adc
lret
insb
imul
fisubs
and
js
adc
hlt
sahf
push
scas
ficompl
xchg
adc
into
loop
and
jp
in
mov
push
int
add
out
xor
pop
lock
push
push
fsubp
jecxz
test
xor
and
lahf
pop
lea
mov
push
cmp
fs
out
ror
cmp
jge
ja
sbb
push
shll
mov
and
dec
xor
ud1
sub
mov
into
movsl
