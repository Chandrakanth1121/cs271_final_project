push
mov
dec
mov
jns
insb
or
fnstsw
rep
add
cld
stos
in
jp
dec
jecxz
(bad)
add
push
sbb
inc
clc
cmp
rclb
sbbb
cmp
ror
pop
add
mov
out
mov
iret
xlat
mov
add
clc
mov
pop
jno
loop
les
inc
cmp
pop
mov
jl
scas
cmp
pushf
pusha
jp
leave
fisubs
(bad)
pop
inc
xchg
repnz
pushf
or
xor
mov
cmpb
mov
sbb
jnp
lret
push
cltd
or
dec
pop
and
mov
std
sti
jg
(bad)
(bad)
sub
xchg
int3
in
mov
out
mov
pop
(bad)
imul
and
std
sbb
dec
mov
arpl
push
sub
sahf
les
imul
or
mov
or
pop
jne
leave
std
shl
and
push
ljmp
inc
mov
jge
gs
shll
call
mov
or
in
mov
outsb
cs
sub
shrb
test
sahf
arpl
clc
mov
shrb
inc
push
pushf
mov
mov
push
ret
mov
cmpl
and
lds
sub
cmp
cld
arpl
mov
aam
dec
or
in
rolb
outsl
mov
shlb
or
loop
out
jecxz
sbb
xchg
mov
cmpsl
mov
inc
dec
and
dec
push
inc
jnp
jne
stos
fstpt
push
add
lret
mov
divl
loope
(bad)
xchg
inc
adc
mov
jge
push
cwtl
jle
jecxz
cmpsw
test
and
imul
or
roll
inc
mov
or
hlt
push
and
adc
adc
dec
aaa
aaa
cli
repz
incl
push
mov
dec
test
lcall
push
iret
int1
cwtl
stos
out
push
repnz
add
cmp
cmp
xchg
jmp
aam
fldenv
cld
lcall
cmp
ljmp
lret
loope
mov
mov
ret
push
mov
add
xchg
pop
(bad)
and
mov
in
lret
xchg
lret
(bad)
mov
push
mov
sub
jg
mov
aas
inc
pop
sarl
xchg
mov
shr
out
push
nop
push
lret
xor
lods
dec
iret
test
mov
mov
mov
add
xor
or
xchg
inc
dec
scas
aad
jne
insb
inc
in
(bad)
pop
arpl
jl
pop
(bad)
pop
jne
jae
je
dec
subl
cmp
jns
fcmovu
add
mov
out
cmp
push
jae
pop
out
xchg
mov
pusha
shl
push
mov
mov
jl
fistpll
mov
jns
xor
xlat
sbb
lods
push
bound
sub
jb
jne
mov
mov
ret
cmp
sbb
sub
lret
jb
rorl
outsb
sub
add
mov
pop
mov
fcoms
mov
rolb
add
dec
ret
rcrb
movsl
lods
sbb
push
mov
pop
lret
dec
add
xchg
mov
dec
or
shll
and
fisubs
idivb
push
pusha
daa
lods
pop
sbb
movsl
or
lret
cltd
in
mov
in
fmuls
rcll
fmuls
xchg
cli
mov
inc
cmp
fildl
adc
cs
sarb
sub
lahf
pop
test
dec
je
insb
jecxz
mov
cmp
enter
pop
add
adc
fimuls
test
jl
lods
loope
je
fwait
xor
jbe
out
scas
daa
or
mov
repnz
add
rcrb
les
mov
push
je
xchg
mov
xchg
(bad)
pop
shll
mov
mov
ret
sub
add
cmc
xchg
mov
add
or
inc
popf
add
sarl
aam
mov
dec
int3
pop
sbb
adc
je
mov
ss
or
sar
addr16
lea
shlb
lods
mov
cmp
leave
mov
cmpl
data16
(bad)
cmp
aaa
adc
cmp
and
mov
movb
or
fmull
es
das
push
sbb
repz
jle
mov
and
pop
jge
test
scas
mov
lods
loop
lret
rolb
jmp
lods
sub
and
je
mov
xlat
push
jnp
sbb
fwait
cwtl
lret
sub
sub
lods
mov
mov
imul
sub
xchg
jge
lock
aam
mov
stos
mov
xchg
inc
push
sub
fwait
pop
stos
add
inc
popf
sti
sub
add
pop
add
mov
movsl
adc
insb
repnz
mov
dec
mov
scas
mov
mov
adc
inc
add
lret
in
(bad)
std
repnz
outsl
sarb
shrd
or
ret
inc
mov
in
test
sarb
ljmp
jle
imul
je
scas
pop
push
add
rcrl
mov
paddd
out
dec
call
jmp
cmp
mov
cmp
testb
fcmovne
aam
sub
outsl
xlat
test
insl
les
pushf
add
mov
sub
std
cmp
xchg
pop
mov
push
mov
jmp
lds
sub
xchg
popf
and
add
or
add
popf
pop
sub
pushf
cld
sbb
or
(bad)
sahf
sbb
xor
je
or
dec
dec
in
(bad)
sbb
add
repnz
sub
adc
mov
mov
pop
mov
add
adc
add
inc
sub
push
aad
test
or
setnp
mov
outsl
ret
jl
cld
cmp
push
push
es
daa
jecxz
pop
ret
mov
xor
adc
mov
jle
mov
xor
cli
insb
or
punpckhdq
int
rclb
jne
es
mov
sahf
and
mov
mov
cmp
lahf
fdivr
mov
test
(bad)
fwait
push
or
sarb
rcl
ret
pop
aam
xor
add
ljmp
frstpm(287
lahf
arpl
sub
mov
add
test
sub
shrb
inc
hlt
cld
adc
pop
aas
push
jae
inc
add
imul
jmp
out
cmp
mov
cli
orl
push
add
sub
sbb
mov
mov
push
aaa
pop
mov
cmp
ret
inc
test
jbe
call
xor
(bad)
add
xlat
mov
les
lcall
jbe
push
fmull
push
mov
pushf
js
fs
sbb
adc
shrl
mov
mov
std
jne
and
lock
or
stos
jns
add
stc
leave
push
or
jb
ja
clc
adc
sbb
or
or
aad
mov
inc
mov
loop
popw
or
scas
pop
insl
sahf
xchg
ljmp
push
aaa
cli
mov
mov
xchg
sbb
(bad)
add
mov
jne
jg
dec
xor
movsl
stos
xchg
inc
pop
inc
inc
jp
jecxz
pushf
pop
orb
jbe
mov
jae
insb
pop
lcall
xchg
xchg
mov
add
sahf
push
out
dec
shlb
sti
out
and
sbbl
into
push
add
or
mov
addl
and
out
mov
pop
mov
pop
push
imul
and
rcrb
fildll
adc
and
mov
pop
or
mov
loope
out
rcll
dec
mov
mov
mov
inc
fwait
mov
fmul
pop
scas
(bad)
leave
insb
ss
jmp
shrl
dec
cmpl
repz
lods
mov
fstps
ret
testb
lock
insl
scas
shrb
mov
nop
mov
repnz
popf
rorb
fdivp
dec
mov
(bad)
sbb
mov
pop
xchg
mov
mov
iret
mov
inc
and
cmc
xor
inc
mov
cmp
mov
jmp
or
ror
enter
inc
decb
pop
ror
push
push
lods
add
inc
daa
mov
sahf
aaa
cld
cmp
rcl
lret
sub
jg
jns
xchg
hlt
sub
add
add
sti
mov
cmp
mov
lea
negb
xor
(bad)
jmp
repz
sbb
or
loope
sarl
add
mov
push
and
mov
fwait
xchg
out
test
movsl
out
mov
sbb
pop
lcall
sarl
insb
fmull
mov
dec
add
mov
lret
(bad)
adc
cmpsb
pushf
cmpsb
adc
jno
imul
inc
