mov
aas
push
repnz
sub
mulb
jb
loop
mov
pop
xchg
fsubl
pusha
aaa
shrb
push
insl
push
inc
push
lret
mov
xor
jmp
in
cltd
jl
sub
lock
cwtl
push
int3
arpl
pop
sub
shll
dec
jle
xchg
out
ljmp
and
mov
scas
pop
inc
xchg
push
aaa
cld
lock
repz
in
scas
popa
jmp
frstor
mov
cltd
xchg
dec
mov
cmc
aad
jg
mov
cli
ljmp
cmpsb
outsl
imul
nop
pop
lret
repnz
lea
iret
push
in
sub
stos
dec
dec
jge
sbb
xchg
adc
lahf
xchg
in
mov
dec
fsubrl
jecxz
xor
mov
sub
inc
int1
(bad)
imul
gs
jnp
insl
popa
lock
out
jae
scas
ja
add
cmpsl
out
subl
inc
mov
jnp
dec
mull
cltd
sub
gs
jmp
cmp
xchg
aaa
lcall
or
push
out
enter
out
js
and
mov
mov
dec
imul
mov
movsl
outsl
and
fmull
xor
loop
inc
imul
push
or
fwait
out
cwtl
aam
cld
pop
imul
testl
mull
dec
sub
(bad)
loopne
(bad)
jecxz
cmpsl
das
pop
pop
test
test
stc
add
sub
add
jle
push
cmpsb
pushf
into
mov
fnstenv
popa
stos
dec
push
or
cmc
out
or
add
mov
test
mov
stos
or
and
cli
imul
xor
insl
inc
xlat
mov
xchg
add
(bad)
jge
stos
loopne
push
stos
(bad)
push
jp
addr16
jae
movsb
lods
mov
(bad)
ljmp
ljmp
pop
mov
fcmovne
jp
out
xor
je
(bad)
xor
jo
mov
jbe
das
in
sarb
loop
(bad)
in
xchg
aas
mov
adc
fwait
les
push
nop
call
mov
loop
or
xchg
sbb
movsl
mov
int1
xchg
dec
xchg
fcoms
aaa
addr16
add
imul
sbb
and
inc
jo
insl
stos
(bad)
pop
decl
pop
in
and
bound
pop
cmp
stos
lock
fadd
insb
mov
movsl
jg
mul
aas
mov
add
push
in
shll
arpl
leave
pop
sub
adc
lock
sti
cmpl
cli
or
jbe
mov
sar
enter
shl
mov
aam
sarb
add
mov
lods
test
mov
inc
out
das
mov
pop
aaa
(bad)
pop
inc
stos
push
mul
imul
and
imul
data16
cmc
and
(bad)
pop
ret
test
dec
jmp
push
loop
rcrl
or
jns
scas
adc
lret
in
jp
outsb
dec
sti
fnsave
or
and
adc
lds
scas
ljmp
loop
jle
dec
imul
pop
inc
int
aad
movsb
nop
das
add
mov
ret
jne
(bad)
arpl
int
popf
arpl
jnp
sub
arpl
les
rclb
stos
les
pop
and
(bad)
adc
pop
xchg
cmpl
lret
dec
mov
into
call
fnstsw
xor
imul
pop
imul
xor
push
sarb
ss
or
scas
push
xor
fstpl
dec
rcll
pop
cmpl
mov
in
in
movsl
ficomps
call
push
dec
push
gs
lahf
jo
data16
lock
inc
sub
pop
mov
pop
pop
daa
mov
mov
mov
xlat
pop
int1
xor
das
ret
dec
mov
(bad)
sarl
imul
nop
sub
xchg
cmpsl
loopne
adc
jbe
pop
rolb
jno
test
push
stos
cwtl
subl
pcmpeqb
call
std
imul
inc
test
les
shll
aam
cmc
invd
dec
ficompl
cmc
clc
mov
es
pop
cltd
ret
xor
scas
lods
nop
push
fwait
mov
fcompl
ljmp
inc
xchg
dec
cwtl
cmp
out
subb
sbb
jnp
incl
cmc
jnp
outsl
sub
cmc
pushf
int1
xor
mov
jg
cmpsl
ljmp
push
and
addr16
sub
inc
adc
repz
and
jbe
mov
mov
jne
mov
sub
fs
adc
push
inc
dec
mov
xor
stos
dec
and
mov
sub
imul
fsubs
std
pop
negl
adc
add
mov
aad
bound
cmpb
adc
jbe
push
out
cmp
or
and
shlb
outsl
fdivl
mov
movsb
push
or
outsb
insl
movsb
jns
push
test
mov
cmp
bound
push
fcmovne
add
cwtl
pop
je
push
jo
lret
jae
notb
fadd
int1
mov
in
aam
mov
in
int
(bad)
clc
gs
jbe
push
mov
xor
lock
fwait
ret
jnp
mov
clc
gs
fstpl
dec
jl
add
je
fcoml
daa
orl
cmp
dec
lds
inc
mov
test
outsl
lret
repnz
xorb
leave
cmp
jle
cltd
sub
mov
xchg
and
test
push
iret
movsb
push
ds
mov
imul
insb
mov
mov
in
data16
jl
pop
loop
loopne
fisttpl
nop
outsl
add
inc
pop
jo
dec
inc
jne
stos
sbb
fucomi
stc
call
leave
cs
pusha
(bad)
xchg
addr16
mull
jne
jb
data16
pop
push
jno
cmpsb
push
xchg
iret
outsl
fnstenv
inc
sahf
cmpl
xchg
dec
nop
xlat
mov
clc
out
xor
mov
push
addr16
(bad)
insl
jg
and
out
je
or
nop
out
les
inc
insl
das
add
jle
gs
es
scas
sub
push
jmp
lret
pop
cltd
das
push
leave
in
push
lods
loopne
data16
mov
jp
scas
xor
outsl
ja
push
cmp
push
jp
imul
pop
inc
cmp
sub
ret
sti
sbbl
cwtl
xor
jns
movsl
push
faddl
cmp
push
out
cmpsl
jbe
fwait
out
push
movl
(bad)
ds
lods
adc
es
inc
xor
aam
pop
addb
push
add
fcmovu
jne
xlat
in
mov
cmpsl
add
jecxz
lods
sahf
jp
scas
lock
jmp
popa
and
out
rcll
add
mov
pushf
aad
adc
outsb
bnd
imul
mov
test
insb
fnstsw
outsl
pop
shrb
fsts
scas
mov
mov
ds
in
jns
(bad)
jo
xlat
mov
xchg
shll
pop
test
ja
pop
jl
inc
mov
mov
scas
cli
xorl
popa
jae
int
(bad)
clc
gs
pop
inc
pop
lds
inc
lret
cwtl
xor
out
enter
cli
in
sub
xor
pop
or
jmpw
sti
dec
cmp
movsb
fstl
loope
dec
push
sbb
xor
xchg
(bad)
hlt
sti
cmp
mov
lahf
repz
sbb
xlat
imul
and
mov
fbld
jns
mov
insl
inc
sub
pop
dec
or
(bad)
push
xor
loopne
lods
out
push
dec
iret
rcll
call
jle
push
loop
push
filds
and
jmp
xchg
dec
in
cld
xchg
out
jae
pop
dec
nop
lret
ficoms
inc
or
lods
aam
or
mov
movsb
ret
cmc
shrb
je
gs
jo
xchg
sub
push
frstor
xchg
push
xchg
jae
fwait
sahf
jle
cwtl
sub
jp
mov
jecxz
jnp
fsubp
add
sbb
clc
lahf
jns
cmpsl
jge
inc
push
inc
mov
jp
repz
mov
cmp
in
mov
mov
jbe
or
mov
fistpll
into
and
sbb
mul
jnp
es
cli
addr16
outsl
mov
fwait
repz
int1
mov
shl
ret
dec
add
jl
pop
mov
and
in
cs
outsb
