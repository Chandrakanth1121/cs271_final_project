jge
repnz
mov
rolb
iret
xor
ss
int1
je
stc
ds
push
inc
rclb
int1
enter
lock
std
push
dec
xor
lds
inc
int
push
rolb
iret
xor
ret
push
jbe
ret
push
jbe
ret
push
jbe
ss
jne
cmc
ds
push
inc
shlb
push
jae
int1
lret
or
add
setg
int
dec
xor
xchg
cmp
enter
rolb
cmpb
mov
sub
aas
mov
imull
push
ss
jnp
xchg
push
cmc
inc
testb
in
outsl
les
fwait
dec
rorb
cltd
ret
out
jl
ret
push
shr
mov
lret
pop
push
dec
xor
(bad)
lea
jmp
push
iret
xor
ret
push
jbe
ret
push
jbe
ret
push
jbe
ss
test
stc
ds
push
inc
rclb
push
dec
insl
pop
jmp
xchg
pop
push
mov
int3
out
je
les
enter
inc
scas
adc
dec
xor
jnp
cmp
sub
jo
sbb
dec
xor
inc
mov
pop
dec
out
add
push
xor
push
lret
adc
jnp
out
lea
pop
push
mov
int3
out
or
les
enter
inc
scas
mov
fdivrl
(bad)
adc
inc
cltd
movsb
jo
sbb
lret
sbbl
add
push
xor
push
adc
test
adc
int3
lea
pop
sub
(bad)
in
sbb
les
enter
clc
mov
push
lea
sbbl
lret
out
insl
out
pop
sub
les
dec
mov
leave
jo
cltd
ret
out
insb
enter
out
mov
lret
pop
push
dec
xor
dec
sub
push
lahf
bound
inc
push
ffreep
push
jbe
ret
push
jbe
ret
push
jbe
ss
test
stc
ds
push
inc
rclb
int1
enter
clc
test
mov
xor
push
lea
pop
sub
rorb
xor
push
iret
movsl
ret
pop
inc
mov
or
inc
fs
xchg
mov
push
iret
movsl
shll
lahf
pop
dec
xor
dec
mov
pop
and
nop
out
adc
ret
push
shr
mov
add
push
xor
xchg
loopne
int3
xor
push
dec
mov
pop
xorb
fistl
les
int3
sbb
push
dec
mov
or
add
ja
add
imul
xchg
cmp
jnp
test
xor
push
dec
in
add
dec
sbb
jecxz
es
fs
mov
les
iret
movsl
ret
mov
or
inc
fs
nop
mov
push
shr
(bad)
mov
ss
dec
mulb
insl
lea
cltd
movsb
jo
sbb
orl
lret
sbbl
add
dec
xor
push
or
dec
insl
jecxz
mov
pop
sub
orl
lock
fucom
mulb
dec
movb
or
aas
inc
push
mov
rolb
iret
xor
faddp
push
jbe
ret
push
jbe
mov
pop
dec
hlt
es
mov
ss
or
cmp
jbe
ret
push
jbe
ret
push
jbe
ss
jnp
xchg
ds
stc
inc
sarb
insl
pop
int1
ffreep
push
jbe
ret
push
jbe
ret
push
jbe
mov
sub
clc
das
lret
add
dec
cmp
mov
mov
(bad)
cmp
aas
inc
int
xor
inc
mov
add
inc
ffree
and
les
test
and
inc
jns
xor
(bad)
fwait
dec
mov
jbe
ss
repz
idivl
mov
jecxz
rolb
imulb
jmp
sub
inc
mov
sub
in
outsl
test
enter
push
xor
mov
ss
addr16
xor
(bad)
mov
lea
lahf
mov
lea
dec
mov
dec
sub
testl
push
jbe
ret
push
jbe
ret
push
jbe
mov
pop
cmp
xor
mov
ss
add
les
ffreep
push
jbe
ret
push
jbe
jae
pushf
xchg
aas
xor
jge
mov
lea
inc
fnstsw
ss
out
xor
jbe
ss
shl
je
clc
ds
stc
inc
sarb
pop
jae
int1
ffreep
push
jbe
ret
push
jbe
ret
push
jbe
mov
cmp
sub
pop
call
(bad)
dec
scas
dec
xor
(bad)
cmp
jbe
ret
push
jbe
ss
jnp
xchg
ds
stc
inc
sarb
pop
insl
pop
int1
ffreep
push
jbe
ret
push
jbe
ret
push
jbe
mov
sub
clc
and
outsl
test
lret
add
jnp
(bad)
fwait
dec
mov
add
jnp
lret
(bad)
cmp
push
dec
xor
push
push
mov
jp
dec
mov
push
enter
lret
push
enter
mov
cwtl
push
mov
dec
mov
jl
cmp
sub
jbe
ret
push
jbe
ret
push
jbe
ret
push
jbe
ss
repz
idivl
mov
jecxz
rolb
jecxz
insl
pop
jmp
jae
rolb
aaa
insl
pop
sub
dec
fnstenv
les
sub
pop
sub
xor
xchg
das
mov
enter
sti
test
bound
push
pop
sub
es
(bad)
xchg
dec
shr
daa
insl
jecxz
idivl
add
pop
sub
inc
fdivrl
cmp
repz
jge
pop
cs
enter
inc
adc
cmp
mov
pop
dec
mov
or
sti
pop
pop
shl
iret
lea
notb
out
dec
push
dec
mov
or
insl
rolb
xor
lret
lea
les
dec
xor
push
dec
out
lds
dec
xor
(bad)
lea
dec
repz
or
mov
pop
popa
mov
inc
jecxz
es
lret
jae
std
mov
dec
push
dec
mov
or
pop
push
sbb
jge
xor
dec
test
fdivs
(bad)
rolb
mov
test
mov
mov
or
inc
push
bnd
add
jg
add
nop
orl
cmpxchg
inc
mov
testb
pop
dec
cmp
inc
push
jbe
jle
pop
inc
sbb
lret
sbbl
cmc
push
int3
sbb
pop
or
and
inc
adc
pop
xor
fs
and
ss
outsb
dec
xor
lea
jg
dec
add
inc
imul
or
cmp
enter
pop
jecxz
mov
mov
roll
dec
xor
xor
xchg
das
repnz
sub
push
adcl
add
ret
push
shr
mov
add
inc
mov
mov
adc
mov
adc
pop
cmp
lea
dec
repz
or
ja
test
cmp
sub
mov
push
sbb
pop
dec
xor
bound
push
cmp
ljmp
jbe
mov
pushf
(bad)
cmp
pushf
dec
mov
sub
sub
pop
sub
test
mov
add
inc
mov
(bad)
pop
jmp
ljmp
adc
xchg
roll
mov
pop
movsb
dec
xor
mov
ss
inc
push
xor
pop
aas
xor
inc
fnstsw
add
adc
out
sub
clc
lea
lret
es
enter
push
cmpsb
inc
pop
pop
jle
xchg
das
push
jbe
ret
push
jbe
ret
push
jbe
ret
push
jbe
xor
sbb
push
pop
movsb
fidivs
les
jnp
ret
(bad)
enter
dec
in
cmp
push
cmp
call
ret
push
jbe
mov
ret
lea
mov
add
dec
mov
or
mov
adc
mov
test
mov
mov
pop
jl
inc
(bad)
push
sbb
jecxz
test
inc
les
dec
xor
out
call
mov
ret
lea
mov
or
repnz
in
xchg
es
jecxz
xor
or
es
jecxz
fldl
mov
out
pop
sub
insl
insb
push
outsl
test
pop
es
adcl
lret
mov
int
addr16
pop
bound
dec
sub
sbb
xor
mov
push
inc
fldl
