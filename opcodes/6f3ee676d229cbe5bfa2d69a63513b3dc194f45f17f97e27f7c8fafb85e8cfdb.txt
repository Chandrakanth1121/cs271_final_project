xor
or
cltd
jmp
fisubl
push
into
jo
xorb
or
xchg
scas
dec
add
(bad)
lea
fsubrs
xor
adc
imul
mov
xor
jl
add
xchg
enter
aam
mov
lods
shrl
insl
mov
nop
push
dec
xor
rolb
push
sahf
js
mov
cmc
and
jne
test
or
mov
jo
popa
scas
lock
cld
push
bound
(bad)
std
test
leave
test
loop
pop
loope
mov
jb
call
jbe
and
lea
xor
fwait
xchg
jbe
idivb
in
(bad)
xchg
mov
int1
cli
sarb
gs
movsb
fildll
popa
cmc
jecxz
jl
fmul
ficoml
inc
scas
(bad)
cmp
xor
mov
mov
(bad)
cltd
mov
ja
mov
lret
push
movsl
xchg
cs
push
aam
inc
jmp
ja
cmp
sbb
clc
inc
aaa
shl
xchg
push
repz
shr
pop
sahf
leavew
xor
int1
lret
dec
sbb
lcall
pop
adcl
mov
or
test
sbb
mov
pop
lock
jo
pop
repz
add
push
inc
xor
cmp
add
push
(bad)
loop
jmp
push
mov
fdivs
pmovmskb
xchg
popa
and
pop
ret
cmp
add
inc
or
xchg
sbb
add
or
jle
or
(bad)
cld
xchg
std
sub
xchg
xchg
aad
(bad)
xor
add
mov
or
adc
xor
jle
jmp
mov
mov
int
mov
inc
xor
mov
mov
xor
in
adc
dec
iret
call
sub
cli
int
mov
and
jno
in
test
xchg
xchg
lods
les
rorb
mov
inc
xor
push
lret
mov
mov
add
push
push
fbstp
ret
lods
inc
int
pop
(bad)
sbb
ss
sbb
pop
xorb
jnp
push
push
jecxz
inc
loop
mov
sub
cmp
insb
xchg
movb
je
testl
dec
ret
fs
jns
pop
fisubrl
test
jg
ja
repnz
jecxz
repz
ss
pop
add
or
cmpsb
ds
mul
cmpl
add
movsb
and
iret
xor
movsl
push
loopne
rol
dec
sahf
scas
dec
mov
and
xor
jg
push
sub
add
sub
cmc
push
add
jp
les
inc
jge
daa
in
in
out
jb
in
push
stc
repnz
mov
xlat
or
std
sub
lahf
adc
cmpsl
xchg
xchg
mov
push
jmp
fcmovne
xor
imul
mov
mov
call
add
lods
mov
xlat
and
sbb
idiv
aam
fidivl
fdivrs
push
in
loope
sbb
(bad)
iret
and
dec
jnp
pop
fdivl
sub
(bad)
push
sbb
(bad)
mov
adc
sub
in
and
stos
pop
out
xchg
shr
xchg
jb
es
sub
jecxz
outsl
out
fidivs
jb
loopne
mov
ret
or
in
adc
adc
xor
cmc
(bad)
xor
fdivl
jecxz
inc
xchg
xor
mov
push
add
sbb
int
(bad)
sbb
jae
int1
or
addr16
inc
decb
or
cmpsl
push
inc
les
sbb
pop
sbb
test
in
inc
fsubrs
scas
mov
test
mov
xchg
adc
push
jb
fwait
int3
sub
xor
push
adc
pop
in
inc
ficoml
pop
or
cltd
insl
das
jb
sti
imul
cmp
adc
dec
mov
dec
cmp
ret
adc
lea
scas
jnp
shl
addr16
movsb
sub
pop
pop
pop
push
addr16
bts
push
fs
xchg
mulb
sub
stos
push
ljmp
push
fs
dec
sub
mov
lret
jae
push
sbb
cli
call
outsl
dec
dec
sub
inc
leave
and
push
cmpsb
rcr
adc
sub
btr
push
scas
je
xchg
mov
andl
inc
in
fisubs
push
or
push
ror
les
push
scas
test
inc
gs
stos
xchg
cmp
dec
sub
sbb
decb
scas
dec
mov
pop
shlb
or
rclb
(bad)
inc
arpl
jge
mov
mov
aas
jl
sbb
push
inc
or
clc
xchg
mov
inc
jne
scas
(bad)
sub
in
js
jp
add
in
inc
aam
xchg
(bad)
pop
cmp
lahf
ja
xor
insb
push
mov
dec
mov
and
and
mov
mov
lahf
mov
aaa
push
mov
cmp
ror
fcoml
das
pop
movsl
mov
es
mov
cmp
pop
sti
push
(bad)
popf
cltd
loope
jo
mov
decl
xor
xchg
mov
cltd
ret
call
adc
xchg
movsl
xchg
mov
aad
loope
add
add
pushf
fstpt
lods
jmp
xchg
(bad)
arpl
and
dec
dec
push
cmc
jp
dec
cli
push
nop
inc
iret
xor
xchg
xlat
(bad)
daa
adc
lds
sub
out
xor
dec
aad
hlt
cltd
cld
hlt
loope
adc
push
test
insb
dec
fildll
pop
cwtl
orl
pop
mov
push
adc
sbb
sar
and
out
pop
pop
scas
jge
sbb
adc
pop
push
cmp
or
inc
xchg
sub
aas
testl
(bad)
pop
mov
push
out
sahf
mov
mov
inc
vmread
pop
(bad)
sti
mov
jbe
lods
imul
daa
xor
sahf
pop
shr
rolb
dec
or
out
std
xchg
sbbl
xchg
sub
(bad)
(bad)
das
fsts
mov
(bad)
lahf
pop
and
jge
test
fbld
popa
cwtl
push
test
mov
pop
mov
std
jo
ds
aas
adc
insb
fsubr
cmc
mov
lods
int
(bad)
loop
int
push
pushf
das
push
enter
fadds
mov
jne
loopne
push
rcrb
xchg
mov
push
xchg
jb
xor
pusha
dec
cld
imul
sub
adc
mov
int
xchg
pop
lds
adc
mov
les
inc
rclb
in
sbb
cmp
jns
call
imul
push
mov
xchg
ja
leave
fwait
and
inc
dec
inc
std
cli
mov
inc
(bad)
int1
push
push
mov
mov
sti
push
outsb
jge
inc
test
imul
popa
mov
adc
inc
inc
jmp
es
aas
mov
in
inc
shl
imul
cmc
imul
jecxz
arpl
mov
sub
(bad)
and
xlat
mov
mov
jl
xchg
(bad)
pop
loopne
outsl
hlt
jmp
cs
xchg
lods
mov
xchg
pop
and
pop
mov
stc
cmp
inc
mov
addr16
rcrb
cmp
jne
call
sbb
mov
pop
(bad)
jae
cmp
xlat
xchg
or
mov
or
pushf
xchg
in
mov
aam
int1
cmp
mov
rcrl
lds
mov
xor
(bad)
sarl
aas
into
iret
jmp
ljmp
aaa
ss
les
mov
cld
ret
cs
mov
jo
lds
add
dec
sbb
dec
pop
xchg
loope
fldt
gs
jb
cli
or
sub
outsb
shrl
aam
repz
idivl
pop
in
or
mov
lret
jg
push
es
inc
in
dec
mov
push
inc
mov
out
das
cs
inc
pop
(bad)
dec
pushf
scas
cmp
dec
andnps
data16
xchg
imul
and
and
add
sahf
in
mov
adc
hlt
addl
loopne
adc
lods
xchg
xchg
pop
push
loopne
cwtl
add
sub
pop
jp
stc
pop
xchg
imul
lds
xlat
mov
into
dec
cmpsl
push
jbe
cmp
dec
cli
pop
and
fdivr
sbb
push
imul
cwtl
aad
sbb
(bad)
call
jmp
push
cmp
inc
mov
repnz
push
lret
