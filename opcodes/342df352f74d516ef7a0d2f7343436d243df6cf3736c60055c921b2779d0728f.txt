xlat
cmp
into
inc
pop
push
repnz
pop
mov
das
out
aas
dec
pop
repnz
popf
pop
add
sbb
ljmp
je
mov
mov
push
test
fldcw
mov
push
cmp
scas
lcall
push
dec
orl
lods
xor
xlat
ljmp
aad
in
into
dec
push
sub
xchg
sub
std
out
daa
loop
shlb
add
movsb
imul
jnp
xchg
es
movsl
cmpsb
push
push
arpl
cld
lods
dec
popf
in
negl
pop
adc
subl
aam
in
lods
xlat
sbb
scas
fs
int1
mov
fists
cmp
repnz
test
fidivrl
dec
mov
cmp
mov
dec
fldt
scas
das
mov
push
dec
sbb
(bad)
mov
xor
mov
pop
in
(bad)
arpl
insl
shl
adc
jbe
mov
mov
movsb
shll
inc
fmull
inc
xlat
aad
cmpsb
mov
outsb
xor
mov
and
push
arpl
clc
push
and
(bad)
and
mov
popf
loopne
aaa
jecxz
iret
ret
ficoml
(bad)
es
dec
mov
daa
xor
add
cmpsl
shll
add
pop
mov
sbb
je
jge
add
popa
std
push
push
pop
out
mov
push
jns
jae
fcmovne
gs
xchg
inc
out
xchg
mov
insb
push
movsl
cmp
dec
orb
(bad)
sbb
fyl2x
(bad)
cmp
leave
inc
inc
sub
sbb
or
int3
push
inc
dec
lret
dec
and
dec
les
dec
pushf
xchg
iret
push
js
dec
jo
xchg
cmp
dec
(bad)
jne
lret
xor
lea
cltd
sub
push
nop
ret
push
fstl
cmp
cmp
mov
cmp
xchg
sti
(bad)
and
into
fwait
movsb
test
rcrl
xchg
mov
xlat
cwtl
push
(bad)
jo
and
sbb
mov
sbb
lcall
iret
ljmp
(bad)
mov
jns
movsb
and
nop
and
cmc
(bad)
fwait
mov
jns
pusha
lea
xchg
das
dec
lock
aam
dec
js
shl
mov
mov
gs
push
sbbl
mov
into
test
wrmsr
test
dec
adc
sub
dec
pop
test
sub
push
and
or
add
test
mov
mov
pop
adc
loope
ljmp
mov
xchg
push
ret
dec
mov
mov
and
push
xchg
dec
push
adc
jge
cmpsl
(bad)
mov
(bad)
lret
lods
leave
lock
into
xchg
jb
dec
mov
mov
push
ja
pop
fidivs
cmp
movsl
hlt
scas
mov
mov
je
outsb
out
xor
push
mov
push
arpl
lods
sbb
dec
js
aad
lock
push
push
aam
int
inc
scas
mov
rcrl
dec
push
insl
repz
jecxz
int3
sbb
push
push
shrl
insl
add
mov
sbb
pop
es
inc
pop
xor
fstpl
adc
adcb
out
test
and
push
sub
lret
mov
adc
bnd
insb
xchg
movsl
mov
dec
pop
dec
inc
jno
in
scas
pop
mov
sub
add
adc
stos
dec
cltd
div
stc
enter
lcall
mov
ds
add
pop
xor
xchg
jnp
leave
inc
pushf
dec
pop
adc
sar
add
jno
xchg
inc
leave
aaa
data16
sbb
mov
into
outsb
mov
push
shr
into
mov
fstl
push
xchg
xchg
pop
(bad)
mov
loop
mov
(bad)
inc
jnp
or
cmp
scas
xor
sahf
or
inc
loopne
mov
lock
bound
jne
jno
sbb
nop
or
dec
lret
push
mov
(bad)
in
xchg
aas
pop
or
(bad)
loop
pop
ljmp
mov
adc
and
add
jne
call
(bad)
or
popf
inc
inc
inc
rcr
or
pop
sarb
push
jp
jecxz
dec
lret
cmp
into
or
sbb
popf
push
mov
jno
xchg
imul
lret
scas
mov
sub
or
dec
dec
into
add
sub
adc
out
sbb
je
sub
xchg
mov
jb
gs
rorl
test
mov
add
fyl2xp1
int
test
push
jle
pop
outsb
jecxz
arpl
testb
rcll
xor
fists
in
mov
jns
dec
mov
xor
pusha
lea
out
nop
clc
push
rcrb
lock
(bad)
pop
in
je
mov
or
sbb
aam
cmc
push
scas
shlb
push
pop
pop
add
testb
test
mov
ja
cmp
jecxz
adc
pop
mov
mov
loopne
aam
jno,pn
sti
pushf
mov
mov
mov
add
cwtl
hlt
adc
or
cmpsl
fisttpll
mov
mov
push
and
xchg
sbb
pcmpeqw
mull
push
daa
pop
loopne
cli
es
repz
cld
shll
clc
push
insb
lds
cmpsb
pop
loop
arpl
(bad)
cmp
inc
jle
daa
sbb
xor
pop
jl
outsb
in
cmp
ficomps
push
add
das
mov
jae
adc
arpl
stos
shl
cltd
arpl
cmpsl
movsb
xchg
fldcw
pushf
or
inc
or
fs
pusha
fs
js
push
es
xlat
fldenv
xchg
add
add
mov
or
stos
xchg
pop
dec
mov
adc
mov
inc
in
or
xchg
xchg
pop
sti
inc
mov
out
std
(bad)
or
cmc
and
aam
bound
xor
jbe
lret
add
adc
mov
fwait
mov
outsl
es
hlt
pop
jns
(bad)
sbb
(bad)
loope
sub
pop
mov
xchg
jb
mov
out
mov
push
xchg
sbb
fisttpl
xchg
xchg
xor
jb
js
in
pop
push
gs
lods
loope
push
pushf
push
xor
xchg
int1
imul
repz
popa
adc
repz
xchg
jmp
xor
jl
push
lahf
arpl
ror
xor
add
fisttps
data16
stc
add
iret
pop
mov
std
ljmp
lds
and
iret
mov
aas
pop
mov
dec
sub
out
fisubs
es
cmpsb
cli
xchg
clc
pop
in
nop
or
xor
and
out
xchg
ljmp
push
push
addr16
or
ljmp
dec
pop
and
or
(bad)
je
mov
sti
pusha
je
loopne
shrl
ds
push
jno
scas
popf
jp
dec
inc
mov
mov
cmp
lahf
dec
or
jmp
push
mov
test
nop
es
lahf
lock
dec
lahf
pop
add
scas
rcrb
in
adc
addl
push
popf
int
lods
xlat
(bad)
add
cltd
int
mov
ficoml
les
fidivrs
mov
and
mov
aad
jb
ja
repz
jbe
mov
lahf
fdivrl
add
into
push
in
ret
push
cltd
dec
pop
xor
aad
mov
xor
mov
stos
adc
imul
sub
push
outsb
push
jb
xchg
sbb
pop
ret
push
and
mov
in
lods
cmc
shl
or
data16
imul
(bad)
(bad)
in
xchg
cltd
outsl
sarl
mov
int1
pop
dec
rol
ror
in
xor
clc
push
ret
dec
or
shlb
inc
mov
push
insl
out
cltd
movsb
lahf
loope
ds
mov
jmp
out
lds
lods
mov
jne
jl
ret
imul
mov
pop
clc
arpl
ret
cmpb
mov
lret
addr16
mov
arpl
mov
fcmovnbe
in
(bad)
adc
push
push
xchg
lahf
test
lret
lahf
lret
insb
xchg
cmpsb
(bad)
adc
add
(bad)
std
pop
scas
xor
cmc
sbb
ficoms
shrb
dec
add
pop
jno
int1
sub
ret
nop
cltd
mov
cltd
ljmp
jmp
into
test
push
call
