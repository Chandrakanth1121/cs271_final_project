push
add
pop
les
push
xchg
dec
jp
pop
inc
in
(bad)
xor
sbb
adc
lock
loopne
jmp
xor
cmp
lds
and
mov
add
popf
lcall
cmp
(bad)
test
adc
sahf
ficoml
push
mov
xchg
lret
and
pop
dec
cltd
and
mov
pop
dec
cwtl
xchg
pop
sbb
mov
in
xor
(bad)
push
push
jb
cmc
push
add
loop
and
push
xor
es
push
cmp
add
adc
mov
or
fnstenv
dec
lret
je
lcall
popf
mov
dec
pushf
mov
mov
cmp
jecxz
mov
subb
dec
insl
aaa
outsb
scas
dec
mov
jg
imul
mov
push
fdivrs
dec
adc
aam
mov
addl
mov
jecxz
push
sub
jne
ljmp
xchg
push
sub
mov
movups
ljmp
das
mov
xor
add
xor
dec
fstps
(bad)
cmp
(bad)
daa
jle
xchg
push
or
and
sub
ljmp
sub
cmp
mov
(bad)
or
inc
sarb
inc
sub
ret
clc
fs
aam
loop
in
inc
loopne
je
rcll
cs
mov
imul
adcb
pop
int3
xor
and
xor
xchg
jnp
mov
xor
inc
int1
push
mov
mov
imul
pop
fs
pop
(bad)
jl
inc
push
or
mov
xor
movsl
lret
dec
pop
push
inc
mov
les
lahf
cmp
(bad)
push
and
int3
inc
clc
push
adc
loopne
ret
sbb
xchg
cmp
aas
mov
shlb
add
movsb
mov
sbb
jl
(bad)
movsl
and
push
out
out
mov
in
xor
lods
mov
add
mov
loope
insl
fwait
xor
inc
xchg
out
shll
mov
lods
adc
bound
mov
inc
out
(bad)
imul
insb
sbbb
movb
cld
mov
into
cmp
push
dec
push
out
das
xor
add
hlt
rol
pop
sbb
js
or
das
jbe
dec
outsb
inc
dec
sbb
xchg
jmp
dec
cld
push
sub
xor
mov
jle
popf
pop
lret
enter
dec
hlt
(bad)
xchg
movsb
(bad)
das
imul
jg
and
cmc
mov
sub
sub
pop
mov
inc
and
pop
je
sub
test
and
in
sub
dec
jno
and
out
mov
cli
inc
jmp
aad
aad
dec
scas
out
dec
rcrb
popa
add
test
push
xor
jnp
pop
lret
xchg
xor
push
or
xchg
push
aam
jno
leave
push
jle
hlt
pop
test
aaa
stc
aam
add
lods
dec
inc
jne
push
xorb
fcoms
xchg
xor
dec
jp
sbb
jbe
add
andps
std
cmpsl
jge
loope
test
inc
orb
out
jbe
ss
cltd
dec
(bad)
pop
xchg
out
bound
dec
push
add
inc
loope
xchg
xor
and
xor
or
es
sbb
xchg
xor
push
mov
cwtl
popa
cmp
pop
dec
lret
and
mov
fs
dec
mov
ffree
insb
or
lea
insl
movsl
mov
insl
jge
repnz
pop
orl
pop
lahf
xchg
rcl
push
mov
xchg
in
xchg
jae
test
gs
cs
call
cld
mov
cmpsb
das
cmovns
pop
jecxz
or
addr16
dec
push
add
outsl
push
mov
sbb
(bad)
adc
mov
mov
hlt
mov
jns
mov
pop
jnp
jno
shr
xchg
int1
mov
aad
xor
add
jno
leave
lds
mov
mov
imul
sub
(bad)
xchg
scas
push
mov
aam
gs
add
int1
pop
push
and
lods
dec
push
and
jmp
imul
imul
mov
push
mov
popa
insb
jne
mov
cltd
pop
sub
push
inc
inc
scas
mov
dec
int3
movsl
inc
xor
fisubs
jp
add
fsubp
mov
pop
pop
(bad)
mov
ljmp
xchg
sub
jle
cs
push
adc
fucomi
outsb
and
sbb
push
push
xor
jp
pop
pop
sahf
cmp
dec
ss
nop
fcmovnb
das
mov
test
mov
dec
jno
and
mov
imul
in
xor
pop
ss
cmp
aaa
(bad)
int1
inc
ja
inc
push
js
pushf
std
sbb
dec
inc
sarb
sub
in
in
ja
cmpsl
dec
cmp
mov
pop
cmp
cmpsb
sahf
xor
jg
sbb
jecxz
popa
add
inc
js
add
sbb
push
mov
repnz
add
(bad)
sbb
insl
insl
pusha
repnz
adc
aam
fstps
adc
hlt
jp
mov
gs
mov
xbegin
push
inc
insb
push
jg
xor
xor
push
adc
pop
(bad)
gs
jge
sbb
pop
push
cmp
xor
mov
into
clc
cwtl
ds
fdivl
pop
nop
aaa
popf
jbe
outsl
stos
test
mov
roll
jle
xchg
aaa
dec
or
(bad)
push
jae
(bad)
xchg
pusha
hlt
lret
adc
jge
dec
sub
push
xor
ret
mov
pop
addr16
mov
add
jns
out
outsb
cltd
push
cld
sbb
and
adc
dec
push
or
cmp
arpl
add
pushf
(bad)
clc
gs
mov
pop
push
push
nop
sbb
push
std
xor
or
dec
xorb
incl
adc
leave
fisubrl
cmp
jmp
mov
clc
xchg
add
push
xlat
(bad)
cs
das
mov
call
cmp
inc
xor
loope
jbe
daa
pop
sub
sub
push
push
je
rcr
jg
imul
push
in
test
mov
mov
addb
(bad)
jbe
das
jnp
ja
iret
das
popf
xor
xlat
mov
sub
push
fbstp
dec
loop
jnp
int1
enter
sahf
loop
dec
sahf
(bad)
and
arpl
out
and
mov
mov
repnz
stos
dec
cmpl
roll
pop
cmp
out
or
cmp
ja
mov
mov
inc
or
add
and
push
push
mov
fldt
mov
push
in
insl
mov
out
cmp
sbb
fdivp
cmp
sub
mulb
sub
inc
xor
faddp
adc
aam
inc
mov
push
mov
hlt
jmp
mov
out
sbb
cld
push
fwait
lea
mov
pop
mov
in
cmc
pop
mov
cmp
xor
loopne
sti
xor
xchg
and
mov
push
mov
push
cmp
xadd
or
mov
push
jns,pn
pushf
cmp
mov
cwtl
lahf
jp
jae
data16
push
out
pop
insb
or
cmp
xchg
mov
lcall
mov
xor
mov
jle
cld
add
dec
dec
push
lods
and
pop
mov
and
cmpsb
mov
sub
popa
stc
xchg
sbb
jo
sbb
popf
pusha
push
sbb
das
xchg
sbb
adc
fwait
insl
xor
sbb
mov
(bad)
jne
or
dec
ss
dec
addr16
sub
pop
sbb
jae
imul
xchg
(bad)
xor
mov
xchg
jmp
movsb
pusha
mov
cli
push
xchg
inc
out
push
mov
out
cltd
bound
scas
adc
pop
mov
mov
stos
imul
stos
insb
sbb
cmpsl
sub
rcrl
sahf
xor
push
adc
sub
inc
(bad)
xor
lret
dec
dec
xor
clc
loop
adc
inc
mov
ja
sbb
add
aaa
clc
mov
pushf
push
lea
popa
iret
cmp
xlat
dec
daa
loope
cmpsb
dec
xchg
xor
push
xchg
inc
sbb
movsb
and
jne
(bad)
push
jp
out
push
sub
jne
cwtl
or
jecxz
repnz
pop
