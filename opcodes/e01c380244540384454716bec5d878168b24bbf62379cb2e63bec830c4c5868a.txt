xor
cmovs
nop
pop
xor
(bad)
movsb
jg
cld
and
cltd
inc
test
idivb
mov
fldt
or
pop
dec
jecxz
sbb
(bad)
cmc
fcompl
(bad)
sub
nop
pop
xor
(bad)
movsb
jg
(bad)
dec
(bad)
sub
jmp
jp
mov
jnp
outsl
sub
aas
and
fistpll
bound
and
cmp
rorb
mov
sbb
add
inc
lcall
into
cld
js,pn
in
stos
adc
cmp
dec
add
dec
lods
aas
call
push
test
iret
and
loope
dec
xor
fwait
push
test
scas
iret
dec
xor
(bad)
jmp
xchg
pop
xor
(bad)
movsb
jg
(bad)
dec
(bad)
or
adc
fisttps
(bad)
jp
daa
bound
xor
add
imul
in
inc
test
or
les
fs
out
(bad)
ds
cs
sub
inc
cmovs
and
in
cmpsl
fcmovbe
out
(bad)
call
out
or
add
fs
arpl
cmpsb
inc
fwait
lods
xor
in
inc
test
or
ret
fs
out
(bad)
ds
out
sub
mov
imul
(bad)
call
out
or
fisttps
or
outsl
and
aaa
arpl
testl
xor
jmp
mov
cmp
test
mov
inc
mov
xchg
dec
xor
inc
sahf
test
iret
and
adc
xor
fwait
push
test
scas
iret
dec
xor
(bad)
push
repnz
xor
dec
(bad)
dec
(bad)
or
adc
jp
mov
gs
mov
pop
pop
test
mov
inc
cmovs
inc
dec
lods
(bad)
push
or
outsl
pop
dec
mov
out
(bad)
mov
and
rcr
dec
xor
pop
dec
cmp
ja
out
(bad)
out
jecxz
cltd
mov
in
inc
sahf
or
jge
xor
fwait
push
add
lds
loop
dec
mov
fnstenv
daa
pusha
fmuls
out
pop
lds
xchg
into
iret
aas
loop
dec
mov
fldt
daa
pusha
lods
dec
xor
pop
lea
pusha
mov
(bad)
push
test
mov
dec
fisttps
and
iret
hlt
xchg
(bad)
lea
dec
xor
test
pop
out
mov
lret
mov
sub
push
(bad)
outsl
pop
dec
mov
out
(bad)
mov
and
test
bound
into
insb
out
fimuls
xor
imul
(bad)
call
out
or
fisttps
and
arpl
out
inc
(bad)
dec
iret
inc
cmovs
inc
mov
mov
lods
or
pop
dec
out
cmp
out
fmulp
hlt
(bad)
pop
jns
out
(bad)
imul
cmovs
sahf
pop
xor
fbstp
movsb
jg
(bad)
mov
dec
test
in
fisttps
sar
fisubl
dec
(bad)
pop
inc
test
idivb
mov
jl
(bad)
dec
(bad)
fistpll
inc
jp
outsl
push
fs
arpl
inc
adc
es
push
xor
fisttps
mov
lret
iret
in
xchg
(bad)
leave
cmc
out
xchg
lods
in
inc
push
push
(bad)
xchg
dec
jo
into
into
out
fisttps
fs
jo
into
iret
fldlg2
fisttps
mov
push
movsb
jg
(bad)
lahf
inc
test
notb
mov
dec
xor
jp
daa
bound
dec
xor
add
rclb
nop
fcmovnbe
push
sbb
fs
mov
in
fisttps
das
into
into
mov
fisttps
mov
sti
pop
test
mov
sti
pop
mov
das
not
push
out
pop
dec
add
dec
(bad)
dec
(bad)
mov
dec
test
into
into
push
in
fisttps
jecxz
fisubl
dec
(bad)
(bad)
gs
pop
inc
pop
xchg
les
xor
mov
jecxz
lret
into
iret
adc
fisttps
jg
cld
sub
cwtl
inc
test
idivb
mov
jl
(bad)
dec
(bad)
mov
mov
jmp
dec
test
out
fisttps
sar
fisubl
into
cld
js,pn
inc
test
idivb
mov
jl
(bad)
dec
(bad)
fistpll
jb
sbb
jp
outsl
push
fs
push
mov
incl
push
fs
dec
out
scas
(bad)
dec
xor
(bad)
(bad)
pop
dec
ret
inc
nop
mov
fs
sub
sbb
push
lds
mov
sub
lods
sar
push
inc
nop
sbb
cwtl
ret
lcall
fisubl
dec
(bad)
into
cld
bound
push
scas
sbb
dec
xor
jp
daa
bound
mov
mov
bound
xchg
ret
inc
mov
dec
fisttps
and
inc
mov
out
fisttps
and
jnp
gs
mov
cmp
(bad)
mov
push
mov
pusha
rorl
cmp
(bad)
mov
nop
hlt
shrl
pusha
lahf
aas
addr16
dec
mov
nop
(bad)
leave
ljmp
sbb
rcrl
out
mov
xchg
lods
lcall
fidivrs
xor
pop
(bad)
push
xor
fisttps
mov
fisttps
xor
xchg
out
fisttps
mov
pop
inc
sub
inc
mov
mov
fmulp
call
adc
add
loope
out
pop
inc
sub
cmpsl
mov
out
(bad)
call
dec
fisttps
cmp
dec
jecxz
mov
mov
pop
inc
sub
lcall
cmp
sbb
inc
das
inc
nop
mov
loopne
jbe
pushf
test
mov
iret
fisubl
cmpsl
loop
out
(bad)
call
cli
inc
cmp
or
fs
and
lahf
mov
mov
jp
lret
stc
push
test
add
mov
inc
cltd
mov
adc
fwait
dec
lods
and
stos
es
cli
xor
rorb
movsb
jg
inc
test
fstpt
cmp
in
nopl
jno
xor
fwait
push
test
es
lea
decb
(bad)
mov
dec
inc
das
inc
stos
daa
push
or
mov
stc
aas
dec
fs
or
(bad)
shll
test
sub
inc
dec
mov
ret
sti
rorl
mov
loopne
dec
lods
imul
lods
push
mov
(bad)
dec
(bad)
sti
jb
(bad)
push
(bad)
mov
shrb
push
dec
and
rep
mov
xor
sti
sti
push
(bad)
mov
pop
inc
cwtl
incb
sub
filds
jo
lods
push
add
dec
xor
dec
(bad)
dec
(bad)
pop
ljmp
out
(bad)
inc
ret
xchg
dec
xor
(bad)
in
incb
sub
(bad)
cmp
jecxz
dec
repnz
fisttps
outsl
shrb
xor
pop
inc
add
inc
fsubrl
out
fists
repnz
inc
push
lcall
sub
fists
and
inc
adc
pusha
xchg
out
pop
inc
aad
pop
test
out
fbstp
out
loope
or
jno
dec
xor
lds
add
dec
xor
into
cld
cltd
in
inc
cwtl
mov
(bad)
sub
in
and
lcall
inc
cwtl
mov
sahf
sub
in
out
pop
inc
das
popf
hlt
shl
outsl
cwtl
ljmp
fmulp
cmp
jecxz
dec
daa
push
or
lods
mov
(bad)
lret
cmp
mov
sahf
sub
in
out
pop
inc
das
popf
not
pusha
ret
lret
lret
and
repz
insb
rorb
mov
out
into
cld
popa
jecxz
pop
dec
lcall
in
xchg
dec
loope
dec
(bad)
sbb
aas
fmulp
cmp
mov
sahf
sub
in
out
pop
inc
das
popf
not
pusha
ret
iret
lret
and
repz
insb
rorb
inc
dec
xor
into
cld
popa
loopne
xchg
mov
(bad)
lret
xor
sub
cmp
testl
lds
pop
fs
dec
and
repz
insb
rorb
or
out
into
std
adc
sahf
pop
dec
sti
fsubs
pop
add
(bad)
sahf
pop
dec
in
mov
or
into
test
sub
dec
xor
ret
iret
