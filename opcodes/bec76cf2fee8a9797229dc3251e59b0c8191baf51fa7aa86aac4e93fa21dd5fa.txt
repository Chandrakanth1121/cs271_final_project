(bad)
in
enter
sub
jns
popf
test
sbb
imul
jle
ret
mov
or
cmp
jle
jns
(bad)
fnstcw
add
sub
(bad)
(bad)
sub
ror
and
mov
dec
or
std
sbb
xchg
loope
ficoml
repz
sub
mov
jmp
lahf
xchg
aad
jmp
pusha
mov
lock
push
sub
push
fcompl
or
stos
lods
outsl
add
iret
mov
subb
insb
(bad)
jae
repz
lods
adc
lret
sahf
and
or
pop
lret
pop
add
and
sub
push
mov
(bad)
daa
fdivs
xchg
out
(bad)
cmp
xor
cmpsb
jb
sub
sbb
mov
fs
lret
cwtl
mov
cmp
lea
xchg
cli
aad
addr16
cmp
sti
mov
mov
mov
mov
frstor
lock
shrb
std
sbb
adc
add
lea
jmp
dec
mov
xchg
sahf
shrl
(bad)
dec
mov
mov
(bad)
pop
repz
dec
pmulhuw
hlt
dec
xcrypt-cbc
cmpsl
aam
int3
ret
mov
dec
xor
leave
imul
sbb
shr
cli
filds
js
ds
pop
xchg
or
out
jne
mov
lret
shrb
jmp
mov
jp
aam
mov
inc
or
pop
fwait
mov
sarl
divl
(bad)
cmp
gs
jae
movsb
mov
mov
lcall
int3
es
cli
sbb
mov
adc
inc
inc
dec
add
lcall
or
mov
daa
adc
xchg
orb
pop
lret
insl
repnz
stc
sbb
pop
shrl
cs
stos
jecxz
or
insl
in
jae
dec
sub
mov
ds
stos
sti
jle
mov
(bad)
int3
sub
cltd
adc
xlat
sbb
ficomps
pop
mov
xchg
mov
push
test
pushf
aas
cmp
or
fcomi
ljmp
pop
lock
mov
aam
hlt
xchg
mov
out
shrb
xchg
lret
imul
ror
js
or
and
and
mov
mov
js
ljmp
(bad)
add
sub
xchg
xor
arpl
inc
jp
cli
sbb
and
jbe
je
xor
jp
repz
cmpsl
aam
lcall
in
idivb
pop
imul
test
cmpsl
data16
(bad)
jnp
ds
ss
daa
and
inc
lea
and
and
push
out
sbb
jp
cwtl
int
hlt
mov
pop
iret
fs
cmpsl
push
iret
cld
and
bound
adc
movsb
inc
idivl
sbb
adcl
push
(bad)
push
ja
push
jp
aam
mov
(bad)
cmc
cmpsb
dec
sub
push
or
mov
sbb
(bad)
int3
cmc
jp
(bad)
sbb
sbb
aaa
psadbw
dec
jl
les
dec
pop
mov
push
aam
in
ret
(bad)
(bad)
sti
sbb
imul
mov
dec
cmp
cmpsb
mov
mov
aad
or
rcrl
(bad)
and
testb
call
mov
movsb
fistpl
or
int
data16
push
outsb
and
mov
loope
stc
imul
mov
mov
pop
int
negl
xchg
imul
adc
(bad)
mov
out
or
je
jne
cwtl
mov
push
insl
bound
mov
int1
int1
mov
jmp
push
ss
(bad)
stos
sbb
pop
sti
lret
sub
cld
orb
mov
cs
out
aas
arpl
pusha
int1
mulb
daa
lret
sti
jne
and
or
adc
push
(bad)
bound
(bad)
jnp
aad
dec
and
mov
jbe
(bad)
mov
jnp
cli
outsb
arpl
ljmp
mov
gs
fildl
sbb
call
inc
lds
cmc
ret
push
cmpsb
or
sbb
xchg
iret
(bad)
ret
lea
popa
imul
adc
mov
cltd
mov
pop
sbb
sar
push
es
mov
xchg
mov
mov
cltd
aad
imul
fnop
test
movsb
divl
mov
xchg
xchg
les
mov
inc
and
lds
mov
lods
jge
ret
cmpsl
pop
orb
cwtl
push
and
lret
mov
stos
lds
mov
sub
int3
add
add
push
rep
pop
jecxz
mov
iret
pop
mov
add
mov
mov
stos
enter
jne
ss
sarl
mov
lcall
add
(bad)
sub
mov
lea
mulb
(bad)
mov
xchg
outsb
dec
pop
jp
mov
push
pushf
addr16
stos
jmp
sti
add
add
in
arpl
imul
sub
lret
cmp
adc
imul
cwtl
xor
in
shll
fs
xchg
cmp
data16
ret
mov
add
mov
das
add
or
les
mov
mov
lds
jns
mov
jge
sbb
lahf
cmp
decb
push
sti
rclb
or
lahf
jle
les
(bad)
adc
and
push
call
xor
in
and
clc
xor
lret
pop
les
jnp
sub
fists
stos
gs
jl
mov
ret
sahf
ror
(bad)
sub
push
fdivrl
mov
stos
sarb
sahf
mov
lcall
cs
pop
sbbl
jg
shll
push
xchg
les
cltd
outsl
ljmp
movb
(bad)
xchg
ret
lret
shll
mov
sub
clc
pop
int1
fldenv
and
out
sub
int3
cmpsb
into
aaa
stc
inc
mov
mov
fsts
movb
mov
lods
sbb
inc
mov
sub
test
imul
into
jns
adc
dec
pop
or
loop
in
xchg
xchg
sub
push
jb
xor
ljmp
mov
inc
lea
dec
lods
insb
push
cmp
rolw
int
arpl
inc
push
cld
popa
lret
lret
test
mov
fisubs
adcl
arpl
(bad)
jmp
aas
xchg
pop
cmpsl
sub
sbb
jb
mov
xchg
orl
(bad)
shlb
mov
cmp
pop
push
cli
test
cltd
add
rcl
or
jno
or
mov
sub
enter
repz
jno
or
stos
adc
pop
mov
inc
cli
fistps
(bad)
cmpsb
stos
mov
push
js
mov
add
mov
scas
lret
int
jl
jns
jno
mov
movntps
cmp
mov
into
scas
andb
cmp
push
inc
or
outsl
push
lock
test
ja
mov
adc
dec
or
fwait
or
into
lret
xchg
(bad)
fwait
or
pop
scas
rorb
sarl
mov
ret
cmpsb
ret
mov
jmp
fst
es
jo
or
leave
sbb
and
mov
into
mov
xor
stos
xchg
xor
pushf
mov
iret
movsb
xlat
jecxz
stos
es
rcrl
stos
pop
leave
and
dec
mov
mov
mov
cmp
push
mov
data16
outsl
fsubl
ja
scas
into
mov
outsb
cmpsb
add
jae
sub
dec
cs
mov
test
addl
adc
pop
push
mov
cmp
pop
addl
dec
jnp
mov
xchg
fsubrp
les
xlat
lock
shrb
test
jnp
iret
ret
add
push
and
mov
lods
lcall
pop
and
lods
imul
movb
jnp
dec
sahf
dec
test
cmc
fstpt
add
pop
lods
nop
repz
cmp
lret
movsb
repz
push
push
ds
push
cwtl
mov
dec
leave
xor
andb
out
push
mov
lcall
jae
pop
enter
mov
outsl
lcall
fcoml
lock
sub
lret
enter
adc
mov
inc
xor
sub
or
and
mov
insb
testl
adc
or
mov
(bad)
stos
sahf
xor
add
ret
xor
outsb
les
sbb
nop
movsl
imul
je
(bad)
jg
mov
dec
loop
cltd
pop
lret
jbe
(bad)
mov
cs
mov
stos
mov
mov
jnp
movsl
xor
lcall
push
out
dec
sub
mov
js
cmp
lret
mov
add
stos
enter
lds
jmp
int3
sbb
add
int
insb
mov
mov
imulb
dec
mov
dec
enter
andb
adc
xchg
mov
