mov
sub
mov
jle
cmpsl
mov
add
(bad)
in
jae
sbbb
mov
pop
jns
jmp
daa
sub
jge
xchg
or
loop
in
adc
and
shl
outsb
mov
fucomi
mov
sarl
dec
dec
push
adc
int
mov
cmp
jmp
or
xchg
and
mov
mov
push
push
adcl
and
inc
test
adc
scas
adc
addl
fistl
std
jnp
ret
pop
or
and
je
jecxz
sbb
ficoms
mov
addl
cmp
mov
gs
cwtl
xchg
fidivl
mov
adc
add
insl
aad
(bad)
cmp
push
pushf
out
imul
xchg
out
repnz
sbb
jecxz
push
mov
dec
xchg
mov
xorb
test
sub
repz
push
adc
test
fs
add
mov
mov
mov
mov
stc
notb
or
xchg
xor
addr16
sub
call
pop
and
fiadds
in
sahf
push
dec
stos
and
adc
mov
mov
andl
lret
jp
rcrl
pop
scas
sub
jl
mov
hlt
fdivrl
int
add
fisubrl
sub
cli
lds
(bad)
rorb
adc
and
aam
inc
mov
sti
mov
lods
cwtl
jo
(bad)
daa
nop
xlat
xor
divl
mov
mov
or
outsb
in
decb
sub
push
mov
sbb
jno
pusha
inc
sub
fxch
popa
stos
cmp
faddl
mov
pop
js
sbb
roll
mov
xchg
add
sub
xchg
fldl
xchg
mov
daa
stc
pop
adc
mov
jp
xchg
sahf
pop
or
and
sub
movsb
(bad)
or
push
jns
sub
push
cmp
sbb
cmp
aad
in
int
shll
nop
dec
or
int1
lea
lock
int3
(bad)
mov
lods
dec
bound
push
dec
out
sbb
sbb
jno
mov
pusha
aas
fs
ljmp
out
lahf
push
shlb
sub
sbb
xchg
sarb
adc
push
scas
repnz
and
mov
jb
push
nop
pop
and
pop
in
mov
rcrl
shlb
fwait
inc
jb
pop
xor
jle
xlat
sbb
dec
mov
mov
fldt
shrb
push
nop
insl
clc
fistpl
sbb
loop
les
or
jno
fdivr
add
push
sub
loopne
mov
int3
sub
arpl
jo
fbld
inc
adc
fstpt
lods
arpl
adc
lea
out
pop
jmp
call
or
and
jl
push
das
cltd
pop
sbb
jns
pop
cmpsb
jb
push
or
sbb
mov
rorl
call
pop
ja
jo
out
sbb
push
sbbb
bound
xlat
or
cwtl
mov
jl
iret
sub
xor
ror
(bad)
cmp
fnstsw
loope
sub
sbbb
push
negl
xchg
pop
mov
cmp
ja
andl
xor
mov
xchg
add
stos
mov
add
xchg
or
pop
inc
hlt
push
mov
cld
xor
out
dec
pop
push
repnz
test
nop
or
xor
int1
dec
fwait
mull
mov
sbb
std
andb
xor
(bad)
ja
addr16
or
sub
mov
test
ljmp
pop
sub
push
les
mov
clc
adc
inc
push
popa
cmp
dec
fxch
fildl
push
add
mov
rcll
push
loop
dec
stc
ja
call
rorl
mov
mov
sbb
fs
mov
stos
cli
fwait
je
int1
push
add
aam
jb
cld
xchg
sbb
in
xchg
mov
call
pop
(bad)
pop
fstps
xchg
or
cli
mov
out
test
out
sub
cmp
repz
(bad)
and
jge
inc
loop
mov
loop
(bad)
xchg
je
lods
imul
ljmp
inc
xor
cltd
and
adc
cmp
dec
decb
xchg
sub
mov
mov
ja,pn
jge
inc
nop
ret
mov
add
lods
fdivs
ja
lret
xor
int3
sbb
push
xor
sar
push
jp
mov
mov
imul
stos
mov
xchg
pusha
test
jmp
mov
jp
xor
rorb
and
push
cmpl
cltd
pop
leave
imul
lcall
jne
xchg
shll
mov
push
and
(bad)
mov
leave
lea
sbbb
sbb
xor
jle
or
insl
imul
add
and
mov
xor
cltd
sarb
inc
adc
dec
cmp
and
nop
mov
in
add
mov
sahf
fs
pop
inc
fcom
movb
aad
dec
data16
jl
xchg
jnp
pop
sub
or
adc
test
and
push
lret
mov
cli
xor
push
sub
daa
dec
aad
mov
out
bound
mov
mov
sbb
xchg
pop
(bad)
idivb
adc
jge
faddl
insb
loop
loope
push
mov
(bad)
push
or
int
leave
test
pop
cmp
xor
sub
xchg
mov
(bad)
pop
movsl
push
inc
scas
xchg
mov
loop
and
or
cltd
test
out
pusha
add
xchg
ljmp
iret
add
xchg
in
lcall
ja
jp
sbbb
jecxz
inc
and
inc
cs
fs
dec
mov
nop
lea
rclb
outsb
(bad)
jae
enter
test
inc
pop
sub
and
push
lea
sar
xor
adc
jecxz
stc
and
inc
(bad)
sub
adc
fmull
mov
xor
push
(bad)
mov
xor
cltd
shll
inc
ss
sbb
jo
rcrl
dec
adc
hlt
movsb
cmpsb
mov
jne
ret
adc
pop
pop
ss
inc
shll
push
jecxz
xchg
adcb
cmp
mov
shr
dec
jbe
subl
shll
gs
add
fucom
loopne
mov
js
lahf
push
jb
ljmp
pop
btr
outsb
sbb
or
ds
sahf
pop
nop
xchg
xchg
sub
imul
mov
xchg
sub
nop
and
mov
pop
mov
leave
dec
mov
adc
sub
jae
inc
movsl
inc
xor
pop
fstpl
jle
add
xchg
cmp
sahf
sub
sbb
xorl
xor
jo
hlt
jae
out
imul
arpl
dec
les
(bad)
popf
jb
cmp
add
inc
loop
popa
dec
push
push
pop
loop
push
aaa
(bad)
int1
std
mov
enter
shll
adc
mov
ret
sub
and
sub
dec
pusha
test
jns
addr16
loopne
int1
iret
int
or
push
pop
xor
aad
sbb
pushf
lods
cmp
fistps
cli
pop
inc
lods
movsb
out
xor
fs
loop
adc
orl
mov
adc
test
and
inc
arpl
mov
int3
mov
jmp
aas
sub
test
mov
cmp
cmpsl
xor
or
std
lds
movsb
mov
test
dec
and
pop
dec
sti
shr
jle
repnz
or
push
pop
mov
notb
mov
and
subl
or
movsb
jl
lds
mov
jae
push
sbb
(bad)
xlat
add
adcb
loopne
mov
push
inc
in
lock
push
dec
pop
jmp
imul
push
scas
mov
je
push
pop
cmp
sbb
adc
outsb
xor
pop
inc
in
loopne
mov
das
mov
jnp
xchg
sub
lea
jg
inc
push
in
lret
ljmp
in
aam
pusha
xchg
pop
loope
xor
rolb
sub
jbe
shll
scas
lock
sahf
mov
sbb
mov
sub
mov
ret
imul
cmc
jns
push
add
cmp
js
sub
jecxz
xchg
lret
out
dec
scas
arpl
insl
hlt
mov
iret
push
insl
aam
and
ss
sbb
repz
push
sbb
jns
std
mov
fwait
cmp
pop
pop
outsb
(bad)
es
hlt
pop
fildl
fs
daa
js
mov
jle
stos
jg
repz
push
rolb
pop
test
inc
loop
imul
aad
outsb
