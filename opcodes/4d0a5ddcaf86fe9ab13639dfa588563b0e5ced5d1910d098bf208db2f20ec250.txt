outsw
jl
popa
mov
cltd
pop
or
sarb
cmpsl
pusha
push
mov
xchg
dec
fnsave
pop
es
lcall
in
test
mov
gs
jnp
shlb
rcll
imul
push
xchg
dec
add
sub
mov
jmp
push
fsubl
inc
aaa
in
pop
mov
and
divw
mov
adc
push
ds
andb
mov
movsl
mov
xor
mov
sbb
aaa
sbb
pop
movsb
daa
lock
imul
arpl
aaa
js
jecxz
outsw
add
mov
and
pop
pop
pusha
shll
mov
sar
outsl
mov
sbb
jle
xor
adc
imul
push
mov
xchg
aas
mov
insl
sahf
mov
mov
xchg
cmp
pop
pop
mov
cmp
mov
pop
ds
lods
xchg
loopne
(bad)
pop
or
jl
fnstcw
mov
sub
ss
dec
sahf
pusha
jb
movsb
dec
decl
jb
jl
ret
mov
cmp
push
push
je
arpl
jb
inc
out
sub
push
mov
cmpsl
data16
cmp
pop
add
nop
js
or
cmp
sub
pop
or
jnp
dec
mov
subl
pop
(bad)
popa
sbb
adc
or
push
mov
mov
sarb
lcall
aas
adc
pop
clc
adc
mov
mov
fdivrs
shl
mov
outsl
cmp
sti
mov
fsubs
ss
aam
dec
jle
push
xor
ss
dec
in
or
and
jnp
repz
pop
lret
jo
xlat
cmp
jmp
jp
out
nop
mov
or
repz
pop
mov
mov
arpl
jle
(bad)
mov
cmpl
mov
cmpsb
in
sub
and
outsl
in
sub
fisttps
enter
cmp
mov
gs
xchg
cli
(bad)
push
movsl
mov
cmp
fsubrs
in
mov
loope
push
stos
pop
es
ljmpw
push
stc
stc
out
xchg
cmp
xchg
sub
mov
arpl
mov
and
stos
mov
jge
mov
std
cmp
jge
push
sub
mov
jo
cld
mov
pusha
lods
cmp
mov
add
iret
or
out
inc
stc
sub
ja
cmp
pusha
ss
jno
add
mov
and
jno
fisubl
fs
jl
mov
js
cld
movaps
out
movsl
aaa
imul
stc
rclb
loopne
mov
push
inc
(bad)
mov
pusha
in
xor
and
jb
xor
sub
and
mov
ja
pop
mov
and
mov
or
divl
jle
test
lds
cmp
mov
pcmpeqd
addr16
loopne
pop
insl
xchg
push
test
sbb
add
sbb
pop
inc
add
cmpb
inc
xor
js
and
stos
mov
movsb
and
mov
xchg
scas
add
ds
and
nop
adc
out
in
movsb
lcall
int1
xor
out
popf
mov
xor
pop
dec
add
dec
shrl
mov
sbb
cmp
test
mov
mov
or
fwait
rcrb
andb
dec
repz
cwtl
sbb
jns
fistps
jns
fucomi
mov
ja
call
ficomps
insl
std
into
mov
cmp
emms
test
xor
cmp
inc
jno
cli
enter
adc
(bad)
dec
pop
ret
mov
sahf
mov
add
movsb
fsubs
aaa
xchg
mov
sbb
pop
jp
dec
jae
shlb
scas
cwtl
sub
frstor
in
les
cmp
loope
sti
xor
mov
test
cltd
mov
addr16
mov
mov
adc
jecxz
popa
dec
xchg
lcall
loop
sub
sub
mov
xor
mov
stc
stos
and
jno
adc
cmp
pushf
es
sub
loopne
popf
jns
leave
fildll
cli
int3
mov
jg
pop
std
and
mov
arpl
jle
push
sti
sub
adc
and
push
cmpsl
or
inc
dec
dec
xor
nop
jnp
xor
sbb
push
xor
cmp
mov
xchg
pop
pop
cmp
into
and
dec
inc
xorb
mov
ja
clc
sub
out
push
lea
inc
sub
sarb
int
xchg
push
add
push
and
arpl
rorb
sbb
dec
mov
mov
sub
pop
bswap
push
pop
or
mov
xor
movsl
dec
push
ja
jnp
jb
sub
sbb
insl
shlb
jmp
mov
inc
adc
cmp
lods
inc
add
arpl
push
sbb
jle
add
push
push
sahf
jge
je
fwait
dec
insb
pop
lods
xor
int1
bound
sub
addr16
xchg
int3
jl
mov
out
ljmp
jge
pop
mov
cld
fisttps
inc
and
aad
jae
push
ss
jns
jns
cmp
or
push
xor
cmp
int3
fdecstp
inc
movsl
or
jns
xchg
mov
cltd
test
sub
movsb
xor
push
jmp
push
cld
push
in
aas
cltd
inc
mov
add
cmpsl
cmp
inc
xor
outsb
popa
jno
cli
ds
xlat
jge
xor
cmpsl
xor
push
dec
xchg
popf
push
mov
rcrb
xchg
outsw
out
jmp
enter
into
je
shlb
mov
sub
xchg
out
sub
push
clc
aas
xchg
push
outsb
pop
mov
jnp
fxch
xor
adc
cltd
cld
ja
jno
cmp
push
call
pop
mov
pop
imul
add
imul
bound
aaa
(bad)
mov
mov
cltd
mov
mov
mov
cmc
dec
ret
dec
adc
fwait
pop
mov
inc
xchg
aad
clc
xor
js
cmp
sub
add
inc
xor
and
jb
daa
packuswb
ffree
in
mov
mov
les
lods
clc
sbb
dec
mov
xlat
xchg
pop
cs
outsb
ds
jle
cmp
jg
leave
jl
dec
sbb
pop
in
cld
mov
fistps
nop
add
clc
in
sub
xlat
js
mov
out
int3
jl
xchg
sub
out
mov
inc
push
mov
xor
jno
nop
fmuls
aaa
outsb
bound
dec
and
pusha
addr16
mov
ja
jge
adc
enter
or
insb
sub
(bad)
jmp
in
add
in
lods
repnz
mov
and
dec
sub
mov
daa
in
fiadds
arpl
movsb
mov
out
mov
cmp
mov
or
jmp
mov
mov
(bad)
sti
sub
cmp
cmp
insb
mov
popa
cmp
mov
fildll
jno
iret
int3
sbb
xorl
xchg
in
ds
ret
pop
mov
loope
pushf
mov
in
mov
inc
xlat
adc
xchg
test
xor
fdivrl
cmp
push
aas
arpl
loope
push
xchg
inc
mov
pop
mov
ss
push
fdivr
data16
lods
and
int
dec
xlat
jnp
arpl
insb
xchg
jnp
cmpsl
xchg
cmp
test
cmp
(bad)
cld
or
addb
push
js,pt
les
or
in
leave
or
inc
lcall
adcb
pop
jnp
mov
mov
cmp
std
dec
aas
push
jb
xor
cmp
divl
stc
mov
mov
insb
pop
int1
xor
in
mov
mov
fsubrp
sub
addr16
movsb
(bad)
jl
jae
test
xchg
mov
mov
int
pop
jne
fadd
pop
mov
pop
mov
in
fxch
int
jns
cmpsb
and
nop
mov
and
cmpsb
mov
jne
xor
mov
sub
cld
in
xchg
je
mov
ret
push
pop
inc
or
popf
loopne
aas
aaa
and
insb
pop
cmp
pop
aaa
adc
mov
xor
inc
gs
out
es
popa
lret
js
das
ficoml
mov
xchg
xchg
std
inc
cs
xor
jbe
lea
mov
add
out
lds
fmuls
jp
incb
mov
leave
xor
sbb
lret
mov
cmp
sub
mov
popa
fwait
pop
add
mov
lods
