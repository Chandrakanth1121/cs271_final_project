dec
test
mov
popa
xlat
push
movsb
jne
hlt
inc
mov
xchg
aaa
inc
add
adc
or
xor
xorl
notb
pop
jae
scas
sbb
andb
test
pop
xchg
out
ljmp
pop
jl
fs
and
add
pusha
adc
pop
sysexit
jp
in
cmp
pop
leave
push
lea
(bad)
xor
jecxz
add
or
sbb
call
arpl
lods
lods
jne
les
mov
xchg
test
popa
pop
outsb
adc
outsb
dec
andb
scas
mov
lret
mov
insb
mov
add
in
dec
mov
jo
add
xchg
ss
jle
ljmp
repz
mov
test
out
mov
add
sub
jb
jae
mov
(bad)
lea
negl
cltd
scas
int3
add
add
jmp
cld
push
mov
loopne
push
xor
cmp
pop
dec
mov
fdivl
jle
cmp
rcll
test
xchg
dec
mov
xlat
fwait
int
ss
sarl
test
lret
loopne
pop
xchg
sub
sbb
movsb
or
mov
jae
mov
mov
and
out
in
mov
nop
mov
call
and
lea
lcall
lret
adc
jmp
sbb
dec
xor
dec
mov
lock
mov
inc
adc
insl
rorl
xchg
pop
jle
add
or
mov
add
aam
dec
aaa
movsl
push
stos
adc
xchg
or
xchg
sub
ret
in
ljmp
test
pop
jge
es
(bad)
add
in
pop
les
cmp
imul
xor
xor
dec
data16
(bad)
sbb
in
cmp
push
push
cmp
xchg
dec
loope
popa
and
in
dec
lcall
test
xlat
add
loopne
or
adc
lods
divl
pop
pushf
mov
pusha
fxch
adc
xchg
mov
aaa
orl
mov
dec
popf
mov
mov
push
int3
dec
call
xor
push
xor
mov
cmpsb
jp
add
xlat
cmpl
cmp
sti
and
sarb
cs
shlb
add
push
adcb
or
and
loop
push
inc
ja
pop
fsubrl
sbb
int1
pop
sarl
inc
xor
lret
mov
test
add
hlt
sahf
push
ja
dec
out
insl
and
fcoml
inc
lret
push
push
adc
cmpsl
loopne
xchg
inc
je
int3
repnz
ja
push
jg
jb
scas
cs
repz
outsb
add
lea
add
mov
pop
es
(bad)
stc
ss
insb
sarb
mov
hlt
xchg
sbb
es
ljmp
gs
es
pop
in
xchg
add
sbb
ret
jnp
sub
dec
push
xor
inc
add
test
fs
aad
arpl
sbb
cmpsb
pop
cmp
mov
leave
push
cmc
xor
outsb
pop
lcall
pop
and
xchg
mov
xor
lea
sbb
or
cmp
adc
fildl
adc
sbb
push
mov
adc
pop
mov
test
jg
imul
mov
push
xchg
mov
xor
adc
test
mov
xchg
cmp
adc
mov
xor
out
ds
inc
mov
imul
pop
jl
xor
xchg
pop
pusha
push
sbbl
jno
mov
sub
pop
inc
inc
out
imul
sub
xor
and
(bad)
fwait
(bad)
push
xchg
dec
lcall
mov
xchg
nop
movsb
push
jge
in
push
sahf
mov
mov
push
dec
jge
and
xchg
int1
xorb
push
and
mov
push
lret
test
cmp
xchg
psubb
test
pop
dec
inc
fists
inc
repnz
int3
in
push
add
fs
lds
or
and
imul
mov
sub
sbb
pop
jge
ljmp
std
cmp
les
out
lahf
in
test
jns
das
fbld
call
shll
or
bound
into
add
imull
pop
sahf
add
jge
shll
hlt
in
out
lds
inc
repnz
push
jg
dec
mov
mov
je
mov
leave
mov
addr16
enter
mov
push
add
mov
adc
cld
xchg
inc
sbb
into
mov
inc
or
and
mov
sahf
adc
lea
insl
mov
mov
jb
pop
int
lea
dec
mov
cmp
testb
pop
pop
cmp
jecxz
lret
bound
mov
pop
mov
add
dec
xchg
inc
test
(bad)
or
lcall
fdivl
outsb
out
mov
js
loop
sbb
dec
cli
pop
test
pop
stos
xchg
and
mov
ret
in
and
mov
ds
cmpsl
adc
(bad)
or
data16
rcr
out
add
or
jl
es
bound
pop
lea
and
rorl
or
mov
mov
fildl
add
cmp
or
add
mov
sub
pop
mov
mov
or
(bad)
cld
cmp
loop
xor
and
add
cmp
pop
mov
or
sbb
jl
or
ror
or
and
push
pop
insl
push
push
xchg
or
hlt
test
repnz
je
ja
push
shrb
push
mov
out
and
inc
sbb
in
iret
xchg
enter
gs
test
mov
(bad)
mov
pusha
add
jo
int3
ja
sarb
xor
data16
pop
adc
xor
xor
enter
movsl
js
call
sbb
xchg
popf
dec
xor
sbb
rcll
or
dec
js
mov
mov
lods
dec
ljmp
jmp
push
xor
ret
mov
lahf
int
out
sbb
add
inc
jae
mov
mov
dec
adc
outsb
int
adc
sbb
or
mov
jp
cmp
std
jmp
dec
scas
push
repnz
pop
jbe
dec
push
dec
push
loope
testl
call
popf
ja
push
push
arpl
pusha
jbe
pushf
in
xor
push
or
cmc
xor
hlt
loope
out
out
jge
popf
or
das
mov
xchg
jae
push
dec
dec
adc
fwait
jmp
cli
cli
add
mov
cmp
xchg
divb
es
mov
(bad)
fdivs
insb
cmp
xor
stos
scas
cs
or
push
mov
xchg
leave
mov
int3
into
mov
sbb
jnp
inc
sbb
mov
out
andl
sbbl
xchg
(bad)
inc
stos
jge
add
push
movsldup
imul
inc
test
repz
cmpsl
movsl
loopne
lods
jle
aas
mov
sti
jnp
or
dec
mov
stos
gs
data16
cmp
(bad)
add
stos
scas
cs
cmp
add
aam
pop
sbb
rcrl
inc
mov
lahf
pusha
and
cmp
mov
cmpsl
mov
arpl
dec
cmp
sub
movsl
cld
sub
int3
cltd
lds
out
out
(bad)
xor
inc
loopne
dec
roll
in
test
xchg
andl
cmpsb
repz
xchg
popa
(bad)
imul
cmp
jb
fldcw
jp
ljmp
push
mov
push
rclb
arpl
cli
imul
(bad)
movsl
out
subb
(bad)
sub
xor
aam
sbb
mov
lret
ret
(bad)
filds
mov
jbe
jmp
xor
jns
shlb
sbb
rorb
loopne
sti
lock
cwtl
bound
clc
in
stos
jp
mov
orb
(bad)
mov
cmp
dec
jmp
outsl
scas
ficoms
jno
cmp
aaa
fmuls
and
or
flds
repnz
imul
mov
insb
mov
cmp
aaa
xlat
xchg
push
and
cmpl
jmp
sbb
(bad)
popf
nop
mov
mov
data16
es
and
out
ljmp
mov
and
imul
fldcw
pop
je
or
jae
inc
adc
testb
insl
or
push
sbbl
cld
popf
aas
add
ret
(bad)
dec
arpl
xchg
lds
nop
mov
notb
enter
call
or
imul
leave
pop
ja
jne
sbb
dec
fldt
das
fistpl
xor
and
mov
and
adc
popa
mov
inc
xor
pop
pop
fistl
xchg
ja
