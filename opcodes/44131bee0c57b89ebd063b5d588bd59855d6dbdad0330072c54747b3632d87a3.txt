pusha
loopne
add
add
add
add
add
add
add
add
add
add
lea
add
insb
push
push
add
xor
xor
xor
aas
add
add
add
sarb
lcall
aas
xor
xor
xor
ret
aas
lcall
aas
lcall
aas
xor
xor
xor
ret
aas
lcall
aas
xor
xor
xor
sarl
xor
xor
xor
jecxz
lcall
aas
lcall
aas
xor
xor
xor
sarl
add
add
add
loopne
add
add
add
loopne
xor
xor
xor
sarl
xor
xor
xor
ret
aas
lcall
aas
add
add
add
add
or
add
adc
add
call
enter
or
push
fidivrl
mov
int
push
jge
xchg
xor
movsb
push
outsb
add
shll
and
jne
jmp
dec
cmp
aaa
push
and
repnz
push
dec
rorb
xchg
mov
cmp
addr16
(bad)
(bad)
mov
mov
lea
mov
(bad)
adc
rol
stos
popa
repz
push
popa
push
bound
fmuls
mov
sbb
enter
mov
js
movsb
pop
dec
das
add
cs
cmp
xchg
jo
gs
aaa
insb
dec
pop
push
mov
sbb
jp
(bad)
out
jmp
push
(bad)
lods
cmpsl
mov
fs
add
shll
and
addr16
(bad)
xor
jae
xchg
inc
push
in
jmp
add
cmp
xchg
cmp
cmp
jnp
je
and
bound
popf
out
mov
mov
lea
call
push
int
int1
or
insl
lods
sbb
cli
pop
xchg
mov
test
xchg
add
rcll
popf
test
adcl
push
int1
aam
lock
jne
out
dec
jo
(bad)
cld
sub
je
fwait
jbe
test
xlat
sub
dec
sub
in
ror
shll
jle
pop
ljmp
test
test
jg
repz
shrb
scas
std
ficoml
divl
or
xchg
push
cmp
lea
test
or
in
outsl
fisubrl
popa
pop
inc
in
pop
inc
and
outsb
push
(bad)
in
fldl
dec
outsl
push
cmpsl
xor
push
movsl
fs
sti
xchg
shlb
sbb
aad
fildl
rcr
inc
push
jns
add
adc
xchg
cwtl
jmp
loop
outsl
(bad)
or
fs
inc
sub
inc
jmp
mov
pop
mov
iret
cmp
mov
loop
inc
cs
hlt
push
ret
cmp
in
fsubr
mov
or
loope
dec
ret
adc
cmc
xor
je
out
xchg
xor
cli
into
cli
sub
fsubrs
enter
and
mov
fsubrl
push
les
lea
loop
(bad)
pop
and
jecxz
pop
and
mov
(bad)
out
xchg
xchg
imul
hlt
inc
xlat
cltd
or
cmp
or
xchg
and
out
xchg
push
sbb
pop
xchg
test
add
add
push
aaa
cmp
lods
cmp
xor
in
xchg
cmpsl
mov
jmp
js
mov
stc
nop
pop
(bad)
shl
xchg
(bad)
sub
jecxz
sub
jae
js
jle
add
mov
fwait
jmp
dec
int
lds
adc
jne
push
inc
enter
std
jnp
aad
shlb
(bad)
sbb
dec
data16
sub
loop
push
push
and
and
out
jnp
stc
jns
shll
mov
enter
mov
sub
inc
mov
insb
das
pop
adc
push
inc
sbb
int
das
jle
sbb
je
cwtl
jo
call
fs
lcall
sbb
jp
data16
pop
je
xchg
out
push
sbb
and
das
mov
xor
pop
xor
in
shll
std
xchg
xchg
nop
cmp
scas
sarb
clc
mov
nop
xor
sub
lods
sbb
dec
jns
out
out
repz
dec
test
sub
in
add
xor
adc
adc
mov
loop
(bad)
add
cld
sarl
add
or
inc
lea
xchg
int1
cmp
aaa
cltd
sub
jle
repnz
fs
jg
out
loopne
adc
leave
and
mov
inc
and
sbb
es
(bad)
sub
sahf
out
pop
dec
and
mov
push
add
adcb
and
mov
or
notb
and
inc
xor
popa
inc
(bad)
lret
ret
cmp
sbb
(bad)
jp
inc
pop
(bad)
sbb
dec
cwtl
jno
sti
fisubl
or
pop
cmc
lods
cmc
pop
lods
push
jae
add
frstor
sub
aas
push
jns
test
inc
je
jmp
mov
cwtl
lret
test
cltd
or
das
test
add
mov
sbb
testb
cmp
adc
sbb
mov
add
cmp
push
adc
sbb
testb
cmp
mov
pushf
mov
test
decb
mov
test
loope
push
cmpl
mov
ret
addl
(bad)
sbb
mov
fwait
adc
add
cmp
and
fwait
sbb
leave
lfs
in
sub
pop
push
cmc
push
out
testb
adc
pinsrw
or
mov
daa
xor
pop
or
adc
pinsrw
jg
jb
jle
push
push
imul
fs
pop
shlb
jb
jle
push
pop
imul
es
jb
jle
push
push
imul
fs
pop
(bad)
jb
mov
push
mov
add
(bad)
mov
mov
mov
outsl
mov
movsl
aam
mov
mov
addr16
movsl
int3
lahf
mov
mov
jg
pop
movsl
les
das
mov
ja
dec
popa
adc
dec
popa
cld
insb
adc
dec
or
push
mov
adc
dec
or
push
test
adc
dec
inc
jne
push
subb
pusha
mov
jne
push
fsubrs
push
pusha
xchg
dec
adc
or
jp
inc
pushf
insb
mov
adc
dec
adc
jp
inc
popf
insb
cmpsb
insb
push
pusha
mov
jne
push
pushf
insb
repnz
add
jne
push
hlt
in
mov
arpl
repz
mov
int
loope
loope
in
imul
clc
mul
xor
int
loope
loope
in
data16
mov
testl
(bad)
clc
mul
lea
notl
int
loope
loope
in
imul
clc
xchg
sub
outsb
out
and
sub
dec
iret
repz
jecxz
out
mov
out
cmc
mov
cli
jecxz
jecxz
out
cli
les
and
or
lods
iret
scas
jecxz
jecxz
out
int1
les
and
dec
cmc
test
mov
out
movsl
les
and
push
cmc
lods
iret
test
pushf
in
in
iret
(bad)
test
out
xor
call
fdivp
mov
test
xor
push
call
pop
iret
(bad)
test
stos
(bad)
and
dec
call
xlat
adc
fldl
in
cwtl
jbe
xchg
cmpsl
(bad)
cmpsl
popf
cmpsl
jae
fsubs
fwait
scas
mov
stos
inc
stos
mov
fldt
sbb
pop
lea
lds
cmp
les
xchg
scas
mov
stos
push
lea
int3
mov
scas
mov
and
lds
cwtl
scas
mov
stos
xor
jge
cmp
sub
add
xchg
fldt
mov
repz
loope
fcomi
testl
repz
loope
fucomi
notl
sarb
out
cmp
sbb
rcr
test
sarb
cmp
adc
rcr
test
sarb
pop
repz
mov
jne
addr16
pop
sub
sbb
push
mov
addr16
pop
bound
jno
jge
push
movsl
push
pop
pop
sub
jno
jge
push
mov
addr16
pop
daa
jno
jno
jge
push
mov
addr16
pop
sub
adc
jge
push
movsl
push
push
pop
xor
adc
jge
push
scas
push
push
pop
xor
jno
jge
push
test
addr16
pop
es
jno
shlb
shrl
in
mov
(bad)
imul
sub
test
sbb
imul
sub
