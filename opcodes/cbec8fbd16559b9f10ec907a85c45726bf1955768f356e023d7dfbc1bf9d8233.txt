and
subl
ds
xchg
outsb
dec
mov
sbb
or
and
xchg
add
add
or
ss
ljmp
mov
xchg
stos
push
add
mov
xor
fs
push
lods
push
xchg
call
sub
(bad)
out
jno
pop
addr16
jns
cmp
cmp
mov
mov
out
add
pop
or
jns
and
sub
lods
xchg
shrl
fs
mov
cwtl
sub
adc
add
dec
push
and
jo
mov
gs
cltd
iret
(bad)
call
out
mov
lods
imul
addr16
and
push
cmpsl
add
movsb
aam
fdivrs
test
psllw
mov
xchg
or
mov
pusha
push
xor
dec
cli
sarl
pop
lahf
pop
insl
and
or
dec
xchg
das
lds
loop
pop
call
cmp
stos
xchg
loopne
jmp
mov
and
(bad)
ja
adc
mov
xor
les
call
loop
mov
int3
inc
jp
cli
jmp
cmc
cmp
xchg
jne
pop
shlb
stos
or
fidivs
lea
pop
wbinvd
aad
lcall
insl
mov
push
scas
xchg
fs
mov
jge
push
jl
mov
adcb
dec
ds
mov
and
stos
sub
sub
push
sbb
insl
xchg
in
lods
aad
stos
lahf
inc
lea
or
cli
cmp
outsb
stc
jne
cmp
call
push
(bad)
(bad)
push
(bad)
(bad)
pop
mov
jmp
enter
dec
push
enter
mov
xor
xor
ret
mov
push
and
dec
inc
loopne
rcr
fidivrl
clc
enter
mov
or
cmp
fidivrs
sub
rorb
sarl
(bad)
fidivs
sub
js
sub
push
js
addr16
pop
dec
fidivl
hlt
push
arpl
push
mov
inc
loope
xor
xchg
pop
add
lods
and
cltd
out
xchg
ficoml
mov
hlt
in
insb
mov
(bad)
int1
sbb
xchg
ljmp
or
pop
xchg
push
stc
jns
cmp
popa
fimuls
jb
sub
dec
cs
mov
dec
cld
(bad)
cltd
imul
movsb
lods
dec
xchg
sbb
lods
cs
inc
arpl
movl
push
fisttpl
call
fsubrl
inc
pop
xchg
jns
insb
add
mov
mov
out
aas
dec
mov
mov
fldt
sub
fsubrs
ja
mov
lods
jge
mov
daa
xchg
jle
out
lods
mov
out
jg
lds
mov
aas
loop
push
lea
lods
hlt
pop
dec
out
pop
mov
inc
loop
ficoms
lea
add
pushw
mov
lahf
mov
in
mov
pop
in
fsubs
je
(bad)
stos
shrl
test
push
cmp
daa
movsl
idiv
out
cmp
xor
mov
mov
xchg
repnz
xchg
push
pushf
in
shll
iret
push
aad
sbb
push
pop
bound
rclb
mov
aad
jecxz
cmpsl
aad
aad
pop
cmpsb
out
pushf
jne
mov
test
in
fbld
mov
leave
pop
das
xor
fcomp
das
int
cmpsb
and
push
adc
mov
(bad)
stos
dec
xchg
jl
pop
and
mov
xor
inc
push
es
sub
int3
dec
sub
jl
cmc
xchg
imul
cwtl
cmp
outsb
movsb
addr16
xchg
dec
popf
and
repnz
push
ljmp
repnz
pop
lods
xor
and
jns
mov
mov
js
xlat
test
das
jg
mov
fisubrl
inc
inc
clc
shr
pop
pop
cmp
sbb
aas
push
imul
pop
inc
lret
sub
mov
dec
mov
mov
cs
in
(bad)
loopne
outsl
test
dec
fstpl
dec
push
push
pop
ja
sahf
cwtl
lret
push
popf
out
mov
mov
dec
xor
cmpsl
inc
stos
jl
xchg
sbb
mov
adc
faddl
mov
jmp
ljmp
loopne
xor
xchg
cmc
pop
xchg
out
pop
int1
ret
dec
jl
lcall
lret
aad
mov
mov
ror
mov
aaa
inc
add
ret
movsl
iret
jns
in
fsubl
pop
or
lods
xor
push
addr16
sub
push
scas
lods
cld
lcall
fs
mov
mov
cmp
adc
(bad)
cmp
bound
test
fs
sub
push
fimuls
into
mov
pop
dec
popa
enter
cli
add
or
sbb
adc
fsts
inc
mov
imul
add
dec
std
pop
pop
mov
(bad)
roll
movl
add
scas
mov
mov
fwait
pop
add
and
or
loop
pop
insl
popf
pusha
lock
sbb
cmp
lret
push
mov
loope
int1
enter
fistl
aaa
and
pop
xchg
push
jl
push
add
xlat
cmpsb
push
mov
mov
mov
xor
imul
mov
subl
push
lock
inc
cmp
cmpsb
movsl
add
fcoml
in
jecxz
mov
(bad)
imul
jb
push
loopne
mov
test
rorb
push
faddp
ds
imul
sub
test
add
std
adc
push
das
mov
insl
and
pop
or
or
mov
je
(bad)
popf
or
frndint
jmp
pushf
sbb
ds
aaa
push
inc
or
mov
mov
rcll
inc
mov
lds
fwait
xchg
cld
cmp
insb
int
ret
mov
pop
mov
pusha
xor
sub
or
mov
dec
in
sbb
inc
xor
mov
repnz
popa
cwtl
repz
inc
rol
std
pop
popa
pushf
mov
pop
pop
(bad)
jl
sbb
mov
daa
pop
and
je
ss
fildl
jecxz
out
wbinvd
sarl
push
rcll
int
inc
fmul
push
and
xlat
xor
adc
fldln2
lods
outsb
pop
insb
pop
mov
ret
jo
adc
rorl
inc
jnp
rclb
or
and
jge
fsubl
xlat
inc
pop
lock
cltd
repnz
cmp
inc
loopne
repnz
adc
test
jle
dec
jl
mov
xchg
or
jmp
movsb
shlb
mov
cwtl
sahf
push
fld
dec
dec
pop
and
pop
or
xchg
inc
sub
adc
pop
xor
xchg
mov
sub
dec
or
or
mov
imul
jne
clc
or
pusha
fmulp
xchg
outsl
enter
stos
push
or
xchg
sub
mov
(bad)
cmp
xor
idiv
xor
lahf
jl
cmpsb
in
data16
pop
and
xchg
outsb
cli
cmp
iret
cmpsl
jbe
dec
push
sbb
and
xchg
xor
dec
mov
mov
sub
rcrb
enter
add
jb
into
(bad)
mov
out
adc
and
add
es
cmp
xchg
sti
jne
cmp
outsb
sub
and
xor
test
push
sub
adc
and
sub
and
jecxz
aam
mov
or
or
and
xchg
in
and
adc
add
or
mov
add
rol
loope
sbb
mov
xchg
xor
lcall
movsb
cmp
xorb
mov
sub
or
push
dec
andb
adc
jmp
cmpsb
sub
sub
sbb
cmc
ret
gs
cmpb
sarb
nopl
int
sbb
lea
mov
adc
jge
ret
xchg
push
xor
xor
in
xor
sub
sub
popf
mov
pop
mov
adc
ljmp
(bad)
mov
sbb
repnz
xchg
fwait
lock
(bad)
pop
sbb
push
das
inc
pop
ljmp
stc
insb
movsl
sub
lea
cmpb
cltd
mov
pusha
xchg
push
mov
add
jbe
fistl
std
adc
pop
xchg
test
stos
fildl
jp
sbb
(bad)
sbb
pushw
adc
push
js
and
sub
hlt
cmp
clc
xor
ja
aas
xchg
or
jns
das
mov
popf
or
aad
inc
and
add
movl
push
popa
dec
sub
ret
arpl
and
out
