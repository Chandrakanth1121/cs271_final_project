add
add
add
dec
add
add
add
add
add
add
add
mov
add
sub
push
add
daa
add
add
add
add
add
add
add
add
add
pop
mov
pop
ret
pop
int1
ss
push
xor
in
inc
inc
out
cmp
push
push
mov
int
jbe
xchg
sub
mov
cmpsb
add
xchg
cs
out
js
dec
mov
jo
rclb
repnz
push
movb
lods
lcall
push
fcmovnbe
or
mov
adc
and
jns
push
jge
fsts
add
xchg
jns
repnz
dec
push
xor
mov
gs
and
xor
add
cwtl
sahf
or
in
cmpsl
jl
in
aad
xchg
js
int
cmp
dec
sti
xchg
cmp
cmp
jg
addr16
xchg
fmuls
xchg
mov
stos
fists
push
xchg
mov
int
insl
fsubs
fstpt
push
push
mov
stc
push
sub
adc
xor
pop
add
and
xor
popf
jae
pop
jae
or
test
adc
subb
test
imul
pop
int1
js
xchg
push
and
sub
inc
push
in
inc
xchg
lahf
loope
mov
sub
mov
out
adc
and
jmp
sahf
pushf
adc
pop
mov
scas
dec
inc
stos
lcall
xor
(bad)
mov
mul
mov
adc
push
jbe
mov
adc
jo
mov
jmp
sbb
outsb
cltd
add
dec
mov
cmp
cmpsl
stos
mov
add
insb
movsb
scas
nop
decl
cmp
xor
jb
sub
add
sarb
mov
cmp
int1
gs
mov
pop
enter
lret
stc
scas
adcb
outsb
push
in
ret
loopne
out
mov
or
lahf
cwtl
fs
mov
dec
adcl
and
lods
cmp
shlb
das
test
int
dec
inc
jno
dec
jge
xchg
movsb
adc
enter
mov
popf
sub
or
push
ja
hlt
push
int1
movsl
shl
ds
add
aad
fmull
and
outsb
movsl
dec
mov
xchg
arpl
mov
clc
push
ljmp
adc
mov
insl
cmp
jge
popa
js
mov
xor
idiv
fisubs
cmp
cmp
add
jae
inc
add
outsb
add
int1
jle
fildll
(bad)
pop
idivl
int
outsl
push
pop
jp
lds
xor
sub
mov
das
dec
pop
mov
iret
ds
nop
cs
sti
mov
dec
inc
jp
xchg
sti
gs
mov
mov
mov
pop
push
test
push
leave
test
sub
(bad)
ja
xor
cmp
addr16
dec
rcl
call
add
(bad)
lods
rcr
addb
jle
pop
cli
je
push
xchg
mov
fwait
xchg
pop
mov
add
dec
jne
xchg
mov
hlt
pop
jne
add
and
sbb
dec
rcr
add
add
insb
sbb
mov
xor
jo
or
das
sahf
notb
(bad)
xor
movsl
test
js
inc
fdivs
adc
stos
adc
cmp
sbb
push
xchg
dec
cs
pop
sub
push
outsb
loopne
sbb
adc
(bad)
insl
int3
nop
fnsave
mov
add
out
jmp
dec
scas
jp
push
fisubs
int3
testb
xchg
jge
dec
test
mov
pop
mov
dec
in
xorb
pushf
jge
pop
arpl
aam
jbe
out
dec
mov
lds
outsl
in
(bad)
xchg
shrl
fistl
mov
ljmp
adc
mov
xchg
pop
jle
cld
mov
cmp
and
jle
(bad)
cltd
insl
cmp
pop
pop
pop
mov
mov
lods
data16
cwtl
gs
int
adcl
imul
test
cwtl
mov
sar
push
jle
sbb
ret
shll
int
push
jmp
jecxz
adc
mov
jbe
adc
mov
dec
clc
mov
adc
xchg
mov
mov
xor
js
jne
shlb
pop
cs
cld
cmp
cli
inc
or
mov
fnstsw
lret
sbb
adc
(bad)
lea
daa
sub
adc
dec
mov
andl
sub
pop
stc
pusha
ret
enter
mov
test
pop
and
cli
jmp
movsl
sub
loop
fs
xor
and
imulb
jge
aad
das
test
ljmp
sbb
lds
adc
aas
mov
std
cli
inc
dec
cmpsb
pop
test
push
sub
add
push
or
int3
and
mov
movsl
mov
sub
push
(bad)
mov
scas
pop
ja
cmpsl
repnz
jp
adc
outsb
pop
mov
shlb
sbb
imull
aam
cmp
scas
pop
inc
pop
fdivrl
sub
add
dec
add
out
add
jns
add
push
pop
add
add
add
push
xlat
add
movsl
lret
add
in
out
add
sub
add
pushf
mov
add
outsb
pop
add
mov
add
rolb
aaa
and
add
cld
add
push
dec
add
push
daa
add
dec
mov
add
add
push
add
pusha
lds
add
add
push
mov
add
sub
add
add
ret
add
add
and
add
or
add
inc
pop
add
into
push
add
sarb
(bad)
add
out
add
push
inc
add
lock
add
test
add
mov
add
mov
add
int3
das
add
or
add
add
lcall
add
add
xor
add
cltd
add
es
push
stc
add
xchg
add
cld
rolb
add
add
mov
loop
add
mov
add
mov
sldt
arpl
add
dec
pop
add
fisubrl
add
add
idivb
add
jo
add
hlt
inc
add
xchg
add
shll
test
scas
add
xchg
add
sbb
add
pop
add
or
add
add
ds
add
add
add
cltd
inc
add
xor
mov
add
ds
add
add
inc
stos
add
pcmpgtw
add
nop
add
sub
add
add
pop
mov
add
add
inc
push
add
sbb
add
add
insl
popa
add
inc
mov
add
push
add
popf
in
add
add
fistl
add
jne
add
(bad)
xor
add
add
add
push
popa
add
cmp
add
add
pop
pop
add
cmpsb
add
add
add
aaa
add
xchg
scas
add
aam
add
mov
add
(bad)
sub
add
add
jecxz
add
ret
add
mov
add
push
fiadds
add
add
xor
add
out
add
xlat
repz
test
add
add
xor
add
cli
pusha
add
out
add
imul
add
insl
add
enter
popf
lock
out
sbb
add
das
add
hlt
or
add
sti
sub
add
xlat
add
adc
add
sub
movb
mov
add
dec
pop
add
cmpb
add
ja
add
cltd
add
mov
add
inc
(bad)
add
ss
push
cltd
add
mov
add
ja
add
push
jb
add
add
imul
or
add
or
add
xor
add
and
cmp
add
popa
add
pusha
cmp
add
ja
push
mov
int1
popa
movsb
cmp
aam
mov
sahf
leave
(bad)
ljmp
xchg
lahf
shrb
sbb
pusha
jp
lds
repnz
scas
test
push
adc
loop
cmp
sbb
dec
mov
adc
cmp
in
jns
pop
inc
or
cld
dec
ja
push
jle
cmp
mov
les
or
push
repz
cwtl
cmc
testl
dec
sbb
or
cli
shr
cmp
jae
das
insl
and
lock
jne
adc
hlt
jb
dec
inc
push
pop
pop
pop
pop
bound
repz
lods
dec
sbb
push
repnz
mov
out
outsb
lret
lds
sbb
