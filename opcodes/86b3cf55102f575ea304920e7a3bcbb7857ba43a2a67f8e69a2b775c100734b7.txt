out
mov
in
call
add
add
adc
mov
in
adc
movl
fcmovnu
iret
hlt
push
lea
push
push
add
dec
mov
sbb
push
push
scas
push
push
aaa
fistpll
push
or
add
pusha
inc
sbb
mov
jo
hlt
fnstcw
mov
or
jbe
in
or
mov
insl
cld
fistpll
insl
(bad)
adc
mov
xchg
outsb
ss
sub
lahf
in
cmpl
jne
call
imul
pop
push
testl
(bad)
jg
fdivl
bound
add
dec
xor
push
inc
push
cmp
mov
jae
or
lea
in
push
add
mov
test
push
add
lock
cmp
jp
lahf
lock
inc
xor
clc
and
pusha
int
add
aas
mov
xor
testb
push
in
push
pop
adc
fsubrs
adc
(bad)
fstpl
fldl
fdivr
mov
in
add
(bad)
int1
mov
fld
(bad)
in
and
fcomip
stc
adc
or
inc
es
mov
test
xchg
rcrb
and
loope
ss
and
jp
mov
leave
ret
(bad)
stc
fistps
or
sbb
(bad)
jns
sti
add
test
jne
xor
ret
ljmp
in
mov
roll
jp
je
push
jne
mov
mov
std
(bad)
(bad)
jle
rolb
roll
add
cld
pop
cmp
out
es
je
test
je
mov
inc
ljmp
ret
ret
add
jecxz
iret
jno
inc
shl
sub
lea
push
leave
add
jne
push
add
push
lea
pop
add
add
das
lahf
loope
jne
sbb
clc
pop
lea
push
lea
mov
add
xor
sahf
movb
pop
sbb
arpl
imul
xor
adc
cmp
ror
mov
clc
cwtl
mov
test
or
cld
pop
adc
push
jle
psubb
or
sbb
dec
rolb
pop
pop
mov
sbb
or
xlat
xchg
fldln2
jge
inc
add
or
imulb
or
inc
cmpsl
movl
adc
add
or
int
xor
push
xor
mov
cs
shr
hlt
mov
lret
or
ret
paddsb
ret
push
adc
dec
arpl
cld
into
das
mov
dec
add
push
or
hlt
inc
lock
fs
lock
lods
and
mov
mov
add
popa
or
ficomps
rclb
cli
in
movl
in
push
add
sbb
fnstcw
or
sub
jne
mov
enter
add
sbbl
add
dec
cld
and
add
sbb
push
stc
push
fsubrl
mov
xlat
sbb
and
(bad)
movsl
mov
or
push
cmpb
add
(bad)
cmc
out
repnz
jne
cmpb
inc
ret
test
outsl
fstp
cli
cmp
jne
or
and
adc
shr
fcmovbe
std
adc
inc
add
adc
add
out
cld
jbe
mov
jne
ds
sbb
shl
cmpsb
ds
mov
je
mov
inc
aas
jmp
sub
adc
lods
data16
mov
aam
lret
enter
les
xchg
or
cmp
add
call
adc
or
loopne
mov
loopne
fsub
fcom
sbb
cmp
aam
and
rcrb
int3
int3
enter
rcrb
(bad)
(bad)
rorb
sbb
mov
or
mov
mov
mov
mov
jge
sbb
mov
mov
and
xor
les
and
xor
int3
aam
pop
enter
add
sbb
lods
repnz
les
orl
test
test
dec
push
stos
or
adc
mov
push
mov
lret
addr16
xor
or
nop
in
fdivr
mov
or
fs
push
xor
fs
push
ret
rclb
mov
enter
pop
enter
pusha
sbb
insl
out
or
insl
out
pusha
xor
fistpl
test
ret
and
addr16
or
call
cltd
popa
aaa
or
sarb
or
inc
shl
hlt
movsl
movsb
dec
jns,pn
or
shll
adc
bound
adc
xchg
push
mov
in
pop
mov
sbb
and
lock
or
xchg
push
or
and
add
sub
rolb
push
imul
test
sbb
mov
add
jg
ret
ret
test
and
mov
mov
adc
mov
cli
fcoml
xor
and
xor
in
shlb
cmp
nop
je
in
xor
mov
adc
dec
pop
sbb
pop
ret
jbe,pn
movsl
cmp
je
cmp
inc
push
xchg
dec
popf
and
mov
and
(bad)
ljmp
outsb
jecxz
inc
ret
mov
mov
or
and
je
test
outsl
or
push
inc
inc
dec
je
or
pop
jne
jne
mov
mov
or
jns
mov
add
mov
enter
(bad)
jg
shr
je
repz
je
mov
mov
and
in
out
jne
push
adc
ljmp
sti
push
aad
sbb
xor
les
(bad)
not
jne
arpl
cmp
clts
adc
add
sbb
dec
pop
out
sarb
lea
jne
add
int1
jbe
jmp
push
ja
loopne
add
push
add
pop
shrb
testb
xor
loopne
mov
rep
dec
jne
lcall
fmuls
sbb
dec
je
imul
jmp
int
xor
leave
pop
sbb
adc
ret
pop
lcall
push
test
daa
daa
daa
pop
push
loopne
fcom
(bad)
insl
enter
sarb
fldt
pop
ds
sub
dec
fsts
pusha
pop
push
fs
adc
testb
inc
push
pop
pop
pop
push
or
inc
fs
and
repnz
int
daa
out
int3
mov
pop
mov
mov
jnp
pop
jg
add
cmp
js
jmp
and
fcmovnu
mov
pop
jl
fstl
sbb
fldl
fsubr
not
pop
add
or
add
xchg
in
(bad)
or
out
lahf
(bad)
adc
js
jecxz
dec
push
jmp
xor
dec
push
push
pop
dec
xor
and
push
add
les
lret
mov
roll
and
xor
int
and
int3
fs
lods
push
inc
int
enter
(bad)
jp
cwtl
cs
xchg
jno
mov
ficompl
pop
cmp
scas
or
mov
mov
push
sub
push
int3
xor
enter
or
les
stos
pusha
sub
enter
mov
ja
mov
mov
xchg
xor
test
jns
and
into
fdivl
adc
push
dec
jb
out
xor
out
ss
sbb
xchg
jnp
push
pop
lods
pushf
add
leave
leave
sbb
push
out
inc
fxch
and
mov
sbb
repnz
in
inc
sub
xchg
push
les
push
fisttpll
aas
int3
int
imul
in
pop
cmp
jbe
ret
std
pop
aas
lret
push
fistps
repnz
and
stos
les
int
sub
add
int3
mov
pop
and
(bad)
or
push
jb
mov
andl
jmp
fldl
jbe
pop
push
dec
ss
cmp
sahf
or
sbb
sub
add
jecxz
inc
lods
int
lret
out
out
in
and
das
sub
cs
or
mov
dec
cs
call
test
and
lds
mov
adc
mov
addb
insl
add
in
and
or
and
mov
cmp
int3
aam
or
xchg
inc
jae
sbb
cmp
xor
hlt
outsb
xchg
dec
dec
xor
fstps
xchg
das
inc
add
gs
xor
lds
mov
in
(bad)
push
inc
mov
outsb
call
leave
sub
insl
or
insb
mov
shrb
mov
sbb
in
xchg
or
xchg
adc
add
nop
xor
int
pop
cli
or
loopne
xor
pusha
mov
or
pop
inc
add
inc
out
pop
stc
cmp
add
add
adc
xor
or
push
stos
sbbb
(bad)
loopne
xor
push
enter
test
