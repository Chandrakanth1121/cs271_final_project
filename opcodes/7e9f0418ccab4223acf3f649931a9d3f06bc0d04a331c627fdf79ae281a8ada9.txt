add
fs
ljmp
lock
shlb
xor
push
rcr
mov
pop
add
clc
gs
lahf
sbb
add
cld
fcom
jbe
js
jle
iret
xchg
cmp
pushf
pushf
out
jno
sarl
mov
push
jno
xchg
mov
mov
push
sub
jp
divl
push
add
push
std
stc
stos
mov
mov
out
(bad)
lods
sar
push
cmp
mov
sub
test
or
adc
int3
xor
shr
leave
push
cmp
rcll
cmp
std
jnp
and
jl
cmp
sbb
shrb
push
fsubrl
xor
push
(bad)
pushf
sbb
xlat
lea
daa
mov
sbb
push
xor
scas
inc
iret
mov
out
adc
insb
cld
dec
mov
movsb
rcrb
mov
daa
int1
clc
dec
dec
add
lcall
mov
mov
ror
mov
movb
add
iret
sub
ds
mov
ret
lret
xchg
test
sbbl
push
mov
scas
fiadds
decl
int
mov
dec
mov
adcb
scas
(bad)
int3
mov
dec
dec
push
sahf
movsl
inc
enter
fistpll
sti
dec
xor
inc
jecxz
sbb
push
mov
push
dec
test
fisubl
repz
(bad)
pop
out
cmp
stos
jge
dec
adc
and
jge
cmp
or
rolb
mov
jle
shl
loope
push
cmp
push
mov
cmp
(bad)
into
hlt
test
lea
fidivrl
mov
outsl
call
dec
(bad)
in
xlat
mov
push
daa
dec
xchg
xorb
int1
int3
int
push
in
mov
inc
mov
inc
cmpsl
nop
mov
pop
and
cmp
cwtl
jp
xor
dec
mov
cs
js
sub
sub
mov
(bad)
jae
push
inc
in
int1
jl
xor
and
imul
xchg
lods
xor
mov
inc
hlt
push
pop
xchg
pop
xchg
imul
jp
pop
mov
into
sar
mov
mov
imul
inc
jne
sbb
push
test
mov
out
cmp
mov
add
mov
sbb
mov
stos
outsb
add
pop
and
fisubs
je
lret
sub
push
mov
js
ret
sti
mov
jno
aas
add
add
aaa
xchg
cmc
dec
mov
jp
leave
clc
fs
jmp
js
lods
xchg
je
or
push
or
rol
push
sub
sti
jmp
in
cld
sbb
sbb
cmpl
and
jmp
sbb
or
aas
mov
pop
sarb
push
imul
rorl
pop
and
cmp
psadbw
jns
divl
iret
sahf
pop
xor
and
cld
sub
mov
inc
hlt
mov
clc
jecxz
dec
fisubl
(bad)
int
stos
cmp
cmpsb
or
and
dec
cwtl
add
push
jg
push
mov
faddp
fs
daa
sti
pusha
mov
out
mov
cld
dec
fidivrs
push
push
pusha
testb
cmp
enter
je
sbb
mov
add
dec
inc
jle
add
imul
loopne
mov
push
sub
in
mov
pushf
movl
cmp
stos
arpl
cmpb
xor
mov
cli
mov
add
int
adc
cld
shll
and
add
inc
test
cmp
or
and
popf
gs
jle
mov
mov
pop
mov
lahf
adc
ds
and
test
inc
xchg
inc
push
test
lea
and
pop
inc
rol
cmp
xor
or
mov
or
or
adcb
cmp
push
ss
jnp
xor
sbb
mov
test
fst
pop
test
jb
mov
cmp
mov
out
mov
popf
test
sbb
mov
cmp
pop
mov
psubd
rclb
pop
(bad)
movsl
xlat
pop
mov
movsl
adc
pusha
push
scas
add
rcl
inc
jae
scas
inc
les
imul
sbb
xor
mov
ficoml
or
dec
jp
cmc
ret
lret
dec
std
imul
pop
sub
or
ljmp
cmp
mov
nop
dec
push
mov
mov
je
popa
dec
mov
push
(bad)
jno
and
in
popf
cltd
push
and
cli
in
data16
daa
pop
dec
insb
mov
mov
mov
inc
dec
cmp
mov
dec
std
mull
clc
lret
jecxz
stos
mov
imul
dec
cli
mov
dec
add
mov
mov
and
int1
pop
sub
mov
sub
movsl
out
add
push
lret
jecxz
subl
movsb
push
jbe
push
pusha
mov
push
mov
stos
mov
dec
mov
sub
ds
jae
jl
add
pusha
pop
stos
mov
push
or
out
xchg
sarl
add
xchg
mull
mov
mov
stos
pushf
mov
gs
mov
mov
mov
and
leave
jnp
(bad)
cs
(bad)
lret
jle,pt
add
fisubs
nop
pop
popf
cli
mov
mov
es
inc
xchg
xor
mov
xor
sahf
dec
mov
adc
mov
jg
sarl
mov
data16
xchg
mov
mov
jmp
and
add
jae
outsb
arpl
fbstp
jecxz
and
and
ret
loopne
mov
rorl
mov
mov
cmp
scas
cmp
cmp
into
out
xor
mov
shrb
mov
or
out
xor
jo
test
cmp
push
outsl
cs
(bad)
mov
outsl
cld
cmpsb
mov
shlb
aas
mov
pop
les
out
inc
cmp
and
rorl
(bad)
add
add
out
sbb
dec
outsl
cmp
push
mov
roll
insb
lret
dec
inc
pop
cmp
test
push
sub
mov
sub
pushf
jbe
mov
lcall
xchg
dec
xor
out
int
or
inc
stc
sbb
inc
sarl
or
or
pop
test
dec
das
les
add
and
jnp
jbe
fistpl
jle
jnp
cld
cmp
fildll
sub
or
stc
test
add
mov
jg
mov
int3
das
fnstsw
jl
aas
(bad)
movsl
push
mov
cwtl
fisubl
cmp
in
dec
cmp
inc
(bad)
adc
repz
shl
mov
mov
sar
pop
adc
leave
push
xor
or
inc
(bad)
movsl
lds
dec
and
loope
jmp
push
xor
and
lea
int3
mov
and
je
inc
movsl
movsb
data16
mov
fiaddl
insb
movsb
shrl
sbb
jp
mov
ds
add
lret
pop
cmp
cmp
push
adc
mov
xor
mov
outsb
jns
fs
das
inc
mov
in
push
push
inc
add
xchg
not
mov
mov
dec
adc
(bad)
sbb
mov
pop
mov
and
clc
sub
stc
cmc
jecxz
mov
dec
mov
mov
cmp
imulb
stos
addb
test
or
bound
adc
xchg
jae
leave
mov
loopne,pn
push
sub
mov
and
cmpsb
into
push
testl
mov
sti
inc
stos
(bad)
dec
insb
(bad)
(bad)
stos
scas
in
shrl
in
xor
sbb
xor
lahf
js
add
jbe
cmp
fwait
popa
mov
sahf
cmp
pop
(bad)
test
ds
mov
pop
gs
pop
decl
sti
mov
loop
sub
pusha
mov
orl
adc
in
lea
lds
in
jne
cld
cmp
mov
jl
arpl
lods
xchg
scas
and
js
cmp
dec
pop
push
lods
out
mov
dec
push
xor
jg
jno
insb
cmp
fisttpll
sub
jbe
in
xchg
scas
arpl
mov
push
movsb
out
mov
dec
ss
fdivrl
cmp
push
and
ja
cmc
je
ds
mov
bound
je
xchg
data16
test
dec
jo
or
shlb
out
(bad)
es
inc
pop
mov
xor
mov
sbb
inc
out
ficoml
sbbb
cmp
mov
into
test
aas
cmp
mov
test
pop
lahf
