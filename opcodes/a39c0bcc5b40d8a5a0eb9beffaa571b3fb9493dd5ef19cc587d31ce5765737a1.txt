loope
mov
fiadds
inc
mov
sub
test
movsl
mov
pop
xchg
inc
or
push
lcall
outsb
in
addr16
or
jno
mov
pop
rolw
cmp
jl
pop
mov
push
mov
movsl
add
movsl
popf
xchg
out
xor
test
sbb
pop
cwtl
pop
lods
dec
loop
js
nop
scas
lods
dec
mov
jmp
add
movsl
sbb
arpl
xchg
in
imul
cmpsb
mov
pop
dec
xchg
outsb
sbbl
mov
xor
push
fldl
dec
cmpsl
xchg
push
popf
jo
movsl
inc
orl
cwtl
cmc
dec
mov
dec
pop
jge
js
movsl
jp
imul
pop
push
insb
pop
ret
xchg
test
pop
imul
mov
andb
jmp
jge
xchg
mov
test
lea
cmpb
fidivrl
mov
adc
cmpsl
out
mov
mov
push
cmp
or
div
lods
test
pop
and
adc
mov
movsbl
enter
jno
jnp
pop
(bad)
push
into
push
call
mov
add
mov
ds
inc
xchg
into
sub
sbb
or
std
fmull
jle
mov
(bad)
sbb
in
ficompl
push
xchg
or
dec
in
mov
lods
insl
xor
dec
popf
xor
sub
pusha
loopne
cmpsb
bound
mov
mov
movsb
mov
push
test
mov
call
lods
lods
movsb
jno
mov
out
ficoms
mov
cmc
xlat
jno
cs
andb
test
pop
cmc
ja
fidivl
mov
rcll
cld
leave
out
mov
pop
lock
jns
mov
mov
sub
cli
jmp
add
stos
outsb
test
mov
or
into
into
aam
iret
push
lret
sbb
push
mov
insl
daa
xchg
add
leave
pop
test
mov
cmpsb
sub
inc
pop
push
mov
jo
inc
aam
rorb
call
out
movb
pop
lret
std
sub
xchg
xor
sbb
xlat
testl
add
jns
mov
repnz
mov
dec
pop
aaa
mov
psllw
xorb
fidivrs
lods
fwait
mov
in
testb
int
xor
cmp
mov
(bad)
mov
ja
addr16
dec
jge
mov
ja
add
test
add
lock
mov
push
cmpl
xchg
cmp
and
nop
lcall
bound
pop
enter
cmc
jnp
repnz
(bad)
mov
push
popf
daa
in
pop
(bad)
jg
jp
jmp
xchg
sub
jle
mov
dec
mov
xchg
jno
les
lcall
xchg
popf
outsl
sub
sub
mov
sahf
inc
jno
mov
jmp
in
pop
pop
mov
cli
or
pop
pop
arpl
test
lods
nop
and
cmpsb
loope
shll
xchg
sbb
mov
jle
sub
pop
imul
dec
adc
lcall
fidivrl
mov
sbb
movsb
data16
xchg
inc
cmp
(bad)
fwait
inc
mov
mov
in
mov
xchg
(bad)
int1
rcll
mov
scas
mov
push
ja
mov
out
aaa
jb
xchg
mov
jb
pop
clc
jbe
popa
orb
imull
hlt
pop
int
shll
add
ret
lds
(bad)
je
cltd
mov
push
repnz
pop
fadd
pop
inc
lea
fsts
dec
push
call
lds
add
add
pop
jecxz
inc
adc
xor
mov
sbb
shrb
add
jb
mov
inc
and
or
push
dec
nop
push
sub
fisttpl
mov
les
movsl
cli
inc
daa
dec
rcrl
loope
int
test
push
pop
in
in
mov
movsb
(bad)
mov
inc
(bad)
xchg
loopne
stos
mov
lock
jnp
adc
push
mov
lahf
ffree
or
and
xor
pop
fimuls
scas
push
into
mov
mov
mov
xchg
add
mov
rcrl
insl
jb
add
sahf
mov
imul
and
aam
mov
out
push
mov
adc
popa
movsb
xchg
mov
lret
rorb
insl
push
dec
sub
jg
or
mov
mov
push
stos
shlb
call
mov
cli
and
and
xchg
inc
sub
ucomiss
cmpsb
lods
cmpsb
sub
jb
pusha
fistpll
divb
dec
inc
sub
cltd
dec
leave
or
mov
dec
hlt
js
or
push
xchg
andb
sbb
test
mov
mov
or
jle
adc
es
test
ss
(bad)
stos
dec
movsl
rorl
mov
add
mov
mov
mov
mov
push
xchg
(bad)
filds
sbbb
xchg
lock
movsl
push
and
out
adc
fcoms
mov
es
jno
mov
daa
out
pop
and
inc
adc
add
mov
shr
in
xchg
jno
push
inc
mov
aaa
in
ret
scas
loop
inc
dec
add
insl
sub
insl
adc
mov
aaa
dec
adc
xchg
nop
dec
imul
pop
cmp
dec
int3
xchg
iret
pop
xchg
lock
into
test
pop
cltd
jno
mov
repnz
aam
lahf
mov
subb
test
das
mov
(bad)
mov
orb
pop
xchg
and
cmc
pop
jle
add
fcomps
test
pop
sbb
xor
xchg
sub
xchg
adc
fdivrs
lret
ficompl
and
jge
dec
sahf
jmp
push
push
sbb
stos
xchg
mov
jp
xbegin
scas
xchg
add
mov
mov
out
test
adc
jns
inc
fisubl
pop
pop
psadbw
cmp
mov
int3
int3
test
fs
jle
movsb
roll
sub
dec
enter
mov
push
mov
mov
jp
jo
pop
and
dec
lds
cwtl
pusha
cmp
cmpsl
dec
pop
cmpsb
aam
in
pop
test
cmp
sbbl
shrl
subl
insb
out
mov
out
mov
lea
shlb
(bad)
inc
lods
push
jnp
inc
xchg
enter
mov
stos
xchg
and
jo
push
(bad)
push
shrl
pop
xorl
mov
inc
ret
pop
(bad)
outsb
dec
popf
inc
xchg
mov
aad
push
or
pop
popa
insl
movsl
mov
or
push
ret
or
jp
inc
cwtl
rcl
cwtl
xchg
sbb
test
xchg
sar
pop
in
pop
mov
test
sbb
push
add
sarb
push
addr16
in
stc
mov
outsb
jecxz
mov
jmp
add
fldl
(bad)
push
push
pop
sbb
movsb
decl
push
lahf
sub
mov
ret
daa
push
push
dec
push
insl
pop
cld
sub
ja
fcomps
sbb
dec
notb
mov
jne
mov
cmpsb
jbe
mov
(bad)
jmp
out
fisttps
jnp
jge
mov
mov
xchg
js
and
in
cwtl
xchg
aas
fwait
stos
cmc
std
das
mov
jge
mov
add
scas
add
inc
sub
xchg
or
or
gs
mov
or
mov
mov
es
sbb
in
lock
sahf
push
in
rcr
test
dec
jge
faddl
cmp
jb
bound
in
(bad)
push
hlt
xchg
ds
rcll
add
cmp
push
pop
jae
dec
pop
les
test
dec
mov
inc
daa
lret
(bad)
aad
xchg
inc
xor
and
jnp
ljmp
mov
mov
loop
jns
jle
stos
es
(bad)
mov
pop
and
cmp
push
leave
xchg
mov
ds
cmp
out
mov
je
xchg
sub
stc
cmp
out
in
mov
ljmp
adc
imul
and
lock
sub
xchg
mov
sahf
mov
aam
xor
add
popf
cmpb
movsl
and
jecxz
push
rcrb
and
aaa
mov
arpl
insl
push
lret
or
flds
mov
xchg
sbb
imul
mov
or
mov
sbb
(bad)
mov
dec
cmpsl
mov
jp
daa
push
addl
dec
adc
jge
