hlt
inc
dec
cmp
sbb
cmp
sub
pop
clc
push
test
pop
mov
push
hlt
in
insb
inc
mov
aas
push
andb
je
jp
jb
dec
sbb
push
ljmp
dec
jnp
adc
xor
push
sub
popa
clc
add
and
outsb
or
jae
stos
shlb
and
hlt
imul
cmp
push
xor
test
jle
je
adc
adc
int1
sbb
mov
repnz
add
sbb
test
pop
lods
push
dec
dec
popaw
push
js
stos
push
imul
sahf
xorl
outsb
call
cld
pop
jnp
ss
mov
push
stc
ja
dec
sbb
add
es
push
add
and
pusha
test
test
xor
pusha
cmp
dec
cmc
push
decb
andl
mov
add
lcall
mov
add
and
test
test
imul
js
lock
addl
mov
sbb
sbb
insb
adc
push
dec
mov
or
das
jmp
sbb
aas
cld
je
pop
push
outsl
mov
xor
mov
jne
mov
lcall
insl
pop
pop
movd
jle
pop
outsb
mov
push
pop
xchg
stos
pop
jp
inc
stc
jne
pop
mov
(bad)
sbb
shlb
sbb
lods
jl
lcall
dec
or
repnz
mov
lcall
push
adc
jecxz
mov
jne
jmp
inc
pop
hlt
in
sub
cltd
imul
mov
or
(bad)
mov
pusha
xor
cmp
sub
and
rol
das
daa
setl
in
lret
cltd
push
inc
sub
mov
test
push
es
jo
add
jp
pop
add
sbb
xor
jle
orb
pop
and
jmp
sbb
add
pop
sub
add
inc
pop
nop
pop
aam
sbb
out
sbb
mov
inc
(bad)
mov
jmp
repnz
not
fstl
xor
popa
mov
sbb
aad
jne
outsl
ja
dec
sbb
ret
add
xchg
pop
inc
std
adc
stos
xchg
sbb
mov
push
pop
jo
and
js
popf
pop
aam
maskmovq
cmovns
out
lret
inc
fwait
jbe
loop
int
(bad)
insl
mov
mov
cli
aad
sub
pop
jle
fs
mov
add
jge
sbb
sub
mov
push
mov
popa
sub
cs
and
xchg
push
aad
pop
out
ljmp
pop
mov
stos
sbb
in
dec
loop
shll
in
sbb
cmp
je
jge
adc
lcall
push
dec
cld
push
adc
mov
repz
sahf
fdivp
hlt
and
sub
or
rol
and
mov
and
jle
div
cmpsl
arpl
ds
inc
and
and
cwtl
mov
inc
inc
pop
and
jecxz
or
mov
xor
xchg
jecxz
test
pop
jb
repnz
or
out
enter
add
stos
sub
loop
cmp
inc
xchg
adc
stos
in
push
push
ljmp
push
bound
repz
(bad)
mov
or
jnp
bnd
lock
lret
mov
addl
lods
adc
testb
jbe
ss
fiaddl
test
decb
arpl
jbe
sti
je
sub
out
repnz
sub
jno
add
mov
inc
ljmp
sbb
test
mov
call
test
lret
jge
xchg
enter
inc
inc
ljmp
out
adc
push
rol
das
ror
push
or
dec
aam
push
das
mov
repnz
lock
filds
pop
ret
(bad)
movsb
inc
xor
lods
cmc
push
outsl
sbb
fimuls
or
je
sbb
jg
adc
jmp
pushf
inc
dec
mov
orl
loop
push
mov
sbb
(bad)
cmp
fmull
pop
mov
mov
xchg
xor
xchg
inc
push
push
cld
sbb
std
imul
loop
aaa
(bad)
xlat
jg
sbb
jo
loop
push
xor
inc
mov
imul
push
ret
adc
jbe
push
in
stos
sub
movsb
int
mov
das
sbb
pop
add
xorb
adc
dec
outsb
adc
test
(bad)
jge
call
cmp
mov
aas
cmp
pop
ljmp
jp
or
popf
aaa
cltd
(bad)
out
pop
fwait
and
xadd
fdecstp
pop
out
pop
sub
xchg
mov
test
lods
mov
cmp
add
xor
divl
rorl
test
add
pop
and
movl
std
cmp
sub
cmp
aas
mov
enter
dec
jecxz
in
push
sar
sub
decb
outsl
movl
sbb
call
add
mov
sti
inc
mov
cld
int1
dec
xor
out
mov
inc
or
(bad)
xchg
fbstp
inc
int
push
pop
jne
lret
fwait
mov
xchg
push
sbb
sahf
xor
mov
and
add
in
sub
inc
adc
xchg
imul
sub
push
or
pop
jnp
sbb
and
clc
cmp
fstps
push
movsb
in
not
xchg
mov
sbb
ret
cmp
push
push
sbb
bound
insl
xor
and
push
jno
inc
mov
clc
push
loopne
and
dec
or
or
inc
aaa
add
shll
enter
cmp
cmp
inc
jecxz
gs
mov
imul
inc
sub
xchg
push
iret
dec
les
sbb
cmp
inc
in
js
cwtl
pop
mov
imul
cmp
or
popf
(bad)
rcrb
test
fwait
ds
or
cmp
cld
decb
mov
inc
pop
cmp
maskmovq
notl
cld
mov
push
sbb
cmc
pop
mov
xor
xlat
push
push
mov
ja
mov
iret
in
adc
in
mov
xlat
sub
lcall
dec
sbb
mov
dec
bound
lret
jb
xchg
mov
insb
adc
cmpsl
push
aas
aad
mov
inc
(bad)
sbb
push
add
addr16
xchg
pop
jmp
push
cld
or
xlat
jle
jo
leave
out
jo
mov
mov
add
add
add
mov
lcall
adc
rcrl
inc
out
(bad)
sbb
pop
imul
add
rcrl
cmpsl
xchg
push
dec
add
jne
imul
dec
movb
mov
imulb
xchg
in
iret
xchg
mov
inc
sbb
cld
insb
jns
fwait
jb
jb
negl
sbb
movsb
cli
ret
jbe
es
(bad)
sbb
pop
jns
dec
fildl
loope
mov
jle
fwait
adc
aaa
aam
cmp
inc
rorl
pop
scas
sti
subl
loop
mov
popa
mov
mul
sbb
sbb
daa
or
addr16
cmpl
test
fcoml
add
into
cld
push
jne
cmp
(bad)
adc
js
xor
mull
jg
sahf
push
pusha
lea
jmp
xchg
cmp
jmp
cmp
cmp
pusha
and
js
jb
mov
sbb
jle
push
bound
push
cs
xchg
xor
push
pop
bound
and
push
dec
fmulp
les
xor
(bad)
cmp
and
sbb
mov
addr16
inc
jge
xlat
shrb
sti
mov
les
pop
xchg
(bad)
loopne
sar
cmp
stos
sub
(bad)
dec
mov
pop
(bad)
(bad)
push
push
jns
inc
fcoms
data16
outsl
jmp
or
inc
sbbl
notl
mov
jge
jmp
mov
sbb
adc
jmp
(bad)
or
insl
jo
inc
add
adc
(bad)
push
mov
int3
out
insl
mov
sbb
in
xchg
in
sbb
push
pop
mov
cmp
(bad)
or
xor
cmp
(bad)
adc
arpl
popa
xor
jne
inc
vandnpd
dec
insl
mov
push
or
addr16
jmp
push
ljmp
outsl
push
push
fbld
call
adc
orl
imul
mulb
rcrb
idivl
and
push
xor
stos
fiaddl
dec
(bad)
xchg
es
xchg
dec
pop
iret
loopne
mov
push
test
dec
(bad)
xor
fwait
andb
sub
and
