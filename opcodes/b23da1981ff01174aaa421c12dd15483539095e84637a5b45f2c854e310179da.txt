std
mov
stc
mov
aad
rcrl
or
push
test
int3
xchg
xchg
imul
push
(bad)
iret
sti
movsl
cltd
adc
iret
das
push
cld
cli
push
scas
inc
push
push
mov
mov
lea
inc
and
lahf
(bad)
arpl
or
pop
xchg
cld
lret
inc
pop
cmovnp
sub
or
cld
add
adc
sti
xchg
adc
fadds
sti
mov
and
xor
nop
insl
push
imul
pop
(bad)
or
inc
and
mov
cld
sbb
pusha
push
add
pop
test
mov
inc
fimull
ficompl
repz
xor
lahf
into
fwait
sahf
xchg
std
pushf
pop
inc
gs
inc
jnp
adc
das
fwait
das
lret
or
pop
popf
adc
cmp
cmpsl
in
push
les
lret
fildll
xchg
popf
mov
(bad)
cmp
add
test
imul
xor
add
add
andb
fadd
std
fstpt
pop
mov
negb
mov
cmp
mov
leave
popa
arpl
mov
cmp
pop
ret
in
xor
adc
push
mov
adcb
cmp
ret
fcompl
or
and
push
xchg
test
pop
scas
add
jmp
jo
je
adc
int
sub
cli
iret
stos
dec
xchg
rorb
mov
dec
adc
xor
lea
mov
jno
sbb
inc
subb
mov
pop
pop
sti
sbb
adc
inc
push
nop
pop
or
add
lret
dec
fcomip
imul
lods
pop
mov
mov
sbbl
xchg
rcr
mov
lods
cmp
shrb
leave
sti
mov
xor
rol
sub
outsb
inc
gs
leave
iret
jmp
pop
lahf
roll
or
pop
xchg
jns
jo
mov
mov
rcr
jecxz
mov
in
inc
test
add
shrl
xchg
inc
popa
or
xlat
sub
test
aad
xchg
gs
pop
int1
mov
movsb
cs
mov
jmp
mov
lcall
sbb
aam
cmpsl
push
lock
xor
outsb
xchg
xchg
lea
sbb
rcrb
or
push
xor
shrb
adc
or
add
inc
mov
imul
in
push
shr
ljmp
xchg
mov
cmp
std
push
cmp
aaa
jbe
iret
ss
(bad)
pushf
inc
mov
dec
sub
stos
aam
sbb
dec
pop
sbb
fwait
lret
sbb
xor
sbb
xchg
insl
dec
dec
addl
xchg
stc
jae
jo
mov
and
mov
stos
lock
mov
jae
cmc
lock
sub
imul
movsl
mov
pop
lahf
mov
mov
cmp
leave
or
mov
cs
(bad)
movsb
imul
(bad)
shrb
fucomi
pop
inc
fsubrl
lret
dec
sbb
stos
mov
(bad)
sbb
cmc
testb
js
bound
nop
cwtl
movsb
aad
or
push
and
shrl
add
push
pop
adc
cltd
adc
ret
movsl
adc
pushf
out
sbb
jmp
mov
inc
gs
stos
imul
inc
mov
mov
jb
pop
push
mov
outsb
enter
xor
add
and
or
sbb
adc
jmp
out
sub
and
inc
dec
adc
test
ljmp
je
cwtl
cld
dec
popf
clc
movl
test
mov
ljmp
lods
dec
int1
lea
clc
adc
in
mov
fimull
lock
lret
or
pushf
pusha
push
jb
add
int
ret
(bad)
mov
or
bound
sti
xchg
gs
dec
ret
cli
jae
jae
push
xor
sahf
fwait
mov
mov
aaa
pushf
push
in
dec
arpl
mov
mov
aas
or
or
movsb
leave
stc
sbb
push
pop
ljmp
test
pushf
lret
add
sti
inc
pop
shll
mov
jns
inc
bound
inc
pop
pop
mov
pop
or
sbb
sub
push
pop
lea
sub
sbb
add
pusha
out
loope
bound
jb
andb
adc
clc
imul
xchg
pop
loop
mov
xor
lea
lret
aad
imul
dec
inc
addl
pop
mov
jmp
mov
mov
add
(bad)
cmpsl
adc
mov
mov
jae
int1
sub
cmpsl
cmp
cmpsl
out
and
loope
adc
mov
mov
test
adc
lcall
insb
popa
mov
mov
scas
fcoms
push
mov
add
lahf
sbb
cmp
push
cmp
ds
pop
jmp
or
(bad)
pop
sub
sub
mov
xchg
push
fstl
inc
lcall
call
pop
call
add
arpl
mov
in
imul
inc
mov
rclb
std
xor
lock
jns
(bad)
outsb
xlat
pushf
adc
xor
outsl
and
jnp
popf
adc
lods
nop
fadds
push
xorl
inc
xchg
mov
or
in
int3
mov
adc
addb
pop
add
insb
mov
fcomip
push
subb
cwtl
scas
notl
scas
cld
scas
cmp
mov
repz
inc
jge
(bad)
xchg
scas
inc
xor
pushf
sbb
sarl
push
lods
out
aam
xchg
fnstcw
mov
mov
add
loop
je
cmp
lea
lods
scas
imul
out
inc
push
and
cli
rolb
ret
cmp
mov
call
xchg
fmul
lock
decb
push
xlat
mov
add
cmp
mov
out
aad
repz
mov
mov
insb
sbb
adc
mov
pop
inc
shll
sti
cmp
aas
mov
sub
cmp
inc
push
cmp
mov
les
add
mov
adcb
in
(bad)
scas
in
mov
jb
pop
or
mov
outsb
inc
bound
lea
lds
mov
mov
inc
loopne
stc
push
or
mov
sub
dec
mov
int
loopne
jo
shlb
out
aam
cmp
jp
ljmp
jge
adc
hlt
stc
je
mov
sti
test
sub
(bad)
sbb
pop
dec
mov
or
repz
mov
fidivl
sti
push
mov
jo
add
fisubl
mov
outsl
fs
les
xor
xlat
lret
jp
leave
test
enter
movsl
dec
std
xor
lods
adc
inc
imul
in
stos
popf
xchg
sub
ds
add
sub
ss
jmp
mov
fsubr
mov
(bad)
sbb
repnz
loope
fistps
mov
mov
leave
push
aaa
mov
hlt
shll
ljmp
adc
lods
imul
rcr
inc
dec
fmull
mov
cmp
sub
sbb
pop
pop
lahf
in
adc
lods
push
adc
or
push
iret
mov
add
mov
xchg
and
aad
and
cld
fsubrs
ljmp
stc
xchg
popf
push
adcb
les
daa
sbb
mov
mov
add
popf
clc
xchg
ljmp
mov
mov
test
fisubrl
cltd
push
jmp
lahf
xorb
cli
rorb
mov
mov
fisttpll
stos
mov
jp
xor
pop
std
data16
xchg
jge
(bad)
rcrl
lret
jae
ss
ffree
addr16
ljmp
xchg
sbb
xchg
loope
and
xchg
cmp
push
cmpsl
js
lods
outsb
popf
pop
ret
push
push
mov
jle
mov
addl
adc
sub
bound
mov
push
adc
rorl
cwtl
pusha
mov
subb
pop
fbld
fdivl
mov
lret
pop
lods
adc
or
cmp
mov
xor
pop
aam
inc
dec
xchg
inc
arpl
push
pop
mov
add
adcl
mov
xchg
sbb
jnp
mov
test
pop
mov
mov
mov
dec
mov
pop
lea
push
lahf
repnz
mov
lcall
iret
add
imul
jae
out
ljmp
fstp
xchg
mov
or
in
push
mov
inc
xchg
mov
add
scas
mov
test
popa
cmp
sub
ret
inc
mull
test
call
ret
leave
lods
fsubrp
push
jns
popa
push
cmp
pop
pop
dec
aad
adc
