inc
fucomip
cmpl
push
sbb
pop
sti
pop
lea
sti
dec
lea
stc
sbb
test
xorl
pop
sbb
rorl
pop
test
or
int
push
pop
test
sub
xchg
int1
add
outsl
movsl
mov
imul
push
xchg
movsl
mov
sti
push
movsl
mov
lods
or
pop
inc
fsts
lods
or
test
push
sub
cld
adcl
ja
sbb
pop
push
jge
testl
cs
and
sub
cli
sub
js
lcall
xchg
hlt
add
pop
mov
or
add
enter
dec
je
test
mov
pop
test
dec
pusha
xchg
in
hlt
rorl
in
lock
pop
push
addl
and
pushf
push
idivl
add
jo
and
push
pushf
aad
je
fnsave
dec
and
pusha
xchg
in
in
pop
and
shrl
imul
sbb
test
xor
dec
adc
pop
test
dec
jo
pushf
cmp
pop
test
xor
pop
test
dec
jo
notb
dec
es
inc
and
push
imul
cli
loopne
loopne
div
fldt
pop
cwtl
fcoml
(bad)
pushf
insl
add
adc
xorl
jl
std
xchg
rolb
std
adc
addl
(bad)
loopne
cmp
je
bound
loopne
mov
mov
or
ret
add
pushf
insl
add
fsubrl
sbb
outsb
or
js
test
leave
lds
test
enter
or
test
testl
or
js
pushf
sbb
stos
test
mov
pop
test
push
stc
repz
lret
repz
jge
cmpsl
test
jo
inc
loopne
xor
jo
mov
or
test
or
test
negl
add
jo
xor
xor
stc
insb
stc
cmp
in
dec
lcall
jp
pop
test
adc
sub
fldt
pusha
pop
fucomip
or
cmp
jo
mov
xor
inc
xchg
les
test
dec
jo
pushf
sub
pop
test
dec
jo
mov
pop
test
or
(bad)
hlt
and
pop
mov
adc
test
or
adc
pop
daa
xchg
faddl
in
mov
test
push
jne
imul
pushf
int3
lock
iret
mov
stc
orl
loopne
pushf
mov
test
xorl
mov
pop
into
or
divl
xlat
push
dec
lock
dec
mov
divl
es
cld
add
hlt
xchg
subl
xlat
push
dec
lock
iret
add
in
add
fisubrs
rorb
fdiv
dec
pop
push
jp
cmpsl
push
divl
inc
push
int1
in
jne
jo
notb
(bad)
push
stc
cli
adc
jo
test
or
dec
incb
pusha
fsubrs
(bad)
loope
mov
cmc
jecxz
testb
cmp
(bad)
loope
divl
imul
fisubrs
rorb
fdiv
dec
(bad)
add
loopne
jecxz
xchg
pop
jecxz
xchg
push
and
or
or
arpl
cmc
jecxz
testb
push
xor
call
push
xor
xchg
sub
(bad)
loope
subl
loopne
test
push
test
mov
jecxz
testb
notl
fdivr
adcl
fsubr
hlt
push
jg
xor
jb
pop
gs
test
loopne
lods
test
mov
push
lret
sbb
xchg
push
cmpxchg
mov
mov
(bad)
lret
mov
je
cmpsl
xchg
inc
jo
pop
insl
mov
push
xorl
notb
(bad)
push
stc
cli
sub
jl
lcall
inc
movsl
iret
xor
sub
xchg
push
pop
test
dec
mov
inc
cs
cld
sbb
jo
aam
lret
push
dec
and
xchg
push
pop
pop
aad
fsubrs
xchg
imul
pop
nop
(bad)
or
and
xchg
imul
xchg
cld
hlt
(bad)
sbb
dec
js
lods
adc
(bad)
dec
jo
pop
insl
mov
push
push
cs
pusha
lret
and
dec
lcall
push
subl
into
cld
adc
test
enter
lcall
adc
or
xchg
push
and
mov
fisttpll
gs
nop
xlat
or
adc
push
pop
test
dec
mov
notb
(bad)
push
stc
cli
clc
pop
and
addl
scas
mov
loopne
pushf
mov
test
stos
sbbb
cwtl
and
testl
ja
cli
xor
jmp
pop
loop
mull
xchg
hlt
hlt
xor
mov
fisttpl
call
fdiv
push
sub
push
stc
cli
cli
pop
daa
xchg
hlt
add
scas
scas
test
inc
insl
dec
pop
test
mov
pop
test
bound
push
pop
jo
cli
pop
(bad)
jo
test
or
out
lock
fsubrs
inc
pop
and
das
inc
repnz
mov
and
and
addl
int3
mov
pushf
xchg
enter
or
or
mov
test
pop
js
out
or
imul
lock
fsubs
push
(bad)
(bad)
dec
mov
or
inc
repnz
mov
and
repz
dec
and
mov
and
jno
and
repz
xorl
mov
or
pop
pop
pop
sbb
dec
jo
pop
mov
stc
out
lock
fcomps
xchg
mov
in
in
(bad)
push
es
cli
xor
ret
or
pop
and
orb
ficompl
test
add
pop
inc
add
pushf
imul
pop
and
(bad)
(bad)
or
mov
pop
arpl
pop
out
stc
pop
dec
xorl
pop
dec
add
pop
inc
sbb
jo
dec
xorl
loopne
cmp
fdivr
adcl
pop
test
ret
mov
or
adc
dec
jl
sub
xorl
test
xorl
pop
or
mov
test
pop
js
mov
mov
test
sar
fadd
testl
dec
push
jge
notl
jo
ret
or
sub
jo
sub
(bad)
loope
pop
cwtl
sub
testl
push
mov
imul
pop
test
xorl
pop
lods
pop
sti
daa
push
pop
insb
xchg
in
hlt
repz
jg
inc
or
sub
pop
cmpsb
lea
jp
or
in
pop
sub
ret
or
inc
and
pop
(bad)
and
push
fsubr
call
mov
pop
pop
std
push
mov
test
orl
and
(bad)
xor
cld
and
stc
fsubrl
jne
pop
fcompl
fildll
jo
lods
sti
xor
and
dec
and
(bad)
or
xor
sub
rolb
loopne
idiv
fsubl
and
stc
orl
pushf
jo
test
enter
dec
jl
sub
(bad)
loope
jl
xchg
jno
test
push
dec
fildll
jo
fldl
rcr
imul
dec
mov
dec
test
in
lock
xchg
testl
xchg
jno
xchg
xchg
sub
(bad)
loope
xorl
dec
stc
pop
es
push
push
rorb
repz
push
call
fadd
or
pop
ret
or
pop
ret
or
pop
test
add
xchg
outsl
bound
test
mov
pop
test
leave
repz
push
dec
lock
lret
sbb
and
mov
testl
lock
pop
ret
or
pop
push
pop
sbb
test
or
inc
xor
pop
test
lret
and
pop
stos
or
dec
lcall
jno
fwait
xor
lcall
pop
in
jmp
cwtl
and
or
sub
(bad)
loope
test
fistl
(bad)
dec
inc
(bad)
mov
push
push
jns
cmpsb
mov
sbb
sar
fadd
or
testl
mull
xchg
sub
(bad)
loope
pop
cwtl
jp
testl
pop
sub
jo
pusha
mov
inc
test
lea
(bad)
loopne
idiv
fsubl
and
stc
orl
inc
stc
pop
push
add
call
push
testb
push
testb
test
testb
xchg
or
test
enter
push
jo
and
xchg
and
stc
fcompl
lea
mov
stc
orl
jo
pop
push
add
pop
test
or
loopne
insb
mov
