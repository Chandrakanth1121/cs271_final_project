ficomps
rex.wrb
or
(bad)
{rex2
call
sub
push
(bad)
movabs
rcrb
xchg
sub
movsb
rclb
stos
in
stos
repz
sbb
xchg
stos
xchg
push
(bad)
rex.wrxb
imul
movabs
movsl
rclq
(bad)
sub
mov
or
jge
push
(bad)
jae
(bad)
loopne
insb
stos
shrq
rex.rx
(bad)
(bad)
push
(bad)
and
mov
jnp
(bad)
ja
lret
pop
or
in
xchg
xchg
in
fbld
movsb
stc
pushf
push
sbb
mov
(bad)
fwait
push
pop
stc
add
scas
(bad)
stos
rol
sbb
out
sti
and
mov
add
fstl
pushf
test
(bad)
jb
shrb
ss
xchg
push
mov
rcl
jno
nop
cltd
ds
pushf
cmpsl
cld
cmp
(bad)
ss
loope
rex.r
iret
push
xor
mov
call
leave
out
xchg
packsswb
adc
loope
xchg
(bad)
incl
mov
(bad)
mov
mov
push
gs
rex.w
(bad)
(bad)
cmpsb
sahf
push
sbb
int1
mov
sbb
push
mov
pop
repnz
mov
mov
xchg
mov
fwait
mov
push
ds
and
add
pop
xchg
adc
fucompp
pop
flds
cmpsl
scas
(bad)
in
rolb
test
rex.rb
xchg
(bad)
sbb
movabs
movabs
mov
xor
cmpsl
jge
rex.wx
sbb
jle
js
jno
push
sbb
xchg
adc
pop
cmpsl
jne
test
push
sub
rex.wrb
repnz
rex.w
rex.x
rex.wxb
mov
neg
cld
mov
jg
lea
or
shrl
jrcxz
sbb
rcrb
mov
cmp
shrl
(bad)
rex.wx
int3
pop
sahf
rex.wxb
(bad)
(bad)
and
shrl
jp
sahf
mov
mov
lods
scas
pop
movabs
pop
lret
(bad)
adc
push
(bad)
mov
lock
orl
mov
repz
(bad)
insb
(bad)
imul
sbb
push
addps
addr32
sub
call
rcr
int
xchg
scas
cwtl
mov
pop
lea
add
gs
adc
test
or
jmp
mov
xchg
js
(bad)
jmp
and
add
(bad)
mov
add
jnp
(bad)
adc
pop
in
cli
adc
fcomps
ret
or
adc
add
sub
(bad)
jns
xchg
pop
int
lods
adc
push
mov
test
and
lahf
repnz
(bad)
fstpt
rex.wx
gs
(bad)
(bad)
imul
jno
(bad)
add
int
ja
stos
mov
rex.rxb
ficompl
and
test
push
cltd
sub
pop
push
sbb
xchg
shr
push
in
lcall
fnstenv
out
xchg
rex.wxb
idivl
imul
sub
int
cmpsl
cwtl
jae
(bad)
ds
ds
(bad)
or
rex.wb
(bad)
pop
std
movabs
popf
add
movabs
sub
jmp
ret
cltd
xchg
cmp
xchg
out
push
mov
fnstsw
jge
cltd
add
fstl
pop
call
sbb
adc
sahf
cs
ret
ja
and
(bad)
addr32
mov
add
(bad)
sub
(bad)
push
pop
movsb
ficoms
xchg
sbb
mov
movsl
jae
movabs
rex.wrb
nop
jmp
cmc
(bad)
cmp
sub
es
andb
pop
cltd
mov
mov
cs
in
sbb
call
mov
(bad)
out
(bad)
(bad)
cwtl
out
(bad)
sar
std
sub
cmp
(bad)
mov
mov
insl
test
cs
mov
mov
add
mov
cmc
or
jg,pt
out
and
xor
pop
xor
(bad)
jno
(bad)
iret
in
xchg
in
(bad)
mov
add
outsb
std
adc
addr32
(bad)
lods
(bad)
out
sti
xor
xchg
gs
rex.r
pop
pop
(bad)
hlt
movabs
mov
js
movabs
fstpl
outsl
hlt
lock
rex.b
adc
pop
sub
leave
and
rex.r
add
jns
cwtl
cld
xlat
(bad)
or
pop
xchg
or
call
ret
jl
(bad)
xor
mov
and
lods
pop
sbb
mov
rex.wrx
(bad)
outsl
xchg
fimuls
in
data16
push
cmc
sbb
mov
adc
fbld
shl
adc
scas
mov
or
test
ret
push
sub
es
and
sahf
loope
rex.wx
rex.w
(bad)
xchg
sub
pop
rex.wrxb
or
and
xchg
adc
mov
mov
rex.wrb
(bad)
sub
pop
mov
jbe
sub
call
mov
js
(bad)
sub
loope
movabs
xor
gs
sahf
push
xchg
loopne
repz
mov
outsl
mov
fs
int3
jbe
pushf
xchg
in
jrcxz
fidivs
(bad)
adc
or
rex.rx
es
push
lock
pop
or
or
cmpsl
jrcxz
insl
sbb
test
mov
pop
and
(bad)
(bad)
mov
jl
fists
insl
cmp
ret
imul
testb
{rex2
outsl
or
(bad)
in
sub
test
rdtsc
(bad)
(bad)
sahf
pandn
rex.w
rex.wxb
fwait
rcrb
outsl
add
pop
rex.wrb
lret
movabs
sbb
test
test
or
sahf
imulb
outsb
frstor
add
(bad)
mov
sub
xor
(bad)
jg
xor
cmpsb
add
push
notl
mov
out
leave
cmp
jo
or
(bad)
(bad)
rex.r
rex.wrxb
es
int1
in
jge
sbb
(bad)
push
ret
and
adc
notl
rex.r
mov
cltd
sub
test
sub
subb
pop
imul
jnp
xchg
sahf
pop
or
xchg
leave
jge
cli
andl
xchg
fisubrs
cmpsl
hlt
mov
rex.wb
xchg
jb
data16
loope
(bad)
xor
fstps
test
add
(bad)
cmp
(bad)
cmpsl
(bad)
jbe
xchg
rex.wr
lret
(bad)
int1
xlat
rex.wr
rex.wx
imul
adc
jg
gs
ds
rex.rb
lea
rex.rxb
fwait
xor
sar
outsl
fbld
cmc
fimuls
(bad)
mov
mov
sahf
sbb
stos
mov
cmp
cwtl
rex.rb
pop
xor
test
pop
iret
rcr
{rex2
rex.wrx
repnz
in
mov
data16
mov
pushf
sbb
ss
addb
(bad)
push
std
fcomps
cltd
jrcxz
loope
add
test
(bad)
add
mov
movabs
push
(bad)
push
cmp
adc
pop
mov
xchg
sbb
cld
sbb
rex.wrb
lods
outsb
sahf
cmp
cmpsl
(bad)
or
ss
movabs
or
(bad)
or
adc
sbb
clc
loop
lods
rex
rex.b
fs
fwait
or
mov
scas
mov
add
jl
(bad)
mov
(bad)
mov
mov
cmp
mov
or
pop
and
xchg
outsl
pop
jge
jae
addr32
mov
mov
sahf
loop
adc
rcrb
(bad)
adc
pop
fdivp
cwtl
adc
pop
xchg
rex.rb
add
push
data16
rclb
(bad)
rex.b
movsxd
xor
int3
insl
jge
or
movabs
xor
out
js
(bad)
cmpsb
movabs
loopne
fdivrl
xor
(bad)
mov
test
xor
(bad)
jns
pushf
cmp
fiaddl
incb
sub
fstl
push
rex.xb
(bad)
or
imul
mov
sahf
(bad)
fisubrl
lret
incb
add
sub
je
leave
jp
cmp
rclb
jl
push
fcmovnbe
js
movabs
stos
je
xchg
(bad)
in
jp
ds
(bad)
(bad)
cli
fwait
lahf
rex.xb
fistl
lods
mov
or
test
push
rex.rb
es
xchg
jrcxz
(bad)
xor
outsl
(bad)
push
or
clc
or
mov
je
(bad)
je
in
xchg
xor
jo
fcomip
add
(bad)
mov
jp
xor
or
hlt
std
(bad)
stos
xchg
(bad)
scas
adc
cmpsl
lods
movabs
pop
(bad)
notb
lahf
int
jl
outsb
test
ljmp
rex.xb
xchg
ficompl
mov
dec
xchg
sbb
cmpsb
jnp
push
mov
jnp
sub
mov
mov
(bad)
(bad)
fistl
repz
add
cmpsb
sbb
mov
and
cmp
xor
fists
(bad)
int3
stos
movsb
sbb
popf
jne
outsl
call
xchg
fucomip
sbb
iret
imul
nop
mov
