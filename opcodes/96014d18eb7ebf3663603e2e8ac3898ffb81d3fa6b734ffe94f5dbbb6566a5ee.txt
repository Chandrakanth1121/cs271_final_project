lods
insl
lds
out
push
dec
xchg
fs
lcall
jae
and
mov
mov
mov
les
jmp
or
push
inc
insb
data16
push
pop
cmp
insl
int3
xchg
push
mov
pop
imul
mov
ljmp
xchg
mov
ror
pop
push
(bad)
dec
cmp
mov
test
mov
cwtl
out
inc
mov
jecxz
and
repz
lds
pop
cmp
imul
mov
pop
add
clc
sub
mov
hlt
repnz
mov
sbb
dec
and
fcompp
popf
in
push
and
mov
pop
lods
push
cmp
or
in
jnp
iret
pop
lods
fs
xor
jno
mov
fisttps
xor
mov
push
jecxz
ret
pop
repz
xor
and
insb
filds
fsubr
into
push
(bad)
ljmp
rorl
pop
ret
loopne
imul
rcrb
punpckhbw
imul
xchg
adc
divl
popf
gs
lret
add
jmp
pop
mov
gs
cmp
in
push
push
shrl
ss
ror
mov
lds
jmp
notl
int1
mov
sbb
cmp
movsl
push
cs
jecxz
test
enter
ret
gs
sbb
outsb
or
xchg
inc
fsts
sub
lret
divb
stos
sub
or
dec
push
call
sbb
xor
movsb
inc
inc
out
add
pop
rcr
push
imul
xchg
jmp
loopne
mov
rclb
lcall
or
cmp
in
les
pusha
dec
es
add
(bad)
ds
int
mov
cmp
pop
xor
aaa
pop
scas
dec
mov
lcall
jl
out
mov
push
inc
and
jae
cs
ret
push
pop
pop
lods
xorb
test
insl
mov
in
xchg
int3
push
jl
iret
nop
mov
rorl
test
negb
testl
inc
ret
cmp
add
test
int3
jae
xlat
cmp
xlat
mov
lret
daa
jns
inc
mov
xor
mov
inc
xlat
jg
mov
cld
xor
test
xchg
push
push
das
scas
sbb
ja
cld
loope
out
push
arpl
mov
or
sub
pushw
adc
ss
cwtl
add
das
mov
sub
loopne
mov
mov
js
mov
xlat
testl
jl
sub
movsb
cmpsb
out
cs
lret
lods
push
mov
fisttps
cmp
loop
cmpsb
movsl
xor
bsr
sub
cld
call
jp
js
sbb
imul
fcmovnu
sbbl
fnstsw
fdivl
add
aas
fwait
inc
xchg
xor
aam
xor
mov
xlat
mov
loopne
daa
imulb
push
sub
xchg
jnp
inc
sbb
jbe
incl
lcall
mov
xor
pop
dec
fistpl
stc
push
pop
mov
or
xchg
push
or
lds
add
mov
(bad)
fldcw
inc
or
xchg
inc
mov
stc
xchg
xor
cwtl
jne
jnp
outsl
jns
mov
lock
inc
push
sbb
mov
mov
stc
js
pop
sub
xorb
mov
add
sub
push
mov
in
add
cmp
insl
hlt
ret
(bad)
cs
jae
test
js
lods
shll
mov
aam
push
adc
sub
out
mov
movsl
dec
or
pop
lds
push
inc
push
add
bound
std
fsubrl
pop
enter
add
xor
mov
mov
fsubrl
cmp
pushf
sub
dec
out
aas
loopne
lcall
xchg
sti
mov
push
jl
cmp
inc
int
and
fcom
inc
mov
xor
cmpsl
sub
xor
iret
sbb
dec
stos
bound
push
xor
shrb
(bad)
insl
mov
sub
or
sarb
push
cmc
jg
insl
jns
inc
mov
out
sbb
jne
sti
push
insl
lret
test
mov
push
add
fwait
dec
imul
jb
pop
pop
mov
mov
pop
and
into
js
xchg
xchg
jae
outsl
jle
lock
pop
cmp
pop
pop
xor
dec
pop
jns
mov
push
popf
outsl
loope
mov
lock
movsl
lret
mov
fimull
leave
dec
mov
and
jg
mov
ret
mov
adc
pop
sbb
dec
mov
mov
sub
adcb
mov
leave
inc
adc
loopne
addr16
jmp
mov
cmp
xor
(bad)
mov
push
cmp
lods
add
jecxz
hlt
inc
inc
lret
popa
(bad)
leave
int
pop
mov
cwtl
gs
aaa
ljmp
daa
ljmp
pop
cmpsl
inc
dec
xchg
xchg
pop
add
sbb
push
pop
dec
dec
add
sahf
adc
sub
nop
sbb
or
stc
ret
scas
jp
push
scas
cmp
push
inc
xchg
aas
ds
mov
xor
fbld
mov
jecxz
push
xor
cmpsl
push
lcall
imul
dec
ljmp
shr
push
xor
dec
sub
fmuls
ret
aaa
inc
mov
(bad)
xor
stc
dec
mov
lea
in
sub
out
lcall
add
inc
subl
mov
xchg
pop
lret
fmul
cmp
cmp
push
arpl
imul
test
andl
aam
outsb
add
pop
fbld
imulb
imul
shlb
aaa
push
bound
push
repz
inc
mov
imul
stos
adc
cmp
leave
(bad)
cmp
in
fisubl
push
loope
imul
frstor
jp
sub
inc
aas
outsl
and
jae
repz
sbb
xchg
push
cmp
mov
inc
repnz
inc
and
jecxz
jge
shrb
mov
mov
lods
inc
adc
leave
push
call
(bad)
jno
fs
cmp
jno
clc
add
xor
popf
mov
fwait
sbb
(bad)
dec
adc
cli
out
in
mov
mov
sbb
and
sub
test
cwtl
les
out
push
mov
dec
decb
sbb
ror
xor
in
stos
sub
push
sub
aad
movb
and
xchg
cld
xchg
imul
sarl
mov
lea
stc
arpl
call
scas
inc
js
scas
push
inc
jno
xor
jg
inc
add
jne
fistpl
jo
cmpsl
push
push
in
mov
push
inc
jge
push
(bad)
inc
and
sti
pop
mov
cmp
in
mov
mov
test
lds
movsl
push
mov
jle
pop
data16
sahf
aaa
fcompl
mov
test
mov
or
dec
out
aad
mov
loop
ljmp
fistps
and
inc
xchg
daa
test
pop
into
xchg
or
inc
mov
mov
xchg
scas
cmpsl
imul
sbb
cmp
imul
lret
fnstsw
push
sbb
fnstcw
es
dec
lret
es
xor
add
xchg
imul
pop
push
pop
xlat
mov
mov
dec
sbb
inc
int
push
sbb
mov
sub
pop
pop
jmp
push
fcomi
inc
inc
int
sbb
fs
enter
push
cwtl
add
adc
out
sbb
dec
add
int
cltd
bound
fldenv
push
or
jmp
mov
mov
popa
add
jl
adc
stos
(bad)
in
and
inc
sbb
jg
clc
in
lret
sahf
clc
and
aaa
loope
enter
push
add
push
push
out
fstps
jge
fdivl
inc
bound
push
cmp
inc
lea
in
inc
(bad)
faddl
bound
inc
mov
mov
pop
out
out
mov
dec
xchg
cmp
inc
(bad)
shll
push
sbb
inc
(bad)
dec
cmp
push
aas
cmp
int1
fs
shl
iret
enter
insl
mov
sarl
jecxz
mov
in
jp
push
add
cmp
(bad)
dec
sbb
adc
xor
mov
das
shlb
adc
mov
cmp
or
loop
mov
cmc
cmp
sub
je
mov
fisttpl
int1
sbb
xchg
out
cs
adc
es
rol
push
pop
jecxz
incb
cwtd
call
cmp
add
clc
fisubl
push
cmp
mov
test
mov
out
