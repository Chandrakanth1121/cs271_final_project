ja
fsubl
mov
dec
cmp
out
lock
fcmovnb
adc
mov
negl
shrb
dec
dec
int1
cmp
pop
sarb
ljmp
imul
sub
mov
les
cmc
das
negb
call
in
test
out
stos
dec
call
insb
int
jge
sub
cwtl
pop
movsl
xchg
cmp
xor
sub
pop
dec
scas
neg
lahf
pop
enter
add
fisubrs
movsb
and
rol
es
clc
xor
in
ljmp
das
jg
mov
mov
aad
dec
add
mov
test
adc
dec
js
pusha
fldenv
cli
sbb
(bad)
mov
call
pop
mov
pop
js
pop
add
mov
int3
sbb
insb
daa
sub
ret
gs
mov
subl
and
loopne
pop
mov
in
out
enter
push
xchg
sub
dec
cmp
cmpsl
ja
addl
fisttpll
xor
fiaddl
ror
sub
test
cmp
das
lods
pusha
test
cld
into
arpl
push
test
lods
fwait
adc
movsl
pop
push
sub
js
push
sub
mov
add
and
adc
sub
loop
sub
sub
fwait
scas
call
jmp
pop
mov
ljmp
dec
scas
add
pop
and
sbb
pushf
scas
cmp
loopne
and
inc
push
gs
stc
cmpsb
testl
mov
stos
xchg
jnp
rorl
mov
push
fs
test
outsl
mov
or
add
sbb
popa
(bad)
or
mov
fstps
mov
mov
adc
add
fstl
sub
inc
lea
ljmp
mov
mov
mov
push
mov
mov
push
push
in
idiv
hlt
movsb
bound
test
lahf
dec
(bad)
js
inc
pop
test
scas
rolb
int
loope
pop
(bad)
mov
aad
lock
addl
lret
xchg
mov
sbb
ss
mov
inc
gs
xchg
subl
pushf
or
add
lock
in
xor
pop
stc
sub
push
mov
push
mov
mov
insb
jmp
int3
push
fnstsw
push
out
adc
(bad)
lea
and
inc
mov
push
out
imul
mov
(bad)
xchg
mov
xchg
xor
loop
fdivrl
push
inc
mov
cmpb
pusha
adc
dec
xlat
das
sbb
movsb
add
push
aas
sub
negl
add
pusha
lods
(bad)
dec
pop
mov
jbe
and
cmc
pusha
dec
cmpsl
sbb
dec
mov
fwait
adcl
cmp
fwait
in
jb
dec
mov
mov
shll
bound
dec
or
jb
push
out
cmpl
mov
and
sarb
dec
shrb
shrb
loope
(bad)
imul
sub
xchg
adc
mov
cmpsb
cwtl
push
cmp
popf
in
mov
xchg
cwtl
insb
shl
jg
dec
add
inc
push
mov
xorb
int1
jp
inc
sub
mov
pop
mov
mov
dec
lret
rcr
insb
xchg
pop
movsl
loop
mov
jno
sub
xchg
pop
das
das
mov
jnp
jle
or
call
ret
or
xchg
vminsd
out
(bad)
movsl
das
xchg
mov
sub
add
lahf
lods
jo
test
lds
jb
push
xor
lods
out
xchg
pop
cmp
mov
out
jmp
test
or
sbb
adc
pop
push
push
add
adc
sub
out
lods
js,pn
int
push
fildl
movsl
in
dec
fnstsw
ds
ret
scas
pop
test
mov
test
test
out
shr
in
movsb
outsl
ret
rcr
dec
xchg
push
outsb
jge
sbb
(bad)
jp
in
aad
pop
xchg
dec
pusha
mov
and
push
push
push
je
pop
fldenv
inc
loope
jo
sbb
test
cs
add
imul
sub
rclb
flds
lea
shrl
mov
scas
jmp
sahf
or
or
(bad)
or
xchg
call
cwtl
inc
mov
js
mov
jne
pop
mov
dec
ljmp
stos
mov
and
push
cmp
push
pusha
jae
movsb
mov
dec
and
mov
or
xor
mov
fwait
sbb
mov
imul
jg
sbb
aas
push
sub
jg
(bad)
cwtl
stos
xor
xchg
outsl
outsb
cmp
cltd
mov
mov
or
fwait
mov
cmpsb
xor
daa
inc
repnz
repnz
dec
xchg
movsb
pop
mov
mov
jp
out
out
and
sub
fstl
adc
into
loope
cmp
call
mov
std
cli
adc
cld
arpl
push
xor
push
(bad)
xor
push
cmp
hlt
cmpsl
xchg
and
nop
(bad)
daa
push
push
enter
mov
std
arpl
dec
pop
xor
sub
adc
dec
add
(bad)
outsb
mov
pop
ret
pcmpgtw
pusha
xor
jecxz
into
mov
out
test
mov
push
push
(bad)
out
jecxz
pop
and
loopne
loopne
ss
(bad)
mov
and
aas
aaa
sub
aad
xor
negb
imul
mov
insb
xlat
popa
and
mov
push
jmp
and
jno
loope
adc
jge
xor
sub
ljmp
outsb
xchg
push
fs
push
insl
and
push
xchg
ss
xor
dec
iret
jno
cmp
cld
mov
sub
popf
aas
lcall
dec
mov
xor
sub
mov
jg
(bad)
stc
mov
lret
sub
xchg
sbb
scas
out
pop
jg
lods
adc
push
(bad)
cltd
and
mov
push
and
in
sbb
push
repnz
dec
jl
insb
lods
sub
mov
xchg
fs
and
jns
subl
pop
sub
cmpsb
fsubl
in
mov
and
cmpb
add
pop
lret
jns
sub
loop
ret
lret
jmp
movsl
inc
pop
(bad)
mov
and
mov
ljmp
mov
mov
add
sub
mov
sti
aad
scas
sub
mov
in
fnsave
loope
daa
add
ffree
scas
outsl
cld
jnp
adc
or
cltd
jg
ret
jbe
lock
ret
jb
mov
repnz
fstpt
jbe
jmp
adc
daa
sub
cld
les
xchg
jmp
in
imulb
pop
fldt
xorl
sbb
gs
pop
jmp
out
sub
outsb
rcrb
pop
mov
inc
inc
faddl
and
loope
rcrl
popa
shlb
pop
out
mov
pusha
pushf
and
mov
sbb
and
and
and
push
iret
cltd
mov
leave
lods
scas
lods
test
push
pop
pop
popf
cmp
movsb
xchg
jae
(bad)
int
xchg
cwtl
test
xlat
and
adc
lahf
popa
xor
pop
popf
sbb
(bad)
mov
lea
and
addb
subl
popf
inc
mov
int
lahf
mov
sub
call
scas
mov
shlb
fstpl
dec
push
aas
fsubr
ljmp
in
mov
dec
out
stos
mov
adc
mov
mov
mov
xchg
cs
aad
mov
movsb
fwait
pop
jno,pt
js
adc
fcoml
xorl
fstl
add
xor
addr16
imulb
cmp
xchg
daa
data16
das
call
(bad)
addr16
or
adc
cmpsl
jecxz
das
addr16
cmpsb
(bad)
and
or
imul
cli
mov
arpl
cld
cmp
js
cwtl
push
or
mov
xor
(bad)
jnp
mov
and
pushf
str
adc
sbb
sbb
ss
mov
lahf
push
test
daa
(bad)
loop
out
pop
mov
inc
mov
les
mov
std
or
mov
popf
sub
mov
adc
out
push
repnz
jno
ja
add
dec
stos
xor
testb
cld
movaps
sbb
std
(bad)
and
mov
out
rolb
xchg
(bad)
lods
fsubp
pop
mov
lock
das
movsb
jl
pop
cld
or
ja
in
cs
out
cld
mov
adc
cmc
mov
imull
out
aam
nop
sbb
cmp
clc
