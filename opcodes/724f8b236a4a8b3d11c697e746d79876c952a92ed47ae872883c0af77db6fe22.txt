push
xchg
jo
pop
or
pop
btc
das
adc
movsl
mov
pop
fdivrl
mov
das
adc
xor
imul
adc
inc
js
inc
scas
jno
push
cmp
mov
dec
pop
xchg
push
jge
add
cli
movl
pop
adc
xchg
pop
jle
adc
lcall
or
dec
jnp
dec
mov
das
jae
or
notl
lret
jae
and
jle
push
out
xchg
push
iret
inc
or
pusha
adc
jno
or
out
adc
bound
mov
loop
and
pop
aam
push
negl
sub
rcr
xor
pop
jne
jae
popf
lret
adc
dec
sti
adc
mov
and
aad
or
mov
andb
and
pop
js
(bad)
push
xor
test
leave
inc
or
dec
mov
push
cmp
mov
es
jne
dec
xor
or
cmp
jl
cltd
push
pop
adc
cmp
inc
hlt
mov
jne
xor
scas
notl
or
repz
jmp
xchg
jg
lahf
cmc
gs
cmp
jnp
or
inc
sar
dec
mov
lahf
std
incb
xchg
adc
jmp
cmp
pop
push
test
stos
shlb
and
lock
frndint
inc
mov
lret
popf
cwtl
dec
imul
dec
lods
and
(bad)
idiv
cmc
mov
pushf
lock
xchg
test
enter
(bad)
xor
cmp
dec
pop
rcll
arpl
loope
and
mov
jb
lock
sub
inc
mov
inc
push
(bad)
cli
sbb
xor
jae
xchg
mov
cmpsb
dec
mov
(bad)
into
add
and
(bad)
jl
push
testl
xlat
cmc
iret
inc
punpcklbw
(bad)
pop
ljmp
hlt
adc
bound
cmp
lahf
test
cwtl
sub
or
jle
fists
out
mov
stos
xchg
cli
sub
loopne
mov
add
lods
ret
into
or
or
push
nop
in
inc
xchg
pop
adc
xlat
mov
imul
call
test
std
mov
(bad)
xor
xchg
jmp
pop
push
das
in
nop
sbb
sahf
(bad)
xchg
ljmp
push
sub
mov
mov
cwtl
out
pop
mov
inc
mov
push
sarl
mov
push
cwtl
fistpl
aaa
outsb
jnp
aam
jp
adc
xchg
pushf
pop
adc
sub
cmp
xor
(bad)
xchg
xor
sub
dec
push
lods
das
les
clc
pop
shll
lds
test
push
aas
sti
adc
gs
inc
push
or
lods
movsl
mov
mov
cli
stos
dec
add
iret
(bad)
rclb
pop
sbb
loope
xchg
push
popa
dec
jnp
cld
mov
mov
jnp
rcrb
cmp
nop
leave
repz
arpl
mov
xchg
fildll
xchg
fcomip
xor
jmp
scas
xchg
adc
aaa
in
aas
sbb
int1
(bad)
xor
fcomip
shl
movsb
das
mov
fwait
xor
sti
mov
cmc
xchg
test
push
pop
adc
push
dec
sub
popa
imul
call
adc
push
arpl
sbb
xchg
std
ds
pop
cmp
and
aad
cld
jle
xor
repz
xor
and
scas
call
aad
push
(bad)
or
das
lods
pop
negb
and
and
repz
ss
xchg
push
mov
mov
es
es
xchg
adc
sub
cmp
es
inc
sarb
mov
enter
sbb
pop
movl
sti
out
adcl
push
pop
push
stos
mov
sbb
xchg
out
xor
mov
fmull
xchg
(bad)
or
call
into
out
stc
pop
add
xchg
inc
pushf
(bad)
cld
adc
sti
(bad)
mov
lahf
es
xor
fs
push
cmp
dec
in
adc
adc
loop
xchg
fistpl
adc
roll
out
jmp
out
mov
hlt
stos
xchg
lahf
mov
mov
subb
rcr
les
jl
lea
repnz
jno
inc
mov
and
cld
adc
inc
pop
addr16
jns
(bad)
popa
cwtl
in
xchg
xor
data16
xchg
jle
pusha
jg
pusha
fisttps
lahf
jns
jmp
inc
outsb
mov
xchg
pop
or
hlt
pop
dec
mov
lods
lahf
aam
and
add
sarl
fnsave
mov
mov
loope
frstor
int1
xchg
jmp
xchg
add
inc
cmp
add
insl
adc
aad
pop
adc
int
gs
push
lock
call
xor
pop
mov
rcl
jge
dec
mov
repnz
mov
aad
sub
lock
or
fimuls
mov
adc
fdecstp
and
adc
or
repnz
popf
xchg
pop
lods
std
lea
into
push
pop
xchg
or
aaa
add
cmp
push
pusha
mov
cmpsl
mov
mov
push
cltd
in
and
mov
xchg
sbb
std
push
stos
adc
loopne
dec
or
add
dec
dec
push
add
insb
in
xorb
cltd
jle
data16
pop
mov
es
pop
adc
movsb
aam
hlt
arpl
repz
in
std
loopne
loopne
lret
pop
orb
in
fiadds
rcrl
push
xchg
add
(bad)
pusha
xchg
repnz
xchg
cmpsb
mov
xchg
inc
stos
test
dec
push
push
pop
(bad)
(bad)
cld
imul
ds
mov
js
ljmp
out
xor
aas
nop
(bad)
pop
adcb
cmp
mov
push
(bad)
jnp
(bad)
xchg
and
jo
fdiv
(bad)
xchg
mov
xchg
mov
or
leave
rcrb
add
cmpsl
xchg
and
jo
and
lcall
scas
in
cmp
cs
push
mov
(bad)
jp
inc
dec
outsb
lock
and
push
adc
inc
fsub
jecxz
push
jae
add
jecxz
xchg
dec
or
jp
or
inc
test
sub
mov
mov
test
outsb
sti
or
push
in
mov
lock
and
jmp
and
push
jo
cmp
pop
mov
mov
xchg
aam
aad
call
mov
push
adc
inc
into
add
jbe
inc
jo
and
pop
adc
mov
mov
(bad)
mov
dec
mov
in
out
ds
jns
pop
xchg
adcb
scas
xor
fbld
lock
inc
or
adc
pop
dec
sbb
and
push
pop
xchg
cmpsb
cld
jecxz
pop
int3
in
(bad)
lock
divl
bound
xchg
out
lahf
cmp
loop
imul
shlb
dec
xor
in
out
mov
add
cmc
jl
lds
xchg
in
jne
cmp
dec
xor
fstpt
out
jl
fcomps
xor
clc
jmp
sbb
xchg
pop
pop
xor
xlat
xchg
jo
fistl
or
pusha
jns
inc
ss
dec
das
sub
popa
jns
dec
jo
cmpsl
mov
and
inc
push
lock
adc
mov
scas
in
shrb
xor
sti
mov
mov
pop
loope
ficomps
mov
repz
and
jbe
js
dec
add
xchg
andl
int1
les
mov
lock
lea
pop
stos
jne
dec
jnp
jl
xor
and
shl
mov
repz
xchg
pop
adc
jecxz
xor
movsl
mov
rcrl
cmp
cmp
xlat
adc
sbb
loopne
rep
movsl
lea
jmp
xchg
sbb
jge
adc
aas
dec
pop
loop
add
int3
push
cmc
loopne
push
dec
adc
mov
aaa
inc
test
aas
int3
ficomps
add
cltd
(bad)
pushf
aad
and
iret
(bad)
jae
add
and
and
pop
movhps
lds
je
xlat
jle
inc
in
int1
repz
mov
push
das
lock
jg
stos
mov
jmp
popa
pop
fistpll
mov
mov
out
sub
and
insb
loope
push
pop
testl
mov
mov
sbb
dec
add
push
jle
jae
jge
