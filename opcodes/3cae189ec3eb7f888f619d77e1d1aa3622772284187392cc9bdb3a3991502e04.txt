xor
mov
add
mov
ret
mov
testl
jo
xor
in
cwtl
adc
mov
rcll
pushf
stos
enter
mov
sbb
xchg
and
jbe
(bad)
rex.rb
rex.wr
rex.w
rex.wx
shrl
xor
cmc
(bad)
scas
rex.w
adc
cli
(bad)
rex.wrb
jne
rex
mov
xor
mov
rex.x
in
mov
push
ds
sbb
lret
(bad)
jns
cmp
lods
or
push
ja
jge
(bad)
or
movabs
rex.b
(bad)
(bad)
and
xchg
xor
jnp
subb
rex.wb
ret
or
mov
ret
ss
cmp
pop
(bad)
push
insl
ss
pop
xor
fs
(bad)
or
repnz
(bad)
je
incb
insb
push
jb
xchg
(bad)
(bad)
(bad)
shlb
xchg
(bad)
xor
mov
bnd
or
sub
mov
and
push
loopne
movabs
sbb
(bad)
rex.rb
xlat
shrl
fistl
mov
loop
(bad)
jrcxz
mov
(bad)
xor
push
sub
pop
test
rex.rb
sarb
(bad)
data16
lret
cmpsb
xor
adc
(bad)
fcompl
mov
xor
push
out
fstp
mov
mov
repnz
jrcxz
test
sahf
rex
sti
adc
push
xchg
or
rex.x
rex.rx
rex
movsb
add
mov
adc
pop
mov
jne
je
xchg
(bad)
hlt
shlb
add
mov
and
out
out
scas
movabs
movsb
sbb
fcoml
(bad)
ret
ss
adc
xchg
mov
lret
mov
pushf
mov
andl
or
call
jp
pop
je
xlat
shlb
rex.w
push
cmp
push
adc
xor
jle
(bad)
fsubrl
int
out
(bad)
outsl
lcall
or
xor
(bad)
mov
(bad)
ja
out
(bad)
xchg
(bad)
or
sub
lods
mov
fdiv
data16
cltd
sbb
int3
jbe
rex.rx
jl
mov
cmpsl
mov
fs
loop
push
movabs
mov
and
mov
xchg
cli
and
add
movabs
(bad)
add
mov
ds
and
int1
movsl
std
cs
cwtl
sbb
cmp
rex.rx
data16
and
sub
xor
adc
mov
test
imul
int3
gs
vpdpbssds
jbe,pn
push
outsb
jno
rex.wrx
xor
iret
or
jb
cmp
(bad)
pop
xchg
fs
adc
int3
int
rex.x
imul
movabs
je
rex.r
in
movsl
rex.wx
cmp
shlb
fsubs
data16
sub
mov
sub
clc
cmp
and
jrcxz
jb
push
cmc
push
pop
test
(bad)
fldlg2
cs
jmp
xchg
rex.wrb
adc
ss
or
lret
sbb
repz
lret
xchg
cltd
xrelease
(bad)
movsl
xor
sarb
xor
insl
mov
mov
rcll
cli
xor
push
(bad)
out
pop
movsxd
cmp
push
mul
imul
sti
mov
ss
fcmovne
cwtl
rex.wr
sbb
sbb
movabs
xor
or
lret
hlt
addr32
rex.x
fs
fnstcw
imulb
rex.wrx
(bad)
outsl
mov
es
pop
imul
jnp
xor
mov
(bad)
pop
int
ret
je
sbb
rex.wrxb
sbb
xchg
adc
(bad)
in
rex.x
movabs
mov
rex.rb
fs
mov
and
loop
movsb
mov
movsxd
ret
adc
xchg
push
push
jl
mov
jns
fiadds
fs
add
mov
rcr
jg
pop
ss
(bad)
mov
(bad)
addr32
ret
lret
(bad)
ret
mov
mov
jo
adc
pushf
testl
cmp
pop
push
(bad)
cmp
movsl
idivl
in
and
rex
cs
(bad)
je
mov
call
jb
scas
lea
call
xorl
test
rex.wrxb
xor
cmpl
add
xor
xchg
insl
hlt
ja
jp
or
test
xchg
xor
lahf
sti
(bad)
mov
shlb
roll
or
stos
xchg
push
(bad)
push
sbb
jrcxz
push
pop
xchg
rex.x
sub
xor
int3
in
fstps
movabs
cli
(bad)
xor
in
pop
mov
repnz
int
lock
repz
mov
ss
xchg
jns
(bad)
(bad)
movsxd
sti
jns
ds
push
(bad)
mov
shl
or
xchg
movabs
jl
clc
rex.xb
movabs
mov
mov
or
mov
stos
lret
and
or
stos
(bad)
rex.xb
rex.wrx
rex.wb
loopne
pop
mov
mov
add
xchg
push
std
(bad)
xor
cltd
xchg
shrb
xor
pop
imul
adc
(bad)
rol
stos
(bad)
imul
mov
int
or
(bad)
test
rex.wrx
pop
movabs
cmc
fisttpll
mov
andl
test
hlt
(bad)
ds
lret
(bad)
pop
popf
hlt
or
call
rex.wb
and
lods
(bad)
or
fdiv
adc
pop
or
cmpsb
jno
cli
ja
push
shlb
movsb
(bad)
test
cld
push
hlt
movsb
(bad)
(bad)
in
sub
cmpb
sbb
out
es
rolb
test
xchg
in
cwtl
mov
push
cmp
add
test
mov
ss
shr
mov
ret
loopne
push
rcrb
add
and
and
(bad)
and
mov
mov
xchg
sub
push
sub
rex.wxb
hlt
loope
in
repz
mov
adc
cli
(bad)
outsb
{rex2
(bad)
loopne
sub
fmull
jo
xchg
push
rex.xb
out
sub
mov
(bad)
gs
pop
push
mov
add
adc
push
rex
repnz
jmp
(bad)
push
lea
mov
movsb
(bad)
adc
xchg
xchg
test
hlt
cwtl
stos
fs
out
(bad)
fimuls
cli
and
out
in
negl
adc
stos
mov
(bad)
push
adc
rex.wx
add
stos
out
sbb
shrl
bnd
int1
xor
loope
(bad)
test
insl
iret
scas
push
bnd
(bad)
(bad)
adc
nop
scas
(bad)
cmp
movabs
push
adc
or
mov
data16
fiaddl
addr32
rex.rb
and
pmullw
test
pop
cmp
movabs
shr
adc
(bad)
out
sbb
in
scas
fwait
xlat
xchg
mov
(bad)
imul
jns
loop
rex.wrxb
jp
adc
cltd
movabs
xchg
rex.rxb
insb
pop
outsl
jb
rcr
add
xchg
lret
rex.wb
push
and
(bad)
in
sub
out
cli
xchg
outsl
jb
pop
fldenv
push
sub
imul
jl
(bad)
loope
iret
xchg
(bad)
lods
loop
and
mov
(bad)
pop
xchg
push
shll
rcl
xchg
or
mov
mov
rcrb
sbb
add
adc
je
int
enter
add
fdivr
adc
ret
ja
test
jbe
(bad)
jne
lock
int
cltd
mov
pop
adc
movabs
lret
jg
ds
mov
or
loop
cmp
clc
movabs
or
jo
push
je
mov
rex.b
sti
in
add
sahf
fdivrl
mov
fucomp
movsxd
jle
jns
sbb
xlat
or
mov
rex.wrxb
test
jns
push
out
iret
loop
out
adc
sub
addr32
rex.b
stos
rex.x
movabs
insl
(bad)
or
in
pop
rex.wx
cs
xchg
ja
rex.r
jmp
sbb
fstpl
or
hlt
push
mov
nop
ds
lods
imul
push
cltd
xor
(bad)
push
out
int1
sbb
xchg
xchg
test
mov
cltd
pop
movsxd
in
movabs
cli
push
pop
rcll
movabs
in
(bad)
(bad)
sbb
imul
xchg
fs
mov
out
push
push
enter
pop
push
pop
ds
ja
jns
(bad)
mov
rcrb
or
insl
mov
cmpsb
sbb
(bad)
mov
xor
repz
out
push
(bad)
lods
sbb
rex.r
(bad)
movabs
mov
mov
(bad)
jp
and
call
test
mov
stos
in
outsl
push
lret
(bad)
push
pop
add
mov
and
test
mov
movsb
es
outsb
add
xchg
jrcxz
insb
xchg
pop
stc
clc
ja
jno
adc
sub
add
fiadds
ret
jge
xor
enter
cmpsl
scas
or
push
or
repnz
imul
