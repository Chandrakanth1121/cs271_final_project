push
jecxz
jmp
pop
push
mov
jb
jne
sbb
testl
int
adc
ja
push
jmp
cmpsb
add
or
gs
xor
shll
add
ja
pop
pop
aas
je
dec
loopne
push
sbb
lock
fldl
fiadds
mov
data16
add
or
lahf
nop
sahf
push
pop
jmp
push
or
scas
hlt
xchg
push
or
pop
or
ret
lcall
xchg
xor
out
popa
or
sbb
data16
dec
clc
xor
rolb
xchg
out
aaa
(bad)
and
add
push
inc
rclb
int
sbb
incl
inc
ss
cli
sub
pop
in
or
mov
lods
add
ja
daa
cli
pop
push
fistps
xlat
push
test
fisttps
sub
lret
mov
ja
in
fisubl
inc
xchg
cmp
test
and
mov
call
inc
lahf
imul
push
stos
fisubrl
inc
xchg
jmp
cmp
sub
stos
mov
mov
mov
rolb
lahf
xchg
jmp
adc
fimull
sahf
stc
pop
test
add
adc
das
push
xchg
loope
mov
cs
jmp
adcl
call
xchg
(bad)
out
jbe
xchg
neg
add
or
mov
jge
push
aas
inc
sbbl
insb
addl
and
filds
cwtl
dec
adc
add
sbb
mov
mov
sub
ss
arpl
in
jge
pop
cmpsl
mov
xchg
and
scas
js
das
push
fisttpl
cmpsb
scas
sbb
shll
jb
lahf
xchg
xchg
sahf
andb
out
mov
push
lret
mov
add
cmp
ud2
add
push
nop
adc
dec
dec
scas
inc
iret
mov
insl
pop
ror
leave
dec
xchg
loopne
mov
adc
jb
add
out
int1
loop
lods
clc
cli
lcall
sbb
clc
jo
jo
pop
out
mov
sahf
ret
cli
dec
movsb
ds
xlat
jbe
push
in
loop
fisttpl
movsb
pop
cmp
lea
rcrl
rclb
push
sub
out
int1
jo
inc
pop
lcall
sub
test
into
inc
inc
xchg
pop
imul
je
cmp
dec
jl
sahf
ds
push
sub
push
data16
sbb
outsl
imul
or
pop
inc
jb
sbb
ja
jne
mov
dec
jb
out
mov
jp
push
stos
lds
xchg
dec
xchg
xchg
ja
les
mov
movsb
adc
sbb
push
jae
(bad)
pop
mov
test
add
jle
xor
in
test
sbb
ss
xchg
shll
adc
insb
cmpsb
orl
push
inc
mov
mov
sbbb
cli
inc
insb
jo
lret
test
mov
inc
pop
cltd
xchg
push
push
pop
mov
adc
rcll
add
xor
adc
repz
cld
xlat
jae
mov
leave
in
rcrl
mov
inc
cmpsl
sahf
movsl
rcrb
xchg
popa
negb
xchg
cmpsl
subl
dec
add
mov
sar
mov
xchg
xor
repnz
dec
pop
imul
or
pop
jbe
sub
mov
adc
mov
bound
adc
mov
and
nop
test
pop
in
cmp
dec
fucomi
xchg
(bad)
xor
shlb
ret
hlt
and
jbe
jmp
movl
dec
cmpsb
imul
incb
fwait
sbb
sub
xchg
scas
(bad)
repnz
pop
pop
decb
testb
out
xchg
out
out
sti
aaa
sub
stc
sbb
inc
push
mov
mov
ss
xchg
jp
jno
or
mov
iret
mov
outsb
je
jmp
and
mov
mov
(bad)
xor
xor
ds
pop
popf
fmull
ficoms
xor
filds
sysenter
addr16
dec
xchg
pop
insb
dec
mov
xchg
jae
xchg
adc
daa
stos
std
mov
les
inc
inc
mov
pusha
out
jb
push
cmp
ret
and
call
pusha
lcall
dec
mov
nop
nop
(bad)
push
jle
cwtl
push
adc
jo
mov
lods
mov
jo
mov
mov
scas
inc
pop
mov
xchg
inc
(bad)
push
pop
cmp
and
adc
and
pop
mov
xchg
insb
xchg
xchg
ror
xchg
cmp
push
inc
pop
int
(bad)
arpl
xor
cmp
in
cltd
xor
xor
addr16
fnstenv
aad
push
rol
push
loopne
lea
fs
sbb
ja
cwtl
fcoms
testl
fistpl
fld
lock
xor
cltd
mov
mov
sahf
dec
push
dec
xchg
xor
and
pop
xchg
cmp
cwtl
(bad)
pusha
xorb
dec
xchg
push
test
shlb
dec
cmpsl
adc
push
repz
xlat
fwait
pop
cld
gs
inc
or
xchg
push
ja
pusha
testb
call
and
out
mov
xchg
xor
scas
mov
xlat
call
mov
fistps
inc
leave
adc
loopne
jmp
stos
cwtl
pop
jb
mov
mov
loopne
or
pushf
out
push
pop
(bad)
cmp
popf
cmp
xchg
sub
inc
fdivrs
push
ja
mov
xor
push
push
jnp
or
sbb
push
out
cwtl
add
cltd
ficoms
push
fwait
pusha
fildll
and
mov
sbbb
inc
lret
pop
add
pop
movsb
push
(bad)
pop
fsubr
push
faddp
sbbb
mov
mov
ljmp
(bad)
adc
rolb
test
or
decb
daa
popf
ss
mov
das
or
jl
or
dec
lods
cltd
mov
cli
bound
pop
add
pop
sbb
dec
or
mov
mov
movb
xchg
fwait
in
xchg
push
sub
xchg
mov
decl
jmp
popa
repnz
popa
leave
or
fdivl
sub
xorb
xchg
pop
cwtl
rorb
and
push
mov
lea
jbe
xchg
stc
dec
addr16
cmp
out
(bad)
(bad)
pop
movsl
(bad)
addl
fistpl
clc
(bad)
pop
loope
pop
jne
jmp
out
push
orl
addl
lea
fbld
stos
add
adc
and
push
push
or
cmp
xor
pop
and
cs
cmp
adc
aas
xor
fcoms
(bad)
xchg
aad
cld
add
leave
pushf
xor
out
dec
cmp
xor
pop
mov
shll
xchg
cmp
stos
dec
inc
fwait
sbb
sbbb
push
mov
xchg
notl
mov
xchg
clc
or
into
jb
fimull
xchg
fists
(bad)
push
inc
(bad)
adc
aaa
(bad)
pop
fstl
data16
lods
fwait
xor
add
add
sarb
pushf
ret
jp
pop
lahf
cmp
sbb
mov
and
aaa
or
push
popa
sahf
aam
mov
jbe
test
inc
pop
add
insb
dec
js
sti
cmpsb
mov
xchg
push
push
lods
or
xchg
jge
sbb
pop
outsb
sbb
add
int1
xchg
rep
push
sub
mov
mov
and
push
mov
mov
lea
subb
test
rcl
cmpb
(bad)
mov
add
sub
inc
pop
or
in
stos
jg
rcrl
pop
gs
loopne
call
sbb
mov
mov
loope
loopne
mov
jns
mov
cmpsb
repnz
mov
push
xchg
pop
andl
or
jnp,pt
inc
xchg
xchg
scas
pushf
jnp
out
jns
xchg
or
push
mov
push
test
push
mov
mov
imul
loopne
ret
ret
roll
sbb
rcll
xchg
aam
adc
std
repz
in
subb
sbb
pop
dec
pop
enter
outsb
imul
outsl
inc
mov
stos
xor
(bad)
loop
sbbl
addr16
fisubs
xchg
sbb
clc
adc
cmp
movl
jl
pushf
and
lea
ficoms
cmp
inc
leave
mov
mov
inc
lcall
mov
cmp
push
sbbl
cli
out
arpl
xchg
lcall
or
or
pop
(bad)
test
scas
