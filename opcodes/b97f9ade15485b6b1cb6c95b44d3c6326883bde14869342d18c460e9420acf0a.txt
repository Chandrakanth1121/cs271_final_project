insl
pushf
fstpt
inc
dec
push
call
loop
mov
mov
xchg
mov
mov
push
(bad)
ret
sbbl
dec
outsb
fsts
call
mov
add
loope
and
out
sbb
fsubrl
mov
cltd
mov
sbb
mov
es
mov
ret
dec
inc
jno
mov
dec
das
(bad)
(bad)
sub
pop
jle
lods
sub
cwtl
dec
jmp
push
daa
movsb
cmp
lea
jb
mov
mov
fmull
xchg
mov
mov
mov
cmpsb
stos
adc
xchg
insb
xchg
add
xchg
stc
push
nop
mov
cmp
mov
cmp
cmp
enter
pop
lds
sub
add
es
adc
(bad)
push
dec
imul
sub
pop
mov
jp
mov
push
or
mov
(bad)
mov
inc
loop
sahf
adc
jle
xor
les
test
and
adc
sub
mov
aam
scas
mov
mov
jmp
pop
jae
cs
sub
xchg
push
or
scas
loope
inc
push
enter
mov
insl
out
(bad)
lcall
mov
movl
fisttpl
in
dec
inc
dec
push
lods
add
cltd
(bad)
push
cltd
(bad)
sub
sbb
add
xor
out
push
clc
xchg
and
(bad)
adc
xor
lahf
pop
into
dec
jge
in
lods
mov
aam
shll
out
adc
pop
push
or
psubb
xchg
push
test
xlat
shrb
xchg
push
les
add
pop
or
lcall
xchg
and
loopne
dec
mov
filds
sub
sahf
jnp
arpl
mov
adc
es
xchg
push
mov
ss
dec
mov
jno
clc
and
imul
xchg
sub
dec
and
scas
pop
dec
mov
nop
xchg
sub
loope
and
mov
jnp
imul
sub
test
adc
hlt
and
scas
push
pop
dec
lahf
adc
fstpt
mov
mov
inc
loope
sub
and
or
mov
jg
(bad)
out
nop
adc
shrb
mov
sub
test
and
jg
fimuls
shl
(bad)
pusha
jge
out
jb
cmp
jle
add
sbbb
mov
and
cmp
lret
les
ds
mov
xor
or
push
repnz
(bad)
call
lds
ja
push
mov
repz
mov
les
je
sub
pop
daa
sbb
incb
ret
subl
pop
sbb
jle
dec
movl
adc
in
inc
mov
mov
inc
adc
leave
out
jnp
adc
xor
push
orl
push
push
xor
addr16
aas
cmp
xchg
jns
push
inc
data16
xlat
lret
push
push
out
xor
jge
pop
lods
mov
jnp
sbb
lea
sarl
jb
rorl
int1
shll
in
(bad)
scas
jg
pushf
xor
(bad)
sub
push
dec
nop
ret
lahf
outsb
push
push
(bad)
xchg
lea
dec
pop
iret
and
jge
mov
or
mov
andl
jg
or
lods
jo
inc
insb
lods
addr16
mov
or
sub
lods
ss
sbb
xor
ja
adc
clc
add
cmp
cmp
push
loop
adc
movsl
mov
cld
sbb
inc
in
cltd
jg
ret
in
stos
push
add
xor
pop
imul
pop
aaa
rcll
dec
fidivrl
test
cld
push
push
cmp
aam
insl
js
(bad)
and
mov
addl
mull
xchg
addl
ss
inc
mov
inc
pop
pop
jp
inc
outsl
jmp
sbb
jle
dec
sbb
lret
sub
into
and
hlt
mov
clc
(bad)
int
pop
mov
inc
sub
jae
sub
ret
loopne
sub
sti
xchg
aas
xor
cmp
ds
xor
insb
xchg
in
add
add
xor
or
xor
test
jmp
ret
test
imulb
and
dec
in
xchg
incl
out
jge
jp
das
scas
outsb
sbbb
loop
sub
xchg
and
pop
aas
jmp
ret
fstp
mov
push
test
movb
cmp
inc
push
inc
lds
xchg
ljmp
arpl
push
cmp
mov
and
rclb
sbb
jmp
cmpsb
pop
movsl
ret
into
adc
fmuls
test
add
jnp
cmp
in
fcomps
xor
in
xor
(bad)
xor
pop
pop
jb
cmpsl
call
sub
mov
add
cs
and
sbb
test
xchg
add
sbb
lds
sub
mov
mov
into
mov
repz
fildll
xchg
mov
jno
inc
cmp
dec
and
fldl
mov
bound
decl
mov
jnp
jb
add
adcb
push
mov
int1
outsb
mov
es
sahf
jno
cmp
sub
jno
in
push
xor
inc
cwtl
fidivrs
mov
and
mov
sbb
repz
push
jbe
loope
push
enter
lea
lds
stos
add
daa
push
xchg
orl
(bad)
daa
dec
xchg
ja
sbb
xchg
jae
test
and
mov
jo
scas
or
mov
hlt
inc
cmpsb
scas
das
jle
mov
cmp
orb
mov
mov
add
cmpsl
andl
ja
lock
add
jbe
xlat
sub
mov
test
and
iret
jmp
cmc
leave
pushf
add
xchg
dec
aad
mov
xchg
jnp
jge
and
mov
xchg
cmp
mov
loope
mov
sbb
test
and
filds
in
pop
mov
dec
mov
mov
mov
jae
sbb
sbbl
push
and
and
add
je
std
sbb
push
xchg
sub
push
inc
movsb
cmpsl
das
push
outsb
vpsllw
ret
jp
xor
(bad)
fdivs
push
in
inc
push
xchg
shrb
sbb
xlat
dec
or
add
pop
lods
pop
mov
dec
scas
insb
fldl
addr16
pop
cmpl
add
add
es
das
imul
rcrl
scas
dec
imul
jp
lcall
test
sahf
inc
bnd
call
push
jl
pop
xchg
mov
push
push
dec
cmpsb
(bad)
ds
xlat
inc
aam
add
sbbb
and
ja
loop
mov
pop
fsubl
in
sub
add
js
jl
add
repnz
pop
xchg
lcall
adc
and
xchg
sbb
xchg
loope
inc
mov
pop
outsb
sub
jg
dec
xchg
and
sar
push
jns
scas
mov
cmp
andl
xchg
pusha
lods
(bad)
fwait
lret
cli
mov
xor
adc
pop
cmpsl
fisttpl
stos
and
push
inc
jnp
paddw
lea
movsb
mov
scas
cmpsl
inc
sub
push
iret
stos
lahf
std
push
mov
js
mov
cmp
mov
mov
and
pop
or
mov
cmpsb
scas
fistpl
lods
je
sbb
mov
xorb
dec
cld
xchg
jb
dec
xchg
test
jb
(bad)
sub
sbb
pop
into
daa
pop
js
inc
sbb
or
and
pop
mov
pop
(bad)
xchg
and
or
or
and
push
xchg
and
dec
cwtl
imulb
popa
out
cmp
and
test
mov
inc
xchg
xor
cli
dec
rorb
lret
adc
dec
into
cli
imul
mov
add
mov
dec
test
jmp
cmp
fsubs
cmpl
orl
mov
xorl
sbb
les
xchg
mov
ljmp
and
cmpsl
xor
lods
add
idiv
test
lret
add
orps
fidivs
jbe
add
out
mov
sahf
xchg
sbb
scas
add
xor
lods
test
and
push
pop
hlt
hlt
add
adc
and
int
mov
xadd
add
sbb
sahf
mov
loopne
and
adc
push
inc
mov
or
push
cmpsb
adc
nop
mov
inc
jecxz
btc
xlat
rolb
test
jo
add
jae
data16
or
es
cmp
mov
pop
movsb
bound
push
and
jmp
and
sbb
xor
