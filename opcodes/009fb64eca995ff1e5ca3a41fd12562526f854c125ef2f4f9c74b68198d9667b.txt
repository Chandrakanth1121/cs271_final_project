fcmovu
push
xchg
(bad)
lods
mov
adc
push
cmpsl
test
xchg
(bad)
mov
xorl
inc
cmp
push
mov
insl
fbstp
mov
bound
inc
jbe
push
inc
push
push
xor
stos
jbe
inc
xchg
pop
pop
dec
jge
adc
sub
push
push
fstpl
sbbb
inc
mov
out
cmp
jb
fdivr
mov
pushf
aam
cmc
out
and
iret
movsb
mov
mov
pop
loop
xchg
mov
push
ds
popa
xchg
mov
int
sahf
(bad)
push
push
pushf
bnd
cmp
dec
lods
push
push
shlb
cmpsb
(bad)
dec
adc
xchg
mov
dec
adc
shlb
dec
scas
and
loopne
mov
sbb
xchg
jbe
mov
pop
stc
xchg
test
test
popf
sub
sbb
push
(bad)
outsl
dec
rcrb
push
lcall
ljmp
sahf
xor
and
stos
popa
inc
push
inc
int1
jp
lock
in
push
movsl
popf
pop
movsl
add
sub
loop
cmpsl
dec
(bad)
jle
inc
aam
(bad)
cld
pop
callw
int3
push
inc
pusha
lea
xor
int
fwait
mov
push
xchg
movsbl
lea
dec
loopne
xchg
fsubrl
sub
outsb
(bad)
sbb
jae
xchg
add
repz
out
dec
pop
(bad)
fcoms
fstpl
ljmp
data16
adc
lahf
movsl
mov
adcb
pop
xchg
mov
stos
adc
mov
orb
dec
scas
jae
fidivl
mov
push
ljmp
repz
dec
data16
pop
lods
add
(bad)
xchg
mov
cli
push
sub
pusha
adc
xor
lea
xchg
pop
(bad)
dec
loop
sbb
jmp
faddl
push
xlat
jmp
cmp
test
pop
adc
mov
data16
and
and
adc
push
test
inc
inc
imul
cs
shl
cmp
or
jl
dec
and
mov
cmpsb
jae
mov
jecxz
insb
cmpsb
pop
inc
sub
mov
fistpll
mov
push
ucomiss
mov
add
fisubrl
cmp
in
jl
mov
fisubl
insl
popa
jl
pop
mov
in
mov
and
pop
sub
pop
mov
add
in
dec
or
pop
stos
xchg
shll
(bad)
daa
lcall
arpl
sub
daa
ss
addr16
inc
cmpsl
test
divb
pop
cmpsl
sbb
dec
xor
leave
mov
mov
xchg
jns
cmp
inc
or
and
arpl
mov
nop
int1
mov
xor
sbb
stos
dec
mov
jnp
(bad)
jbe
xchg
cmp
lds
shll
(bad)
adc
mov
lret
mov
sbb
cmp
mov
xor
fsubrp
jecxz
cmp
xchg
cmp
out
xor
lds
push
mov
daa
cltd
les
cs
sbb
pop
push
sbb
das
xchg
mov
enter
push
out
cmc
sbb
mov
mov
sub
fldt
(bad)
jnp
jp
jns
xor
dec
stos
dec
dec
in
mov
push
add
jnp
ret
pop
clc
dec
push
add
mov
ss
ja
int
inc
xor
ret
cmpsb
ret
mov
popa
pop
or
dec
push
jno
mov
inc
incb
xchg
sbb
mov
fbld
dec
push
shrl
rol
fmuls
mov
arpl
bound
loopne
xchg
cmp
sub
daa
xchg
aam
or
dec
or
aaa
adc
dec
or
nop
cltd
xor
daa
daa
pop
or
cmp
xor
mov
add
push
xchg
pop
dec
jns
repz
dec
pop
lds
cmp
repz
ret
adc
in
lret
jl
sbb
loope
shrb
js
popf
movsl
cmp
lea
lret
or
dec
push
shl
jb
jge
fs
sbb
int
mov
test
mov
in
push
popf
mov
dec
stc
aam
inc
mov
jmp
popf
idiv
insl
dec
push
mov
adc
out
push
lods
aas
push
cmp
fadds
dec
(bad)
inc
cmpsb
dec
fwait
dec
push
sub
cmp
dec
sub
popf
std
jp
lret
es
lea
pop
test
in
xchg
xor
jae
dec
push
dec
addr16
fisubrs
cmp
in
cmp
cmp
(bad)
shlb
aad
sbb
inc
push
(bad)
cmp
inc
fldenv
sbb
xchg
mov
inc
ds
arpl
sbb
pop
mov
sub
jge
ret
les
ret
out
mov
clc
mov
jmp
stc
inc
fwait
pop
insl
lea
rorl
ja
fildll
pop
jb
dec
ja
fsts
jnp
dec
add
adc
xor
sub
jno
loop
into
inc
xor
subl
mov
das
mov
sbbb
lock
into
repnz
shll
mov
mov
and
inc
test
arpl
mov
cmpsb
rorb
mov
fs
cmpsb
mov
xor
and
cmp
sbb
cmp
jb
sub
add
jle
fsubrl
outsb
orb
dec
test
mov
xor
ret
idiv
mov
int
dec
pop
pushfw
fadds
test
int
bound
enter
cld
adc
pop
pop
pop
cli
nop
es
popf
adc
mov
call
pop
cmc
inc
out
fucomi
or
xchg
cmp
gs
jecxz
test
sti
mov
lea
jg
pusha
call
es
pop
das
cmp
fwait
dec
test
repnz
pop
push
(bad)
jae
bound
pop
gs
(bad)
sbb
mov
stc
dec
pop
test
ret
xor
and
jmp
mov
mov
daa
cmp
sbb
push
(bad)
lahf
pop
inc
aam
jne
dec
fdiv
adc
inc
sarl
mov
pop
or
loop
jne
lcall
out
(bad)
cmp
mov
sarb
sbb
les
push
rcl
sub
mov
fmulp
lcall
inc
hlt
repz
rorb
push
sbb
add
adc
and
cmp
push
rolb
outsl
inc
jle
scas
or
int3
aas
push
mov
inc
fsubl
repz
push
and
in
xor
loop
pop
push
sbb
mov
sub
pop
repnz
ds
mov
loope
xchg
pop
push
lods
mov
add
jae
push
out
push
sahf
fsts
cwtl
movsb
xchg
negb
leave
inc
xlat
mov
jb
in
inc
clc
dec
scas
imul
sbb
cmp
xor
ss
shrl
or
cmpsl
pop
loope
lcall
dec
inc
(bad)
dec
mov
cwtl
mov
in
dec
aam
sub
insl
hlt
add
dec
pop
fs
sbb
(bad)
ss
mov
or
push
pop
xor
mov
ja
push
push
jmp
mov
inc
push
mov
inc
mov
cli
mov
push
cmp
cwtl
xchg
cli
adc
js
adc
xor
insb
daa
popf
or
andb
imul
mov
mov
cmp
pop
cmp
testb
sbb
mov
mov
loopne
push
movsb
fidivl
pop
js
sahf
cwtl
mov
cmpsb
loope
ficoml
jle
leave
lods
pop
dec
pushf
mov
shrl
adc
sbb
dec
add
pop
push
mov
mov
in
inc
pop
repnz
jae
sbb
adc
lods
scas
ja
sbb
scas
jns
jno
dec
(bad)
rcl
push
ljmp
pop
fidivl
push
pop
not
(bad)
insl
andb
in
push
and
filds
adc
in
mov
xchg
loope
das
jge
aad
lcall
sbb
jle
sub
imul
imulb
mov
lret
jecxz
xor
cli
mov
(bad)
cld
pop
mov
mov
popf
test
pop
insb
int1
push
aam
push
mov
dec
(bad)
cmp
fcompl
nop
cwtl
inc
jmp
pop
lcall
add
fbstp
imul
lahf
push
mov
inc
lret
loopne
pusha
orl
and
push
movsl
pop
test
and
xchg
(bad)
in
(bad)
push
adc
inc
