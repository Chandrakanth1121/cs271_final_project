mov
add
add
add
add
add
add
add
add
add
jnp
add
test
add
fidivl
or
fstps
fwait
mov
mov
push
inc
fcoml
lret
hlt
movsb
mov
push
out
pop
mov
jge
inc
in
mov
sub
std
ss
pop
outsl
push
mov
jne
inc
outsb
sub
fsubrl
femms
jmp
cwtl
movsb
cli
or
ss
(bad)
cwtl
das
sar
in
mov
mov
pop
xor
out
push
js
xchg
cmp
pop
(bad)
loopne
sti
mov
mov
imul
cmc
mov
and
cs
sub
xchg
aad
inc
inc
hlt
fstpt
inc
mov
sbb
sub
sbb
push
jno
push
jns
push
jne
imul
cld
pushf
lahf
je
scas
lcall
cmp
nop
adc
lea
pop
mov
xchg
ret
in
(bad)
cmp
cwtl
push
pushf
movsl
flds
or
and
xchg
test
adc
inc
xor
inc
iret
push
faddl
fidivs
int
ss
(bad)
push
cmp
dec
das
pop
push
pop
loopne
repnz
ljmp
jmp
or
repz
xchg
movntq
mov
xchg
fldenv
jo
in
jl
xor
xor
mov
dec
xlat
pop
lea
pop
xor
pushf
les
cmp
test
push
or
and
mov
fidivl
out
pop
and
pop
and
imul
ret
cltd
cltd
push
dec
mov
mov
(bad)
inc
sub
ficoms
pop
adc
rclb
int1
(bad)
or
test
dec
push
movsl
scas
int3
xlat
add
mov
pop
cli
arpl
and
repnz
int1
lret
add
stos
movsb
xchg
sub
into
call
inc
outsl
sbb
xor
mov
popa
bswap
fidivrl
ret
notl
inc
mov
mov
xor
xchg
mov
ds
xchg
dec
cmp
inc
push
cmp
roll
jl
call
lret
test
cmp
xor
inc
mov
adc
mov
pop
out
jae
imul
sbb
js
sti
push
ret
pop
xchg
(bad)
repnz
jno
push
push
cmpsb
loopne
fldenv
mov
andb
jle
(bad)
fwait
int1
inc
adc
inc
ja
ds
cmpsl
push
or
cmp
cld
stos
rcrl
movsl
add
push
dec
sbb
xchg
ljmp
mov
mov
popa
in
jb
lahf
testl
lods
gs
xchg
mov
daa
je
aam
popa
les
push
adc
cmp
xor
fldpi
popf
adc
(bad)
out
adc
cmp
(bad)
mov
fsubrs
jmp
mov
or
push
mov
or
mov
mov
leave
into
pop
pop
sbb
push
add
sbb
stos
pop
mov
pop
mov
inc
pop
aas
pop
outsl
jns
and
scas
clc
sbb
int3
inc
jbe
das
stos
mov
cmp
push
sbb
cmc
inc
xor
das
scas
cmp
lret
arpl
shlb
sub
cmp
dec
cmpsl
adc
call
loop
divb
inc
dec
gs
lods
in
or
xchg
xor
and
out
das
mov
ds
or
les
mov
loope
ljmp
sbb
cmpsb
dec
gs
insb
test
fildl
inc
repnz
imul
push
loopne
cld
stc
aas
aas
dec
dec
les
stos
ret
mov
inc
dec
sub
sbb
add
inc
push
pop
mov
addl
std
sub
addr16
and
daa
jl
inc
pop
push
shrb
jp
mov
adc
dec
aaa
push
xor
jo
inc
shr
sbb
ds
mov
mov
jg
and
(bad)
sbb
fbstp
and
mov
mov
popa
arpl
xlat
mov
push
ficoml
ret
jne
jb
cmp
push
or
cmp
pop
mov
and
xor
push
repnz
pop
in
sbb
fcoml
pusha
sbb
lods
push
dec
in
mov
mov
(bad)
ds
jecxz
movsb
mov
xchg
ficoms
(bad)
hlt
lahf
js
mov
ljmp
ja
stc
mov
cmp
mov
mov
in
and
mov
pushf
xchg
xchg
inc
call
sub
in
push
dec
out
sti
jp
sub
push
lea
jne
and
cmp
sahf
dec
or
idivl
test
mov
jb
dec
leave
movsl
or
xchg
call
add
cltd
and
mov
outsb
mov
or
les
mov
aaa
cli
add
and
pop
stos
int3
push
leave
rorb
mov
movsb
push
setns
push
sahf
jo
fcmovb
inc
mov
lcall
cmp
xor
inc
sbb
(bad)
xchg
adc
into
or
(bad)
dec
mov
xor
cltd
sub
add
inc
mov
mov
inc
cmp
in
pop
mov
out
pop
xchg
push
xchg
xchg
mov
adc
int1
adc
xchg
pmaxub
ror
pushf
imul
dec
clc
scas
lods
inc
sub
xchg
cs
jmp
and
shrl
inc
pusha
and
sbb
xchg
mov
movsb
mov
aad
dec
sbb
and
pushf
mov
cmp
pop
sbbl
(bad)
mov
fwait
mov
xor
jae
xor
pop
(bad)
add
add
loopne
and
push
cld
stos
fwait
dec
mov
ja
js
idivb
push
add
shll
pop
adc
ds
push
movsl
lea
ret
sub
ja
jmp
(bad)
mov
add
mov
stc
fs
pop
xor
into
(bad)
int
jne
stos
loop
or
imull
into
out
fistpll
adc
mov
or
int1
jbe
std
jo
dec
inc
shll
sti
cltd
and
lret
push
pop
loope
lcall
mov
repz
test
pusha
xchg
std
sub
add
jg
or
jmp
dec
sub
mov
cmp
push
adc
lret
mov
and
inc
cld
cmpl
ljmp
repz
pop
fistl
and
mov
sub
clc
(bad)
jb
(bad)
into
adc
push
lahf
adc
ficompl
clc
adc
gs
fistps
setae
movsb
xor
testl
scas
subl
out
addb
mov
xchg
push
and
mov
mov
sub
cmp
xlat
inc
lcall
mov
aaa
mov
enter
test
(bad)
sahf
loope
cmp
push
lret
mov
cwtl
jge
and
cmp
pop
inc
push
jg
lods
mov
mov
ds
jo
jmp
and
scas
pop
jbe
add
mov
xor
aad
xor
inc
call
pop
es
cmp
or
pop
(bad)
mov
mov
aam
xchg
inc
mov
lahf
sub
lret
pop
cmpps
mov
negl
xchg
popf
pop
shll
out
or
fimull
(bad)
lods
cmp
jg
fcoml
cmpsl
cmp
pminub
mov
adc
sbb
xor
sbb
pop
pushf
add
mov
mov
add
andl
outsb
mov
push
jns
lock
pushf
mov
ljmp
push
mov
movsl
cmpsl
loopne
out
jb
sbb
pop
test
xor
cmp
ret
aad
mov
sbb
lods
sahf
or
movsl
ret
mov
gs
in
fistl
push
dec
imul
pop
repz
and
out
int3
sub
mov
sbb
mov
jg
cmpl
sub
in
sbb
adcl
xchg
sub
xor
es
xorb
rorl
pop
adc
movsb
mov
neg
pusha
add
inc
push
int3
push
push
ja
(bad)
fs
test
mov
inc
mov
jo
add
and
add
sub
sub
sbb
movl
pop
jle
test
cld
sub
pop
push
in
outsl
add
push
cmp
mov
inc
fcompl
mov
push
inc
adc
inc
bound
dec
xchg
cmpsb
cwtl
xor
jle
fiadds
out
out
push
call
loope
push
(bad)
pop
int
pop
mov
xlat
cmpsb
ret
adc
nopl
cli
or
xor
arpl
aas
push
