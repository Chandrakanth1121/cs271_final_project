add
xchg
mov
inc
imul
ja
push
frstor
mov
int3
add
adc
mov
jbe
cmc
fiadds
jge
mov
xchg
jecxz
xlat
fwait
cmpsb
and
(bad)
jo
imul
rcr
mov
js
push
rclb
mov
cs
shrb
push
xchg
push
pop
pop
int1
add
test
arpl
pusha
ja
pop
adc
lcall
sub
loopne
bound
push
mov
adc
(bad)
aad
or
mov
fsts
push
es
adc
test
xchg
xchg
inc
jmp
bound
fiadds
jbe
mov
(bad)
int3
les
mov
cmpsl
jp
out
ret
and
arpl
sahf
loopne
das
xlat
mov
(bad)
adc
xor
jnp
mov
jo
lods
iret
(bad)
push
push
push
pop
lahf
sarl
ficomps
(bad)
sbb
pop
add
or
adc
(bad)
dec
gs
ret
leave
xchg
adc
cmp
das
stc
outsl
addr16
push
in
push
pop
push
pop
push
add
and
fimull
jb
dec
fisubl
mov
adcb
flds
push
inc
cmp
ret
jb
push
adc
jl
das
repz
or
rcr
popf
push
ret
push
js
pop
fldt
push
daa
out
push
int1
pop
sarb
fs
ret
xchg
xchg
push
push
lods
adc
inc
cld
jp
dec
pushf
fistpll
fstps
sub
lods
xchg
push
push
aaa
sar
jg
xlat
popf
shl
rcr
int3
dec
and
rcl
mov
cmp
mov
test
sti
fcoms
ret
fnsave
add
faddl
es
lds
lock
mov
testb
xchg
mov
pop
pop
mov
data16
negl
dec
rclb
mov
inc
mov
adc
fdecstp
mov
movsb
adc
add
ds
xchg
popf
stos
ficoms
daa
jns
fidivrl
sbb
lods
dec
adcb
xlat
mov
rcrl
into
or
outsb
pop
pushf
push
push
push
in
movsl
cli
cmp
jl
jae
adc
mov
jne
popf
cmp
insb
or
int3
mov
mov
push
aas
pop
repnz
mov
outsb
ja
sbb
adc
mov
es
sbb
cltd
pop
jnp
push
cmc
scas
scas
push
call
push
test
push
push
add
rclb
and
insb
jb
shlb
push
fists
scas
ja
add
sbb
aaa
cli
adc
(bad)
xor
sti
push
into
xchg
movsl
leave
jae
inc
cmpsl
cwtl
xor
int
sub
mov
jne
es
push
sbb
inc
out
mov
xlat
sub
lds
lods
sbb
mov
rcl
mov
or
xor
pusha
rcll
pop
jno
or
dec
push
je
lahf
(bad)
aam
xor
mov
mov
scas
xor
xchg
sub
sub
xchg
lock
nop
bound
push
mov
fiadds
push
mov
ljmp
fwait
mov
or
and
cld
jns
dec
jb
xchg
xchg
(bad)
mov
fcompl
push
lret
adc
stos
daa
add
insb
cs
push
and
inc
push
mov
ret
loop
mov
jp
pushf
sbb
sub
cmpsl
js
cltd
sub
jno
mov
rorl
das
sbb
mov
or
adc
mov
xor
inc
add
lds
pop
fsubs
mov
jbe
in
adc
cli
xlat
xchg
mov
mov
cmp
add
sbb
je
ss
mov
add
push
xchg
jle
inc
cmp
nop
sbb
call
xchg
jbe
and
scas
insl
loope
or
repnz
stos
pop
arpl
add
fxch
aaa
mov
jb
scas
cli
jp
jp
ljmp
mov
loope
mov
pop
jno
fucomi
mov
ljmp
mov
xchg
pop
xchg
enter
sbb
inc
daa
int1
arpl
push
std
mov
inc
mov
dec
aaa
bound
scas
add
xchg
jmp
sub
push
xchg
rclb
(bad)
push
pop
cmpsl
lret
fbld
(bad)
sar
(bad)
jno
test
xchg
outsl
jb
xor
cmp
cmp
shlb
dec
pop
lahf
(bad)
(bad)
xchg
pop
jbe
pop
ret
outsl
pop
popa
xor
ja
xor
lret
(bad)
xchg
mov
nop
loopne
sub
inc
mov
mov
(bad)
and
xchg
shl
push
mov
push
add
sahf
out
nop
shrl
xchg
out
pop
mov
loop
sub
xor
push
lret
nop
jns
xchg
dec
adc
sti
fs
lds
add
inc
mov
insl
cmp
repz
xor
adc
pop
jg
inc
jb
xchg
inc
jae
notl
xor
push
cmp
aad
pop
sub
push
and
cld
push
in
jbe
lcall
fdivr
jle
pop
aam
jle
sub
mov
jne
test
popa
test
dec
sbb
ficomps
roll
mov
jne
repnz
or
adc
adc
push
add
xor
sbb
jge
adc
sahf
test
and
out
inc
test
xor
aaa
cmp
xchg
stos
aas
int1
outsb
lret
cmpsb
ret
fcmove
jecxz
xchg
jbe
mov
out
sbb
mov
repnz
dec
ficompl
fidivrs
mov
push
dec
sbb
mov
adc
xorl
sti
and
jbe
loope
fstps
and
and
pop
push
push
push
repnz
push
repz
push
cmpsl
add
test
xor
mov
mov
popf
mov
inc
xchg
cli
loope
and
ror
push
cmc
shrl
sub
xchg
mov
jle
push
jns
inc
jb
or
in
jns
rcl
mov
jp
pop
pop
sub
and
add
xlat
mov
dec
sbb
sbb
lods
rcl
popa
mov
fstp
push
arpl
push
inc
jp
sbb
sbb
add
lods
push
arpl
repz
clc
mov
addr16
lock
mov
insb
xchg
js
ljmp
repz
and
pop
stos
add
push
push
jmp
jecxz
inc
mov
cld
lret
xchg
jle
pop
shll
bound
xchg
imul
nop
fisttps
mov
test
rorb
cmp
mov
add
int
lods
mov
inc
pop
lret
rcll
and
inc
inc
cli
xchg
and
xchg
dec
add
int3
and
dec
sub
ss
loope
dec
mov
cmp
int1
pop
aas
stos
pop
je
daa
inc
adc
fisttpl
lret
pop
arpl
xchg
push
inc
shrb
push
add
cmp
stos
push
(bad)
mov
jo
(bad)
lods
(bad)
packsswb
mov
and
push
dec
fistpl
ret
fmull
pop
stos
jbe
insb
lea
(bad)
push
sub
jmp
push
inc
ljmp
add
es
or
and
cmpsb
jb
lcall
jge
sbb
loope
ficompl
test
jo
ds
add
imul
push
movsl
je
xchg
or
adc
sbb
aam
insl
out
pop
xchg
cli
leave
push
gs
dec
add
dec
and
test
cmp
(bad)
xor
mov
pusha
sbb
jp
add
fmul
push
push
ja
sbb
dec
ljmp
call
rclb
dec
nop
mov
jo
data16
aad
mov
mov
pop
outsl
cs
movsb
insl
bound
in
mov
cwtl
cmp
std
add
fisubl
dec
xchg
cmp
adc
push
push
jge
push
push
jl
fisubs
mov
movsl
mov
jmp
daa
inc
inc
or
mov
adc
xchg
pop
adc
in
imul
fcoml
fbld
push
(bad)
arpl
adcl
inc
decb
add
fsubl
lds
jb
xor
lods
dec
push
ss
adc
xchg
add
rolb
cli
xchg
mov
repnz
cmp
inc
cmp
stos
bound
inc
push
loop
add
scas
cld
sti
cld
jp
xor
lret
nop
bound
and
cmp
add
rcrb
jle
push
mov
lret
pop
