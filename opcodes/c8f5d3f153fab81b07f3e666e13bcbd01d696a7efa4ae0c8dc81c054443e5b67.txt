mov
push
add
add
add
add
add
add
add
xchg
add
add
add
add
add
imul
lcall
sub
daa
ds
xor
lret
jnp
sbb
add
imul
loope
aaa
jns
jnp
mov
fwait
inc
inc
nop
scas
(bad)
jp
ret
ljmp
add
or
addr16
adc
insb
jecxz
xor
fisubl
mov
les
or
sub
imul
popa
dec
mov
and
clc
push
sbb
jnp
pop
sub
pop
or
ret
nop
and
mov
pop
cmp
loope
mov
inc
outsb
shll
push
fwait
enter
mov
ficompl
fdivr
fcomp
dec
push
jmp
or
movsb
imul
insl
rcrb
in
inc
cmp
notl
aam
mov
idivb
xchg
es
movsb
(bad)
sub
stos
out
lcall
mov
bound
jbe
sub
sbb
adc
xor
dec
(bad)
add
(bad)
insb
data16
and
loop
out
ret
xchg
and
and
(bad)
and
fwait
sbb
mov
xor
xchg
scas
pusha
pushf
dec
jp
mov
xchg
mov
int1
xor
aas
push
push
sbb
fsubp
lea
(bad)
adc
or
mov
or
mov
jmp
jo
dec
push
sub
in
push
notl
(bad)
mov
mov
lret
and
iret
or
inc
test
push
mov
shlb
mov
mov
pop
sub
movsb
and
xor
dec
sbb
push
aas
push
mov
add
push
pop
pop
push
mov
clc
imul
frstor
out
cli
cmp
ret
add
inc
rorb
decl
add
cmp
les
inc
inc
cmpsb
mov
pop
cwtl
bndstx
out
pop
test
(bad)
cmc
sub
lods
insl
push
in
outsl
lret
rclb
dec
jp
push
dec
outsb
adc
and
dec
jbe
call
jl
cs
test
gs
mov
mov
shlb
sub
shll
cmpsb
(bad)
shlb
daa
xchg
lahf
push
cmpsl
shlb
mov
in
pop
jp
sti
fnsave
push
outsb
mov
sub
inc
or
into
jmp
cltd
sub
adc
dec
dec
enter
mov
and
xor
lcall
xchg
pop
sub
pop
mov
bound
jb
loope
flds
jns
lea
ficoml
ljmp
lcall
mov
jl
xchg
jg
stc
push
es
inc
push
adc
dec
inc
addr16
test
scas
sbb
inc
jl
out
mov
jmp
sar
fst
mov
ja
mov
test
(bad)
adc
xchg
dec
fnstenv
mov
lods
ja
insb
push
sub
sub
sub
xchg
mov
sbb
mov
fwait
push
lock
out
mov
fnstcw
daa
enter
inc
mov
jo
cli
jle
pop
out
popf
lcall
adc
dec
fnstenv
xor
jp
dec
push
or
mov
lea
aam
jae
inc
dec
cmp
and
cmc
sbb
push
pop
bound
jo
push
loopne
int3
mov
mov
sbb
cmpb
jae
fsubrl
sub
loopne
out
aaa
out
arpl
adc
sub
jmp
and
xor
add
inc
jb
in
inc
or
js
sbb
xchg
mov
sbb
mov
fdivrl
lods
ret
cmp
adc
sahf
sbb
and
test
mov
test
(bad)
mov
and
sub
mov
sub
xlat
cmp
jle
lret
xchg
jnp
(bad)
mov
test
and
imul
(bad)
sbb
xor
mov
push
pop
movsb
sub
mov
adc
aaa
loope
setb
arpl
cmpsb
push
into
stos
imul
jmp
mulb
aaa
test
and
pushf
inc
add
cmp
rorl
xchg
lds
or
pop
add
push
mov
clc
dec
add
lahf
xor
sarb
lret
dec
leave
fs
push
jbe
aam
mov
pop
inc
jl
mov
add
mov
jbe
add
cmc
jno
push
cs
dec
sbb
xchg
pop
fistps
cmp
sub
push
dec
hlt
(bad)
movsl
push
enter
inc
loope
insl
jo
subl
pusha
push
pop
dec
pextrw
push
pop
pushf
int
xor
mov
sub
int
pop
mov
inc
push
stos
movsl
cmove
sub
daa
test
mov
pop
imul
dec
popa
pop
xor
lret
fwait
or
xchg
cltd
push
sbb
push
lret
mov
mov
pushf
es
arpl
pop
sbb
incl
pop
xor
inc
mov
or
test
lcall
mov
sbbl
mov
(bad)
ljmp
faddl
into
loope
stos
shll
int3
popf
fnsave
or
enter
insb
dec
leave
mov
jno
sbb
cmp
int1
mov
inc
loop
loope
adc
ds
mov
decb
push
pop
fwait
fs
je
test
jne
scas
ljmp
aad
pop
pop
movsl
std
mov
mov
cmp
jecxz
push
sbb
fs
and
(bad)
lahf
negl
insl
mov
push
enter
xor
mov
mov
movsl
fiaddl
and
hlt
ficomps
sahf
cmp
je
and
lcall
sarb
xlat
mov
xchg
adc
test
mov
shrb
cli
jno
int1
aam
cmp
insb
aaa
in
pop
xchg
xchg
adc
inc
pop
rorb
cmp
sub
lret
ds
js
stos
mov
jns
add
add
adc
and
and
test
fcoms
and
stos
sti
sub
pop
mov
out
bound
mov
sub
lds
cmp
ss
andl
jae
js
lea
roll
pop
cmpsb
adc
outsl
fsubs
xor
dec
dec
out
mov
ja
lock
mov
(bad)
mov
clc
jbe
movq
xor
pop
aad
xor
sub
fimull
xchg
jecxz
xchg
out
fcompl
test
ret
cmp
jnp
mov
test
xorl
loop
adc
add
sbb
std
int1
xor
aaa
lea
rolb
or
sbb
lock
ljmp
cmp
flds
test
fldenv
fiadds
test
inc
or
jl
xor
shrl
add
cwtl
pop
push
lds
(bad)
out
shrb
in
xchg
pop
fnsave
inc
scas
out
addl
and
mul
push
and
jl
xlat
out
lea
cltd
imul
arpl
jmp
mov
cld
sub
dec
xor
int
(bad)
push
pop
xchg
cmp
or
xchg
(bad)
sub
sub
xchg
xchg
mov
mov
jecxz
out
sub
setae
shll
test
out
mov
push
fs
js
inc
insb
adc
inc
call
popa
mov
dec
jecxz
loope
mov
or
mov
aam
ror
addl
mov
das
sbb
push
loopne
into
imul
ret
jns
(bad)
xlat
pop
rolb
jl
push
jne
call
push
ret
(bad)
inc
adcb
lds
push
push
aas
mov
mov
sbb
cmp
adc
mov
insb
push
add
test
or
ret
imul
xchg
mov
sahf
test
adc
divb
jecxz
jle
clc
enter
fldlg2
mov
gs
add
mov
loopne
cld
in
js
and
(bad)
repnz
pop
sbb
nop
dec
ret
jb
lret
sub
or
push
mov
inc
movl
inc
mov
inc
ss
dec
scas
pop
xor
push
out
cld
mov
(bad)
(bad)
adc
push
xor
stos
jo
cmp
(bad)
adc
stos
loopne
pop
(bad)
fdecstp
mov
xchg
dec
std
aad
cmp
in
mov
aam
mov
imul
jg
shr
in
arpl
and
ljmp
out
ficomps
(bad)
lods
jo
cmp
call
addr16
test
mov
sbb
pushf
sarb
pop
jno
xor
outsb
frstor
mov
ret
adc
lea
les
adc
sahf
push
rcrl
inc
out
push
lret
ret
mov
push
cmc
dec
fildll
mov
push
lret
xchg
jns
out
push
mov
