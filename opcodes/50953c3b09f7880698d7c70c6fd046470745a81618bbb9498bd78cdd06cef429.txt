int
mov
mov
(bad)
hlt
pop
xchg
imul
pop
adc
mov
and
mov
pop
fisubrl
ficompl
or
rolb
shrl
out
add
jns
out
(bad)
cmp
insl
rorl
cld
popa
fistpll
mov
out
and
xchg
adc
in
imul
repz
fdiv
mov
dec
lds
cmc
pop
jbe
or
and
pop
jb
(bad)
pusha
hlt
mov
add
(bad)
rcll
mov
rorb
stos
movsb
push
pop
sub
push
add
or
rcr
incl
in
ja
(bad)
cwtl
hlt
push
in
mov
test
(bad)
push
outsl
cmp
shrl
cmp
movsl
push
stc
add
in
mov
adc
bound
(bad)
outsl
clc
rcrb
jecxz
pop
or
mov
cli
stos
mov
insb
pop
stos
push
fs
or
jns
in
push
pop
mov
lar
inc
das
in
mov
mov
es
add
bound
dec
pop
mov
loop
das
add
mov
xchg
xchg
fs
sbb
sub
fmul
aaa
xchg
mov
cmpsl
inc
sahf
mov
jb
or
lahf
lods
sub
fwait
sbb
push
push
inc
mov
js
loop
jae
lea
inc
test
dec
lds
dec
test
lcall
push
cvtps2pi
cmp
adc
into
fs
mov
scas
lahf
daa
sub
jae
call
ret
mov
repnz
(bad)
testb
sbb
pop
dec
cmp
(bad)
mov
ljmp
stos
push
les
push
dec
(bad)
hlt
pop
push
pop
add
call
inc
arpl
jns
mov
insl
add
xlat
(bad)
mov
and
dec
sub
inc
je
in
pop
inc
push
sbbl
mov
rcll
pop
popf
cmp
outsl
jnp
pop
or
stos
inc
pop
adc
ret
int3
cs
out
ret
stc
sar
xchg
imul
or
dec
xor
and
jle
and
test
testl
int
rclw
cmpsb
adc
out
test
mov
roll
sti
dec
xchg
mov
sbb
js
leave
mov
lea
leave
mov
and
or
pop
int3
and
lods
fsts
data16
lea
call
int1
gs
add
movlps
adc
leave
or
cmc
insb
fiaddl
or
adc
xor
fiadds
lock
imull
in
xchg
push
mov
insb
mov
pop
or
sbb
fistpl
bnd
int3
lds
arpl
movsb
popf
scas
mov
(bad)
decl
lods
int
push
aas
setbe
sbb
xor
dec
aas
add
or
cmp
pop
adc
mov
addb
test
aas
or
push
das
xlat
outsl
repnz
mov
ret
pop
mov
inc
mov
cmp
cmp
push
jg
fsts
dec
fsubrp
pop
inc
mov
xchg
popf
mov
pop
orb
test
jl
xchg
ret
push
mov
push
add
pushf
in
cld
xchg
fldl
push
add
aaa
shlb
sub
pop
jns
or
dec
popf
cmp
xor
movsb
rcl
add
jb
lret
pop
(bad)
push
pop
call
xchg
xor
pop
xor
loop
mov
ds
xchg
ret
stos
push
or
push
and
fcomp
sbb
ljmp
cmc
adc
jno
enter
lahf
or
pop
popa
popf
out
and
add
adc
mov
mov
pusha
cmp
loopne
test
adc
pop
lea
lret
inc
adc
outsb
push
(bad)
adc
cmp
sub
mov
imul
aad
cmp
dec
fwait
cmp
sbb
mov
jp
loopne
in
push
in
xchg
dec
fwait
nop
pop
mov
std
shlb
sti
std
push
jmp
cltd
sti
scas
inc
lea
sar
sti
addb
aam
ljmp
push
add
jbe
add
pushf
push
add
dec
fcompl
pop
lahf
xchg
(bad)
arpl
inc
fwait
or
imul
and
je
mov
cmp
mov
shrl
in
fwait
cmp
mov
cmp
inc
adc
orl
arpl
jb
mov
mov
lret
fstpt
xor
inc
out
push
daa
or
mov
pop
subb
int
fwait
or
cld
sub
xchg
sbb
shrb
imul
pop
sar
mov
jecxz
push
outsb
sbb
dec
dec
sahf
jle
mov
add
push
sbb
jne
cli
shrl
scas
int
aam
mov
inc
adc
mov
dec
js
xor
inc
push
mov
xchg
mov
aas
sbbl
xor
mov
inc
xchg
aaa
fldl
fsts
push
sbb
mov
sbb
ljmp
mov
fcompl
aaa
ret
lcall
(bad)
lods
jecxz
xor
mov
push
jae
add
cmc
mov
jmp
inc
shrb
(bad)
fucomp
fistps
out
stos
ficomps
xchg
jmp
int
test
repnz
xchg
or
lods
(bad)
into
cld
ror
cltd
call
dec
mov
test
inc
or
lahf
aas
rclb
cwtl
add
mov
mov
sbb
call
mov
daa
mov
cmp
jmp
jmp
aaa
mov
fnsave
or
mov
orb
pop
push
adc
leave
inc
xlat
rol
jno
cmp
dec
in
inc
pop
xchg
sbb
sub
pushf
push
lret
dec
test
or
adc
xor
fdivrs
cmpsb
(bad)
xchg
dec
pop
xlat
or
adc
pop
xchg
cmp
push
mov
sbb
and
fadds
xor
mov
dec
and
pop
xor
xorb
or
inc
daa
lret
repnz
add
aad
sti
ss
fcomp
or
enter
lahf
or
pop
sahf
mov
out
add
gs
fwait
mov
jge
int3
shll
mov
test
push
les
out
inc
ja
mov
xchg
test
test
xchg
jle
stos
dec
jo
leave
test
dec
add
enter
adc
and
sub
call
lahf
xchg
inc
jecxz
cmp
cmovs
aas
mov
fsubp
cmp
mov
cld
jge
lcall
or
cmp
jp
scas
rolb
mov
push
or
shrb
inc
add
jae
pushf
or
fldl
mov
push
(bad)
sti
mov
sbbl
pop
loopne
push
in
jp
pop
push
(bad)
or
mov
inc
dec
add
push
pop
cmp
pop
fildl
inc
pusha
push
pop
mov
repz
loope
rorb
dec
pop
xchg
xor
in
mov
pop
movsl
xor
(bad)
jle
mov
sbb
cmp
push
sub
lcall
push
cmpsb
cmp
stc
fsts
mov
into
push
imul
jle
daa
xor
pop
adc
cmp
pop
mov
or
out
rclb
cwtl
sbb
cli
ds
adc
in
mov
xor
pop
add
pop
mov
rolb
mov
rcl
adc
xchg
mov
popa
pop
jno
fwait
inc
iret
nop
fidivrl
dec
in
inc
mov
(bad)
pop
sbb
mov
mov
push
arpl
test
cs
dec
clc
and
aaa
adc
(bad)
dec
and
xchg
cltd
pop
adc
leave
mov
inc
push
clc
lcall
(bad)
adc
jnp
fstp
lret
leave
mov
pop
or
inc
(bad)
mov
inc
sub
int
fstl
sarl
lds
xor
mov
push
in
mov
arpl
sub
arpl
cmpsb
xchg
cmp
ds
loopne
pusha
add
fstpl
jl
mov
outsl
push
popf
pop
in
cmp
(bad)
loopne
cmpl
out
cltd
rolb
out
sbb
sbb
pop
push
pop
xor
fistl
dec
fwait
pop
mov
stc
pop
jo
int1
ljmp
jg
fildl
push
pop
add
mov
lcall
pop
mov
psubd
adc
jmp
outsl
daa
mov
cltd
xchg
push
sub
lahf
pop
leave
mov
insl
inc
xchg
sbbb
outsb
add
fdivl
pop
in
cli
dec
ja
ret
