mov
push
add
add
add
add
add
add
add
add
add
or
push
loop
pop
stc
add
lret
popa
aam
pop
cmc
jle
push
mov
std
ficoms
mov
dec
ds
hlt
mov
ret
sub
mov
dec
ret
aas
inc
add
das
jecxz
push
pop
sub
xchg
(bad)
sub
inc
sbb
stos
jmp
loopne
lret
nop
fwait
jecxz
pop
add
ljmp
lret
xor
push
mov
fsubrl
cmp
bnd
int
ffreep
jb
repz
adc
in
cltd
sub
scas
xchg
dec
fxam
xor
push
fs
sub
lea
rorb
andl
mov
xchg
gs
inc
push
fidivrs
inc
xchg
sbb
out
mov
out
push
mov
pop
in
xchg
leave
imul
or
jns
inc
das
sub
adc
sahf
xchg
or
xchg
jg
(bad)
addr16
sbb
add
inc
daa
out
xor
mov
cmp
mov
and
bnd
sarl
andb
push
es
cmpsb
pop
lcall
inc
cwtl
sarb
aad
lds
cmp
testb
dec
cltd
xchg
loop
test
sub
adc
stos
testb
sbb
mov
inc
xlat
iret
arpl
(bad)
mov
popa
or
adc
repnz
pop
scas
scas
testl
push
ss
repz
push
test
adc
adc
imul
loopne
dec
hlt
xor
lahf
out
test
cmpsl
dec
lods
(bad)
fidivs
and
enter
out
cmp
or
sub
stos
fadds
fadds
lock
mov
call
cmp
add
ret
and
sbb
mov
test
mov
xchg
jmp
cwtl
inc
push
dec
dec
xor
test
inc
loopne
inc
mov
cwtl
out
mov
aam
lahf
xchg
ja
std
pop
sub
jnp
lret
adc
push
and
sub
orl
xor
lahf
es
rclb
mov
xchg
test
rcll
dec
iret
into
adc
bound
xchg
mov
add
or
add
push
pop
lds
and
add
out
popf
test
xchg
adc
in
mov
xlat
or
je
sbb
mov
lahf
mov
test
es
out
shlb
pop
ficoml
dec
inc
std
lea
negb
pop
mov
jno
andl
into
js
cli
or
mov
(bad)
popa
jne
and
out
mov
adc
cld
out
mov
xchg
xchg
pop
xor
(bad)
repz
fwait
(bad)
push
andb
add
mov
and
cli
bound
push
jle
mov
int
(bad)
mov
das
loop
inc
sahf
jmp
cs
xchg
int1
repnz
sti
push
mov
and
notl
add
fwait
and
(bad)
(bad)
scas
stc
dec
repnz
adc
sbb
cmp
dec
shll
and
pop
sti
lock
movsb
dec
cli
push
and
insb
inc
fwait
lret
mov
orb
stc
into
sbb
mov
add
mov
jno
fists
add
movsb
pop
or
jno
cmc
insb
hlt
mov
xchg
shr
dec
dec
ret
mov
sub
ret
add
sub
in
enter
pop
sub
jge
das
addr16
mov
ja
inc
sahf
loope
addr16
das
mov
mov
pushf
lahf
hlt
sub
hlt
mov
shrl
fisubrs
loop
push
(bad)
loopne
repnz
imul
jmp
cmp
aam
xor
add
pusha
and
jne
push
cmp
out
(bad)
jmp
dec
out
mov
rorb
filds
xchg
stos
in
pop
mov
jp
mov
push
push
iret
int1
jge
sbb
jne
push
enter
or
(bad)
inc
test
insb
add
cmpsl
push
lea
add
inc
rcll
jb
sub
or
lcall
insb
mov
(bad)
push
popa
lret
aam
pop
inc
xorb
std
scas
xor
xor
sbb
and
movsb
sub
adc
cwtl
mov
rcl
das
jmp
adc
into
sbb
fld
xchg
adc
scas
add
mov
movsl
shlb
mov
mov
mov
int3
std
imul
cmp
rorl
pop
xlat
push
cmp
dec
mov
push
test
mov
les
negb
xlat
cs
cmp
push
xchg
adc
mov
cmp
iret
xchg
and
push
rcr
add
add
mov
fs
imul
fwait
out
mov
jp
repz
xor
mov
jge
push
pop
sub
mov
je
fsubrs
add
xlat
inc
adc
ss
sbb
aas
data16
test
inc
repnz
push
enter
es
shrb
and
inc
adc
add
dec
inc
mov
(bad)
dec
sbb
or
jne
push
ja
adc
js
push
mov
xor
das
cld
jo
loop
add
loop
jae
rorb
jo
out
add
or
int3
adc
jb
out
fst
push
cli
mov
sub
sub
fsubrp
jb
sahf
stos
mov
sbb
xchg
inc
lods
jb
jmp
sbb
fsubp
xor
push
adcb
pushf
jl
into
xor
or
xchg
xchg
mov
test
iret
mov
jne
xchg
(bad)
jb
mov
fstps
fstps
dec
stos
mov
sub
mov
dec
outsb
xor
pushf
movsb
pop
lock
mov
push
cmp
in
andl
cmc
push
and
dec
pmuludq
leave
repnz
sub
dec
por
add
test
sub
rclb
scas
ret
mov
fs
pusha
rol
rcll
(bad)
repnz
outsb
ds
pop
push
fadds
lret
ds
pop
std
cmp
jp
jmp
fdiv
shr
aam
ret
mov
int
push
jecxz
lods
sarl
jae
nop
xchg
lds
jmp
or
or
loop
or
popf
lds
inc
stc
stos
gs
ja
or
xor
fwait
mov
push
adc
and
jg
and
mov
daa
je
xchg
mov
xchg
cs
hlt
(bad)
iret
lods
les
push
popf
(bad)
ficoml
sub
add
cmp
sub
add
daa
jmp
rorl
enter
pop
mov
jne
fimull
jge
xor
outsl
or
gs
sbb
mov
js
sbb
and
ficomps
dec
out
(bad)
push
nop
lods
inc
push
repnz
scas
adc
fsub
jmp
je
mov
rcrl
aam
pop
push
adc
call
jbe
or
ljmp
fidivrl
stc
fwait
paddq
or
jnp
outsb
cmp
stc
(bad)
mov
mov
(bad)
lcall
jb
and
xchg
jb
jno
ljmp
imul
add
add
cmp
adc
inc
sub
push
sti
mov
pop
and
popf
sub
fstps
add
leave
lahf
dec
lds
dec
push
mov
out
cmp
dec
es
jns
jae
loopne
shrb
je
dec
fbld
jne
jbe
inc
add
push
mov
jnp
aas
inc
es
push
ja
adc
jl
test
mov
(bad)
jns
addr16
popa
push
ss
aas
sbb
xchg
in
add
jae
inc
dec
loope
ret
stos
adcb
inc
pop
ret
insb
or
scas
sbb
lcall
cmp
cmp
fadds
and
mov
push
sahf
xor
mov
add
call
xor
ss
mov
les
jb
or
in
mov
lea
cmp
fcomps
sub
ds
xchg
sbbl
add
nop
pop
mov
and
sahf
mov
jbe
repnz
xor
xchg
lret
movsl
adc
push
jmp
dec
movsb
lds
cmp
cmp
jae
or
cmp
or
clc
pop
xchg
js
mov
mov
das
out
es
adc
cmp
adc
(bad)
xchg
xchg
arpl
scas
(bad)
cli
sbb
inc
test
(bad)
or
jmp
(bad)
inc
pop
inc
or
mov
in
into
loop
and
std
inc
jbe
aas
push
jne
dec
out
add
add
enter
outsb
and
or
or
