fnstsw
dec
pop
stos
push
mov
outsl
shll
out
out
std
imul
or
xor
sbb
mov
mov
pusha
aad
xor
mov
inc
mov
je
lahf
or
mov
clc
xchg
into
push
es
mov
add
cmp
repnz
(bad)
xor
mov
test
push
daa
or
std
dec
cltd
(bad)
loopne
iret
jmp
es
aad
loope
cwtl
(bad)
into
scas
inc
iret
cmc
arpl
data16
add
std
inc
gs
xchg
jle
out
cmc
(bad)
push
or
mov
stc
mov
je
adc
mov
fisttpll
jns
sbb
dec
jbe
sub
mov
enter
sahf
inc
push
test
mov
rolb
jo
std
neg
mov
mov
fstps
sbb
negb
sbb
test
jb
adc
push
stos
xchg
dec
cld
cli
test
aaa
xor
cli
fwait
nop
scas
in
mov
jp
push
dec
je
stos
adc
int1
pushf
add
add
and
pop
mov
lods
movsl
imul
mov
cmp
mov
out
in
dec
cli
aam
mov
fdivrp
in
mov
pop
mov
mov
pop
dec
rdtsc
cmp
push
(bad)
aad
push
es
cmp
scas
mov
inc
push
mov
jbe
cmovno
jg
cmp
jbe
dec
arpl
les
(bad)
mov
xor
xor
adc
bnd
xchg
ljmp
mov
test
sti
inc
ljmp
xor
lods
sti
rcrl
(bad)
pop
adc
movsl
mov
repz
xchg
ljmp
ss
mov
cmp
sub
mov
mov
cli
ja
cmp
loope
jns
aad
das
inc
pop
add
jo
jae
adc
push
jmp
jbe
inc
data16
push
and
push
xchg
loop
xchg
ja
jb
mov
into
or
inc
jbe
mov
jp
or
jnp
xchg
fs
and
dec
stos
pop
sub
clc
push
sbb
clc
(bad)
sti
add
jno
inc
adc
subl
loope
dec
xlat
dec
lahf
sarl
stos
aaa
push
lea
xchg
fcomps
or
loopne
dec
jno
jmp
xchg
push
xchg
in
cmp
inc
inc
xchg
dec
rcll
jge
cltd
into
xchg
mov
sbb
int3
int
aaa
sbb
push
and
mov
inc
add
mov
loop
and
mov
dec
das
add
ss
das
out
or
mov
incb
jge
stc
jne
and
adc
(bad)
jmp
test
dec
or
and
or
addr16
loopne
xor
jbe
or
mov
test
jno
mov
mov
xor
add
out
enter
xor
int3
or
and
incb
in
sbb
cmp
pop
sub
loope
or
lcall
iret
insl
push
loopne
jae
ss
adc
sub
push
add
sbb
les
int
ror
int1
mov
inc
cmp
add
jmp
hlt
dec
xor
outsb
addb
es
cwtl
std
sbb
xorb
loop
mov
sub
mov
mov
in
(bad)
mov
add
add
pop
call
jmp
or
or
xorb
stc
xchg
or
(bad)
rolb
mov
pusha
call
hlt
addr16
outsb
ss
inc
xchg
and
fldln2
mov
(bad)
rorb
add
jg
jbe
in
popa
les
sbb
adc
test
mov
lret
pop
(bad)
cmp
lds
pop
pop
cmc
xchg
hlt
inc
fnstsw
adc
sub
(bad)
mov
push
inc
sub
pop
les
gs
imul
pop
aas
mov
inc
adc
and
and
add
push
add
dec
jno
push
scas
rorb
add
call
or
shr
adc
add
mov
pushf
sub
es
iret
mov
into
pop
aam
pop
cltd
les
xlat
inc
pop
addr16
lock
cmpsl
out
rcll
push
nop
sbb
lea
lret
inc
dec
fisubs
shrb
out
out
xchg
dec
stos
jl
cli
(bad)
mov
fcmovnu
jmp
stc
mov
cld
bound
fcmovbe
push
xchg
bound
xchg
rorb
sbb
scas
adc
stos
mov
inc
(bad)
sub
pop
mov
mov
rcrl
push
int1
ja
std
mov
jb
orl
mov
xor
test
fisttpll
out
adc
pop
in
(bad)
mov
mov
(bad)
mov
jmp
fs
int
and
movsl
mov
shrb
repz
sub
xor
pop
sbb
lahf
int
cmp
(bad)
xchg
push
mov
pusha
xor
lret
(bad)
push
test
sub
stos
cmp
ret
mov
ffreep
or
idivb
pushf
mov
inc
cmp
sbb
decl
outsl
rep
push
cltd
pop
jo
adc
in
test
lods
xchg
orb
and
cmc
jl
sub
jp
rolb
aaa
ljmp
lret
das
push
push
andl
data16
insb
insl
popf
arpl
int3
out
stos
int
jno
insl
outsl
and
xchg
adcl
jl
jp
mov
adc
cmp
es
mov
scas
jecxz
cmpsb
mov
inc
mov
xchg
sti
cli
cmc
fsubrp
fucomip
cmp
adc
aam
adc
sbb
pop
cli
mov
sub
push
pop
mov
or
mov
sarl
shrb
lods
fs
cmp
xchg
enter
loopne
mov
push
stc
lret
push
and
xchg
andb
push
fdivl
adc
add
mov
stos
adc
or
rorb
iret
sti
stos
mov
adc
sub
xchg
add
mov
cmp
xchg
cltd
sub
bound
outsb
(bad)
pop
repnz
(bad)
mov
arpl
call
xchg
and
push
mov
add
xchg
push
imull
sub
or
int1
inc
stc
pop
adc
movsl
aas
push
push
es
sub
sub
test
in
jge
jecxz
gs
aaa
sarl
loop
mov
lret
push
ljmp
imul
aas
dec
popa
cmp
lds
lahf
push
adc
mov
sarb
loopne
add
jp
mov
cmc
dec
or
sbb
jne
xchg
xor
jmp
jg
sub
lcall
repnz
ficoml
pop
push
cmp
lea
rclb
cmp
adcb
cmpsl
insb
pop
adc
and
mov
xor
push
jecxz
rcr
outsb
mov
aam
out
xor
(bad)
in
addr16
lcall
mov
int1
mov
(bad)
mov
jne
mov
push
aaa
push
mov
xchg
stos
int3
std
daa
repnz
push
shrl
push
jl
mov
scas
dec
jp
sub
jg
cmpsl
pop
call
aas
sub
xor
xchg
cmp
jp
cmp
mov
push
or
stc
inc
xchg
cwtl
and
les
cltd
xchg
ja
stos
add
or
scas
sub
lds
jle
lds
stos
dec
add
imul
repnz
mov
insb
lods
sbb
mov
outsl
and
xchg
pop
aas
fists
adc
subl
sub
test
xor
sub
xor
xor
hlt
inc
jle
cs
push
dec
sbb
int1
add
inc
lods
pop
add
in
xchg
mov
sarl
dec
jne
or
shl
add
xchg
aaa
jle
je
iret
stc
movsb
enter
xor
dec
jmp
cmp
pop
push
ret
dec
xchg
(bad)
mov
xor
aam
cmpsb
adc
pusha
cmp
mov
or
je
mov
test
push
push
cltd
fwait
lock
int
dec
loop
add
xchg
(bad)
pusha
outsb
(bad)
cmp
shrb
gs
add
mov
(bad)
jp
std
add
cmp
or
mov
ljmp
nop
push
ja
imul
sub
(bad)
jnp
jae
int
jmp
enter
int3
pop
div
and
rolb
insb
lds
into
ret
dec
cmp
cmc
mov
pop
mov
mov
cltd
inc
push
leave
cmpsb
repnz
pop
or
push
xor
loop
dec
popf
