mov
adc
mov
outsb
mov
out
in
jg
addb
dec
mov
adc
sbb
dec
add
and
push
and
mov
in
fs
repnz
test
inc
and
xor
pushf
pmaxsw
loopne,pt
fisttps
cmp
add
or
aas
pop
cltd
cmp
mov
lret
or
cmp
add
mov
and
add
xor
repz
call
sbb
sbb
mov
cli
push
add
mov
in
aas
out
repnz
pop
xchg
das
sub
jno
mov
daa
setns
adc
cmp
push
les
and
outsb
lret
dec
fisubs
sub
std
insl
push
js
sub
inc
or
idivb
pushf
push
test
sbb
pop
jb
jp
insl
jno
mov
or
adc
inc
pop
sbb
lret
mov
inc
xor
mov
sub
stos
psubsb
add
mov
js
cwtl
push
int1
ret
imul
xor
fs
push
out
or
sub
push
adc
cmp
(bad)
dec
sub
cmc
sbb
pushf
dec
push
cmp
aaa
insb
gs
hlt
or
fnstenv
adc
inc
and
mov
xor
adc
jbe
or
cmp
(bad)
outsb
shrl
loope
add
sahf
pop
dec
and
repnz
ss
mov
dec
aas
imul
add
jmp
in
jbe
add
les
lahf
mov
push
dec
clc
repz
sti
mov
aad
mov
int1
imul
popa
enter
ja
outsl
dec
sti
xchg
pushf
imul
push
adc
push
sbb
jno
in
loopne
scas
xor
xchg
and
push
rcll
subl
imul
loope
insl
mov
add
dec
insb
add
or
or
xchg
xor
dec
faddp
outsb
mov
cmp
pop
xor
sahf
(bad)
pop
mov
stos
out
add
cmp
push
lods
jmp
fimull
shll
jmp
daa
add
pop
(bad)
loop
sbb
lock
repz
and
in
push
dec
(bad)
shrl
and
idivl
lds
sbb
ljmp
push
iret
cmovs
add
mov
sbb
and
insl
imul
xor
out
loopne
mov
sub
call
adc
dec
adc
push
fadd
fcompl
aas
imul
cmp
inc
movsl
add
dec
or
rorl
mov
aad
pop
loop
cmp
cmpsl
decb
mov
cmp
xchg
inc
sbb
les
rcll
push
fistpl
in
cmpsl
xor
dec
or
sarl
aaa
aad
lock
roll
cltd
sub
stc
push
or
sbb
repz
cmp
xchg
dec
in
mov
pop
sarl
mov
inc
xor
adc
repnz
mov
and
and
push
cmp
mov
push
mov
sti
movsl
pop
fidivl
xor
push
inc
xchg
hlt
and
in
inc
movl
rorb
in
sbb
inc
or
inc
mov
adc
ror
inc
pop
repnz
push
(bad)
and
std
cmp
loopne
xor
adc
pop
or
pop
xchg
in
xor
inc
mov
mov
jno
pop
xlat
push
test
xor
sbb
mov
int1
xor
inc
roll
roll
or
add
jge
xchg
fistpll
and
inc
and
mov
push
jp
and
cmp
mov
adc
fwait
cmp
inc
pop
add
jge
das
popa
cltd
sbb
sbb
adc
clc
sahf
lret
fnstsw
imul
in
and
decl
fs
mov
pop
sbb
cmp
fstpl
inc
cmp
sbb
and
ss
jg
or
cmp
pop
cmp
ret
inc
adc
repz
jl
pop
pop
aad
xor
lock
xchg
push
xor
cmpsl
(bad)
mov
loope
pusha
arpl
sub
div
out
lahf
and
outsb
ljmp
mov
inc
and
xor
push
stc
in
sub
jno
(bad)
and
int
lea
add
mov
adc
mov
mov
out
std
(bad)
fdivs
jbe
loop
mov
adc
ss
adc
outsl
cmc
cmp
push
xor
cs
jecxz
out
inc
pop
add
push
or
fstl
(bad)
pop
fs
mov
sub
or
cmc
cli
lds
(bad)
out
je
lret
lods
mulb
aas
sbb
out
in
out
cmp
fisubrl
outsl
in
int3
jle
test
push
loope
test
jecxz
and
lock
dec
mov
aaa
mov
add
int1
and
insb
pusha
inc
in
and
orl
or
incb
loopne
das
jns
cwtl
and
fnsave
lea
xlat
pop
movsb
sub
dec
ret
inc
loopne
push
std
sub
ror
aaa
pop
ret
inc
xor
mov
stc
(bad)
stos
mov
adc
rolb
idivl
roll
adc
or
jecxz
and
push
sarb
cwtl
inc
std
shrb
int1
pop
arpl
jle
cmp
jg
push
mov
cmc
push
and
pop
jbe
ret
cld
mov
call
xor
daa
or
lret
pop
rcl
leave
sbb
pop
sarb
imul
cmp
repz
mov
aad
lods
push
add
xchg
mov
cld
push
jmp
leave
and
cltd
out
add
int1
mov
hlt
out
xchg
sar
pop
add
push
(bad)
add
adc
sbb
rclb
scas
ljmp
and
inc
test
ljmp
aaa
adc
sub
in
inc
daa
rcrl
repz
nop
and
adc
insl
stos
and
stos
loop
testl
fcoml
subb
lar
shll
inc
inc
cs
or
lods
add
mov
repz
xchg
or
loop
sti
aas
fistpll
sub
push
adc
(bad)
adc
xchg
loope
or
dec
push
pop
cs
mov
mulb
aaa
int
mov
out
(bad)
and
shll
pushf
mov
mov
cmpsl
std
and
movsl
pop
pop
cmp
les
add
sti
dec
(bad)
aaa
pop
inc
lods
(bad)
pop
(bad)
in
cmp
mov
jns
or
and
in
movsb
and
test
xchg
cmpsb
push
lods
dec
and
push
jmp
popf
lds
xor
pop
sub
cli
ja
jmp
stos
in
xor
xchg
sbb
jae
dec
push
mov
lods
cmc
repnz
xchg
aaa
lret
bound
push
testl
pop
add
push
or
sub
das
loope
int3
dec
stc
sub
xor
cmp
out
adc
xor
testb
or
jae
ret
or
inc
add
sub
lret
mov
sub
xor
mov
jno
cld
imul
test
dec
lcall
sbb
dec
rclb
sarl
rclb
sti
sbb
dec
pop
fildl
xchg
(bad)
jle
out
or
out
pushf
jge
sub
int3
addl
push
cmp
jns
ljmp
popa
or
mov
std
fistl
lock
or
in
sub
aad
jo
cmp
adc
fwait
xchg
das
jecxz
dec
ds
(bad)
ret
mov
add
xor
mov
jne
or
inc
sbb
cmc
idiv
xchg
push
adc
btc
add
lods
mov
sub
cmp
addr16
pop
scas
inc
xlat
cmpsl
jle
mov
jo
sub
pop
cmc
pop
ljmp
mov
ja
pop
add
xor
add
push
jnp
imull
push
inc
dec
inc
rep
sbb
mov
lods
outsb
in
sbb
mov
in
fstpl
nopl
data16
cwtl
pop
push
push
int1
cli
out
xchg
dec
ja,pt
add
cmpsb
inc
loopne
loope
sub
pop
popa
or
push
lds
scas
repnz
pop
or
sbb
imul
adc
and
test
pop
clc
dec
inc
iret
or
and
sub
notb
push
test
mov
adc
lahf
or
dec
ret
push
push
addb
(bad)
cld
ja
cmpl
cmc
outsl
lret
inc
repz
shrb
cmc
hlt
dec
int
add
cmp
xchg
jecxz
std
