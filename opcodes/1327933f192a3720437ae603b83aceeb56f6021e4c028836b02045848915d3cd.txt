sbb
outsl
lcall
add
repz
sbb
pop
cmovo
bound
xor
or
sbb
or
pop
sub
mov
and
add
repnz
aad
or
xlat
pop
decb
or
pop
sub
push
or
mov
sub
repz
or
pusha
jg
bound
repnz
loop
fcompl
test
or
dec
sbb
in
daa
sbb
add
sbb
and
inc
outsl
push
xor
mov
push
lods
or
in
pusha
adcb
pushf
lcall
roll
outsb
dec
push
adc
sbb
dec
(bad)
cmp
sbb
sub
sbb
push
pusha
pop
sub
fiadds
inc
or
ja
outsl
iret
stos
nop
cmp
inc
jnp
dec
cli
sbb
add
adc
mov
addr16
cli
and
int3
decl
sbb
xchg
pop
adc
mov
inc
ficompl
sbb
cmpsb
sub
inc
lock
clc
push
mov
pop
adc
adc
(bad)
in
std
fwait
jb
jle
bound
xchg
cmp
dec
iret
xchg
pop
adc
enter
js
xor
inc
jl
aaa
fcoms
(bad)
cwtl
or
mov
inc
jecxz
inc
sbb
add
insl
dec
cmp
mov
dec
es
es
adc
jnp
pop
outsl
mov
and
sahf
pop
cmp
dec
push
std
cmp
sti
sub
lret
sbb
movsl
int1
push
inc
push
clc
loopne
daa
sbb
sbb
push
in
nop
or
cs
outsl
pop
adc
cmp
inc
push
sub
inc
or
pop
cs
xor
add
sub
inc
sub
rclb
shl
xor
out
out
jb
inc
add
adc
(bad)
outsl
dec
mov
inc
imul
xor
push
call
adc
sbb
dec
repz
push
cmp
cltd
lds
fbstp
sub
es
adc
push
mov
cmp
shlb
mov
pop
add
pusha
aaa
imul
imul
scas
in
and
pop
dec
dec
lahf
push
gs
sub
jecxz
out
cli
or
sub
sbb
std
push
jae
mov
inc
adc
mov
gs
insb
jnp
cmp
sub
push
cmpl
push
(bad)
mov
mov
in
cmp
loopne
lods
push
cmp
ss
cld
or
mov
in
xchg
and
ret
xchg
pop
and
and
cltd
sub
insb
xchg
inc
scas
pop
loopne
or
imul
push
cmp
dec
sub
mov
dec
inc
in
lods
cltd
cmp
mov
push
mov
mov
sbb
adc
shrl
inc
adc
outsb
mov
cmp
inc
(bad)
xor
les
dec
mov
inc
sub
aas
nop
add
mov
inc
or
inc
repz
mov
pop
jge
paddsw
inc
or
fildll
clc
out
mov
cmp
outsb
adcl
pop
sysexit
inc
inc
sti
jbe
dec
xchg
out
sbb
stos
enter
push
fs
ja
stc
mov
lds
clc
pop
push
call
xor
aaa
sub
stc
cmpsb
fidivrs
cs
sub
jnp
mov
or
out
(bad)
push
clc
jle
and
pop
xchg
xor
leave
movsb
xchg
mov
jmp
(bad)
movsb
in
insl
mov
xor
outsb
add
inc
es
jno
std
and
or
(bad)
and
sbb
push
add
lods
mov
push
sub
stc
pop
add
and
push
stc
and
in
cmpsb
xor
inc
cmc
mov
or
inc
sbb
bound
ss
cmpsl
xor
inc
fdivl
inc
incl
out
(bad)
andb
inc
into
or
sbb
inc
cmp
lods
jbe
std
jno
pop
daa
inc
pop
fisttpll
fs
sub
mov
push
xchg
adc
push
dec
adc
cmp
inc
dec
out
adc
mov
dec
mov
xchg
push
inc
push
sub
jne
hlt
dec
sub
jg
xchg
pop
je
add
call
sbb
iret
sub
pop
xor
fldt
pop
mov
sbb
mov
cmp
cmpb
fwait
cmp
pop
inc
lock
les
xlat
sub
imulb
bnd
mov
fdivl
push
lods
mov
in
inc
xchg
pop
int1
imul
insb
lock
add
mov
jmp
subb
jno
sarw
fwait
xor
add
push
push
scas
mov
inc
mov
push
cmp
in
pop
pop
adc
fcoms
and
call
enter
xchg
mov
test
push
rorb
fwait
cmp
test
rolb
add
(bad)
loopne
in
dec
xorb
jle
or
sbb
test
and
xor
lods
pop
es
sahf
jo
adc
pop
dec
enter
sub
mov
daa
lcall
dec
lods
sbb
or
shlb
cs
pop
fists
std
sbb
inc
jg
fldcw
sbb
sub
pop
arpl
jnp
outsl
mov
mov
add
push
popa
lds
add
ja
adc
fistpll
js
test
cmpsl
jno
outsl
sbb
or
movsb
dec
lock
inc
push
push
push
cld
std
or
pop
inc
xchg
push
sub
push
pusha
add
aad
lods
xchg
or
and
lret
or
inc
inc
inc
popf
add
fs
jbe
inc
fsubp
fisubl
loop
les
adc
std
es
lcall
sub
jae
add
in
or
scas
pop
mov
mov
mov
cmp
ret
mov
and
jne
and
aaa
add
stos
aad
data16
mov
data16
and
mov
add
mov
insl
push
pop
(bad)
sub
and
xor
jecxz
or
add
fistpll
pop
addr16
and
cli
sub
aaa
push
out
mull
fldt
xor
cmp
jae
dec
sahf
push
fwait
mov
dec
sub
fcompl
aaa
(bad)
pop
xchg
pusha
push
xchg
out
push
and
popf
lahf
dec
adc
dec
xor
ds
inc
mov
repnz
jl
mov
iret
cmpsl
repnz
mov
push
pop
rolb
xor
insl
sub
lods
xchg
mov
pop
push
or
and
cmp
pop
es
ja
sbb
addr16
cmpsb
fisubl
cmpsl
out
add
ljmp
add
xchg
jns
push
test
test
pop
mov
insl
lret
gs
fdivl
inc
push
stc
pusha
sub
sbb
daa
sbb
push
inc
mov
adc
pop
insl
sbb
sbb
bound
rsqrtps
inc
enter
cs
xor
and
pop
movsl
jbe
cs
out
push
lea
sti
and
or
push
adc
xor
fsubrl
daa
aaa
insl
fs
pusha
adc
cmovs
pushf
push
mov
imul
cli
dec
jns
jae
push
add
stc
push
push
sahf
sbb
or
push
xchg
ss
lahf
jge
aaa
jae
inc
sub
jbe
sbb
pop
or
cmp
mov
sub
dec
push
incb
adc
cwtl
scas
or
push
inc
cmc
adc
aaa
mov
cld
pop
mov
xlat
test
cli
cmp
sub
push
mov
gs
popa
fistpll
or
jle
xor
mov
pop
sahf
clc
jo
push
sbb
or
mov
loope
cmp
stc
repnz
add
mov
xlat
scas
ss
fldl
mov
sti
and
adc
inc
mov
ds
push
pop
lea
sti
and
sub
sub
(bad)
fs
pushf
cmp
and
lret
loope
in
hlt
roll
xor
pop
popa
inc
or
or
jnp
inc
sbb
cld
repnz
bound
lods
push
aad
mov
pop
xor
jns
inc
xchg
jnp
cli
daa
jg
mov
sbb
outsb
fidivl
jno
repnz
out
(bad)
sbb
arpl
daa
sub
cld
inc
cmc
and
sbb
sub
xor
jl
pushf
inc
pop
repz
(bad)
xchg
out
mov
inc
out
xlat
dec
