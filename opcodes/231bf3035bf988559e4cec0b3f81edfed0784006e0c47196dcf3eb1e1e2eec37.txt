mov
mov
push
mov
mov
movb
inc
loop
pop
leave
ret
adc
(bad)
clc
push
outsl
incl
add
pusha
inc
add
pop
add
inc
push
clc
push
inc
push
add
add
ss
in
insb
rcrb
mov
inc
je
lea
push
push
sarl
push
sbb
sbb
movsb
push
in
cmp
push
mov
aas
jmp
leave
ret
push
pushf
sbb
push
xchg
ja
into
push
imulb
jnp
push
incb
nopl
in
xor
mov
jmp
cwtl
dec
push
mov
sbb
out
fwait
push
push
sbb
out
addr16
cwtl
or
jne
movl
int
sbb
std
fwait
jge
outsl
cmp
add
decl
mov
cmpl
loope
push
insl
fcomip
sub
andb
popa
cmp
jp
in
mov
fnclex
xor
xor
ja
dec
push
or
cmp
jae
sbb
cwtl
push
dec
jl
popa
addr16
popa
push
dec
pusha
add
loopne
push
adc
push
outsl
aaa
shrb
push
or
cmp
jnp
jbe
push
jb
lods
cmp
ret
call
or
ret
jg
pop
movsb
sti
fsub
push
add
add
push
add
adc
push
add
or
jb
rcr
xor
insb
add
leave
and
jne
rcrl
mov
inc
or
xor
xchg
add
cmpsl
mov
inc
push
clc
push
push
or
and
jmp
or
daa
ss
mov
or
lds
cmp
add
jge
sti
push
mov
sbb
mov
out
jl
enter
jne
frstor
pop
inc
lcall
or
add
arpl
mov
pop
pop
mov
imul
ret
mov
mov
mov
and
je
jle
(bad)
and
shll
into
(bad)
sbb
push
pop
lea
mov
and
cld
cmpsb
out
xor
adc
ss
nop
and
mov
xor
ret
xchg
and
add
cmp
in
xor
test
xor
popf
lea
fnstenv
cmp
or
rcll
and
int3
jmp
int
add
xchg
xchg
xchg
jo
push
xchg
pusha
pop
dec
cmp
inc
inc
adcb
push
test
and
xchg
xchg
xchg
xchg
adc
or
xchg
xchg
xchg
xchg
add
add
jne
ret
int3
add
shl
aam
iret
lea
or
or
mov
cmpsb
mov
int
push
cwtl
adc
pop
add
and
fmul
lcall
mov
jae
mov
dec
push
and
ljmp
mov
xor
loopne
mov
add
adc
sub
shll
push
inc
sub
pop
and
sub
ljmp
ds
insl
jae
fildl
sti
pop
xchg
pop
fs
jbe
jb
pop
adc
jae
jae
pop
mov
pop
pop
outsb
je
insb
insb
add
jg
sub
pop
je
insl
dec
outsb
outsw
jb
popa
je
outsl
outsb
dec
push
repnz
push
xor
xor
test
test
fdivrl
jae
xor
jnp
inc
mov
and
push
outsl
data16
popa
jb
pop
dec
imul
add
shll
fnstenv
pop
nop
add
cmp
(bad)
mov
inc
rolb
mov
lea
mov
imul
popa
insl
and
outsb
clc
push
ljmp
je
bound
jb
outsb
and
inc
dec
push
and
fs
pop
sub
pop
addr16
jmp
add
ja
inc
and
es
imul
adcl
add
inc
adc
add
add
or
add
fidivs
addb
push
or
xor
sub
or
into
or
daa
test
cmp
add
push
xchg
addb
inc
mov
dec
rorb
out
pop
mov
cmpsl
sub
je,pn
js
scas
cltd
mov
leave
push
add
pop
dec
and
sbbb
popa
je
push
pop
sarl
dec
cs
push
neg
pop
adc
daa
enter
push
sti
sbb
in
in
add
ja
fwait
cmp
outsl
arpl
add
(bad)
and
cli
mov
and
and
pop
ret
nop
out
rcrb
or
or
sub
dec
mov
lods
cmp
je
xor
std
lcall
pop
lods
add
je
add
push
fisttpl
dec
pop
lcall
(bad)
mov
cmp
je
cmp
inc
jmp
cmpl
je
mov
add
neg
(bad)
ss
mov
cmp
push
add
add
jmp
(bad)
xlat
inc
push
dec
dec
nop
pushf
pusha
lea
push
add
add
aaa
push
mov
add
cmp
jne
cmpl
sbb
fucomi
jne
push
sbb
pop
mov
popa
popf
ret
jg
fstp
push
push
sahf
cmp
pop
pop
daa
mov
scas
jne
cmp
mov
call
and
call
pop
pop
pop
pop
ret
inc
fsubp
fstps
add
ja
(bad)
cmp
mov
call
fcomip
xor
mov
movl
add
xor
push
xor
call
jg
leave
adc
clc
adc
mov
mov
andb
pusha
clc
ds
jne
cmp
mov
cli
xor
pop
(bad)
addr16
cmp
jmp
jnp
jnp
aaa
orl
jmp
pop
ja
mov
add
lea
ljmp
and
adc
jmp
push
sub
sbb
(bad)
aaa
cwtl
mov
dec
or
mov
ret
dec
mov
and
nop
int
imul
mov
dec
int
mov
jmp
daa
sbb
add
add
andl
aas
daa
and
nop
lret
or
inc
push
(bad)
adc
lret
fmulp
add
jo
lds
nop
push
(bad)
fisubl
(bad)
rolb
push
loopne
or
push
sub
movsb
jno
mov
fstps
pop
adc
dec
movl
lret
push
cmp
add
inc
fildl
loope
jo
dec
or
push
ret
popa
in
cld
adc
mov
flds
pop
cltd
sbb
mov
add
pop
xor
mov
add
push
or
cmp
pusha
adc
dec
jl
pop
add
add
mov
add
jae
jns
ja
jb
imul
push
popa
sbb
add
out
repz
adc
push
add
inc
outsl
sbb
or
and
nop
roll
sbb
incl
mov
cmp
fcoml
dec
cmp
or
shrb
addr16
outsl
inc
mov
pop
loop
xor
insl
bound
dec
dec
lea
aas
pop
add
cmp
inc
jb
popa
cmp
sub
(bad)
add
inc
gs
outsl
and
sbb
inc
insb
lock
jo
decl
outsl
insl
jo
push
gs
gs
push
dec
push
dec
push
dec
dec
insl
out
div
cs
pop
inc
cmc
add
gs
push
jae
sar
sbb
jb
popa
bound
or
push
inc
sbb
jae
jb
insb
cs
aas
(bad)
(bad)
dec
js
xor
xor
inc
xor
jbe
jge
test
mov
lahf
xor
(bad)
(bad)
(bad)
push
lds
xor
ds
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
(bad)
(bad)
(bad)
push
imul
in
xor
(bad)
and
aaa
ss
ss
add
(bad)
push
data16
ss
js
jle
test
mov
in
ss
cmp
incl
inc
cs
adc
xchg
and
(bad)
popa
add
or
aaa
xchg
cmp
pop
aaa
add
stos
push
jge
or
inc
inc
and
add
repnz
adc
or
aaa
or
push
cmp
and
xor
xchg
insb
nop
and
add
or
shl
data16
nop
jmp
inc
outsl
enter
sbb
xchg
push
aaa
inc
dec
xchg
or
push
adc
and
rorb
shll
dec
adcb
adc
inc
push
cli
incl
jne
dec
mov
jmp
pop
add
