lock
rex.rb
cmpsb
(bad)
fcoms
push
jb
cli
mov
ret
lea
push
(bad)
mov
sbb
xor
rex.rxb
sbb
cmp
rex.r
(bad)
sub
mov
shrb
rex.wx
mov
std
sbb
mov
and
xor
rex.rx
rex.wrb
and
cwtl
shrl
jne
int3
(bad)
pcmpeqb
scas
mov
data16
rex.wrx
fwait
insb
add
add
rex.xb
xor
rex.wrx
movabs
rex.rb
(bad)
(bad)
(bad)
ljmp
rex.wr
mov
leave
pop
stc
stos
and
ret
fdivrs
rex.r
call
lret
push
push
cmp
movabs
rex
mov
loope
(bad)
sbb
outsb
(bad)
xchg
movabs
pop
add
add
mov
cli
xor
xor
push
ja
xchg
std
mov
pop
add
add
mov
pop
jg
pop
(bad)
(bad)
lcall
fists
rex.xb
pop
rex.rb
fs
stos
jl
cmp
(bad)
push
out
xchg
sahf
cmp
mov
sbb
jle
(bad)
rex.w
xchg
or
cwtl
jmp
fsts
rcrb
loopne
and
adc
in
rolb
(bad)
mov
sahf
rcrb
int1
fwait
stos
pop
add
add
(bad)
(bad)
lahf
jle
pop
mov
rex.wx
sbb
(bad)
imull
(bad)
add
or
loopne
enter
(bad)
ret
js
mov
xor
add
push
jne
cli
movabs
cmpsl
rex.wx
(bad)
rex.rx
adc
mov
mov
movabs
imul
push
mov
cwtl
push
jns
jne
(bad)
popf
loop
cmpsl
stos
pop
(bad)
(bad)
lcall
(bad)
adc
movabs
cltd
mov
adc
add
and
ret
push
add
add
xchg
jl
(bad)
or
add
seto
xchg
lock
jae
pop
add
add
(bad)
sbb
rex.w
or
mov
ds
and
add
add
pop
xor
xchg
xor
(bad)
sbb
mov
pop
lea
repz
call
add
sahf
mov
mov
ret
cmpsl
(bad)
cmp
(bad)
mov
out
(bad)
int
enter
add
rorb
ret
add
rorb
loop
rex.wrb
(bad)
(bad)
adc
out
pop
(bad)
(bad)
(bad)
jg
adcb
int3
(bad)
(bad)
mov
ss
rex.x
pop
(bad)
(bad)
(bad)
(bad)
(bad)
ss
push
or
or
xor
mov
add
fimuls
add
(bad)
pop
cmpsb
mov
mov
clc
ficompl
(bad)
(bad)
(bad)
jg
sub
mov
rex.xb
in
rex.rxb
in
sahf
addr32
stos
test
mov
push
add
xor
(bad)
mov
(bad)
mov
rex.wrxb
(bad)
int3
cmp
(bad)
cmpsl
iret
xchg
call
rol
or
loopne
imul
rex.b
imul
mov
mov
imul
xor
xchg
xchg
xchg
(bad)
mov
(bad)
mov
(bad)
mov
movswl
rex.b
cmp
cmp
(bad)
(bad)
ljmp
xor
shl
int1
data16
movabs
int3
fcmovb
lret
(bad)
jae
jmp
cmp
cmova
pushf
cmovp
jns
jge
rex.rb
hlt
mov
cs
mov
out
push
rex.b
jae
add
jnp
xor
mov
mov
(bad)
(bad)
(bad)
jg
jrcxz
lret
divb
cld
(bad)
(bad)
decl
cmp
ds
cld
sbb
(bad)
stos
insl
loop
jmp
movsl
(bad)
int3
ss
push
sbb
testl
cmp
xlat
jne
rex.wxb
lea
push
sub
jne
sbb
push
or
push
stos
out
lret
rex.b
lret
popf
pop
pop
in
cld
cli
rex.x
rex.wx
lods
rex.x
add
fdiv
jbe
jns
mov
or
mov
int1
add
xchg
fdivp
clc
hlt
cmp
(bad)
ljmp
mov
cld
and
std
mov
sti
cld
decl
push
scas
test
mov
cmpsb
movabs
(bad)
cmpsb
push
mov
jg
mov
(bad)
(bad)
sub
shlb
xchg
data16
fneni(8087
repz
gs
pushf
sbb
jmp
subb
rex.rxb
jle
int3
mov
shlb
out
fs
cwtl
ja
mov
mov
and
jmp
out
rex.wrx
push
ret
mov
movabs
(bad)
pop
(bad)
mov
popf
jno
leave
(bad)
(bad)
(bad)
jmp
and
fiaddl
add
add
(bad)
(bad)
and
jg
fisubrl
jmp
lahf
jno
loope
(bad)
or
pop
sbbl
rex.x
call
(bad)
(bad)
sbb
lahf
(bad)
rex
shrb
mov
insl
push
test
jo
rex
(bad)
(bad)
(bad)
mov
movsb
pop
mov
(bad)
es
lahf
clc
(bad)
cmp
xor
idivb
movabs
(bad)
(bad)
(bad)
push
(bad)
(bad)
pop
rclb
sarl
(bad)
(bad)
incl
xchg
adc
(bad)
(bad)
(bad)
ljmp
scas
lods
pop
pop
adc
test
xor
or
or
or
movsl
xchg
stos
rex.wrx
imul
sub
mov
popf
rex.wrb
xchg
(bad)
cmp
xchg
stos
rex
enter
(bad)
ja
fmuls
push
cmp
ds
hlt
push
pop
sbbl
(bad)
(bad)
(bad)
ljmp
ficoml
mov
or
ficoml
fs
int
xchg
(bad)
jne
push
outsb
xchg
hlt
addl
and
mov
push
pushf
jne
cmp
sub
jg
in
in
(bad)
cltd
(bad)
sbb
sbbb
mov
ja
(bad)
mov
jne
movabs
std
push
add
adc
rex.r
mov
push
insb
jg
rex.w
or
(bad)
frstor
push
pop
add
jne
rex.xb
xchg
cs
outsl
xchg
cmp
push
sarb
outsb
lods
pushf
jrcxz
add
repz
repz
outsl
(bad)
xor
stos
stos
outsb
test
adc
mov
shlb
imul
fnstsw
jg
adc
or
in
rex.wr
int1
cmp
sarl
adc
xchg
mov
js
(bad)
adc
rex.wrxb
ja
sbb
xor
fwait
(bad)
(bad)
(bad)
(bad)
cmp
(bad)
cmp
loopne
test
testl
mov
(bad)
sub
ss
or
mov
data16
mov
je
popf
rex.x
addr32
and
(bad)
adc
xchg
add
(bad)
cmp
imul
or
sar
jrcxz
ss
rex.wrb
lfs
xchg
(bad)
ficomps
(bad)
rcll
leave
push
lock
cli
(bad)
(bad)
(bad)
jmp
(bad)
jb
lret
pop
(bad)
test
lods
fcomps
xchg
imul
rep
rex
(bad)
push
push
push
mov
lea
{rex2
xchg
sub
ror
loopne
loopne
cmp
sbb
pop
jg
(bad)
movabs
fucomip
push
fiadds
(bad)
adc
fmull
rcrb
cltd
and
push
sub
mov
mov
fs
or
lods
outsb
adc
adcb
movabs
pop
mov
jp
mov
rcrl
stos
rex.rx
mov
fs
xchg
mov
cmp
movsl
jmp
movabs
mov
test
(bad)
mov
fcompl
(bad)
(bad)
lcall
adc
pop
jb
add
popf
subl
cpuid
(bad)
cmp
sar
xor
and
rex.x
sub
mov
push
pop
rex.w
mov
pop
clc
clc
(bad)
(bad)
jmp
imul
test
gs
mov
xchg
mov
out
popf
(bad)
mov
cmp
mov
cmp
mov
cmp
mov
insl
jl
loope
mov
movabs
incb
sbb
cmpl
(bad)
push
push
(bad)
push
{rex2
rex.rx
adcl
fidivrs
mov
mov
call
movabs
lea
or
shr
shr
add
mov
call
rex.wx
rex.rb
(bad)
jmp
(bad)
js
rex.wrxb
adc
imul
out
mov
int3
sbb
or
rex.wr
cmp
call
loopne
sub
mov
pop
or
mov
test
push
(bad)
(bad)
out
movsxd
cmpsl
jbe
xor
in
iret
cmpsl
push
mov
mov
mov
(bad)
(bad)
sub
sub
mov
rex.wxb
sbb
fcmovnb
stos
repz
fisubrs
pop
rex.wr
cmpsb
addr32
add
test
jb
fnstsw
pop
(bad)
(bad)
(bad)
outsb
stos
addr32
pop
rex.wrx
addr32
rex.rx
out
stos
addr32
mov
(bad)
out
shrd
outsb
and
mov
int3
sub
imul
sti
mov
lea
ret
mov
add
