das
fwait
cltd
iret
loope
push
xchg
int1
mov
sbb
(bad)
add
cmp
fidivrl
(bad)
out
lahf
addr16
add
shrl
pop
cs
imul
andb
rcrb
sub
mov
lcall
clc
popf
lock
sbb
ret
and
pushf
out
insb
cs
push
sub
sub
dec
test
test
bound
pop
pop
mov
xchg
leave
mov
int1
aam
sbb
push
mov
adc
fldcw
mov
test
pushf
pop
imul
sub
call
xor
call
sub
jle
dec
data16
fldt
add
push
sahf
mov
jb
dec
shr
jge,pn
andl
xchg
jbe
push
push
and
xor
mov
aam
sub
fistpl
cmc
jmp
(bad)
imul
sbb
hlt
fisttps
cmp
in
call
ficompl
adc
call
add
dec
in
xor
shlb
int1
mov
inc
enter
dec
mov
out
push
sub
shrb
push
call
fistl
jp
xchg
iret
test
pop
mov
leave
insb
ret
rcrl
(bad)
jge
ja
or
iret
imul
lds
shrb
mov
mov
dec
pop
lahf
and
pop
mov
(bad)
cwtl
sti
(bad)
pop
sahf
lahf
fidivrs
sub
hlt
ja
inc
fs
mov
sbb
sbb
shrb
fistpl
sti
inc
mov
out
sub
fwait
sub
loopne
or
jns
std
mov
loope
addr16
loop
jae
inc
or
shr
dec
jge
and
xor
pop
pop
pop
(bad)
hlt
mov
nop
in
push
add
ret
in
jle
dec
imul
mov
test
sub
sbb
aaa
les
popa
jne
dec
adc
es
test
and
pop
push
mov
xchg
xor
aad
call
add
push
xor
loope
mov
jns
ja
test
aad
xor
xor
int1
enter
pushf
loope
push
dec
in
mov
imul
idivb
and
sbb
dec
jae
sbbl
xchg
ss
push
into
xchg
fnstsw
(bad)
sbb
sub
xchg
cmp
or
addl
dec
hlt
mov
pusha
lods
mov
ss
sub
inc
inc
inc
fadds
or
adc
and
jne
cltd
mov
mov
push
js
push
scas
mov
xor
sbb
or
sub
push
cs
jp
inc
sbbl
ds
jecxz
mov
pop
mov
pop
sahf
mov
xor
shrl
and
jno
mov
shll
or
push
mov
sar
dec
pop
mov
sbb
out
pop
mov
ljmp
sub
mov
sbb
repz
mov
xchg
push
fcmovnu
iret
sub
xstore-rng
cmpsl
add
mov
movsb
and
xchg
push
xor
mov
insl
or
sub
pop
(bad)
and
sbbl
lahf
mov
rol
xor
mov
js
add
lea
lds
lcall
mov
shrl
mov
out
jnp
sub
inc
sbb
sbb
pop
nop
je
sub
mov
mov
pcmpgtd
pop
mov
inc
jae
xchg
xchg
sbb
xchg
xchg
fnstenv
cs
push
iret
lds
dec
jmp
je
ja
inc
int3
jp
cli
and
outsl
adc
test
ret
push
mov
call
mov
repz
sub
cmp
adc
adc
sub
fninit
incb
outsb
mov
cmpb
or
inc
mov
(bad)
std
mov
pop
mov
mov
add
dec
sbb
jmp
lods
repz
into
jmp
cmp
add
ljmp
dec
cli
stos
aaa
push
and
sbb
rcll
inc
sub
addr16
ljmp
cmpsb
dec
call
inc
das
mov
jg
mov
sti
jecxz
ret
push
outsb
push
in
lea
pop
arpl
popa
scas
outsl
mov
fcmovnbe
and
imul
or
fwait
push
ret
mov
int3
dec
sahf
inc
sti
cltd
cltd
push
test
movsb
push
sbb
bound
scas
insb
mov
test
xorb
loope
xchg
je
jno
subl
cltd
std
jp
mov
addb
mov
mov
sub
mov
adc
fsubl
aam
xchg
popf
loope
jbe
mov
xchg
push
fwait
inc
lret
lea
sbb
pop
(bad)
sbb
pop
imul
and
sbb
mov
mov
mov
xor
ljmp
fcmovne
jno
jmp
sub
out
sbb
xor
sbb
sub
loopne
pop
daa
sar
xchg
fsubr
mov
pop
inc
pop
bound
pop
xchg
xchg
mov
rolb
cmp
scas
mov
out
jno
cs
ja
mov
mov
jne
cwtl
jb
and
shl
cmp
sub
adcl
xlat
lret
rcr
inc
das
addl
or
mov
or
dec
push
sbb
sub
loopne
daa
pop
xor
mov
leave
loopne
jl
mov
out
pop
(bad)
std
jge
cs
jae
clc
in
xchg
sbb
outsb
mov
mov
enter
mov
(bad)
jmp
pop
mov
jae
jo
lcall
shll
jne
cmpsl
inc
int
nop
or
aam
mov
mov
loope
xchg
adc
jnp
popf
rcr
pusha
pop
adc
or
movsl
and
adc
pop
shl
jae
or
xor
outsb
sub
test
(bad)
shrb
and
imul
imul
xlat
rcr
cmpsb
jo
xlat
pop
jl
push
cwtl
inc
out
mov
or
cmp
xor
insb
ret
add
imul
adc
mov
in
int3
stos
in
dec
mov
movsl
cltd
ret
fldt
sbb
cwtl
add
movsb
scas
dec
inc
jno
xchg
lods
cs
push
push
mov
pop
shrb
loop
add
dec
xor
jmp
cwtl
or
add
inc
pop
in
sbbb
sub
cltd
mov
jecxz
dec
push
push
cmp
cmp
inc
(bad)
aaa
out
fdivl
repz
push
pop
imul
sub
xchg
push
arpl
push
fdivrs
je
mov
xor
lret
(bad)
fstpt
and
in
jns
movsl
jo
call
hlt
scas
je
lahf
mov
pop
xchg
jl
pop
mov
jne
in
sub
jb
jle
sub
sub
cli
ror
aas
mov
jbe,pn
mov
ja
xchg
or
mov
push
push
pusha
(bad)
or
mov
jecxz
(bad)
in
mov
mov
shrb
js
cltd
sarb
jbe
aam
push
pop
imul
adc
sbb
sub
jecxz
cmp
addb
cwtl
fs
mov
mov
push
fwait
mov
in
ret
push
bnd
push
xchg
loope
pop
int1
jb
push
cmp
daa
jle
sahf
xchg
popf
adc
pop
arpl
sub
popa
xlat
push
fisubrl
jg
scas
enter
test
push
pop
in
jle
pushf
push
or
sub
mov
mov
push
add
mov
pop
xchg
imul
mov
jl
or
and
inc
jns
mov
and
adc
sbb
cmp
aas
movsb
cmp
dec
sbb
xor
popa
xor
cmpsl
loopne
fmuls
lret
mov
sbb
in
aas
fmuls
ficomps
mov
sub
jp
mov
es
mov
sbb
rclb
inc
test
add
and
insb
pop
mov
pop
fdivp
add
je
bound
pop
movsl
fcmovu
out
lock
and
push
or
push
enter
mov
movsb
jg
pushf
test
loopne
call
mov
dec
jne
andl
fists
inc
popf
scas
pop
mov
(bad)
repnz
jnp
clc
pop
sub
(bad)
pushf
aas
mov
mov
dec
jne
test
daa
faddl
mov
push
lret
mov
pop
inc
push
scas
dec
sbb
cld
mov
jmp
pop
inc
jnp
test
or
cs
lret
xor
leave
ss
xor
push
add
jmp
or
push
popf
div
inc
aas
adc
or
ja
and
ljmp
push
adc
fisubrl
sbbl
fincstp
pop
loop
add
bnd
