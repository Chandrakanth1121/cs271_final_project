in
sbb
jae
out
jne
cmc
cmp
xor
adc
call
inc
test
adc
aam
sub
xor
add
adc
in
sbb
je
(bad)
pop
push
jo
mov
pop
fcompl
push
shlb
aas
push
inc
cwtl
jmp
out
xor
cmp
inc
rcrl
jge
ret
andb
cmpsb
scas
adc
fadds
(bad)
aas
push
ss
clc
cmc
test
jmp
pushf
fisubrl
test
jge
mov
cmpsb
clc
xchg
push
stc
add
xor
scas
xor
(bad)
xor
mov
cwtl
add
add
and
xchg
pop
push
cli
pushf
jge
popa
xchg
mov
jae
pop
in
mov
add
sbb
dec
mov
inc
hlt
outsb
cmp
bound
call
push
pop
in
fdivrl
ds
(bad)
pushf
jno
xchg
test
jno
loop
xor
addr16
sbb
jnp
or
jecxz
mov
movb
loop
fucomi
repnz
jl
aad
mov
loop
scas
xchg
ss
push
les
out
loope
cmp
mov
mov
es
jg
jl
cmpsl
rcrb
pop
xlat
inc
lahf
inc
ret
jo
insb
filds
cwtl
cmp
jp
jns
sbb
cmp
jmp
aaa
rorb
push
std
pop
ljmp
int3
jae
mov
call
call
xchg
cmp
add
js
adc
aam
adc
pop
call
outsl
sub
mov
or
dec
outsl
lret
insl
mov
pop
test
add
in
lock
sti
ret
inc
stc
adc
cld
out
xor
lock
cmp
loopne
jns
adc
outsb
in
xchg
(bad)
out
cmp
test
lds
nop
mov
cmp
or
outsl
(bad)
and
les
int3
and
mov
iret
fidivs
jmp
out
and
insl
add
popa
ficoms
and
inc
push
mov
cmp
mov
test
dec
push
aas
das
test
out
repnz
lret
pop
int
sbb
and
bound
mov
sbb
mov
and
mov
repnz
rorl
stc
and
jae
aas
xchg
scas
in
out
into
pop
jmp
pop
es
pop
sbb
push
mov
xchg
lods
repnz
loope
dec
repz
ret
int1
flds
pop
mov
xor
mov
in
and
das
sbb
mov
jo
cld
fsubs
xor
out
out
mov
cwtl
(bad)
int
mov
cmp
cmp
or
mov
pop
outsl
insl
pop
inc
push
test
mov
jp
sti
sbb
inc
xor
pop
jmp
aad
sarb
sbbb
ljmp
push
mov
es
mov
sbb
mov
mov
add
and
dec
jbe
loop
les
scas
jmp
xor
loop
jnp
fistl
lock
dec
shlb
push
hlt
les
adc
addl
mulb
ja,pn
aaa
sub
imul
dec
pop
mov
pop
pop
leave
lahf
xchg
pop
xor
outsb
push
sub
fidivrl
xlat
adc
(bad)
cmpsl
mov
movsb
test
je
lea
repnz
cmp
lea
out
jae
sbb
jne
pop
cld
or
sub
cmpsb
mov
inc
fsubr
mov
loope
test
adc
mov
and
ret
fistpll
xchg
sbb
jo
(bad)
jecxz
arpl
loopne
sbb
jne
repnz
add
mov
cmc
dec
pop
repnz
fidivrl
shlb
push
cmc
loopne
mov
pop
dec
hlt
jbe
inc
pop
dec
(bad)
mov
fcoms
add
inc
sbb
jo
jmp
jl
dec
scas
adc
jns
je
xchg
dec
add
aam
inc
xlat
fstps
in
leave
jbe
and
adc
ljmp
enter
xchg
sub
in
or
outsl
int3
fdiv
fldl
or
and
xor
test
mov
sub
das
pop
inc
test
sub
ret
jb
sub
imul
int
xor
adc
and
lret
sub
or
(bad)
lods
fidivrs
shlb
orl
int
(bad)
push
pop
int3
xchg
daa
repz
ljmp
mov
fdivrl
aas
mov
jbe
xchg
mov
loopne,pn
cmp
gs
lahf
addr16
pop
int1
mov
jbe
sub
fisttpl
sbb
iret
mov
js
and
das
sbb
incb
mov
inc
rolb
push
jge
inc
fstpl
pop
xor
out
or
mov
push
insb
mov
cli
inc
aad
cmc
subb
repz
cmp
jge
lods
push
mov
sub
mov
orb
push
lret
mov
inc
jmp
cmp
repz
adc
iret
hlt
mov
jo
or
aaa
or
sub
cmpsl
pop
fwait
divl
outsb
sbb
mov
cmp
push
push
jns
mov
aad
adc
aam
inc
inc
push
(bad)
in
xor
subw
es
insb
loope
push
jno
push
bound
out
jne
sub
jno
push
aaa
addr16
adc
stos
sub
inc
inc
mov
invd
push
jne
adc
push
repz
mov
xchg
mov
cld
adc
and
(bad)
psllq
dec
scas
pop
xlat
notl
ds
ss
cmp
xchg
push
out
cmp
push
stc
cs
jne
push
daa
int3
sub
mov
daa
cmpsl
push
clc
stos
in
xlat
push
cmp
js
and
xchg
cmp
or
mov
test
popf
cs
pop
addr16
addr16
cli
sub
lcall
je
dec
or
fsubr
inc
pop
into
lods
in
add
add
outsl
aam
jne
hlt
push
inc
data16
and
repz
sti
pop
fcmovnb
imul
aas
sti
aam
cmp
lretw
loope
or
pop
aad
test
xor
sub
mov
ret
ret
out
adc
(bad)
mov
lods
xchg
inc
cmp
adc
cmp
test
int1
mov
mov
addr16
sbb
fdivr
imul
(bad)
add
pusha
loope
jmp
fldenv
jo
sbb
sahf
in
sbb
int1
stc
aaa
fs
adc
jno
lcall
data16
xchg
xor
std
pushf
jbe
inc
fsubr
pop
inc
and
fs
loopne
mov
cld
int1
inc
imul
add
aam
imul
les
(bad)
cmp
inc
enter
push
ret
cmp
aaa
mov
jecxz
stos
jecxz
iret
or
sub
(bad)
iret
push
sub
rcr
pop
in
cld
stc
and
loopne
sub
sbb
xor
(bad)
cmpsl
daa
sbb
or
in
aad
xchg
out
cmp
repz
cmpsl
fldl
test
clc
cs
dec
sbb
cltd
fisubrl
fidivl
mov
stc
jbe
ljmp
jne
jns
dec
sub
jo
jb
adc
cmpsl
sub
popa
dec
cli
gs
ret
sub
adcl
out
cmp
stc
cmpsl
or
xlat
push
stc
inc
out
out
sbb
or
test
push
hlt
mov
add
fcmovnu
xchg
loop
cmp
out
mov
or
xor
insl
enter
push
bound
xor
mov
jno
jb
jmp
push
sbb
xor
imul
pop
inc
insl
mov
subl
sbb
nop
imul
andl
imull
pusha
mov
push
cmp
inc
iret
add
test
aam
add
mov
das
arpl
out
or
insl
fnstcw
cld
addr16
jo
cmp
push
imul
lods
adc
hlt
test
fcomps
fld
and
ja
lret
aam
shlb
inc
mov
je
or
test
aaa
xchg
cmp
mov
sti
or
sub
decl
call
sbb
or
addr16
cmp
or
cmc
jno
lahf
inc
adc
cmp
push
mov
xor
lea
ret
sbb
sub
push
call
sub
cli
inc
sub
rolb
test
out
mov
mov
dec
jg
ret
mov
push
cmp
fs
xchg
jnp
pop
in
and
dec
in
sbb
cmc
push
int1
add
lret
into
clc
int1
sub
sti
repz
mov
jo
