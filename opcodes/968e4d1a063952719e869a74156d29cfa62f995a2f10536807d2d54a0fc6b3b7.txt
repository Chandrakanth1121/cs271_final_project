incl
add
jae
inc
add
fnsave
fcmovne
insl
add
add
adc
sub
pop
pushf
add
jne
in
int3
out
into
das
iret
add
es
xchg
scas
cmp
sub
cmpsb
pop
push
outsb
mov
ror
xchg
lret
gs
movsb
sarb
aad
xlat
dec
mov
cs
sub
inc
push
push
int
pop
ss
hlt
sub
or
and
into
call
pop
jmp
add
dec
and
shrl
xchg
faddl
mov
fbld
and
dec
mov
add
dec
ss
in
loop
jecxz
aaa
in
mov
movsb
imul
cmpsb
pop
push
adc
(bad)
scas
call
cmp
and
pop
push
jbe
pop
js
pop
mov
popa
mov
mov
ljmp
ret
add
aas
inc
enter
jae
shl
rorb
in
pop
nop
fnstenvs
and
es
sbb
xor
push
dec
jle
jge
test
inc
or
repz
je
xchg
daa
and
fs
data16
push
int3
cmp
inc
and
push
lret
jle
test
xchg
mov
fidivl
leave
sub
aas
pop
notl
sbb
out
in
imulb
das
imul
shll
cmpsb
out
mulb
mov
and
mov
fsubr
addr16
in
mov
outsl
and
js
pop
sbb
pop
push
subl
test
cmp
push
pop
jno
aaa
mov
cmp
and
add
inc
into
ss
inc
stc
xchg
mov
aaa
cs
fstpl
sti
psubq
mov
cli
fsubs
dec
xchg
(bad)
cli
aaa
rcrl
inc
or
(bad)
inc
int3
add
sub
out
cld
lcall
and
cmpb
adc
inc
jmp
push
or
aad
in
imul
add
in
nop
mov
add
lcall
mov
add
mov
rcr
add
add
nop
or
inc
add
sbb
ss
lcall
inc
add
js
rcrb
call
dec
daa
jle
test
xchg
push
push
js
fnstenvs
inc
pop
xchg
out
inc
or
or
sub
xor
dec
jmp
in
fisubs
cmp
inc
out
and
add
xor
mov
or
xlat
xor
xchg
mov
sti
pop
or
fxch
mov
add
push
fldcw
jae
push
add
rsm
xor
data16
popa
adc
add
lret
gs
add
xchg
int
sbb
mov
sbb
int3
insl
mov
mov
add
sbb
sub
into
repz
pusha
sbb
cmp
cmpsb
sbb
pop
into
pop
lcall
and
cmp
and
pop
and
in
lcall
jle
in
arpl
shrb
es
repnz
or
aas
js
mov
xchg
int
scas
sub
pop
shll
bound
and
test
mov
mov
add
add
fwait
xor
ss
imul
xor
sbb
roll
xor
xchg
adc
add
xor
push
pusha
popf
mov
repz
push
xor
pusha
push
ss
push
ds
xor
in
xchg
xor
mov
xor
xor
mov
sub
ss
aaa
out
cmp
cmp
int
sub
cmp
or
je
mov
add
inc
cmpb
ror
popa
sar
jg
inc
sbb
jmp
clc
push
dec
mov
insb
lcall
xor
mov
xchg
ds
aas
testl
push
pusha
jl
in
lcall
inc
mov
(bad)
in
xchg
push
ja
sbb
femms
inc
adc
add
inc
dec
push
imul
(bad)
inc
jae
iret
lret
cmpsb
pop
and
test
xor
xor
(bad)
std
dec
dec
cs
int
push
dec
insb
aas
dec
movsb
dec
push
dec
ss
mov
add
dec
pop
aam
dec
xchg
int
pop
pop
cmp
push
rcll
mov
mov
push
pop
jo
insl
xor
xor
jp
rorl
aas
pop
push
sbb
add
sbb
sbb
pop
popa
daa
nop
ja
cmpsl
addb
inc
mull
data16
gs
mov
rcrl
inc
arpl
pop
imul
int3
add
divb
jae
rcrl
lahf
add
push
push
insb
jns
in
pop
cs
outsl
imul
sbb
jno
add
jbe
pop
jo
xor
and
adc
arpl
in
test
jmp
mov
repz
sub
scas
addl
ss
mov
add
push
test
mov
call
cmp
xchg
insb
xchg
xchg
sub
(bad)
scas
imul
iret
mov
and
imul
lret
cmpsb
imul
fnstenvs
imul
scas
add
shll
xchg
xchg
xchg
mov
cmp
jle
and
mov
dec
xchg
xchg
add
mov
xchg
cwtl
mov
xchg
mov
(bad)
fcmovne
xlat
loop
sahf
push
clc
packuswb
xchg
xchg
fildll
fwait
iret
add
xor
cmpsb
shll
pushf
jae
add
data16
stos
popf
aaa
js
lods
out
cwtl
mov
push
outsb
sahf
imul
mov
das
sub
and
hlt
repz
sbb
pop
adc
enter
xor
cmpb
xchg
out
adc
rclb
or
jl
(bad)
es
fcoms
jae
cmp
inc
nop
adc
rclb
daa
pop
mov
int3
jge
add
repnz
jle
fcoml
cmp
or
out
cmp
adc
and
adc
repz
jl
adc
adc
adc
sahf
iret
out
js
adc
adcb
mov
inc
sbb
gs
adc
xor
jl
adc
sub
adc
enter
adc
and
add
insb
sarb
mov
adc
mov
sub
sbb
sbb
jo
add
sbb
adc
lods
lods
jo
sbb
push
stc
cmp
dec
daa
arpl
das
aam
inc
sahf
and
roll
in
jns
aam
pushf
adc
and
iret
out
clc
adc
adc
cld
inc
inc
(bad)
es
inc
in
xchg
cwtl
mov
les
mov
insb
repnz
into
arpl
or
lock
add
frstor
push
mov
xor
push
xor
ret
test
or
subb
lea
stc
mov
sbb
xchg
ds
aas
mov
jae
gs
adc
int3
xor
(bad)
dec
scas
jge
inc
mov
and
add
xchg
in
cmpsb
adc
loopne
cli
lcall
lcall
cmpsb
cmp
xor
add
cltd
rcll
test
sub
insl
gs
fisttpl
sbb
add
notb
insb
je
insl
mov
adc
imul
add
add
and
call
jne
pop
xor
add
test
inc
fcomp
pop
mov
aas
add
movsb
jnp
enter
push
cmp
jmp
add
rolb
adc
add
incl
adc
repz
popa
repnz
jo
or
pop
outsl
xchg
(bad)
divl
jo
add
iret
push
(bad)
cld
pandn
lahf
cld
shlb
cld
jg
iret
iret
shl
mov
lcall
add
fwait
cmp
ud0
out
mov
mov
pop
loopne
add
test
add
pop
daa
test
out
inc
addb
scas
ret
or
sub
add
and
pusha
pop
fs
pop
pop
rolb
push
in
mov
or
pop
pop
pop
rcrl
cld
add
pop
test
ja
add
pop
or
pop
incl
jg
mov
fisubrl
nopl
add
mov
jg
add
imull
imul
push
test
(bad)
js
or
popa
insl
in
mull
fists
and
xchg
insb
nop
or
mov
jo
mov
nop
add
and
add
insl
lcall
aas
jg
int1
movsb
dec
shll
pusha
mov
or
add
add
(bad)
xchg
in
mov
add
lock
dec
(bad)
mov
fucomip
notl
fld
cmc
pop
lock
movsb
mov
add
aas
mov
add
in
mov
and
sub
push
insl
sub
inc
add
push
jl
add
push
add
inc
in
lcall
out
