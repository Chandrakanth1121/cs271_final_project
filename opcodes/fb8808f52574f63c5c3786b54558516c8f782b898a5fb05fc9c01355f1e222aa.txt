mov
add
mov
sbbl
leave
xor
push
imul
sahf
push
jecxz
dec
loop
push
inc
and
pusha
mov
jbe
cltd
sub
xor
push
add
pop
jae
fiaddl
mov
aad
fsubrp
mov
mov
xor
clc
das
out
mov
mov
les
inc
xlat
mov
lcall
push
dec
into
stc
aas
pop
int1
lahf
out
mov
popa
outsb
xor
out
sbb
push
outsl
mov
daa
xor
lret
mov
popa
push
lea
add
pushf
sarb
repz
cltd
dec
imul
rorb
adc
jg
int
loopne
cs
cld
ds
push
dec
pop
data16
imul
push
jg
addr16
mov
pop
xchg
jne
xor
sar
mov
mov
sub
jl
repnz
fsts
in
in
cltd
gs
push
outsl
(bad)
dec
cli
push
cwtl
lret
out
and
sbb
xor
xchg
dec
lock
cli
sub
adc
dec
fcos
subb
mov
stos
(bad)
xchg
loope
mov
aas
sub
inc
pop
insl
jp
enter
jne
pop
dec
adc
test
fdivr
into
arpl
sub
lods
cmpsl
(bad)
xor
add
(bad)
outsb
out
inc
cmp
repz
adc
or
pop
out
imul
mov
mov
hlt
xchg
adc
push
mov
jl
imul
scas
cmp
pushf
in
subb
mov
cmp
mov
add
rcrb
lret
dec
xchg
or
mov
cld
cmp
push
or
xor
into
inc
jmp
popa
andl
fcmovne
hlt
int1
(bad)
adc
into
test
xchg
arpl
inc
daa
adc
adc
gs
and
stos
xor
shr
and
daa
pop
add
jae
jnp
sub
xor
loop
popa
mov
sahf
addr16
jne
add
sub
sbb
orl
imul
pushf
sbb
or
jns
mov
ja
in
idivl
fsubs
rorl
inc
in
mov
test
sbb
stos
mov
cltd
cmp
ss
mov
inc
sbb
dec
or
test
cli
dec
mov
push
ss
mov
push
adcb
mov
or
pop
mov
jg
inc
push
xor
and
loope
or
or
and
jge
sbb
aad
dec
mov
inc
pop
popa
and
bound
pushf
xlat
rclb
pop
iret
jo
ss
imul
push
mov
call
fs
in
cmp
(bad)
pushf
add
stos
stc
movl
jns
loopne
adc
popf
cs
sub
pusha
hlt
dec
aas
xchg
mov
movb
pop
fs
test
lock
movsb
cmp
mov
mov
ljmp
mov
push
adc
jmp
ficomps
sbb
test
jle
test
subl
ret
pusha
add
add
insl
(bad)
jae
insl
lret
mov
movsb
inc
lret
stos
shrb
cmp
lock
pop
xlat
adc
add
adc
sub
push
sbb
fldl
sti
int1
jge
mov
lret
mov
xchg
dec
lret
ja
mov
stos
aad
clc
scas
xchg
sbb
movsb
ja
ror
sahf
sbb
outsb
ljmp
insl
sub
push
pop
jp
(bad)
sub
sub
pop
lods
mov
xchg
notl
jnp
mov
add
sub
stos
fwait
dec
and
ss
in
(bad)
sbb
sbb
add
jbe
(bad)
int1
call
mov
xchg
fwait
push
scas
sbb
out
stc
pop
adc
push
cmp
push
mov
js
or
(bad)
push
lods
inc
fldl2e
sbb
push
fbld
cmpsl
xlat
lods
outsb
mov
lea
clc
dec
push
in
mov
shl
outsb
pop
dec
pop
dec
bound
ror
mov
(bad)
xor
ja
lret
jns
mov
pop
jl
xor
stc
or
test
lcall
jne
ficoml
cmpsb
adc
out
iret
or
sub
shlb
popa
mov
call
ret
xor
sbbb
aas
dec
or
pop
or
loop
loop
mov
pusha
sti
(bad)
lds
jmp
jmp
mov
dec
sbb
mov
xchg
int
sahf
inc
push
and
scas
pop
adc
or
mov
gs
xlat
int1
loopne
leave
fcmovnu
(bad)
mov
test
(bad)
push
push
mov
xor
mov
in
jbe
cltd
cs
jl
int
filds
inc
push
sbb
scas
add
mov
jbe
mov
ss
lds
loopne
std
scas
push
add
sub
cmp
dec
and
or
lcall
orb
dec
dec
hlt
xchg
jge
jnp
scas
mov
cmp
orb
fwait
xchg
lahf
cmpsl
in
popf
and
std
jne
and
(bad)
imul
push
ret
adc
lret
in
movntps
push
push
or
insb
and
fimuls
popf
and
lock
in
push
push
cmp
das
cmp
mov
js
decl
call
pop
jbe
int
subb
orb
int3
cs
mov
fnstenv
push
xchg
mov
rcrb
daa
cmpb
(bad)
or
mov
push
push
mov
aaa
dec
jo
lock
das
push
rolb
(bad)
test
(bad)
cmp
push
dec
xchg
add
jg
mov
lods
mov
es
mov
dec
push
lret
ja
jp
xchg
pop
fnsave
mov
xor
test
add
cld
es
mov
dec
mov
xor
(bad)
(bad)
nop
aaa
out
test
jg
fldenv
shlb
out
js
loop,pn
(bad)
cmp
adc
inc
call
push
push
push
adc
push
subl
popf
inc
or
and
fs
xchg
pop
mov
cmp
lds
loope
cmc
jg
jge
(bad)
mov
ret
xchg
mov
test
or
adc
xchg
add
loope
test
mov
iret
or
in
sbb
iret
mov
mov
sub
push
ffreep
nop
dec
cmp
das
rcll
dec
cmpsl
out
ljmp
pop
cmpsb
scas
xor
inc
mov
dec
cs
jmp
xor
int
lret
js
pop
pop
movsb
shll
dec
mov
mov
decl
jae
shll
aam
lea
and
xor
(bad)
mov
popa
inc
xchg
mov
mov
sbb
xor
or
das
insb
rcrl
shll
and
popf
enter
jecxz
test
inc
xorl
sub
test
and
(bad)
out
push
push
xor
and
shll
xchg
out
mov
xorb
cwtl
mov
push
mov
subb
fsub
out
cmp
lods
dec
and
fildll
mov
add
pop
das
xor
into
das
and
pop
sahf
mov
movaps
rcl
sub
inc
sbb
mov
bound
dec
mov
aad
aam
xchg
inc
mov
mov
mov
aad
push
xlat
outsb
out
xchg
cmp
into
mov
dec
test
inc
mov
fistps
jne
xor
pusha
mov
mov
jmp
scas
and
push
mov
clc
sahf
je
js
das
das
addr16
sub
and
das
xchg
adcb
mov
cmp
add
(bad)
daa
insb
jp
cmp
cld
lcall
fcmovnb
mov
loope
mov
cld
out
cmp
std
je
sbbl
inc
repz
sbb
rclb
dec
jge
add
dec
cmpsl
jnp
push
jl
cmp
dec
jl
fsincos
dec
xchg
arpl
mov
enter
arpl
dec
push
clc
insb
xor
out
xor
in
jnp
cltd
mov
dec
stc
iret
fadds
ret
mov
je
push
mov
in
mov
adc
push
imul
fwait
adc
pop
xor
push
dec
sbb
addr16
sub
lods
mov
loope
mov
add
jbe
xor
mov
cmc
lcall
shl
popf
and
xchg
jns
movb
push
mov
movl
fbld
lods
mov
inc
dec
adc
outsb
in
(bad)
fsubl
ret
movsl
mov
outsl
add
imul
cld
out
sub
xchg
