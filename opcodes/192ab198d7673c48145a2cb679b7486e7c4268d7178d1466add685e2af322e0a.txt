inc
sbbb
addr16
data16
in
xor
in
fwait
push
lret
push
cmp
gs
lock
push
mov
push
pop
ret
(bad)
mov
popf
or
jmp
cs
lods
push
fwait
jp
xor
loop
xor
and
sarl
test
mov
test
shl
scas
fidivs
out
dec
imull
cli
mov
mov
inc
and
dec
int
cmc
lahf
sbb
jecxz
xor
dec
je
adc
mov
xchg
and
call
scas
or
outsl
mov
rolb
sahf
pusha
sbb
add
jmp
insb
bound
aas
ret
popf
lods
jne
xchg
(bad)
cmpsl
cmc
adc
adc
mov
push
out
(bad)
stos
out
or
cwtl
inc
sub
scas
cmp
adc
ss
int1
or
mov
out
inc
xor
xor
add
daa
les
(bad)
ja
jmp
jb
lods
cwtl
cmpsb
cmpsl
dec
loop
push
push
(bad)
outsl
mov
jmp
insl
xchg
shl
arpl
pop
bound
push
enter
scas
mov
cmpl
cmpsl
int3
(bad)
fwait
shr
inc
lods
out
repnz
or
or
dec
roll
into
mov
int3
xchg
xchg
sub
mov
xchg
jle
sahf
lahf
mov
lods
daa
into
pop
sub
push
(bad)
lods
pop
jae
lods
fwait
cmpsl
cmpsl
push
jbe
roll
push
xchg
scas
xchg
int
inc
mov
xchg
(bad)
cmpsl
repz
adc
stos
and
nop
iret
and
daa
add
and
lahf
imul
jo
out
lahf
inc
mov
test
js
pop
push
xchg
daa
jmp
pusha
(bad)
loopne
shr
mov
dec
outsb
lea
out
pop
rcll
jp
in
out
add
iret
lods
xchg
pushf
(bad)
fadds
shlb
adc
stos
lahf
mov
shr
mov
lods
pop
je
jle
ja
aam
shll
std
and
mov
lret
mov
outsl
mov
lods
jle
(bad)
aas
pusha
and
paddd
lcall
sahf
or
add
mov
in
insl
mov
gs
mov
pop
and
je
mov
lods
cs
push
aam
adc
push
ret
sub
xchg
bound
sti
lods
and
lahf
imul
jne
and
scas
sub
int3
xchg
sbb
cmpsl
mov
lods
daa
int3
ds
pop
call
int3
xchg
movsb
clc
cmpsl
stos
nop
lock
sbb
insl
mov
test
push
sub
mov
dec
bound
ret
sub
enter
stos
movsl
cmpsl
inc
push
mov
mov
lods
xchg
insb
loop
outsb
roll
insb
and
mov
lret
(bad)
lret
cmpsb
test
outsl
mov
xchg
(bad)
sub
lods
add
push
xchg
(bad)
imul
movsb
xor
mov
in
and
cmpsl
and
addr16
insb
movsb
sti
ucomiss
sahf
push
and
push
rcrb
repz
pop
test
adc
mov
(bad)
adc
insb
mov
in
int
push
test
cmc
arpl
fsubr
adcl
repnz
mov
int3
addr16
dec
stos
jbe
mov
bound
int
enter
xchg
je
int3
xor
mov
je
into
xlat
(bad)
repz
call
inc
gs
rolb
mov
test
xor
js
mov
fistpll
addr16
mov
pushf
push
xor
lods
shlb
shrl
jne
aam
jb
lods
lods
cmpsl
cmpsl
push
cmpsb
cmpsb
adc
push
nop
mov
outsb
sahf
xchg
sahf
fstpl
xor
ds
mov
sahf
daa
sbb
xor
xchg
adc
xrelease
bound
xor
mov
and
add
(bad)
pop
in
int
push
test
cmc
gs
mov
jp
(bad)
mov
cld
bound
movsbl
or
repnz
fmulp
int
fildll
insb
lea
xor
dec
and
rcr
ja
stos
out
jae
lods
lea
outsb
sub
push
mov
mov
xchg
xchg
mov
and
lret
and
xchg
hlt
hlt
mov
inc
rcrb
xchg
add
jle
(bad)
jmp
int3
cmpsb
inc
data16
lock
lret
jp
jne
pushf
out
(bad)
mov
test
lods
sahf
insb
addr16
dec
call
sub
iret
cmpsl
sub
into
loop
mov
xor
mov
sub
mov
imul
push
cs
fisubrs
sub
int3
call
sub
iret
mov
daa
sub
xchg
and
lea
out
cmp
adc
je
int3
out
push
lea
cld
add
and
je
or
mov
test
push
xchg
and
mov
and
cmpsb
or
movsl
daa
pop
es
shlb
scas
in
stos
out
inc
pop
adc
loop
sub
es
lret
mov
call
xchg
bound
subl
pop
sbb
loop
or
and
sarl
test
add
in
dec
into
(bad)
and
lds
inc
mov
stos
mov
imul
and
lahf
or
or
movsb
out
jg
adc
insb
pop
adc
in
push
pushf
jle
(bad)
out
test
xchg
push
inc
pmaddwd
test
outsb
xchg
push
sub
lods
mov
leave
and
iret
mov
lods
add
test
cwtl
sub
sahf
lahf
out
xor
out
movnti
dec
jmp
xchg
(bad)
daa
ret
cmp
sbbl
jp
ror
jb
xchg
or
cmc
jecxz
and
dec
test
scas
addr16
out
xlat
shrl
xor
mov
aam
js
repz
mov
out
iret
mov
mov
push
jnp
neg
stos
ljmp
out
cmp
lahf
ret
inc
nop
hlt
in
mov
int
jne
insl
ljmp
mov
test
adc
test
enter
aas
and
pop
inc
call
outsl
mov
outsb
es
cmpl
lods
xchg
jle
rcl
hlt
shrb
lea
ret
jg
jne
xchg
lock
(bad)
xchg
in
test
xchg
or
(bad)
je
dec
outsb
popf
ret
mov
mov
imul
push
push
and
fistpl
mov
fs
sbb
js
into
cmp
fucomp
inc
testb
jmp
out
adc
clc
(bad)
cmpsl
add
mov
pop
bound
mov
repnz
push
ficoms
dec
pop
xchg
dec
lods
and
aaa
mov
push
fdivrp
dec
lahf
rolb
into
int3
sbb
inc
pusha
cmpsl
cmpsl
jecxz
cltd
xlat
aam
scas
jle
jmp
mov
or
mov
clc
adc
add
dec
push
jo
and
mov
ficoml
mov
cli
aad
adc
bound
inc
lea
das
cmpsl
sahf
loop
outsb
inc
nop
add
sahf
(bad)
xor
iret
lods
repnz
xor
jl
repnz
add
and
lret
outsb
imul
outsb
test
push
out
mov
rcll
scas
mov
out
push
pop
xor
jecxz
loopne
push
aad
push
orl
dec
shrb
aam
xchg
and
in
sub
xchg
pop
mov
add
fdivl
mov
aam
das
dec
jnp
push
and
add
int
adc
lret
cmp
cli
movsb
xor
lret
adc
clc
fstp
outsb
stos
incl
int
lret
test
movsl
add
pop
hlt
fs
cmp
out
test
imul
loope
pop
loopne
fstp
dec
push
push
fistpll
andb
add
imul
(bad)
lock
out
mov
scas
push
sub
or
ret
fwait
and
mov
and
loop
lock
jb
adc
sub
ja
loopne
aad
movsl
push
repz
addr16
clc
jmp
dec
add
sub
sub
jecxz
dec
loop
imul
imul
negl
test
mov
xchg
pop
lea
fdivrl
movsl
gs
mov
mov
gs
pop
daa
push
adc
xchg
jae
dec
mov
test
and
jg
jmp
pop
jecxz
inc
test
add
push
push
inc
