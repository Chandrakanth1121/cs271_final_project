daa
adc
adc
add
push
scas
add
es
int3
cld
ret
lea
rorb
cmpl
dec
pop
movl
out
decb
sbb
mov
outsb
not
inc
mov
je
mov
fs
je
movl
add
call
sbb
sbb
lret
inc
inc
mov
or
cmpl
adc
je
leave
mov
nop
cmp
jmp
xchg
paddusw
mov
mov
fwait
cli
or
xor
cmpl
fwait
sti
jbe
mov
rorb
xchg
shr
push
lea
(bad)
mov
int
or
sbb
ret
cmpl
jbe
fbld
cs
je
jge
jg
push
std
sub
adc
add
add
xchg
pop
repz
pop
adc
or
add
(bad)
sbb
sbb
or
nop
lea
fbstp
sti
in
push
dec
push
push
push
xor
push
dec
mov
mov
sbb
js
jmp
jne
sbb
test
jbe
mov
add
call
sub
cmpxchg
mov
inc
cmp
jns
inc
cmp
mov
jno
sbb
add
push
in
inc
mov
add
push
and
push
pop
ret
mov
test
pop
test
pushf
sbbb
fadd
mov
outsl
shlb
cmp
pop
or
bswap
adc
xor
mov
and
cs
test
jl
and
or
cld
enter
mov
add
ja
ret
mov
testb
fs
push
cld
mov
mov
lea
mov
aaa
cld
mov
mov
xchg
ret
fildl
les
inc
push
dec
xor
mov
movsb
cmp
jne
mov
fdivp
fiadds
lret
outsl
or
xchg
inc
mov
mov
adc
jge
in
jmp
or
xor
jno
lock
test
jle
or
dec
(bad)
mov
gs
pop
pop
pop
pop
lea
add
mov
push
dec
test
pusha
xor
pop
xorb
int1
sbb
loopne
es
mov
xchg
inc
scas
addl
cmp
push
inc
popa
add
mov
imul
adc
add
push
adc
or
xorl
mov
or
mov
mov
mov
cmovnp
xchg
or
fbstp
or
push
leave
int
push
inc
mov
sbb
nop
add
or
sbb
jae
ret
adc
sub
rolb
sub
scas
pusha
pop
sti
ret
sbb
call
adc
(bad)
adc
test
sub
adcb
sbb
push
and
mov
mov
pop
push
jbe
add
pop
hlt
push
ret
lea
hlt
stc
add
jmp
lahf
sbb
insl
xchg
or
push
and
or
fldcw
xlat
mov
xchg
leave
ret
out
sub
arpl
xchg
cmc
lock
or
imul
adc
sbb
or
(bad)
and
or
test
std
shlb
shl
xor
mov
(bad)
adc
pop
in
xchg
dec
push
bound
xor
les
inc
or
adc
sarl
iret
xgetbv
movl
movl
push
or
js
fsubs
pop
or
push
insb
add
xchg
cmpl
fsubr
std
or
in
addb
pusha
filds
lret
inc
mov
inc
push
and
xchg
push
dec
add
sbb
dec
jb
aam
sbb
add
jae
adc
add
test
leave
add
push
inc
mov
cmp
nop
repz
loope
cld
cs
adc
pop
push
(bad)
in
add
mov
push
or
push
pop
inc
ret
shl
sbb
nop
outsb
xchg
fdivs
add
cmpl
test
dec
insl
shll
mov
mov
sbb
mov
push
sub
in
and
in
shr
mov
or
ljmp
out
add
push
add
inc
test
jmp
or
pop
lret
in
cmp
test
pop
pop
test
or
test
or
cltd
fs
cmp
inc
dec
out
inc
nop
dec
dec
xchg
sub
(bad)
and
fisttps
mov
jmp
add
mov
hlt
mov
ret
mov
cwtl
fadds
adc
aad
fmull
testl
inc
push
in
adc
scas
and
orb
xor
popa
adc
and
dec
in
std
dec
fmuls
pop
xorl
push
notl
inc
cmc
xor
in
dec
fsubs
or
jmp
nop
jmp
nop
clc
mov
mov
cld
adc
in
xchg
cwtl
loope
mov
adc
rep
push
and
lods
pop
adc
fdivr
orb
and
xor
and
leave
sbb
adc
sub
enter
add
lea
and
ja
jmp
lock
jo
xlat
pop
inc
je
sub
or
in
lea
sbb
sub
xor
jbe
jmp
cmc
add
add
fmull
sbb
mov
pop
aad
xor
lret
outsl
push
fnstenv
push
cmp
cmp
aas
add
or
sbb
movb
jnp
push
aad
lret
jbe
rcr
and
xor
lea
push
lret
imul
add
or
testl
cmp
pop
loopne
testb
addr16
les
jmp
adc
in
(bad)
sub
rorb
mov
sub
pop
add
shrb
pusha
out
sbb
bsf
fs
enter
or
call
int3
shrb
test
nop
xchg
xchg
es
mov
in
jle
add
or
pop
adc
mov
nop
sbb
or
loopne
ljmp
adc
dec
sbb
fst
mov
dec
jmp
sbb
ret
pop
(bad)
pop
mov
inc
idiv
(bad)
jnp
je
lds
popf
sbb
adc
test
mov
xor
aas
cmpsl
sbb
push
test
fldcw
fstl
mov
pop
jne
jmp
pop
xchg
cmp
pop
pop
mov
adc
(bad)
das
ss
outsl
xor
(bad)
bound
lahf
or
push
test
out
add
push
leave
mov
test
loope
mov
push
dec
and
and
push
inc
adc
inc
je
jb
fsubrl
fimull
rolb
fucomi
je
mov
xor
arpl
sti
add
je
scas
jnp
outsl
inc
or
mov
jne
xor
fiadds
popa
dec
add
pop
mov
sub
xchg
cs
mov
or
mov
cmp
mov
push
and
add
xchg
push
xchg
fstpt
aam
inc
or
loopne
adc
orl
mov
jbe
push
cmp
fisttpll
mov
push
call
push
mov
sti
add
add
sbbl
dec
fninit
(bad)
push
lea
inc
mov
xchg
add
arpl
(bad)
mov
out
or
sub
or
lcall
lcall
sbb
dec
insb
xor
movsl
sbb
lea
(bad)
mov
cmp
jb
sub
push
or
ret
mov
cmpl
mov
pop
mov
clc
sbb
or
addr16
sbb
aam
adc
add
mov
insb
nop
sbb
jo
inc
fwait
sbb
xor
sbb
sub
loopne
lods
dec
test
pop
clc
cld
and
je
push
rolb
jne
xorl
inc
lcall
in
div
xchg
mov
cmove
clc
int3
add
lea
aad
mov
pop
pop
or
jb
data16
xchg
test
inc
xchg
pop
shrb
neg
arpl
imul
or
inc
mov
sub
mov
or
(bad)
mov
dec
pushf
shrb
or
mov
push
add
mov
test
insb
add
loopne
sbb
out
lods
ret
sub
scas
testl
add
pop
jle
dec
scas
sti
(bad)
(bad)
push
push
mov
mov
add
mov
or
aas
and
rcr
(bad)
fldt
jae
int3
mov
jmp
pop
fadd
insb
pop
cmp
sub
cmp
dec
and
jns
or
jle
sbb
aam
roll
inc
mov
xorl
xor
ret
leave
jbe
(bad)
fs
cld
sahf
jle
out
(bad)
and
or
(bad)
not
mov
mov
cmp
je
jp
jne
mov
add
arpl
jp
rorl
jmp
test
or
or
jae
inc
and
in
push
les
mov
cmp
enter
or
mov
