adc
push
mov
mov
and
imul
add
add
mov
lods
filds
insl
ljmp
addl
popa
shrl
push
mov
imul
aaa
fldcw
fldcw
pop
inc
xor
incl
sub
mov
cmp
add
testl
nop
mov
jp
test
jp
adc
repz
scas
arpl
push
(bad)
loopne
mov
loopne
push
scas
pop
inc
sub
and
mov
movb
stos
ja
cmpsb
test
jno
in
cmpsl
pop
pushf
dec
or
lods
xchg
scas
inc
std
xchg
insb
(bad)
pop
lahf
and
mov
and
imul
aaa
fldcw
fldcw
pop
inc
xor
sbb
lods
pop
imul
and
jno
fdivrp
loopne
test
and
jecxz
add
scas
adc
in
cs
pop
adc
pop
mov
pop
sti
leave
xchg
push
outsb
mov
mov
fwait
and
and
jecxz
cld
loopne
test
and
jecxz
jge
fwait
and
scas
adc
in
xchg
das
xchg
pop
adc
mov
pop
sti
leave
xchg
push
outsb
mov
mov
fwait
and
push
push
jecxz
mov
loopne
dec
jb
fwait
and
cmp
ljmp
out
btc
pop
ficomps
loopne
dec
sbb
rorb
mov
loopne
lods
jno
out
cmpsl
pop
pushf
dec
sbb
lods
xchg
scas
inc
std
xchg
insb
(bad)
pop
nop
and
popa
rcrl
aaa
fldcw
fldcw
fldcw
pop
inc
xor
sbb
sub
mov
cmp
jmp
jnp
fwait
and
in
cmpsl
fidivrs
loopne
stos
int3
mov
fwait
and
jmp
fidivs
sbb
outsb
fwait
and
jmp
xlat
mov
enter
push
insb
sub
fidivs
sti
leave
xchg
scas
dec
gs
and
lods
xchg
dec
inc
jmp
adc
subb
add
push
sbb
adc
pop
subb
add
test
sub
ds
add
push
fwait
mov
adc
loop
push
fdivrl
xchg
sbb
xchg
jmp
dec
outsl
fwait
and
jmp
fidivs
sbb
outsl
fwait
and
mov
pop
ljmp
sti
leave
xchg
push
outsb
mov
mov
fwait
and
jecxz
sahf
dec
lcall
out
btc
pop
lods
inc
std
nop
mov
dec
out
data16
push
mov
push
bound
imul
mov
out
and
imul
mov
loopne
(bad)
mov
inc
pop
pop
sub
dec
imul
fldcw
pop
inc
sub
and
cmp
mov
mov
fldcw
fldcw
fldcw
out
sbb
mov
sub
push
imull
sub
test
push
push
(bad)
mov
insb
push
popa
mov
loopne
pop
mov
xchg
out
pop
pop
jae
imul
mov
repz
xchg
mov
fldcw
pop
inc
sub
test
ljmp
into
push
xor
adc
dec
cmp
adc
insl
push
inc
cmp
mov
subl
iret
xchg
test
dec
xchg
stos
ret
dec
out
scas
inc
std
xchg
mov
dec
rep
ret
dec
out
test
dec
xchg
mov
mov
jmp
insb
mov
fldcw
fldcw
loopne
(bad)
mov
inc
pop
pop
add
dec
imul
fldcw
sub
popf
ljmp
int1
mov
xchg
or
ljmp
dec
sbb
pop
adc
imul
scas
mov
cmp
mov
mov
fldcw
fldcw
fldcw
loopne
(bad)
mov
(bad)
mov
push
scas
inc
pop
pop
mov
dec
imul
pop
inc
sub
and
cmp
mov
mov
fldcw
fldcw
fldcw
out
sbb
mov
sub
incl
and
stos
mov
(bad)
pop
and
and
out
push
mov
out
pop
sub
cmpsl
adc
sub
sub
xor
arpl
cmpsb
adc
stos
rorl
pop
adc
imul
fldcw
fldcw
pop
inc
sub
test
ljmp
into
pop
xor
sbbl
mov
adc
fisubs
imul
or
imul
int
or
(bad)
ljmp
or
jmp
xchg
dec
add
and
test
jp
push
fisubs
pop
push
sub
test
lahf
test
popa
adc
bound
pusha
mov
in
cmp
addr16
cld
sub
fidivrs
mov
add
add
lahf
cltd
and
and
insb
cld
popa
fwait
and
imul
test
pop
push
and
dec
push
in
scas
in
pop
fidivs
adcl
outsb
and
lods
lea
cld
mov
sahf
loope
and
jl
fsubrl
imul
shrb
imul
lods
jle
ljmp
out
xchg
adc
loope
scas
test
jp
test
jp
and
inc
in
push
(bad)
out
add
test
push
adc
push
cmpsb
mov
adc
mov
mov
out
sub
jae
dec
shrl
cmp
inc
sbb
sti
in
out
mov
cmp
sbb
mov
imul
cmp
lahf
add
sbb
enter
mov
cmp
popf
scas
inc
cld
int3
stos
mov
imul
insl
or
push
sbb
dec
jne
pushf
and
lods
xchg
scas
inc
std
in
and
push
mov
cmp
filds
nop
adc
mov
dec
arpl
add
inc
adc
cld
loopne
(bad)
(bad)
cmp
test
fwait
and
and
push
push
mov
loopne
xchg
xchg
adc
mov
push
imul
loopne
mov
dec
repz
dec
ljmp
std
inc
mov
push
daa
frstor
insl
push
mov
pop
repz
adc
mov
imul
mov
xor
lahf
and
js
fs
pop
pop
lds
dec
push
lfs
test
adc
fisubrs
scas
imul
add
jns
dec
cmp
sbb
sti
dec
jmp
js
test
mov
fldcw
fldcw
fldcw
push
xchg
negl
mov
das
imul
pusha
cmp
adc
inc
cltd
aaa
lcall
out
(bad)
pushf
stos
mov
ljmp
jno
fiadds
in
pop
mov
pop
push
out
test
adc
outsl
addl
out
mov
imul
xchg
nop
(bad)
pushf
stos
mov
loope
and
scas
nop
dec
ret
push
and
dec
enter
jl
xchg
dec
shrb
and
lods
nop
jae
mov
fwait
int3
jl
push
ja
fsubrs
adc
dec
subb
push
xor
mov
and
push
out
mov
insb
ljmp
mov
and
sub
fsubrs
adc
out
mov
mov
fwait
out
jmp
test
dec
out
das
and
push
out
mov
insb
ljmp
mov
das
ds
popa
jbe
push
out
mov
mov
fwait
mov
ds
popa
inc
add
mov
jo
shll
lret
ret
mov
push
and
insb
adc
push
scas
lods
mov
cmpsl
sbb
inc
add
mov
ja
shll
lret
ret
mov
bound
xchg
pushf
jb
pop
(bad)
mov
mov
push
mov
sub
mov
sub
jmp
insl
test
sub
pushf
jle
mov
xor
sub
mov
push
mov
arpl
inc
in
sub
ja
fwait
pop
xchg
and
fwait
xor
movsb
pushf
and
insl
jmp
add
and
insl
jmp
add
and
in
push
movsl
sbbl
and
jns
and
fwait
out
xchg
pushf
and
ljmp
call
fwait
xor
mov
pushf
and
sbb
xchg
and
xchg
stos
inc
call
fwait
and
pop
and
test
xor
cmpsl
mov
cwtl
sbb
jmp
pushf
bound
jmp
popf
pinsrw
shrb
xchg
and
lds
xchg
das
mov
push
das
mov
push
das
mov
push
lods
jno
xor
add
(bad)
imul
xor
and
loopne
popa
sahf
arpl
inc
(bad)
jmp
pushf
fwait
subl
inc
mov
test
pop
mov
mov
mov
cs
mov
push
loope
