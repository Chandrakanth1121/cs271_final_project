pusha
or
add
dec
add
add
add
add
add
add
add
add
add
fwait
dec
mov
rcrb
leave
pop
movsl
lahf
aam
cwtl
dec
out
test
cmp
pop
xchg
sbb
repz
push
cmp
imul
in
daa
fbld
pop
enter
adc
or
push
push
cli
push
and
popa
(bad)
int
xchg
aam
arpl
repz
fistpll
insl
and
fcoms
cli
aaa
inc
sbb
rorb
test
test
ljmp
mov
out
lock
std
or
test
test
stc
add
jge
(bad)
call
pop
in
pushf
xchg
mov
xchg
aad
push
leave
cmc
pop
mov
dec
mov
ja
arpl
imul
into
cmc
add
add
pop
xor
jle
push
cld
sub
and
loop
add
xchg
fwait
rorb
popa
fsubrs
sti
pop
inc
shl
loop
fdivrs
mov
dec
cs
adc
dec
pop
cmpsl
mov
dec
mov
decb
std
fbstp
xchg
pushf
push
outsb
cmpsb
or
xchg
xchg
stos
push
pop
sub
mov
bound
iret
jnp
push
and
and
scas
(bad)
mov
push
mov
push
add
mov
sahf
mov
inc
jl
inc
fists
push
mov
clc
stos
jnp
add
jmp
idiv
jmp
push
inc
repz
sbb
imull
in
lock
shr
jle
(bad)
xchg
mov
xchg
add
pop
push
ret
xor
jl
sbb
fs
adc
and
andb
push
(bad)
jmp
mov
ss
test
ja
movsl
popa
lock
add
mov
hlt
sti
push
push
sbb
pusha
jmp
mov
shrb
mov
xchg
gs
sarl
pop
in
mov
pop
sub
push
add
(bad)
cltd
in
imulb
pop
mov
sbb
fistl
jmp
loope
cmp
lcall
push
add
or
mov
movsl
cld
pop
inc
shr
mov
xor
xor
push
push
ljmp
jmp
(bad)
sub
scas
repz
out
in
xchg
pushf
pop
addl
push
inc
cltd
nop
sub
jne
cltd
xchg
cmpsb
movsl
sbb
sbb
fldt
inc
mov
test
aam
inc
in
gs
aaa
pop
fildl
sub
mov
lcall
cmp
insb
sarb
movsl
adc
idivl
xchg
pusha
xchg
in
repz
fidivrl
pusha
test
pop
in
rorb
mov
xor
inc
mov
jl
sbb
inc
dec
cmpsb
sti
mov
cmp
mov
jl
push
mov
xor
pop
ja
sarb
scas
outsl
daa
mov
push
subb
mov
mov
in
xchg
movsl
mov
lods
adc
pop
cwtl
movsl
xchg
push
bound
mov
fistpl
cmp
mov
push
and
pop
sbb
pop
iret
pop
sub
and
in
mov
test
in
arpl
daa
inc
adc
repz
repnz
xchg
stos
test
jmp
sub
cs
xchg
dec
pop
sarl
movsl
sub
and
cwtl
mov
cmp
xchg
ret
stos
adc
cmp
dec
bound
sub
cmp
mov
cmp
dec
scas
mov
fdivrs
pop
sbb
push
cmp
incl
(bad)
jae
sub
jne
mov
mov
add
sbb
in
xchg
adc
rorl
ljmp
cmc
mov
and
sub
arpl
jne
push
iret
xlat
(bad)
push
pop
jne
mov
dec
adc
bound
push
mov
push
or
adc
stos
ljmp
jg
xor
outsb
outsl
lea
jmp
std
mov
aam
cli
shr
inc
sub
or
sbb
orb
jge
movsl
fiadds
jno
mov
inc
inc
or
jge
mov
mov
xor
stos
jo
xchg
divb
loopne
rol
jmp
sahf
xor
xchg
push
stc
scas
scas
dec
sbb
(bad)
in
aad
rcrl
insb
(bad)
cwtl
sub
xor
test
sti
mov
sti
in
mov
les
mov
xchg
sti
dec
or
sub
and
add
int3
adc
or
sbb
call
dec
push
push
mov
cmp
mov
fld
or
adc
ja
and
js
sub
push
cmp
ljmp
cmpsb
mov
dec
addr16
jns
ret
ja
fisttpl
lret
xchg
insb
inc
sbb
mov
and
jp
xor
xchg
pop
cmp
or
sbb
loopne
cmpsl
movb
sub
into
stc
(bad)
enter
add
xor
jge
repnz
inc
sbb
out
ja
sub
adc
push
mov
pop
mov
sub
test
mov
pop
hlt
dec
lcall
or
lret
pushf
shlb
lcall
dec
aad
arpl
pushf
aam
jle
mov
and
loop
mov
ja
cltd
mov
test
jb
cli
dec
js
mov
pop
and
mov
test
jb
andl
mov
jg
jmp
(bad)
fidivrs
shll
xchg
int
in
mov
xor
sub
leave
shl
adc
mov
popa
add
push
adc
add
lds
xchg
(bad)
test
cmp
cmpsb
adc
and
in
lock
mov
shrb
jg
cmp
outsl
fistl
mov
fwait
popf
push
mov
inc
and
and
jmp
testb
daa
mov
push
jae
xor
add
loop
sbb
lods
xchg
mov
arpl
sub
in
adc
xor
adc
ror
jno
addr16
rclb
pop
inc
adc
mov
and
mov
cmp
lock
fistpll
push
out
dec
fsubrs
arpl
mov
lods
ljmp
jmp
fsubrp
xchg
mov
jae
or
pandn
movsl
ja
add
loope
xor
or
jae
sub
xchg
sub
sub
mov
fadd
pushf
adc
adc
jo
or
shlb
xchg
cli
dec
pop
aad
or
pop
or
ljmp
mov
or
incl
push
mov
cmp
jle
orl
cmp
or
ret
inc
popa
dec
mov
gs
or
mov
insl
push
sbb
hlt
les
xor
fsincos
lock
mov
insb
jnp
lock
nop
push
xor
xchg
leave
sub
adc
or
mov
mov
add
aaa
cmp
ljmp
pop
adc
push
lret
xor
jbe
push
jae
roll
fildl
dec
xor
(bad)
jns
in
mov
mov
push
lds
inc
inc
les
nop
xor
add
push
pop
cmp
dec
lds
imul
fbstp
or
mov
(bad)
xor
mov
in
fmuls
pop
mov
mov
es
in
mov
imul
call
cli
jbe
ficomps
sbb
out
test
jb
mov
bound
daa
cwtl
popa
cs
pop
aad
lcall
shll
and
sbb
loopne
mov
cs
clc
pop
mov
cmp
dec
xchg
mov
xor
or
ret
lret
inc
rclb
and
dec
mov
out
cld
or
cwtl
rcll
(bad)
fdivr
fsubrs
mov
cmp
out
inc
dec
lock
adc
mov
jo
sahf
imul
out
ljmp
enter
fldln2
ret
pusha
xchg
je
sbb
adc
dec
repnz
test
add
jae
lock
pop
mov
pop
loopne
mov
mov
jo
cmc
cmp
mov
jno
outsb
loopne
int3
inc
mov
or
(bad)
movsb
and
test
xchg
cmp
(bad)
push
loop
bswap
loope
adc
cmpsb
xchg
xchg
lds
push
jg
in
lods
sbb
fimuls
jg
inc
push
insl
out
movsl
clc
cmp
popa
js
jmp
enter
mov
or
fimull
mov
mov
aam
movsl
nop
add
jbe
int
jns
call
aad
add
(bad)
popf
dec
sbb
stc
sub
push
inc
push
out
call
dec
push
and
fisttpll
cmp
inc
dec
lahf
test
mov
lret
popa
pop
xchg
out
dec
ret
mov
adc
mov
mov
pop
scas
