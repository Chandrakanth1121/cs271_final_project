adc
std
push
ret
dec
mov
repz
jbe
xor
int1
adc
xor
xor
mov
pop
mov
adc
dec
xchg
idiv
sbb
mov
push
fisttpl
ds
jae
pop
dec
in
fwait
xchg
ret
jb
jo
jle
xchg
ja
push
cmp
sahf
popf
inc
jns
sti
cmpb
lahf
adc
mov
orb
arpl
mov
sbb
lock
xlat
cli
loopne
dec
mov
push
cli
cmp
addr16
mov
cmc
out
inc
add
pop
fists
mov
dec
clc
lcall
jbe
cmpb
sub
pop
stos
nop
inc
fildl
sbb
ss
jecxz
pop
fwait
xchg
loope
dec
out
mov
mov
xchg
jp
inc
xor
pop
lds
inc
cmpsl
cld
sbb
lret
adc
lea
push
movsl
sar
push
sub
out
pop
and
sti
outsl
cmpsl
adc
les
push
test
fistpl
push
gs
repnz
popa
lret
jns
jb
sahf
push
rol
repnz
into
mull
lahf
adc
roll
dec
inc
xlat
jp
pop
add
sbb
sbb
xchg
mov
rcrl
push
adc
cs
cmpsb
(bad)
dec
dec
and
arpl
jmp
repnz
shlb
sbb
je
mov
jmp
pop
fs
clc
xchg
loopne
add
(bad)
mov
inc
incl
in
dec
mov
xchg
mov
jne
lret
arpl
pusha
jmp
movzwl
je
mov
push
(bad)
aam
jb
inc
jmp
xchg
loope
mov
dec
push
sbb
adc
stos
ret
push
push
fbstp
sbb
lahf
cmp
movsl
cmpsl
loop
lock
es
add
mov
mov
mov
mov
mov
mov
in
cmp
aaa
dec
xchg
nop
(bad)
push
das
sbb
add
out
sahf
mov
ljmp
jg
adc
jno
mov
ds
(bad)
fidivrs
inc
xchg
mov
inc
iret
jecxz
inc
xor
sbb
add
stos
insl
shl
pop
mov
push
lea
or
lock
and
inc
xor
xchg
lahf
popf
cmp
pop
mov
in
cld
mov
hlt
jecxz
outsl
(bad)
push
pop
or
xchg
jp
cmpsl
or
jecxz,pt
xchg
loopne
movsl
jnp
cmpsb
or
sbb
pop
hlt
nop
test
loop
xchg
(bad)
mov
push
test
and
jo
popa
push
fstp
rcll
lahf
(bad)
mov
pop
fists
mov
adc
test
xor
cmpsb
inc
stc
sti
add
pop
(bad)
pop
xchg
pop
adc
scas
mov
add
pop
aam
popa
lcall
sbb
loopne
or
out
jmp
jmp
lret
loopne
xchg
popf
pop
cmpsl
stc
dec
int1
adc
in
cmpsl
test
inc
ja
mov
pop
enter
sahf
xchg
add
sbb
xor
add
movsb
testl
mov
jns
xor
sub
andl
popf
sub
divb
mov
pushf
data16
jbe
cs
jg
enter
fildl
and
ljmp
pop
mov
xlat
xor
loop
cmpsl
cli
mov
xor
enter
xor
pop
imul
sbb
xor
jmp
pop
ds
mov
test
sub
mov
call
jge
and
hlt
loopne
out
push
notb
dec
call
jg
jecxz
lret
push
xor
or
insl
mov
jb
call
fucomp
mov
mov
add
cmp
std
int
mov
pop
dec
(bad)
jl
add
jp
daa
mov
test
pop
xor
push
(bad)
arpl
lcall
out
int
insl
lcall
ja
(bad)
cld
rorb
cmpsl
adc
sub
fiadds
xchg
lds
andl
cmp
mov
xchg
cmp
sbbl
cmpsb
test
mov
out
dec
fcoms
daa
sbbl
and
or
cmpsb
int3
mov
popa
xor
je
cmp
sbb
or
(bad)
fistpl
push
(bad)
and
push
imul
mov
pop
jne
inc
pusha
or
into
lcall
dec
sub
cmp
pushf
pop
loop
mov
fdivl
jecxz
mov
es
cmp
mov
aam
bound
pop
movsb
cld
dec
loopne
int1
pop
ret
cmp
xor
in
xchg
jp
ret
arpl
(bad)
arpl
push
out
cmpsl
and
iret
xchg
cmpl
add
mov
lods
sarl
ljmp
into
(bad)
cs
ret
daa
hlt
ja
arpl
add
cmp
push
mov
push
and
jg
outsl
pop
stos
sbb
jmp
dec
mov
mov
cmp
push
lahf
cwtl
int1
mov
dec
cmp
pop
mov
sti
lock
cld
jle
jg
mov
jno
je
xchg
stc
cld
and
xchg
stos
adc
ss
rcll
mov
sbbb
xor
push
test
mov
jno
mov
leave
jp
add
jnp
mov
fstl
out
das
or
lret
mov
(bad)
(bad)
dec
out
xchg
adc
lcall
and
test
orl
movsb
xor
fidivl
repz
mov
inc
and
aaa
fstl
(bad)
pop
cltd
imul
das
add
cwtl
mov
stos
or
dec
pop
pop
imul
dec
int3
aas
ljmp
jnp
(bad)
loop
repnz
mov
mov
shll
cmp
addb
bound
stos
xchg
push
out
movl
daa
xlat
in
in
sub
inc
add
xchg
shll
sub
cltd
(bad)
and
jnp
dec
roll
mov
aam
mov
push
xor
push
and
loop
stc
pusha
ret
xchg
sbb
mov
js
sbb
out
pop
inc
push
(bad)
and
cmp
inc
mov
rcr
push
rcrl
fmul
jbe
mov
(bad)
mov
loop
js
sahf
jmp
pop
mov
sub
push
push
clc
enter
xor
std
fcmovne
lcall
sub
cmpsl
call
cltd
out
jg
mov
push
pop
sbb
movsb
popf
outsb
fnstsw
cmp
cmpsl
ss
mov
xchg
cmp
push
stos
or
enter
and
and
cmp
cwtl
inc
inc
sti
fsubl
fmuls
dec
lea
in
cmp
ljmp
cmp
mov
or
int
mov
inc
lahf
paddb
pop
adc
loope
pushf
mov
mov
and
mov
cmp
hlt
xchg
pop
js
mov
into
xor
js
pusha
xchg
jno
shll
call
sub
mov
(bad)
inc
jge
pop
add
mov
xor
xchg
js
jbe
mov
sti
xchg
lret
shrl
repz
mov
mov
adc
push
mov
push
cmpsb
jbe
lods
jle
pushf
xorb
fistps
and
addr16
je
cld
dec
sarl
out
in
or
iret
std
inc
mov
lcall
inc
lahf
push
test
cmp
xchg
inc
fucomip
and
sub
inc
sub
imul
sub
xchg
ficoml
scas
lea
(bad)
repz
jns
pop
adc
inc
inc
pop
jmp
sahf
fucomp
cmp
and
ss
popf
or
adc
push
sub
cmp
add
rclb
push
dec
clc
push
lods
inc
sti
pushf
lock
sbb
mov
fildll
adc
int1
xor
adc
das
add
jp
mov
ret
lock
adc
mov
mov
jns
sbb
loopne
mov
push
jnp
dec
mov
test
mov
xor
xlat
cltd
in
testl
das
and
sarl
cmpsb
movsl
jbe
(bad)
pop
dec
mov
jae
mov
or
xchg
(bad)
xchg
rcrl
or
adc
sbb
shll
dec
out
push
scas
daa
push
sub
in
mov
clc
xor
fisttpl
adcb
pop
loopne
sbb
jmp
xor
dec
adc
loop
add
jo
fistl
xchg
(bad)
add
pop
ja
int
(bad)
xor
mov
hlt
leave
fimuls
arpl
lahf
jbe
fiaddl
loop
mov
dec
sbbb
inc
pop
ljmp
ret
(bad)
mov
out
dec
add
