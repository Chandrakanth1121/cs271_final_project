add
and
adc
inc
pop
test
popa
mov
mul
or
insl
das
loop
xor
sbb
out
and
xor
mov
vpunpckldq
and
(bad)
add
jb
sub
jbe
jbe
ret
and
std
cs
(bad)
sbb
lcall
rolb
mulb
mov
insb
outsb
mov
or
adc
push
into
push
in
cli
pusha
cmp
pop
inc
testl
and
push
sub
out
repz
test
shll
into
mov
out
mov
push
enter
test
xorb
jmp
xchg
movsl
roll
rolb
push
lahf
sti
into
inc
in
push
into
sti
in
rcrb
out
inc
clc
cli
dec
jae
add
subl
mov
repz
or
ds
in
loop
inc
sub
add
push
lret
aaa
lret
jecxz
stc
push
push
fcompl
lret
stc
test
out
enter
repnz
imull
orl
sub
subb
mull
popw
clc
cli
arpl
pop
cs
out
shrl
das
inc
adc
add
sbb
or
iret
es
cmpb
adc
dec
in
loop
pop
and
in
incb
mulb
pop
and
aas
scas
imulb
in
stc
push
pop
fmull
enter
or
popw
lret
jmp
sbbl
dec
inc
push
xchg
sbb
inc
in
push
into
sti
(bad)
sub
cmp
aas
push
call
in
cli
imul
hlt
and
or
stos
loop
sbb
vpunpckldq
and
outsb
hlt
orl
and
pushf
cli
je
dec
test
cmp
loop
inc
push
movsl
mov
inc
call
and
stos
mov
loope
sub
imull
pop
lret
jo
into
add
mov
imul
pop
test
pushf
int3
lret
in
jns
push
fdivp
dec
sarb
push
je
int3
stc
pop
add
ret
(bad)
fiaddl
jmp
push
mov
push
scas
mov
mov
mov
inc
idivl
jmp
jecxz
lret
mov
arpl
nop
or
stc
sub
mov
imul
repz
or
stos
adc
in
outsb
push
arpl
and
add
push
pop
fisttpl
and
jl
lods
dec
fdiv
pop
rcrl
xlat
push
mov
pop
outsb
test
xchg
outsb
mov
cli
inc
pop
loope
lods
pop
cld
pop
out
into
arpl
push
sti
dec
mov
push
jp
cmp
outsb
mov
aam
mov
shl
clc
ret
shll
sub
lret
lret
or
dec
lret
arpl
and
cli
and
dec
test
cmp
sub
mov
fldt
ret
stos
pop
sbb
and
insb
outsb
mov
or
xchg
call
inc
sub
pop
push
push
mov
subb
rorl
call
jle
sub
and
cli
rcl
sub
jecxz
(bad)
sub
sbb
mov
in
rcrb
adc
sarb
sbb
mov
dec
jl
xchg
or
push
xchg
push
cld
sahf
push
mov
lock
subb
loopne
lret
jmp
arpl
js
shl
cs
jle
sub
negw
inc
xor
push
roll
stc
movsl
pop
fmull
enter
or
loop
stos
stc
and
ds
add
adcl
sahf
fsub
pop
aad
pop
sbb
nop
out
movl
push
pop
arpl
push
outsb
push
pop
mov
mov
cmp
arpl
adcb
push
iret
sub
jmp
jbe
jnp
cs
loope
hlt
jae
jnp
sbb
out
and
lods
mov
jbe
jmp
xor
sub
stos
idiv
sarb
inc
call
xor
add
hlt
gs
xor
imul
jmp
mov
jge
sub
jg
sub
push
adc
les
dec
sarl
or
test
lock
in
add
stos
jg
testl
and
adc
loopne
sub
(bad)
imulb
pop
mov
push
enter
mov
sbb
dec
enter
loope
ret
ja
shl
arpl
mov
xchg
cmp
not
jnp,pt
and
or
pop
jbe
xchg
in
lret
sbb
stos
test
sub
mov
out
add
(bad)
dec
lret
sbb
cmpl
cwtl
pop
inc
clc
jle
out
enter
push
cmp
in
rcl
and
pop
ror
cltd
push
(bad)
pop
mov
mov
sub
lret
stos
and
adc
daa
sahf
idiv
cmpb
xor
pop
(bad)
and
pop
mov
fwait
sti
adc
sbb
mov
mov
mov
jnp
and
or
sub
mov
cs
(bad)
push
mov
mov
imul
scas
add
enter
inc
fsub
divl
call
in
cli
dec
xor
cli
aam
dec
add
push
call
sub
jge
sub
mov
adc
cmp
sub
pop
outsb
mov
mov
mov
cmp
inc
jl
sbb
int3
and
jecxz
jecxz
jno
cli
inc
xchg
push
jecxz
cli
mov
iret
lret
insb
lret
rorb
fwait
loop
mov
test
pop
das
out
shlb
les
cli
arpl
addb
jmp
js
sub
(bad)
lret
push
(bad)
int3
jecxz
mov
in
adc
mov
pop
mov
dec
mov
xlat
loop
push
ror
adc
test
shl
mov
mov
mov
push
push
pop
cld
cmp
subl
sahf
testb
(bad)
mul
in
addr16
or
mov
push
iret
dec
pop
orb
push
xorl
mov
ret
rcrb
into
in
jb
(bad)
sbb
bound
push
out
mov
xchg
mov
pop
shll
fisubl
sarb
and
xor
roll
xor
stc
mov
repnz
aaa
(bad)
pop
push
cmp
and
pop
scas
in
fmulp
fdivrl
stc
les
ds
aam
frstor
push
push
mov
ret
adc
cs
sbb
sub
rcrb
test
adc
lahf
pop
pop
pcmpeqw
fucomi
int3
leave
or
rcr
add
mov
(bad)
mov
adc
dec
push
cmp
push
(bad)
popf
cli
in
(bad)
call
jmp
and
dec
xchg
sbb
sarl
int
and
cmp
jecxz
and
add
add
xchg
stc
incb
push
pusha
adc
fdivrs
subl
adc
mov
push
jp
mov
sub
mov
cmp
mov
mov
cli
jo
je
jp
pop
lock
mov
mov
(bad)
mov
or
test
cwtl
lahf
pop
mov
test
and
mov
push
pop
jmp
inc
call
sbb
mov
sub
xchg
das
repnz
and
(bad)
cli
scas
sub
out
scas
fidivrs
add
mov
test
rol
pop
pop
ss
mov
out
bound
cmpsl
cld
loope
mov
pop
daa
rcrb
mov
call
or
sbb
mov
jmp
cmc
ret
dec
mov
stos
jecxz
xchg
popa
jge
adc
clc
push
or
gs
repz
pop
inc
(bad)
dec
jns
lret
out
pusha
jecxz
dec
mov
pop
pusha
clc
repz
clc
ss
fnstenv
pop
mov
jge
lods
lcall
lods
(bad)
das
lret
adc
adc
pop
decl
jmp
mov
pop
lret
pusha
cmp
sbb
xor
addr16
daa
dec
stos
or
sub
mov
scas
mov
ror
ror
mov
fs
cmpb
push
and
in
(bad)
sahf
push
push
push
jecxz
xchg
test
dec
jg
das
ucomiss
loope
lods
and
or
cmp
cmpsl
ficoml
mov
ret
or
ds
push
add
inc
pop
js
adc
fistpl
sti
or
sub
js
xchg
lock
fdivrs
push
mov
or
xor
cmpsl
jmp
imul
xor
xchg
ds
inc
iret
daa
insl
sbb
lret
sti
lcall
push
cmp
or
mov
or
ds
fcoms
mov
dec
ret
mov
add
inc
adc
lods
aad
rcl
cmp
push
fcomp
lea
