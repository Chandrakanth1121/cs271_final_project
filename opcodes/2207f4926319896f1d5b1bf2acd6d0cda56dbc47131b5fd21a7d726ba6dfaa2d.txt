mov
xchg
lret
add
and
add
add
add
add
xor
cld
and
aaa
stos
das
lcall
test
jb
or
ficomps
mov
shll
imul
pusha
and
add
cmp
push
jmp
nop
jge
pop
dec
pop
data16
test
cmp
stc
lret
xchg
ja
orl
loop
jg
out
cmc
sub
cmp
sub
xchg
xchg
daa
and
adc
scas
adc
xor
lret
(bad)
mov
xchg
in
(bad)
sbb
or
xchg
push
inc
enter
adc
cmc
cs
xor
mov
pop
inc
addl
mov
into
jle
bound
add
movsl
cmp
decb
sbb
loope
out
cmp
clc
dec
nop
push
push
adc
xchg
xchg
loopne
sbb
sub
adc
inc
filds
(bad)
rclb
sbb
push
adc
sti
(bad)
xchg
fwait
(bad)
push
mov
lds
in
ljmpw
dec
sub
mov
adc
mov
movsb
lods
mov
xchg
adc
fiaddl
xchg
scas
das
dec
outsb
sub
sbb
popa
ja
mov
mov
mov
adcb
(bad)
mov
mov
hlt
into
adcl
mov
or
or
aad
adcb
lret
jae
jle
mov
xor
(bad)
and
and
sahf
dec
mov
in
clc
aam
inc
xchg
or
orl
mov
es
push
xchg
push
in
sub
xchg
ljmp
pop
mov
inc
cmp
xor
jle
les
xor
mov
out
outsl
dec
fildl
out
adc
inc
insl
sbb
xor
nop
jg
xchg
sbb
negl
mov
les
pop
mov
out
inc
scas
xchg
insb
je
mov
xchg
mov
xchg
xchg
lea
xor
adc
imul
bound
xchg
mov
push
jo
mov
xchg
lock
sbb
and
ret
sub
jo
sbb
mov
es
testl
sarb
mov
adc
xchg
xchg
adc
pushf
jp
add
sar
frstor
nop
inc
(bad)
outsb
daa
cmp
xchg
sbbb
rcrl
jge
int3
adc
sub
jae
nop
dec
or
cs
test
ss
dec
data16
sub
lock
push
and
sbb
in
es
mov
jno
loope
mov
push
and
fnstcw
fs
(bad)
xchg
jg
fiadds
jno
mov
(bad)
daa
adc
inc
gs
mov
adc
ret
dec
cmp
mov
mov
fistps
adc
ret
stos
jbe
jae
scas
xchg
jecxz
adc
pop
add
push
pop
fidivl
mov
and
xchg
sbb
fcos
or
subl
sub
pop
imul
mov
mov
inc
pop
out
test
out
repnz
push
das
pop
(bad)
loope
popf
push
test
lods
insb
sub
dec
pop
cmc
push
sbbb
shll
add
xchg
mov
lds
loopne
xchg
std
mov
push
and
mov
das
shr
sub
push
cmp
(bad)
xor
out
lahf
sahf
jmp
lods
fwait
xchg
ret
cltd
pop
add
xchg
mov
shl
scas
in
shl
cwtl
add
(bad)
iret
push
int
pop
and
push
(bad)
shrb
and
cmp
mov
pop
lds
lahf
adc
int3
sub
push
jne
pop
inc
dec
push
push
adc
jbe
sub
mov
and
mov
add
fisubrl
xchg
xchg
dec
jbe
cmp
stos
test
jnp
dec
dec
mov
iret
pop
and
mov
xchg
ret
pop
pop
loope
xor
lock
pop
fnstsw
cwtl
mov
push
scas
add
and
and
scas
enter
pop
into
outsb
xchg
xor
xor
cmp
mov
(bad)
sub
jle
sub
imul
pop
sub
fdivr
(bad)
bound
sbb
mov
jle
xchg
in
xlat
cmc
test
shlb
jb
pop
add
or
add
inc
adc
pusha
pop
stos
insl
sbb
or
inc
iret
inc
mov
outsl
cmp
enter
out
subl
cld
pop
adc
outsb
sbbb
out
mov
daa
addl
xchg
in
lods
pop
mov
(bad)
add
mov
outsl
loopne
pop
rolb
jmp
pop
divl
stos
add
dec
inc
jb
push
xchg
cs
pusha
dec
mov
sarl
mov
cmp
push
jle
mov
adc
pop
adc
jl
jnp
loopne
jne
insb
decl
test
lahf
cs
cmp
jo
mov
gs
inc
ss
push
mov
xor
aam
fstpl
outsl
add
int
out
mov
jns
xchg
pop
inc
in
jmp
insl
mov
and
in
stos
mov
cwtl
outsb
xchg
dec
xchg
not
xchg
pop
bound
pusha
into
jb
adc
and
fisubl
push
sarl
or
int3
push
push
and
std
or
inc
pusha
(bad)
push
out
sub
jmp
rolb
in
cmc
mov
push
imul
(bad)
cld
fdiv
popf
repz
aam
fstpt
repnz
stos
pop
mov
lds
xlat
xchg
jmp
imul
cld
push
in
dec
repz
or
and
popa
sbb
loope
jae
(bad)
(bad)
fstpt
xor
mov
(bad)
leave
inc
test
and
adc
and
cli
jecxz
push
pop
popf
out
cmp
test
xlat
loopne
pop
dec
rcrl
ja
mov
pop
jecxz
cltd
jle
in
mov
test
mov
aam
and
incb
jae
ss
lret
loopne
or
jbe
out
leave
xor
fs
sbb
mov
lret
and
xchg
iret
out
and
imul
in
or
fnstsw
rclb
out
mov
lods
(bad)
mov
jg
insl
dec
(bad)
(bad)
stos
mov
inc
je
sti
orl
(bad)
sub
sti
(bad)
fcmovne
ds
hlt
add
mov
cmp
loop
int
daa
leave
lret
mov
jbe
sbb
les
ret
sbb
ud0
shl
and
mov
(bad)
mov
jp
add
sub
outsb
xchg
ljmp
in
vpunpckhqdq
scas
or
nop
addb
out
push
je
push
push
(bad)
or
jle
shr
outsl
lret
clc
xchg
rcl
add
test
insb
dec
mov
adc
xor
jge
and
inc
(bad)
fdivl
in
xor
adc
and
sbb
nop
lea
push
aas
xlat
pop
sti
inc
or
push
divps
sbb
sbb
xchg
mov
cmp
pop
mov
dec
int1
enter
lcall
cltd
jecxz
lcall
mov
mov
rcl
pop
cmc
mov
add
cmp
movsb
lret
push
jns
pushf
int1
(bad)
stos
pop
orl
enter
stos
movsb
jmp
mov
xchg
std
push
shlb
xchg
insl
std
cmp
jbe
or
(bad)
gs
jnp
stos
cmpsl
outsb
jbe
jg
mov
adc
scas
mov
jl
sub
sahf
rol
das
lcall
pop
pop
out
rcrb
les
or
dec
push
mov
popf
inc
gs
adc
dec
adc
or
jge
adc
mov
fwait
aas
dec
push
adc
fmull
into
in
stc
neg
inc
les
adc
insb
pushf
mov
fxch
data16
push
sti
outsb
stos
adc
movsl
rcrl
lcall
dec
scas
add
cmp
fldl
sub
out
into
pop
inc
mov
or
movups
ror
lahf
dec
inc
xor
fistpll
in
xlat
nop
adc
push
push
loop
push
mov
out
xor
ret
jmp
and
data16
pushf
dec
or
std
outsl
jle
aas
aam
insl
push
(bad)
sahf
push
(bad)
repnz
(bad)
jnp
cmpsb
mov
stos
add
sbb
push
mov
xchg
in
ljmp
cmpsb
insb
cmpb
jb
add
dec
jle
setle
int
into
dec
sub
dec
movl
mov
rolb
sbb
jp
