fucomp
and
push
dec
movl
outsb
push
mov
mov
or
sub
cmc
jle
pop
cli
jge
dec
mov
sbb
adc
cmp
movups
sbb
addb
iret
pop
jo
ss
iret
pop
jle
and
sub
mov
sahf
or
fiadds
pop
inc
(bad)
scas
pop
iret
sbb
mov
dec
adc
insl
jp
pop
sti
fstl
repnz
pop
lods
cli
mov
pop
popf
insb
xchg
in
mov
cmp
enter
fisttps
jmp
and
pop
adc
inc
and
(bad)
popa
cmp
pop
pop
pop
add
sub
cmp
dec
sbb
mov
arpl
imul
xorl
mov
out
orl
jb
xor
sub
mov
movsl
and
movsl
aas
aaa
fdivrl
lea
pop
sbb
test
or
mov
into
jno
es
enter
push
lea
xchg
jecxz
rcll
leave
aad
jmp
or
outsl
int1
xor
sub
jecxz
mov
mov
mov
adc
mov
cs
mov
out
sbbb
(bad)
mov
push
mov
xorb
xchg
inc
loop
das
cmp
mov
push
sub
sub
fbstp
stc
mov
jns
addr16
pop
sub
sbbb
lods
ja
ds
adcl
mov
enter
inc
pop
and
jle
dec
daa
ja
cmp
mov
adc
xor
xchg
ret
or
push
jecxz
fwait
xchg
fiaddl
xor
and
jg
aas
jp
aaa
mov
push
jns
xchg
(bad)
pop
push
adc
ss
es
imul
sub
add
fisubl
bound
adc
sub
push
fistps
sbb
cmpl
push
cmpsb
push
jbe
jp
jp
and
inc
push
pusha
ffree
push
bound
mov
in
imul
fcmove
std
jno
dec
pop
or
imul
dec
shl
push
adc
xor
jbe
enter
mov
dec
js
xchg
pop
jp
dec
inc
sti
jl
mov
sbb
xorl
inc
into
aaa
xorl
push
or
mov
fwait
sbb
aas
cs
(bad)
cwtl
sbb
ja
push
push
or
outsb
sahf
(bad)
or
fldl
out
testb
xchg
mov
jbe
out
aas
and
imul
ret
mov
jl
in
clc
sbb
fsubl
sub
mov
pusha
add
sub
loopne
cmpsb
adc
lret
xor
sbb
imul
rorb
xor
(bad)
psubd
nopl
pop
dec
stc
sub
sahf
adc
and
les
in
jl
imulb
loop
xchg
js
sub
insl
popa
int3
test
xor
roll
mov
inc
jb
add
(bad)
add
fisubs
sub
ficoms
fbld
sbb
fiaddl
mov
nop
adc
test
dec
sbb
lahf
(bad)
jb
mov
nop
xor
or
test
in
jmp
xchg
pop
mov
(bad)
sub
repnz
shrl
insb
inc
addr16
fdivrp
pop
add
xchg
adc
sarl
mov
popf
lods
imul
jle
stc
into
imul
inc
push
xchg
mov
cmp
lods
fcmovne
cli
and
jp
std
sub
aaa
cli
mov
divb
arpl
cs
out
dec
lea
jbe
mov
jbe
lret
push
jle
fildl
or
pop
mov
sub
jp
dec
in
popa
dec
mov
mov
push
dec
(bad)
movsl
je
or
sbb
mov
fdivrl
lods
add
jmp
pusha
and
lea
sbb
xlat
mov
fiadds
dec
xchg
out
sub
mov
clc
jno
insb
idiv
movsl
adc
mov
sub
hlt
(bad)
aam
outsb
in
subb
out
es
push
daa
sbb
repnz
and
xor
pop
(bad)
cmp
aaa
mov
add
(bad)
ret
cmp
adc
test
cld
call
mov
xchg
pop
add
ss
les
cmp
xchg
mov
fcompl
or
mov
addr16
int1
push
(bad)
aad
inc
out
push
xchg
idivl
outsb
push
pop
loop
data16
std
xor
pop
mov
inc
call
cmp
mov
dec
pop
enter
nop
cmp
push
add
adc
xchg
mov
or
popa
out
insl
sub
sub
or
inc
adc
sbb
push
adc
cmp
outsb
jb
pop
sbb
cmp
xchg
aad
negb
ss
ljmp
xorb
cmp
dec
outsl
test
sub
pop
out
bound
cmc
es
aam
dec
xlat
jecxz
adc
cmp
scas
adc
push
jno
xchg
sbb
push
xor
ret
mov
outsb
xchg
adc
push
mov
dec
adc
adc
int1
mov
and
mov
and
outsl
dec
inc
pop
mov
inc
cmp
loopne
jmp
pop
push
dec
inc
in
imul
jmp
cmp
(bad)
fiaddl
sahf
daa
mov
scas
rorl
or
(bad)
lcall
nop
adc
jge
cmp
or
cli
in
in
xor
inc
sbb
gs
fisubs
popa
push
adc
mov
leave
mov
cmpsb
gs
xchg
imul
cld
sbb
int1
repz
call
jo
outsl
pop
pop
jl
xchg
mov
mov
xor
inc
mov
xchg
mov
cmp
iret
lret
pop
add
repnz
xchg
(bad)
loopne
cmp
inc
lcall
mov
and
mov
jne
fxch
fcmovu
fimuls
loopne
push
movsb
dec
int
mov
leave
pop
cmp
sbb
sbb
fs
shll
dec
sti
lea
scas
and
adc
cmp
jo
out
mov
mov
xlat
cltd
mov
push
or
xor
xchg
ret
cmp
xchg
sahf
(bad)
mov
jns
aam
jp
mov
xor
fbld
xchg
jp
loop,pt
cmp
mov
lcall
fldenv
add
ljmp
test
dec
mov
loopne
lahf
filds
incb
xchg
shrb
mov
mov
jecxz
repnz
scas
movsl
lea
pop
add
sub
sbb
xor
add
mov
ret
sub
sub
loope
call
sub
xchg
jno
mov
shrl
and
cltd
and
sub
and
pop
lea
daa
mov
xchg
cmp
(bad)
sbb
sub
xchg
push
stos
add
lock
lock
int1
jb
dec
int
and
or
shrb
(bad)
ror
pop
movsb
xlat
and
add
test
sub
jmp
adc
pop
cld
sbb
add
sbb
cltd
neg
inc
xor
mov
es
(bad)
fcoml
loopne
sbb
jp
(bad)
scas
add
xchg
xlat
fcmovnbe
inc
xchg
loope
and
mov
out
ret
sbb
mov
jecxz
push
and
outsl
dec
cmp
loopne
mov
push
jo
cwtl
adc
jle
js
xchg
stc
mov
push
ud0
mov
sub
jmp
or
add
fiadds
(bad)
or
xlat
push
das
cs
fimull
adc
ss
pop
pop
pop
and
fisttpl
lea
(bad)
sub
(bad)
std
cwtl
sbb
in
in
stos
jb
(bad)
bound
rcrb
mov
push
ds
adc
pop
xlat
(bad)
xlat
xor
stos
mov
xchg
jnp
pop
mov
mov
mov
in
adc
sbb
sti
mov
(bad)
sbb
and
fwait
pop
insl
lahf
and
cmp
stos
pop
adc
dec
push
jge
aam
jle
mov
jg
cmovle
sahf
aam
add
in
xor
push
xor
fstps
jecxz
sbb
aad
ffree
cmpsb
(bad)
adc
jle
sub
fwait
cmp
rcr
rcll
dec
pop
mov
xchg
scas
rcl
(bad)
jp
stos
and
xchg
inc
xchg
dec
or
lock
(bad)
xlat
sbb
fwait
pop
stos
add
shlb
mov
movsb
fstpl
cmpsb
add
aas
jb
bound
xchg
lods
hlt
mov
loopne
in
pop
shrb
inc
cs
repz
inc
leave
xlat
and
testb
data16
xor
pusha
pop
ss
cmp
sti
mov
sub
pop
