mov
(bad)
aad
ds
fcompl
push
fimull
push
outsb
mov
dec
and
pop
(bad)
jbe
loop
add
dec
rcrb
push
arpl
inc
dec
fcmove
pop
sbbl
pushf
test
lock
fimull
push
out
mov
out
mov
out
mov
outsb
mov
pop
shl
pop
lret
jbe
loop
add
dec
rcrb
push
ficoms
outsl
in
inc
sbb
int3
pop
sub
xchg
addr16
popf
cltd
sub
cmpsb
cltd
mov
mov
mov
jle
std
call
outsb
(bad)
in
mov
pop
cmpsl
lahf
pop
(bad)
jg
ss
addl
popf
nop
aad
and
adc
sti
rcl
cli
(bad)
add
roll
mov
int3
pop
sbbl
pop
mov
out
mov
out
mov
out
mov
outsb
mov
pop
mov
pop
(bad)
jbe
popa
jns
cli
(bad)
add
jmp
int3
movsl
in
push
push
sbb
arpl
call
adc
dec
fs
fsts
jg
fsub
dec
fmulp
pop
jg
inc
into
test
lock
sbb
mov
pop
jge
aad
mov
ljmp
push
out
cmpsl
adc
adc
lret
in
dec
iret
call
adc
loop
cli
fsts
jg
fsub
add
int3
pop
jg
inc
xchg
fdivp
cmp
(bad)
fmul
sbb
inc
jns
pop
jge
aad
mov
ljmp
push
out
mov
arpl
ljmp
mov
xchg
push
pop
(bad)
mov
cli
fsts
ljmp
aaa
call
aas
(bad)
aam
cli
fxch
call
adc
rol
cli
(bad)
add
roll
fxch
pop
sbbl
addr16
xchg
loopne
jp
pop
out
mov
out
mov
out
mov
outsb
mov
pop
mov
pop
(bad)
jbe
loop
add
dec
shlb
push
pop
(bad)
fmull
pop
cltd
pusha
cli
fsts
in
dec
shr
ds
aam
std
bound
cld
ret
cli
(bad)
dec
fsub
cmp
int3
pop
jp
iret
lret
or
(bad)
dec
(bad)
inc
fsub
es
pop
jge
shl
int3
dec
lahf
leave
sbb
int
cmp
cli
(bad)
add
lea
fistpll
sub
pop
cli
pop
dec
popa
jmpw
std
fxch
fistpll
aas
outsb
jg
iret
pop
cli
pop
dec
arpl
push
dec
std
fxch
loop
fists
outsl
insl
push
xor
ss
loop
imul
xchg
addr16
inc
rcrw
pusha
cli
fxch
and
push
int3
pop
jnp
into
rorl
pop
xchg
(bad)
dec
fsub
stos
fmul
pop
jp
rol
or
popa
cli
(bad)
lcall
outsb
jle
int3
pop
cli
arpl
inc
fidivs
pop
jge
aad
mov
ljmp
adc
mov
stc
fxch
call
ds
fsubr
mov
and
dec
(bad)
aam
push
int3
pop
jg
fsub
sub
int3
pop
xchg
loopne
push
fimull
cmc
pop
out
mov
out
mov
call
jecxz
lret
pop
lea
jecxz
pop
cli
add
mov
out
mov
outsb
mov
pop
cmpsl
int1
pop
(bad)
jbe
out
fildl
lret
movsl
in
pop
out
mov
out
mov
out
mov
loop
(bad)
fcomps
add
push
ja
and
xchg
lahf
add
int3
pop
cli
sbb
cs
jae
mov
aad
les
call
add
sub
test
push
xchg
push
push
stc
outsb
jg
into
pop
cli
and
mov
outsb
mov
dec
pop
repnz
lds
popa
cs
cli
(bad)
add
jmp
int3
movsl
in
push
aaa
test
int1
imul
arpl
mov
push
and
je
pop
cli
pop
lea
cmp
adc
push
pop
lea
roll
adc
adc
add
ja
push
int1
xorl
jmp
mov
out
mov
out
mov
call
jecxz
iret
pop
cli
pop
lea
stc
int
cli
roll
mov
out
mov
lahf
or
(bad)
inc
or
shr
arpl
cmpl
outsb
jg
int
cli
imul
repnz
(bad)
jbe
out
fildl
(bad)
dec
fstpl
mov
out
mov
out
mov
call
xchg
int1
jae
mov
lea
or
cli
add
mov
outsb
mov
pop
cmpsl
int1
pop
(bad)
jbe
out
fildl
(bad)
dec
frstor
mov
out
mov
out
mov
loop
(bad)
fcomps
adc
mov
push
notb
push
and
inc
notb
(bad)
mov
int3
pop
test
ljmp
shl
mov
fcoml
push
loop
mov
ss
inc
int3
inc
arpl
xorl
inc
mov
mov
out
mov
out
mov
out
mov
outsb
mov
dec
pop
repnz
lds
popa
mov
add
fxch
movsl
in
and
pop
dec
addl
inc
imul
int1
jnp
mov
cli
pop
xchg
arpl
dec
int1
loopw
int
cli
pop
xchg
arpl
mov
aaa
mov
sarl
push
int1
jg
dec
pop
cli
sub
cli
fstps
mov
dec
int1
addr16
inc
je
loopne
pop
outsl
sub
(bad)
sbb
lods
inc
data16
aad
add
nop
in
dec
repnz
imul
ficoms
out
dec
pop
pop
arpl
pop
jno
mov
xchg
fcmove
loop
ficoms
pop
cli
mov
int3
pop
shll
pop
cli
fxch
es
int3
pop
cli
adc
and
loop
fdivrl
jle
and
in
dec
fucomip
push
sbb
sbb
pop
jle
shr
ljmp
push
xchg
fcmove
loop
faddl
cli
push
in
out
int
jge
sarl
cli
movsl
cltd
ljmp
xchg
rorl
gs
outsl
jge
lret
loop
fiadds
test
in
(bad)
cmpsb
cltd
sub
cmpsb
cltd
mov
sbb
ret
dec
(bad)
loop
ljmp
jg
inc
addl
pop
mov
push
flds
jbe
pop
jge
aad
mov
loop
push
jo
(bad)
pop
out
push
dec
pop
cmp
loop
push
pop
mov
int
or
fs
fsts
push
(bad)
adc
dec
(bad)
in
int3
dec
or
clc
cli
(bad)
jmp
call
stos
fistl
jo
push
pop
mov
imul
insb
rcll
jle
into
scas
push
ret
cli
(bad)
add
rorl
fistl
in
outsb
(bad)
hlt
dec
add
dec
decl
lea
call
cli
pop
movb
arpl
addl
inc
addr16
call
test
int1
addl
rcrb
bound
sbb
dec
sbb
push
out
mov
out
mov
call
and
orl
sbb
mov
sub
fistl
push
pop
(bad)
mov
cld
(bad)
or
stos
loop
sub
int3
pop
stc
(bad)
popa
or
push
int
or
mov
(bad)
fxch
out
mov
out
mov
out
mov
fcomip
cli
fndisi(8087
scas
fmulp
pop
addl
sbb
fxch
pop
jle
fsubr
jo
int3
pop
jp
(bad)
outsb
jl
rcrl
xchg
iret
pop
cli
(bad)
jmp
int3
fcomip
leave
fsub
(bad)
fmul
pop
or
fsub
(bad)
fmul
pop
or
int
cli
call
int3
fcomip
jp
loop
fmul
pop
jecxz
rcrl
lahf
shll
ret
bound
fsts
jmp
fxch
outsb
mov
iret
call
popa
mov
int3
(bad)
int1
imul
dec
pop
add
pop
mov
popa
mov
int3
fcomip
loopne
je
stos
dec
and
out
pop
jnp
shrb
loope
pop
cli
call
sbb
jnp
xlat
shll
mov
popa
mov
int3
fcomip
loopne
jbe
es
jae
fwait
insb
(bad)
int1
imul
fxch
outsb
mov
shr
inc
(bad)
