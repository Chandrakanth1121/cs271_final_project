mov
leave
rorb
cld
xchg
and
push
xchg
inc
cmp
scas
mov
and
in
xor
mov
cmp
xchg
loope
xlat
xchg
mov
and
push
mov
adc
nop
loop
push
xchg
inc
push
inc
sub
cmp
cmc
jne
sbb
stos
jns
jle
jo
cmc
dec
adc
add
xor
pop
jnp
add
daa
push
dec
mov
pop
inc
or
repz
fucomp
push
gs
insb
int
mov
mov
mov
cmp
xor
push
idivb
push
pusha
cwtl
in
mov
sub
sbb
mov
sub
or
int
(bad)
jbe
and
ss
hlt
filds
inc
fnstcw
call
scas
cmpsb
in
xor
lahf
xchg
nop
sub
mov
lods
push
cmpsb
fucomi
jecxz
js
push
ljmp
mov
sbb
jg
or
inc
or
xchg
cwtl
repnz
stos
inc
xchg
out
mov
mov
inc
and
mov
sub
or
adc
cmp
pop
repnz
hlt
lcall
push
pop
testb
jne
add
cmp
stos
aad
pop
ret
(bad)
std
or
fimull
mov
mov
xchg
lahf
xor
xor
pop
loop
int3
xor
push
iret
xchg
push
mov
and
xchg
out
or
int3
or
movsl
sub
scas
inc
sbb
js
pop
clc
int3
push
inc
mov
dec
cltd
pop
fmul
cwtl
fwait
jb
jo
cmpsl
lods
in
mov
adc
or
mov
popa
jns
xchg
call
mov
mov
cmp
pop
and
pop
std
sbbw
inc
mov
mov
cmp
inc
fistpll
sub
arpl
lea
cmpsl
lahf
push
divl
rorl
jnp
mov
int3
rcrl
xlat
test
or
mov
stos
(bad)
mov
mov
ja
sub
sbb
pop
insl
adc
add
inc
xchg
imul
jmp
mov
and
dec
mov
or
rcl
mov
or
fs
sbb
ret
pop
outsb
jnp
int
xor
dec
andb
adc
pop
or
in
xchg
pushf
out
sbb
call
js
push
int
sub
leave
mov
scas
pusha
fimull
sbb
fs
cli
jbe
cwtl
sti
add
scas
xchg
ficoml
cld
daa
push
imul
out
sbb
aad
addl
lock
dec
aad
das
pop
fnsave
cmp
mov
ret
sbb
hlt
dec
jno
inc
rorl
test
push
ret
out
or
call
out
repz
in
adc
jne
push
xchg
pusha
xor
notl
mov
gs
ret
pop
(bad)
mov
sbb
jecxz
xchg
aam
(bad)
mov
add
clc
dec
pop
xor
aam
insl
stos
idiv
test
mov
in
xchg
pop
mov
or
cmp
add
cli
xorl
inc
jb
and
lret
inc
xchg
cmp
push
mov
xchg
push
int1
or
aaa
imul
mov
dec
lods
jge
inc
inc
dec
and
mov
sub
decl
arpl
stos
fsub
out
(bad)
repnz
ja
jg
flds
jmp
mov
jmp
ljmp
hlt
xchg
iret
cmp
cwtl
dec
jmp
sbb
cmpsl
or
pop
bound
xchg
dec
xchg
dec
in
mov
mov
xor
loop
pusha
ds
push
adc
leave
sti
sbb
jne
imul
sahf
jmp
sbb
adc
push
mov
mov
and
test
and
inc
push
push
mov
stos
test
popf
jae
neg
mov
push
sub
in
cltd
add
cmp
dec
sahf
mov
lock
or
fldcw
fcmovnbe
adc
sub
xchg
adcb
sub
gs
imul
mov
xor
sarl
mov
imul
sbb
insb
sar
std
cwtl
mov
mov
adc
int1
int3
add
jmp
mov
inc
jp
incl
fcomi
nop
pop
loope
xor
nop
add
(bad)
cmp
sbb
mov
mov
push
push
ja
jg
push
imul
leave
adc
xorl
into
loopne
dec
dec
jg
pcmpeqb
or
cltd
mov
scas
inc
fcomps
leave
mov
ds
sub
lock
test
lock
sub
movsb
mov
mov
mov
or
sahf
mov
js
dec
xchg
jnp
insb
(bad)
xor
inc
insb
ret
js
mov
in
movaps
int3
lcall
fadd
(bad)
daa
test
mov
inc
jle
push
in
add
lret
sub
jo
push
jl
rcll
mov
hlt
sub
repz
push
ss
push
mov
iret
dec
fisubrl
jmp
test
inc
(bad)
cld
lds
(bad)
rclb
out
mov
loope
(bad)
(bad)
lods
aas
outsb
mov
sbb
push
add
adc
into
jne
iret
cli
sub
mov
jns
scas
mov
push
outsb
lds
jbe
sub
xchg
push
lcall
std
ret
xlat
cmpsl
call
or
mov
sub
sub
sbb
mov
(bad)
jp
bound
sarb
adc
jmp
ljmp
(bad)
sbb
(bad)
shll
aaa
sbb
sub
pop
jbe
inc
int3
std
mov
repz
add
adc
sub
fistl
xlat
jl
cs
cmp
cmc
lahf
cwtl
(bad)
daa
sahf
sub
xor
sub
xchg
repnz
mov
push
mov
mov
addr16
bound
pop
cmpl
sbb
and
dec
inc
cmp
add
in
movl
cmp
pusha
(bad)
aad
std
insb
(bad)
fwait
mov
xor
stos
arpl
in
scas
sbb
add
sahf
jb
subl
mov
jp
mov
or
cmp
sbb
fistpl
ficomps
sub
dec
ret
jle
aam
xor
cmpsb
insl
xchg
jb
adc
cs
je
jno
jno
repnz
sti
test
les
(bad)
aad
shlb
cltd
adc
repz
push
movsb
ja
js
inc
ljmp
jp
popf
divl
inc
inc
push
add
fistps
cmp
inc
stc
sub
or
jmp
cmp
pop
xchg
xchg
jg
inc
jmp
cmp
xchg
leave
(bad)
imul
xor
jecxz
pop
push
mov
sbb
mov
test
aam
mov
xor
add
jge
lods
push
fdivrl
aad
lods
xor
(bad)
data16
adc
stos
repnz
aas
push
xchg
nop
dec
out
sbb
lods
out
xor
adc
adc
rorb
arpl
rcrl
add
stos
jne
(bad)
popa
daa
mov
mulb
out
lock
(bad)
jae
push
ja
fs
jecxz
fbstp
cmp
mov
pop
jne
shrl
lods
movsb
mov
push
and
xor
and
clc
test
outsb
pop
stc
and
iret
and
jne
dec
fnstcw
inc
iret
adc
push
test
sub
lret
xchg
adc
inc
ss
nop
out
rorb
push
ds
mov
fdivr
lret
mov
iret
std
xchg
xor
or
jg
mov
into
cmp
push
repz
das
sub
lea
fcmovnbe
outsb
mov
cmp
add
add
and
cmp
sub
mov
test
pop
fnstsw
mov
mov
in
cld
addl
cmp
into
mov
add
sbb
jnp
shlb
sbb
incb
adc
out
jno
or
test
cmp
inc
aas
and
imul
(bad)
inc
mov
mov
jns
adc
test
pop
inc
shl
mov
js
rclb
sahf
mov
add
loop
or
outsb
cld
jnp
insl
cmpsb
subl
lcall
mov
fsubrl
and
div
fists
les
pop
pop
das
xchg
mov
cmp
ja
pop
ja
es
lcall
or
mov
jl
(bad)
sarb
push
adc
stos
(bad)
jmp
and
adc
dec
sub
movsb
imul
and
and
add
data16
and
loop
add
shll
mov
lcall
sbb
add
add
cmc
and
pop
test
sti
jp
loope
int
