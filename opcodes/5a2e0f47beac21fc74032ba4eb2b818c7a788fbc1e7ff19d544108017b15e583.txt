pop
add
pop
iret
pop
scas
mov
orb
sub
cmp
imul
dec
push
iret
inc
iret
jae
add
clc
sbbb
lahf
pop
xchg
add
je
enter
rolb
outsb
addb
add
jb
ffree
pop
xchg
add
add
test
test
add
cli
sbb
orl
pusha
xchg
cli
aam
adc
mov
push
cwtl
int
rcr
call
cmpsl
rep
pop
pop
scas
pop
pop
js
jbe
dec
pop
dec
fistl
pop
or
push
xorl
imul
(bad)
sub
inc
xor
dec
js
mov
ljmp
repnz
mov
pushf
or
mov
pushf
push
pop
inc
add
mov
push
mov
(bad)
mov
push
mov
rcrl
jne
aam
jge
push
testl
std
mov
jp
sbb
popf
in
pop
jmp
mov
test
cld
int
push
js
fstps
jo
repz
pop
aaa
pop
jge
movb
jns
lahf
cwtl
sti
fistpll
cmp
jns
sbb
jp
(bad)
lods
leave
aaa
sbb
les
lea
ficomps
pop
loop
sahf
add
fdivr
xorl
(bad)
aaa
mov
movups
mov
dec
(bad)
xchg
mov
and
shlb
sbb
pop
pop
(bad)
repnz
xchg
jecxz
fstl
test
outsl
mov
add
pop
fcoms
xor
pusha
dec
je
aad
dec
lahf
sbbb
mov
jo
imul
add
(bad)
outsl
idivb
mov
rorl
inc
mov
xchg
aad
inc
stc
loope
and
inc
cmpsb
xlat
fbstp
out
jo
lret
pusha
inc
sbb
scas
lods
pop
jle
dec
mov
(bad)
xchg
popa
clc
mov
fistl
xchg
push
dec
imul
jge
push
jne
lock
xor
inc
adc
scas
mov
pop
and
js
jle
push
lods
insl
mov
adc
js
in
ror
pop
stos
inc
jne
add
xchg
dec
cs
repnz
dec
mov
rcl
sahf
xlat
imul
push
or
or
ret
fisubrs
xchg
out
insl
ficoml
ret
(bad)
mov
add
pop
mov
jp
xchg
mov
fdivrl
out
es
adc
jmp
fsubrs
mov
mov
dec
cmpl
imul
test
xlat
(bad)
push
push
and
mov
ja
add
(bad)
fcomps
mov
das
fadds
push
ret
and
subl
les
test
mov
cmpsl
add
jno
pop
imul
insb
mov
ret
das
and
in
out
aaa
sahf
xchg
hlt
jne
lret
push
pop
lods
into
aam
lea
xor
rcrl
cmp
nop
push
mov
enter
pop
mov
lret
pop
sbb
loope
(bad)
pop
push
bound
xchg
mov
mov
aas
mov
into
das
testl
add
repnz
xor
cmp
cmp
dec
fidivrl
mov
adc
subl
scas
lahf
inc
subb
xchg
inc
xchg
popa
loop
push
and
lock
in
mov
pop
cmp
jns
rcrb
adc
shr
bound
add
lods
ss
faddl
cmp
pop
lcall
addr16
push
lods
aam
sub
mov
lods
std
outsl
xchg
ficoml
jge
pop
pop
add
lods
jne
adcb
jmp
pusha
cwtl
test
mov
enter
sub
int
xchg
lret
or
popf
aad
or
push
adc
push
push
pslld
jp
clc
aam
jno
jl
push
movsb
xchg
mov
adc
xor
gs
sbb
mov
sti
(bad)
push
and
fdivrs
int1
(bad)
addr16
cwtl
add
push
scas
inc
sbb
les
pop
cltd
xchg
jmp
jnp
sub
xor
test
test
lds
fildl
mov
xchg
jbe
dec
imul
fstl
mov
loope
xchg
fcoms
jno
pop
add
mov
adc
adc
inc
mov
jmp
or
dec
push
das
jl
popf
pmullw
lods
hlt
add
fdivrl
add
into
mov
mov
push
sarb
push
jg
pop
aam
ds
add
movsb
cmpb
sub
sarl
je
aas
inc
ljmp
jbe
inc
push
adc
fdivrl
mov
cwtl
popa
add
add
cs
jle
cmp
(bad)
int3
jmp
dec
xor
popa
test
xor
mov
add
xchg
cwtl
mov
mov
fsubrs
cmp
xchg
sub
int3
mov
jle
arpl
lcall
jge
xchg
cmc
neg
mov
lret
test
js
mov
aas
adc
push
arpl
rcl
lcall
pop
(bad)
lods
add
jno
lea
imull
jle
fs
mov
add
into
cwtl
cmp
rclb
dec
fstps
xor
insl
outsb
and
adc
rcl
xchg
lds
mull
jl
pop
in
cmp
(bad)
data16
push
fimull
cmc
out
test
or
loopne
jp
mov
test
cld
jg
adc
stc
cmpsb
sbb
jbe
fcmovb
adc
(bad)
idivb
(bad)
cmp
into
cmp
add
inc
aaa
lock
push
xor
xor
js
lods
out
andl
inc
rcl
sahf
fbld
jl
mov
movsl
(bad)
lods
lahf
pushf
cmpsl
xor
cmp
sarb
cmpb
(bad)
pusha
lock
add
loopne
mov
mov
std
repnz
adc
aad
inc
jg
aaa
mov
fidivrl
into
cmpsl
repnz
mov
jno
lods
loopne
mov
ss
(bad)
dec
xchg
pop
stc
leave
xchg
stc
pop
adc
stc
mov
push
aaa
aam
xlat
sahf
xor
sar
mov
addr16
mov
std
stos
fsubl
adc
cmpsb
cmp
shll
sub
outsb
lods
mov
inc
pop
lds
pop
adc
das
addr16
add
neg
mov
sbb
mov
jb
push
outsb
push
cmp
push
push
ds
sbb
ljmp
data16
jg
rcrl
iret
lcall
mov
notl
shrb
sub
dec
push
jle
jmp
rol
xor
test
sub
cld
jae
jge
stos
lea
cs
out
xor
aaa
enter
push
mov
stos
aas
(bad)
test
inc
mov
insb
jnp
mov
lds
and
aam
cmovg
dec
and
cmp
call
mov
jmp
lea
mov
ret
movsb
jbe
lea
stos
push
dec
es
mov
sbb
movsb
cwtl
jo
and
mov
mov
aad
xchg
ljmp
test
inc
lahf
test
js
mov
mov
mov
insb
dec
mov
adc
adc
loopne
shl
jmp
xlat
leave
pop
test
mov
xor
add
in
repnz
or
dec
pop
push
je
add
mov
(bad)
mov
pushf
sahf
push
and
mov
mov
xchg
in
pop
cmp
dec
fucomp
in
inc
cmp
mov
(bad)
ror
adc
incl
and
jae
xor
adc
bound
add
pop
out
or
dec
data16
mov
push
jl
std
cli
xchg
enter
fcoms
jo
xlat
pusha
out
cmp
jo
pop
andb
sbbb
or
push
lock
pop
fistl
jle
cltd
xor
and
and
dec
es
movsb
out
or
xor
jo
loop
mov
sbb
pop
xchg
cs
cmp
test
testl
jnp
mov
out
jb
mov
mov
cltd
jecxz
adc
or
inc
aaa
add
fwait
cld
pop
adc
sbb
mov
add
xchg
fadds
push
daa
pop
xchg
pop
xchg
and
mov
pop
or
loope
pushf
jg
sbb
scas
inc
stos
inc
mov
test
pop
ret
jbe
xor
mov
hlt
out
insl
jns
or
mov
js
dec
cmp
jmp
jecxz
jg
push
xor
jns
cltd
adc
cmpl
iret
test
adc
mul
jmp
je
pop
jmp
cs
xor
adc
sbb
adc
sub
mov
fildl
outsb
mov
push
outsb
