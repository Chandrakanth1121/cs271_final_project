popf
or
out
xorl
xlat
adc
cmp
testl
loope
jecxz
out
dec
push
ret
xor
aad
insl
mov
imul
cwtl
jle
sub
popf
mov
adc
insl
push
xchg
adc
or
in
das
fisttpll
call
jnp
and
enter
arpl
test
add
inc
sub
jne
sahf
test
aad
shrb
cmp
mov
xor
push
ret
loop
add
or
fistl
popf
lahf
fisubrl
js
pop
(bad)
stos
cmc
sarb
popf
add
jnp
mov
xlat
(bad)
arpl
sub
daa
loope
sbb
cmp
jo
dec
jbe
test
daa
sti
loopne,pt
hlt
loopne
mov
cmp
xchg
cltd
push
mov
shll
push
jnp
dec
add
std
dec
or
jne
add
jmp
imulb
jecxz
push
scas
xorb
stos
jmp
push
in
(bad)
cltd
lock
mov
xor
jl
repz
mov
xchg
jmp
jge
fdivrs
mov
sbb
push
shrl
cmp
xor
lock
inc
pop
test
mov
fs
scas
adc
ftst
in
pop
sub
cmp
test
(bad)
add
push
xchg
inc
mov
loope
xor
(bad)
xor
rorl
mov
(bad)
jl
mov
ja
jmp
cmp
lcall
or
imul
es
lret
call
or
popf
add
dec
push
mov
inc
roll
ljmp
cmpsl
pop
je,pt
mov
idivl
pop
and
stc
pushf
mov
inc
jnp
movsl
xchg
lods
lods
clc
loop
mov
mov
out
pop
inc
lock
pop
jns
mov
jns
sbbl
ss
lock
xchg
(bad)
or
dec
pop
inc
mov
sbb
test
ja
push
int1
and
pop
stos
fcmovnu
sub
xchg
cmp
mov
and
mov
dec
in
sub
movsl
ja
lods
cmpsb
faddl
mov
mov
out
mov
fldl
sbb
mov
sbb
stos
push
pop
test
out
jmp
pop
shrl
dec
in
inc
adc
sahf
repnz
or
mov
ss
test
in
mov
mov
jne
stos
shlb
cld
jo
mov
cmc
ret
jns
add
addr16
(bad)
aaa
adc
repnz
sub
mov
mov
push
cltd
add
rorb
pop
(bad)
push
dec
dec
rcrl
test
push
inc
cmpsb
ja
inc
sub
rcrb
insl
mov
mov
jnp
rcrb
dec
xor
and
mov
test
test
pop
inc
cltd
repz
and
cmp
movsb
bswap
pop
add
dec
mov
sbb
test
test
inc
int
push
lods
jnp
rcll
xlat
mov
les
gs
sub
sub
and
xchg
jg
mov
insb
dec
mov
hlt
(bad)
das
cmp
xor
cmpsl
jge
mov
xor
cmpsb
into
mov
jmp
jmp
int1
jge
shl
mov
pusha
fstpt
dec
cld
sub
in
js
andl
stc
push
mov
loope
jno
rclb
pop
(bad)
and
outsl
and
dec
movsl
mov
daa
or
rcrb
or
rcrb
push
notl
push
testl
std
mov
jp
push
stc
lret
test
cmpsl
outsb
and
outsb
ret
pop
cld
xor
push
pop
fimull
hlt
mov
sahf
lret
mov
lds
int
(bad)
fisubs
pusha
push
sub
outsb
pop
sub
in
leave
push
push
loop
add
insl
hlt
xchg
inc
jns
xlat
sbb
jmp
out
andb
jo
stos
lock
test
mov
pushf
loop
add
cwtl
adc
out
or
iret
jp
sub
pop
mov
clc
fs
mov
jle
jg
fnop
xchg
shlb
cwtl
xchg
sub
cltd
push
cs
xchg
jo
loope
jmp
mov
pop
das
cmp
sub
and
jbe
inc
jmp
sub
(bad)
cmpsb
mov
dec
lcall
mov
insb
cltd
hlt
cltd
jne
(bad)
not
xor
mov
cli
loope
add
sti
push
sub
pop
out
jbe
lret
sub
cmpsb
test
push
lods
and
push
push
repnz
jno
or
mov
xchg
sub
fcoml
stos
sarb
inc
sbb
or
push
stos
popf
sti
xor
ret
dec
mov
hlt
pop
or
ds
(bad)
repnz
push
mov
lcall
pop
sahf
add
mov
jno
lods
or
pusha
jle
lds
shlb
jno
add
push
out
cli
sbb
fdivl
mov
shl
out
mov
out
adc
mov
int1
and
push
cmp
push
sti
add
mov
leave
orl
push
sub
das
cmpsl
push
cli
sub
adc
arpl
(bad)
arpl
cmc
loopne
fisubl
ljmp
xchg
mov
fwait
pop
repnz
add
xor
and
push
outsb
inc
idivb
loop
movsl
mul
mov
repnz
aam
dec
jge
push
jb
aad
push
fidivs
mov
dec
mov
repnz
stos
pop
mov
leave
ljmp
xor
jae
add
cmp
ret
insb
cli
scas
ret
leave
mov
xchg
adc
into
add
leave
push
sarl
jl
lods
les
subl
xor
dec
in
adc
mov
in
mov
insl
mov
fnstsw
fidivl
inc
lea
int1
pop
aad
mov
or
add
and
mov
sbb
or
(bad)
out
popa
test
test
jp
pushf
or
xchg
mov
inc
gs
jg
cmpsb
cltd
xchg
add
jo
add
mov
stc
in
cwtl
out
sub
mov
(bad)
jo
ja
popa
inc
mov
mov
mov
push
cmp
or
mov
or
cmp
jmp
aas
or
xor
push
in
jae
cwtl
cli
add
or
mov
loopne
cltd
inc
test
ret
add
xlat
cli
mov
pop
xor
mov
pop
test
or
cmc
cltd
out
jne
mov
pop
hlt
push
shlb
je
cltd
add
lods
xlat
ror
sub
addr16
add
jb
sbbb
lret
fnstenv
mov
iret
mov
popa
rcrb
(bad)
clc
(bad)
aaa
popf
dec
jle
push
mov
fmulp
sbb
mov
fldl
xor
lret
pop
xchg
mov
test
decb
aad
(bad)
push
mov
dec
mov
ljmp
push
cmp
lret
cmp
mov
pop
mov
cmpsb
or
loope
lock
xchg
daa
fs
sbb
xchg
xchg
(bad)
(bad)
xor
test
pop
notb
lahf
mov
jae
cli
(bad)
movb
xchg
data16
stos
mov
xchg
xchg
inc
cli
stos
(bad)
in
dec
jge
mov
dec
adc
daa
xor
dec
cltd
mov
jmp
in
scas
popa
cmp
pop
sbb
(bad)
outsl
daa
in
(bad)
sub
adc
mov
mov
jle
stc
sbb
clc
leave
dec
sub
cmp
cmpsl
mov
xor
xchg
mov
xchg
ret
inc
dec
sub
arpl
(bad)
outsl
ret
jg
jb
mov
pop
cmpl
shll
loop
sub
roll
xlat
sti
mov
test
push
fldcw
jnp
in
outsl
push
enter
pop
subl
push
xor
bound
xchg
idivl
cwtl
push
testb
movsl
push
pop
pusha
or
hlt
outsl
jle
and
stos
pop
pop
out
(bad)
repnz
sub
jno
sahf
jg
test
add
cwtl
push
push
pusha
and
xchg
pop
xchg
test
stos
pop
test
je
adc
xchg
fwait
in
shlb
dec
dec
cli
mov
cmpsl
cld
jecxz
lds
pop
test
enter
aam
loop
sti
mov
jge
popf
popf
cli
cmp
inc
nop
testl
jle
jnp
jle
inc
mov
or
mov
ljmp
jmp
mov
aad
bound
sar
or
sub
repz
mov
