mov
loop
test
nop
in
mov
cmp
jnp
add
xchg
pop
jge
pop
mov
sbb
out
cmp
xchg
push
fcomp
xchg
int3
dec
or
enter
adcl
test
dec
loopne
xorps
jp
(bad)
pop
int3
xchg
dec
dec
lea
out
dec
movsb
hlt
dec
fsubp
imul
fisttpl
pushf
add
clc
test
fisttps
lret
add
loopne
push
js
sti
mov
pop
push
lret
leave
nop
in
shr
ja
push
mov
fdivl
mov
pop
add
push
movb
xorb
sti
inc
pop
nop
aas
das
int1
lahf
jne
into
aas
fwait
xchg
xor
xor
in
int3
loop
jg
pop
adc
and
xchg
(bad)
xchg
out
stos
sub
leave
add
jecxz
xor
mov
pop
stc
cli
dec
data16
mov
or
arpl
jecxz
lret
fisttps
fisubl
xchg
lret
loopne
mov
cmp
lret
das
fwait
xor
pop
pop
insb
js
add
cwtl
or
jge
sbb
rorl
movsl
jmp
cmp
xor
jecxz
es
stos
scas
imul
arpl
into
mov
sbb
testl
js
sbbl
clc
enter
dec
fwait
push
es
cmc
inc
shlb
repnz
out
dec
rorl
cmp
paddusw
xchg
es
or
xor
out
in
mov
into
xchg
pop
out
or
lea
pop
pusha
nop
mov
push
dec
xor
iret
pop
dec
pop
jecxz
insl
xchg
leave
mov
bound
cwtl
std
inc
ss
int3
jl
and
mov
jns
sbb
sbb
pop
dec
mov
nop
ja
mov
jno
lds
mov
popf
sbb
push
in
cs
pop
xor
repnz
lea
xchg
jnp
in
popf
xchg
mov
int
cwtl
dec
pop
lret
test
add
hlt
push
inc
push
jecxz
iret
mov
sub
(bad)
movsl
cmp
in
xor
push
add
lock
jae
das
(bad)
xor
jg
fmul
push
add
scas
pop
mov
popf
sti
adc
roll
arpl
dec
(bad)
movsl
das
xchg
sub
pop
imul
mov
adc
repnz
xchg
xlat
mov
jnp
stc
xor
mov
jg
mov
dec
mov
push
aam
add
jne
rorb
sub
or
or
lods
pop
je
mov
ss
xchg
jnp
int3
or
lret
aam
rcr
pop
mov
movsl
call
stos
call
lods
call
fs
ret
and
or
xchg
mov
mov
int3
enter
les
test
lds
fsubp
sti
(bad)
fisttpl
cmpsl
lea
sbb
movsl
mov
mov
and
jmp
loope
lcall
mov
fsubl
mov
stos
cmp
cmp
mov
lods
dec
jp
lret
dec
mov
dec
push
xor
push
mov
add
mov
xchg
xor
cmp
mov
dec
andl
adcl
mov
pshufw
leave
push
hlt
dec
mov
lcall
xor
pop
popf
mov
int
out
repz
or
mov
xor
test
fldcw
jae
dec
movsl
dec
push
adcb
lret
sub
int
jmp
outsl
push
jle
pop
(bad)
ljmp
mov
int3
notb
outsl
sub
arpl
lret
jmp
adc
jns
push
js
int
push
lods
inc
jbe
or
repz
adcl
adc
aas
xchg
testl
test
mov
or
enter
or
int3
movsb
pop
push
xchg
jns
test
jae
push
js
fldl
loope
inc
test
inc
and
shl
push
push
jmp
(bad)
repz
ret
dec
sbb
shrl
dec
xchg
sbb
xor
mov
push
dec
imul
mov
movsl
scas
xchg
aas
jnp
push
fadds
mov
or
clc
ret
inc
dec
or
adc
push
mov
mov
stos
ja
or
xor
hlt
sub
test
mov
inc
xor
inc
or
int
xor
int3
jo
insb
divb
(bad)
loope
jmp
cld
test
fwait
outsl
sti
lea
push
dec
or
mov
das
push
push
push
inc
insl
jle
mov
test
out
inc
mov
and
mov
pushf
push
daa
jbe
pop
int
xor
in
dec
adc
stc
(bad)
call
or
inc
or
mov
sarl
enter
pop
addl
mov
and
imul
test
mov
sbb
lods
dec
jge
jg
test
fistpll
pop
xchg
mov
adc
in
loopne
dec
dec
cld
xorl
imul
sub
lds
and
push
sub
sbb
xorl
enter
pop
aam
imul
xor
pop
fldl
ljmp
push
sahf
add
cmpsl
mov
add
jmp
xchg
pop
pop
mov
push
mov
imul
sbb
jns
mov
imul
pop
xorb
jo
std
out
int1
mov
mov
movsl
lock
pop
jnp
mov
fldl
mov
xlat
repnz
ja
mov
js
xor
int3
test
mov
and
or
sbb
dec
xchg
lret
fsts
pop
filds
lods
ret
test
out
cmp
jmp
xchg
dec
pop
pop
loopne
popf
push
adc
xlat
outsb
pop
repz
push
jno
pop
fcompl
push
adc
add
cmpl
aam
cmp
nop
pop
clc
push
ret
dec
cwtl
lea
cmpsb
lea
cmp
sti
mov
cli
fisttps
xor
dec
insl
test
push
adc
or
push
out
mov
sub
mov
push
jne
cmp
dec
repnz
or
cmp
sbb
and
imull
push
mov
cwtl
loop
pushf
or
pop
or
je
mov
clc
mov
imul
insl
dec
test
scas
adc
jl,pn
adc
push
pop
jb
out
dec
or
jg
movl
push
idivl
cmpsb
pop
jmp
xor
inc
adc
xchg
fsub
popf
sahf
xor
jo
pushf
aam
enter
addr16
loopne
aam
shlb
push
es
lahf
loopne
xchg
cwtl
push
or
aaa
lea
(bad)
loop
test
stos
bound
mov
imul
sbb
(bad)
fwait
bswap
fdivrl
adc
fldt
fsubl
mov
(bad)
jbe
pushf
jp
sahf
mov
xchg
out
push
xchg
xchg
lret
inc
hlt
mov
lods
pand
test
push
into
aam
dec
mov
out
(bad)
mov
shll
cld
add
sub
xor
fs
popa
xchg
repnz
dec
shlb
mov
jns
adc
pop
sti
sarl
cmp
cwtl
rolb
mov
leave
test
mov
mov
fwait
inc
pop
idivl
pop
or
movl
call
mov
cwtl
adc
xchg
sti
inc
sti
mov
cs
add
mov
int3
mov
movsb
dec
inc
test
add
fdivl
xor
subl
sub
jae
mov
(bad)
xlat
push
push
adc
add
mov
dec
jl
aas
int
cli
dec
or
ret
sbb
int
jne
pop
add
lods
movsb
(bad)
cmc
fisubl
cltd
enter
push
cwtl
xor
out
xchg
lret
int1
mov
mov
mov
jg
push
sub
out
imul
cmp
inc
xchg
xchg
add
jp
mov
push
loope
mov
jp
mov
aad
mov
mov
push
xchg
outsl
cli
fs
int
testl
push
xor
jl
mov
shlb
sub
movsb
dec
dec
jae
repnz
dec
cmp
jns
pop
hlt
imul
xor
fidivrl
testb
mov
pop
or
fldl
iret
adc
lcall
fistpll
jge
mov
dec
xchg
(bad)
sbb
mov
aam
mov
scas
and
cmpsl
mov
mov
adc
lods
sbb
mov
jbe
jmp
pop
mov
int3
test
jge
fdivr
shll
fstps
pusha
add
out
lods
adc
int
jb
