add
push
jle
es
rex.x
fsubr
movsb
jmp
fdivrs
out
jge
clc
lahf
test
xor
sub
(bad)
xor
stos
ds
xchg
(bad)
mov
mov
mov
push
mov
mov
(bad)
mov
repz
rex.w
mov
pop
rsm
(bad)
and
rex.xb
(bad)
add
rex.xb
rex.rx
mov
rcll
ja
jge
rex.rb
or
pushf
mov
rex.wrxb
cwtl
adc
loop
or
push
mov
or
enter
ds
xlat
lret
popf
loope
jae
(bad)
rex.wrxb
movabs
ret
mov
mov
test
je
mov
jns
push
test
mov
es
or
jae
(bad)
sub
push
rex.rb
rorl
add
sti
and
jrcxz
stc
movabs
je
mov
lret
mov
or
rex.wb
cmp
xchg
mov
jge
fisttpll
xlat
int1
js
movsl
std
movabs
fwait
rex.r
sbb
mov
jne
mov
jbe
in
add
(bad)
rex.wrxb
rex.wr
pop
rex.r
(bad)
mov
cli
mov
in
cmp
rex.x
rex.rxb
(bad)
lods
rex.w
mov
sbb
decl
stc
rex.r
sti
jno
(bad)
mov
rex.b
mov
(bad)
mov
push
sahf
jg
movsb
test
int
fsubl
mov
cmp
sbb
ficoml
jge
(bad)
rex.wxb
out
mov
enter
cmp
je
push
xor
mov
xor
mov
(bad)
sbb
iret
mov
nop
mov
rex.wb
sub
adc
movabs
fcmovu
imul
shlb
repnz
mov
movsb
movabs
in
jge
(bad)
(bad)
idiv
adc
lret
ret
mov
lods
fcoml
std
add
xchg
movabs
mov
mov
pop
orl
lock
mov
adc
popf
mov
mov
js
mov
(bad)
movabs
faddl
andl
(bad)
xor
sub
pop
rex.rb
xchg
pop
test
mov
cltd
pop
rex.x
out
xor
mov
ja
(bad)
cmp
fadds
enter
and
pop
jnp
mov
movabs
movabs
cmpsb
repz
mov
movsl
pop
xchg
(bad)
test
shll
movabs
rex.b
cltd
rex.xb
std
call
push
add
out
cmc
mov
fs
push
subb
cltd
cs
test
(bad)
xchg
rex.wx
sbb
imul
pop
push
hlt
ss
clc
(bad)
jb
btc
pop
add
enter
in
jmp
fldt
sub
cmp
xor
js
mov
jg
stc
movabs
orb
(bad)
mov
mov
jmp
stos
(bad)
jl
or
(bad)
(bad)
push
add
rex.x
xchg
scas
shl
movabs
(bad)
(bad)
sbb
push
and
(bad)
rex.wb
loopne
cmp
pop
rcr
mov
adc
push
(bad)
adc
(bad)
xor
rex.x
loopne
rex.rx
mov
call
(bad)
fidivrs
call
repnz
add
(bad)
jnp
(bad)
(bad)
sub
or
pop
jge
ret
cld
sbb
fcomp
rex.wrx
rex.rx
xchg
adc
sarb
push
(bad)
mov
and
enter
(bad)
addr32
test
(bad)
mov
enter
scas
rex.wrx
rex.wrxb
mov
pop
movabs
add
int1
jle
mov
mov
rex
pop
mov
xor
jge
(bad)
repnz
lods
mov
test
int
test
adc
outsb
loope
sub
lock
sub
mov
or
syscall
clc
fldcw
and
mov
mov
xchg
add
fisubrl
(bad)
mov
push
push
(bad)
or
loopne
rex.r
bnd
cmp
mul
leave
addr32
xchg
nop
pop
enter
rex.wb
mov
movabs
jae
rex
mov
flds
ss
(bad)
jbe
mov
movsxd
jmp
xchg
mov
sub
or
(bad)
cmp
push
push
popf
cli
loope
rex.wrx
cmp
rcr
mov
stos
in
{rex2
jg
(bad)
in
movsl
rcrl
testl
rex.x
fs
cmp
rex.xb
sbb
sarl
jp
add
pop
out
js
int1
int
(bad)
adc
stc
ja
rex.rxb
(bad)
cmp
je
pop
cmp
shll
(bad)
ffreep
cmp
mov
sub
rex.wr
loope
jns
and
rex.wrx
movsb
(bad)
or
add
incl
mov
jae
(bad)
out
(bad)
rex.x
(bad)
int1
loop
(bad)
repnz
jne
repnz
(bad)
cmp
mov
rex.wrb
jp
fiadds
fnsave
jae
mov
(bad)
stos
cmpsl
outsl
loop
(bad)
movabs
cmp
outsl
movabs
or
stos
call
(bad)
cmp
rex.wrb
pop
ss
(bad)
ja
mov
out
enter
js
(bad)
ja
lock
mov
movsb
xchg
push
sub
lods
xlat
(bad)
enter
cmpsl
or
jp
mov
jne
mov
jl
scas
int
scas
ret
mov
lock
mov
push
scas
data16
data16
retw
jmp
lret
cwtl
rex.b
sarl
roll
orl
rex.xb
jbe
sbbb
in
or
enter
rex.rb
stos
ja
outsl
loop
xchg
jmp
and
imul
rex
test
cli
(bad)
(bad)
clc
int3
(bad)
(bad)
repnz
int1
jbe
test
fcmovne
lahf
(bad)
or
mov
sbb
orb
addr32
(bad)
cmp
xchg
rex.b
push
xor
mull
(bad)
ja
insb
xor
sti
(bad)
(bad)
cmpsb
cmp
lea
(bad)
incl
mov
and
mull
cmp
sub
jp
rex.wrb
pop
(bad)
xchg
rex.r
sarl
(bad)
mov
push
hlt
jrcxz
jl
add
(bad)
jge
js
ret
addr32
pop
mov
rex.rx
in
test
test
loope
(bad)
rex.rxb
push
fs
jnp
(bad)
test
rex.w
pop
(bad)
xchg
jp
(bad)
(bad)
clc
sub
test
lock
cld
addr32
and
(bad)
pop
jrcxz
psubsb
mov
cli
sbb
(bad)
loopne
mov
(bad)
test
rex.wb
imul
mov
lock
in
(bad)
test
xor
mov
repnz
adc
fsubrs
rex.xb
cmp
mov
movabs
test
fsubs
push
jrcxz
sub
xor
mov
(bad)
imul
push
(bad)
outsl
clc
sub
fcmovnu
jmp
pop
je
cs
pop
(bad)
rex.wxb
movabs
sbb
mov
mov
jo
push
loop
ret
rex.rx
lods
jle
enter
xor
mov
cld
jbe
push
(bad)
test
repnz
repz
xor
cmpsl
(bad)
sbbb
mov
xor
rex.w
(bad)
sub
lea
orb
fmul
and
fimull
xor
cmp
movabs
in
mov
xor
clc
mov
push
push
or
pop
movabs
mov
iret
stos
rex.rx
cmp
subb
cmp
cmpsb
rex.x
sbb
mov
(bad)
stos
rex.rxb
rex.x
jb
ficomps
rex
div
rex.r
rex.wx
rcrb
and
cmp
push
(bad)
xor
nop
fmul
xchg
mov
or
out
addr32
loopne
jl
loopne
push
scas
stos
(bad)
test
stos
push
rex.w
ljmp
in
ficoml
rex.wrx
push
rex.wxb
insb
(bad)
lahf
cmp
int3
stos
int1
loop
push
jo
mov
data16
mov
push
xchg
js
(bad)
cltd
fwait
call
(bad)
fisubrs
rex.wxb
cmp
jmp
test
rex.rxb
lock
and
sub
rex
add
stc
rex.wrb
lock
(bad)
insl
mov
(bad)
ja
pop
sub
ss
mov
enter
rex.wb
rex.wb
mov
repz
cmp
loop
pop
data16
jbe
xchg
jb
mov
mov
andb
ja
jnp
push
fldenv
ss
je
add
rex.w
movsb
sub
lea
orb
fcomp
repz
(bad)
loopne
vpavgb
rolb
ja
lret
ss
mov
rclb
or
(bad)
lods
lods
push
pop
ret
rex.rxb
and
data16
sbb
loope
stos
stos
loope
sbb
fs
push
rex.x
sub
out
cmp
nop
call
fninit
(bad)
cwtl
rex
jrcxz
(bad)
test
add
push
rex.wxb
add
rorl
stos
xchg
rex.b
sub
mov
add
(bad)
mov
jg
ljmp
add
and
mov
or
pop
movabs
xchg
mov
subl
rex.wrx
(bad)
(bad)
rex.w
push
rex.x
(bad)
fwait
mov
xchg
insb
pop
or
jp
mov
fwait
mov
fwait
