out
mov
add
cld
jmp
sbb
int1
movabs
or
pop
adc
mov
movsl
rex
jl
in
sub
in
movsb
jmp
(bad)
add
(bad)
mov
test
adc
adc
fxch
int1
xchg
xchg
or
out
jo
clc
mov
sbb
movabs
pop
(bad)
rol
gs
rex.rxb
sub
cld
rex.wrb
or
jle
mov
pop
ds
call
xchg
or
(bad)
test
repz
mov
test
int1
or
pop
ds
(bad)
cmp
rorl
cmp
test
rorb
mov
adc
xchg
cs
pop
in
mov
and
sub
iret
(bad)
xchg
test
push
jns
or
mov
cs
(bad)
inc
xor
xor
xchg
xchg
rex.rb
rex.wxb
adc
(bad)
sbb
pop
movabs
out
lahf
xlat
fildll
pop
test
(bad)
popf
xchg
pop
jnp
(bad)
notb
nop
pop
loopne
add
(bad)
push
scas
xchg
(bad)
xchg
rclb
mov
cs
mov
push
pop
cmp
xchg
sbb
scas
(bad)
fwait
(bad)
lock
sti
push
mov
mulb
rex.wrx
movabs
lret
es
or
push
and
jmp
(bad)
cmp
leave
(bad)
(bad)
rex.wx
rex.wr
pop
scas
int3
clc
mov
xchg
adc
mov
pop
cmc
pop
(bad)
jp
add
mov
lods
jne
push
rcll
(bad)
in
add
rex.w
vcvttss2si
mov
mov
(bad)
jns
gs
fldl
pushf
push
scas
rol
mov
sbb
pop
rex.wr
rex.wrb
shll
xor
jo
ficomps
jne
scas
imul
int3
xor
(bad)
sahf
sbb
add
(bad)
push
cmp
(bad)
jp
pop
mov
jbe
and
movsxd
ds
movsb
rolb
ja
gs
and
ja
add
sub
test
mov
(bad)
cld
fsts
rex.wrx
(bad)
rex
ss
pop
fcomip
mov
ja
loop
(bad)
mov
mov
mov
imull
mov
xor
add
movsb
mov
(bad)
pushp
outsb
test
fsub
cmc
loopne
shll
(bad)
push
(bad)
(bad)
(bad)
rorb
or
popf
pop
mov
popf
std
pushf
test
xchg
or
sahf
jmp
cli
adc
ret
cltd
xchg
imul
mov
cmc
fadds
rex.wx
sbb
fiaddl
jp
pop
(bad)
shlb
pop
jge
adc
sub
(bad)
call
(bad)
movabs
rcrl
ss
mov
iret
rex.x
int3
lods
mov
cltd
and
(bad)
test
stc
xchg
out
vdivss
jne
int3
ret
xchg
cmpb
(bad)
xchg
movabs
push
push
scas
out
pop
(bad)
{rex2
cmp
add
(bad)
sbb
loopne
{rex2
rex.wrx
repz
lret
push
(bad)
es
outsb
mov
cmpsb
ret
scas
es
cmp
in
sbb
fs
xchg
sbb
(bad)
mov
mov
cmp
fistl
movabs
cmpsb
(bad)
rex.r
pop
push
xchg
jns
lods
(bad)
test
sbb
push
rcrl
(bad)
jnp
rex.r
xchg
(bad)
movsl
imull
pop
notb
ret
sbb
rex.rxb
(bad)
(bad)
cmpsb
(bad)
jge
xlat
(bad)
jle
adc
nop
add
rex.w
addr32
int3
int1
push
rex.w
addr32
lea
pop
sahf
pop
push
{rex2
rex.x
mov
(bad)
addb
cmpsl
out
enter
test
enter
sbb
push
shlb
and
rex.wxb
pop
movabs
pop
cmpsb
(bad)
movsxd
xchg
out
cld
mov
mulb
insb
push
mov
cmpsl
mov
(bad)
mov
and
(bad)
(bad)
or
rcr
(bad)
cmc
or
movabs
(bad)
scas
cmpsb
fstpt
cld
adc
mov
(bad)
sbb
adc
stos
fsubr
es
shrb
out
xor
adc
mov
pushf
rclb
pop
in
scas
mov
shrl
rex.x
mov
adc
{rex2
adc
insb
sub
rex.wb
cmp
rcrl
loop
(bad)
in
iret
fsubp
adc
xor
test
lahf
jp
nop
insb
(bad)
(bad)
(bad)
in
mov
xchg
stc
movsl
cmp
pushf
out
mov
xchg
(bad)
sub
rex.xb
mov
push
xorb
nop
shr
int3
rex.wrb
iret
shlb
lods
fsubr
sar
(bad)
adc
{rex2
scas
cltd
push
(bad)
push
lret
(bad)
adc
mov
fisttpl
int
cmpsl
fdivrl
sub
sub
(bad)
jmp
or
mov
es
xchg
lea
rclb
mov
movabs
ret
nop
iret
mov
push
repz
int1
pop
cmp
idivl
mov
fs
lods
rcrb
negb
fwait
stos
imul
adc
adc
popf
and
shlb
jrcxz
data16
(bad)
pop
out
or
xor
jrcxz
pop
push
loope
lret
sub
add
cmp
sahf
cmpsl
push
jb
(bad)
push
jle
cmp
and
(bad)
push
out
add
int
in
push
lahf
shll
nop
fisubl
leave
gs
adc
fstl
or
xor
loop
(bad)
std
(bad)
sti
(bad)
and
adc
mov
adc
(bad)
(bad)
sbb
cmpsl
xchg
pop
out
add
mov
fnstenv
cmp
out
repnz
faddp
mov
rclb
xor
leave
jnp
or
movsl
outsl
(bad)
shlb
out
scas
mov
in
fs
std
push
cmp
pop
pop
shll
rcrb
cmc
adc
mov
xor
add
pop
cli
pop
lods
xchg
mov
push
out
push
rex.rx
(bad)
mov
lahf
sub
xchg
xlat
jae
mov
xchg
sahf
mov
{rex2
fstl
jne
xchg
clc
outsb
in
rclb
cmpsl
mov
mov
fists
sub
sub
mov
fwait
lgs
and
ret
out
shll
mov
and
xchg
ror
(bad)
adc
test
xchg
rex.xb
lret
(bad)
pop
jne
rex.rb
rex
push
mov
mov
rex.rxb
sub
pop
pop
out
or
fcoml
and
cmp
(bad)
sbb
cmp
adc
cmp
loopne
pop
rex.b
rex.b
shrl
xrelease
lret
imul
sbb
rex.rx
rex.wxb
(bad)
(bad)
mov
push
sbb
ffree
imul
(bad)
and
(bad)
movabs
outsb
xchg
(bad)
pushf
sbb
xchg
mov
mov
leave
xchg
or
sub
enter
cmp
cmpsl
and
call
push
pop
mov
fwait
movsxd
clc
xchg
(bad)
testb
jl
cltd
(bad)
push
rex.wxb
out
cmp
lods
stc
cmp
xchg
jge
xchg
(bad)
jns
test
mov
(bad)
js
out
jrcxz
or
sar
jnp
mov
ret
xchg
sub
jne
rex.rxb
rex.rb
rorl
divb
mov
rex.wx
add
sbb
rex.rb
(bad)
pop
xchg
cld
push
xor
mov
js
(bad)
cmpsl
mov
or
cltd
mov
movsb
rex.xb
jbe
jmp
(bad)
pushf
pop
rex.rxb
rex.x
jmp
(bad)
lods
in
hlt
leave
rex.xb
rex.w
test
pop
rex.wrx
rex.w
xor
mov
cmpsb
lea
leave
loope
jb
push
mov
(bad)
movabs
stos
xchg
ficomps
int1
rex.rx
fiadds
adc
popf
add
fdivrs
and
notb
adc
adc
jne
imul
xor
fistps
orl
xor
rex.wrx
and
int3
jns
push
or
mov
ds
add
(bad)
mov
rex
or
(bad)
pushf
or
sbb
xchg
push
push
pop
add
rex.w
fs
(bad)
fcmove
in
cmp
sbb
fwait
xchg
rex.r
filds
xor
(bad)
in
scas
sbb
add
test
(bad)
hlt
pop
fdivrl
(bad)
xchg
and
insl
(bad)
(bad)
mov
(bad)
rex.wr
mov
push
xchg
movabs
rex.wxb
repnz
(bad)
xchg
push
out
imul
mov
rex.wxb
(bad)
mov
loop
sub
adc
rcr
rex.rb
adc
add
(bad)
imul
jo
sub
pop
and
rex
rex.w
mov
mov
outsl
out
stos
xchg
mov
mov
rex.x
pop
(bad)
movsb
andl
xlat
(bad)
jle
cmpsl
test
mov
cmp
xchg
