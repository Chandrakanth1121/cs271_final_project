imul
mov
cmp
xchg
popf
pop
xor
ja
mov
outsb
out
psrlq
jge
fisttpl
push
lods
mul
sahf
lahf
mov
xlat
inc
fnstsw
(bad)
cli
data16
mull
out
enter
sbb
mov
mov
mov
hlt
lods
addl
loope
clc
call
mov
test
jle
jbe
lods
gs
lock
ljmp
hlt
xor
push
int3
movsl
mov
pop
lahf
(bad)
paddb
lret
negb
arpl
mov
test
les
ficoml
(bad)
sahf
clc
rcrb
cwtl
ljmp
out
mov
hlt
mov
iret
add
adc
pop
out
mov
jns
mov
dec
cmp
test
stos
sbb
in
repz
aam
subl
dec
insb
arpl
lcall
inc
add
lods
cld
movsl
jbe
ss
push
mov
enter
ret
sub
fmul
fistpll
lods
xchg
(bad)
outsl
das
mov
and
(bad)
mov
loop
mov
push
gs
out
fsubl
shlb
cmc
divb
loop
ret
xchg
aam
dec
aas
xchg
or
dec
dec
movsb
pop
test
(bad)
into
fldt
pop
dec
popa
inc
(bad)
out
lods
sub
pop
add
mov
sbb
test
cmc
movsb
in
cwtl
shlb
gs
in
xchg
cmp
pop
cltd
inc
adc
(bad)
aaa
and
xchg
sub
mov
movl
lea
je
test
popf
stos
lret
push
fcoml
fwait
mov
mov
or
add
mov
int1
push
pop
pop
jmp
in
insl
(bad)
in
jp
(bad)
pop
leave
sub
jne
lcall
fisubrl
insl
mov
stos
insl
push
shll
mov
adc
insl
cmpsl
mov
cld
out
mov
aad
stos
movsb
cmc
mov
decb
std
inc
lahf
nop
adc
sbb
sub
outsb
stc
clc
mov
out
and
jne
xchg
stos
das
jo
jns
mov
fwait
xchg
or
xor
cld
push
jnp
ffree
test
mov
rcl
test
aad
push
fcmovnb
lar
mov
pop
pop
test
ds
jne
roll
cltd
xor
jb
rcl
xchg
xchg
pop
pop
in
cmp
jl
or
and
mov
(bad)
sub
adc
sbb
ljmp
shlb
fnstcw
or
movsl
in
cmp
cld
ret
scas
add
dec
xchg
and
add
ja
negl
hlt
out
out
idiv
jp
mov
push
mov
mov
jb
dec
andb
aad
es
mov
mov
xor
test
xorb
or
adc
into
in
lock
js
cmpsb
call
into
scas
jle
dec
out
movsb
out
outsl
push
pop
loop
push
xor
mov
les
push
mov
ret
xchg
mov
jno
lods
aaa
mov
aam
push
xchg
xor
push
jmp
loopne
jne
push
ror
scas
test
decb
jno
in
lods
pop
jae
ret
iret
push
and
inc
dec
lret
int
clc
ret
in
(bad)
std
cmp
xchg
or
insl
repz
(bad)
cmp
ljmp
cmpsl
sti
decl
push
js
add
mov
mov
outsb
sub
test
loope
hlt
out
lea
es
clc
rcl
adcl
test
dec
fidivl
insl
(bad)
jle
outsb
push
leave
or
nop
test
mov
mov
pop
in
pop
hlt
imul
outsl
sahf
push
(bad)
fs
nop
mov
jle
add
mov
(bad)
cli
lods
cmp
jb
sti
lahf
test
int
rcll
fldl
gs
loop
popf
insb
mov
int
mov
out
out
cmc
sub
inc
xchg
hlt
sub
add
and
mov
outsb
ret
outsb
jge
pop
mov
ds
sarb
push
(bad)
lods
repz
cmp
cmp
dec
dec
push
loopne
mov
sahf
inc
int3
addb
ja
and
rorw
leave
loop
fdivrs
dec
xchg
outsl
roll
xor
outsl
fldcw
push
jmp
popf
rcrb
xchg
loop
mov
push
mov
mov
popa
xchg
mov
cld
movsb
xchg
and
dec
gs
out
sbb
inc
adc
repnz
mov
nop
jecxz
cmc
adc
mov
mov
inc
ss
outsb
inc
sub
scas
hlt
mov
lods
and
stos
lds
xor
xchg
mov
pop
insl
add
add
xchg
rorl
daa
fisubrs
enter
hlt
mov
imul
adc
scas
cmp
pushf
fnstcw
(bad)
lds
mov
dec
ret
mov
rcr
xchg
inc
pop
fcoms
push
xor
fucomi
mov
mov
(bad)
rcr
in
ret
(bad)
sub
xorl
jl
mov
insb
mov
int3
sbb
sbb
sti
jl
push
xchg
call
std
in
inc
shlb
insl
inc
test
out
in
rorl
out
mov
inc
add
out
cmpsl
jnp
xchg
mov
dec
cli
push
fsts
pop
mov
mov
mov
aad
fidivrs
xchg
mov
jle
push
xorb
sbb
iret
imul
pop
sahf
arpl
mov
mov
je
pop
sahf
jo
clc
and
aam
imul
push
inc
add
clc
popf
sbb
pop
outsb
mov
mov
jg
push
push
rep
(bad)
and
aam
stos
pop
hlt
or
sti
stos
xchg
fimuls
mov
mov
mov
repnz
aam
lret
xchg
pop
inc
add
cltd
cmc
xlat
jge
shlb
xchg
xlat
clc
jge
frstors
push
sahf
in
cld
fsub
int1
push
push
fucom
sbb
shrl
out
out
out
pop
push
sti
ret
loope
lret
nop
cmp
jecxz
jne
xor
xchg
gs
xchg
ret
into
lea
rol
jbe
testl
jl
mov
xchg
repz
xchg
(bad)
jo
ss
mov
arpl
fnsave
jecxz
mov
test
shll
stos
jne
lret
dec
(bad)
stc
jle
(bad)
cli
test
or
pop
popf
hlt
mov
lret
mov
xorw
call
repnz
pop
lcall
out
(bad)
jl
dec
test
sbb
stos
and
(bad)
repz
mov
out
in
push
dec
cltd
add
cmp
outsl
out
mov
pop
test
loope
sub
(bad)
jns
into
int
adc
add
scas
inc
aad
mov
lods
cmc
xor
out
inc
stos
andb
popf
add
mov
clc
jae
cmp
or
pop
in
fsubl
out
pop
out
add
mov
jo
leave
sti
repnz
xchg
pop
in
mov
mov
outsb
fcmovbe
jl
xchg
pop
xchg
(bad)
(bad)
mov
mov
and
fld
push
insb
push
inc
sbb
cmp
stos
in
xchg
xchg
outsb
push
aas
jge
jnp
ret
in
insl
mov
mov
int3
(bad)
push
subl
inc
pushf
data16
or
(bad)
jp
in
out
mov
xlat
addb
inc
lcall
or
fdivl
add
cmp
xchg
(bad)
push
int3
mov
repz
pop
inc
fnstenv
and
dec
pop
jo
insb
inc
push
sbb
mov
jo
cmc
cmc
cmp
push
fstpt
dec
cld
mov
mov
lret
dec
sub
insb
push
mov
mov
addr16
push
repnz
adc
sub
sar
test
or
mov
lahf
mov
xchg
aad
xchg
xchg
fldl
jo
mov
orl
cmp
mov
push
xchg
xor
adc
mov
testb
movl
test
cs
stos
fcmovnbe
scas
pop
or
xchg
loopne
jae
(bad)
jmp
pop
aaa
fsub
xlat
mov
or
cmp
adc
sti
cli
in
xlat
das
mov
xchg
push
mov
pop
loope
es
mov
sub
stos
xabort
movsl
add
jne
pusha
mov
fcmovbe
push
movsl
cmp
faddl
