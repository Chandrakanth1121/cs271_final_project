inc
jno
aaa
shr
push
loopne
into
lods
ror
xchg
inc
pop
test
mov
lcall
xor
adc
out
test
inc
mov
mov
adc
and
jmp
jecxz
iret
pop
fdivl
fnstenv
(bad)
aas
test
push
fnsave
mov
mov
mov
xlat
adc
int1
shrw
sti
dec
jns
fidivl
incl
mov
jecxz
out
jp
mov
es
int1
adc
test
sbb
in
out
negl
adc
mov
or
cmpl
xchg
fisttps
aad
mov
jp
xor
cmc
ja
(bad)
out
jns
cltd
in
into
xchg
mov
jmp
fsubr
cmpsb
lods
jmp
pusha
xor
test
pop
mov
pop
adc
out
mov
mov
jmp
stc
xlat
movsb
mov
test
scas
adc
cld
in
in
xor
inc
xchg
jne
jmp
cmpb
xchg
xchg
ffreep
mov
test
sub
movsl
adc
mov
mov
add
repnz
xor
push
test
int1
lea
fsubl
in
fwait
jnp
data16
pop
imul
stos
add
pushf
mov
out
add
dec
in
sbb
or
mov
push
in
dec
adc
sahf
(bad)
or
sub
aad
xchg
pusha
scas
ja
mov
shrl
xor
int3
sbb
cmpsl
xor
or
in
push
cmc
add
sub
mov
aaa
mov
dec
pavgb
pop
lret
pop
daa
imul
pop
nop
or
hlt
out
in
aad
stos
aaa
inc
sahf
ret
sbb
adc
adc
xchg
jge
cmc
fcomip
outsb
cld
add
incb
mov
nop
pop
jmp
les
cmpsl
aas
inc
push
roll
cmp
shl
inc
iret
jp
fiaddl
mov
pop
fdivrl
and
scas
(bad)
push
jecxz
lcall
fs
xor
mov
and
popa
loop
adc
divb
loope
ljmp
sbb
add
clc
movsl
ss
(bad)
adc
xchg
push
ss
xchg
int1
bound
mov
mov
stos
ret
xor
and
shlb
les
xor
clc
incl
decl
cmc
movsl
test
cli
int3
jge
scas
stos
stos
jecxz
aaa
fidivl
fimull
jge
pushf
dec
or
mov
out
add
fadd
aam
add
xor
adc
js
sarb
int1
inc
mov
jl
mov
out
cmpsb
in
mov
ja
nop
dec
mov
cmp
mov
push
dec
fstpl
mov
cli
(bad)
fcmovnb
out
mov
xchg
fmuls
addl
pop
mov
fisttpll
insb
mov
xor
shlb
ds
test
mov
mov
fsts
adc
lret
xlat
jne
shl
inc
iret
cltd
sti
pop
mov
add
(bad)
lahf
or
iret
mov
mov
jbe
scas
or
into
mov
xchg
cmp
jo
dec
clc
subb
popa
mov
iret
jae
fldcw
adc
sbb
push
repnz
xchg
iret
lret
ficoms
loop
filds
fimuls
rclb
mov
ja
dec
mov
repnz
repnz
scas
jmp
xchg
sub
int3
pop
pop
jecxz
fisttps
sbb
cmp
in
jo
sti
fistpll
mov
(bad)
out
ss
test
fldt
jp
out
xlat
add
xchg
cmpsb
sbb
fdivrp
mov
je
mov
aam
xor
into
mov
and
dec
loopne
mov
inc
sub
cmc
jb
pop
jge
pop
cmpsb
ds
test
xchg
or
xlat
dec
mov
adc
sbb
clc
push
xor
(bad)
sahf
test
push
dec
aad
sti
xor
out
pxor
daa
(bad)
stos
pop
jae
xchg
and
add
sub
cmp
jb
sbb
xlat
paddw
lock
fxch
push
lret
inc
out
shrl
or
push
out
and
stos
fxch
jp
push
lret
nop
xor
testb
adc
xor
into
aad
pop
mov
ret
pushf
(bad)
sub
or
or
mov
enter
push
add
push
mov
mov
(bad)
push
in
xor
mov
je
cld
add
popf
mov
fdivl
inc
pop
imul
repnz
mov
lret
out
xchg
dec
mov
out
cwtl
scas
xchg
lret
cmp
imul
jo
es
inc
xchg
adc
mov
mov
stc
push
faddl
jmp
mov
cmc
mov
out
xchg
fucom
xchg
jg
loope
sbbb
pop
cld
iret
pushf
jbe
shlb
cmpsb
jle
(bad)
sbb
sbb
insl
jle
cld
mov
dec
frstor
incl
stos
jae
pop
jg
decl
mov
and
test
pop
repnz
jge
mov
pop
push
ljmp
or
jmp
fnstcw
push
(bad)
fwait
aas
adc
sub
loopne
mov
in
xlat
out
push
mov
adc
je
stos
dec
cld
xchg
xchg
in
cli
mov
loopne,pn
aad
lret
pushf
inc
inc
mov
jmp
mov
sarb
psubd
mov
fstl
aam
int
dec
into
and
daa
xchg
xchg
dec
cli
inc
mov
leave
divb
jecxz
sbb
cmc
lods
xchg
cmp
(bad)
and
jle
mov
jecxz
sbb
mov
adc
pop
movsb
cwtl
xchg
test
stos
movsb
pop
incb
pushf
adc
(bad)
sbb
mov
sarl
mov
fwait
jle
xor
in
mov
pop
enter
scas
mov
inc
or
mov
jne
cltd
push
iret
loop
pushf
loopne
lock
movsb
je
jo
cmpsl
mov
jae
das
fisubrl
and
mov
out
sti
loop
and
and
stos
jo
int1
mov
dec
xor
in
aam
lea
daa
cmp
int3
ljmp
out
ljmp
cli
adc
(bad)
mov
sbb
out
add
sbb
hlt
add
test
aam
sahf
or
js
out
push
xchg
rep
dec
js
std
call
and
jg
outsb
test
pushf
loope
push
(bad)
in
fucomip
(bad)
outsb
fbstp
xor
int
loop
add
sahf
test
fsub
or
jb
xor
mov
lds
neg
mov
shr
insb
movsl
push
pop
lods
loopne
imul
adc
insb
out
int
(bad)
pop
fistl
ljmp
mov
in
mov
jle
ret
lcall
cmp
movsl
mov
movsl
sbb
push
insb
aas
aad
lret
out
cwtl
insl
mov
sti
push
cmp
test
ret
out
fists
pop
or
out
(bad)
repz
sbb
dec
shl
push
mov
mov
pushf
inc
lret
adc
test
mov
jmp
std
adc
stc
dec
pop
mov
mov
add
arpl
cli
(bad)
fsubr
xor
or
lret
ffreep
xor
cmpsl
mov
movsl
fcomps
sarl
jge
es
lods
mov
inc
addr16
into
ret
jle
lds
call
subb
xchg
xchg
sti
call
or
xchg
dec
js
test
popa
mov
rolb
mov
jmp
inc
pop
fisubl
test
es
loopne
mov
lods
xchg
or
add
in
sti
int1
pop
jmp
in
out
fsub
cmc
sbb
(bad)
fcmovnu
mov
test
and
xchg
xchg
sahf
imul
push
inc
clc
test
xchg
lret
stc
movsb
(bad)
sbb
ror
out
outsl
in
mov
sbb
(bad)
faddl
enter
shll
fbstp
out
push
add
xchg
jg
ret
add
loopne
mov
test
js
add
insb
jnp
(bad)
pushf
mov
les
mov
mov
in
add
inc
cwtl
int1
mov
lods
popf
cmp
xor
jmp
lods
dec
addr16
test
cmpsl
mov
cltd
cli
or
out
mulb
int3
add
or
cwtl
fwait
aad
in
lahf
push
adc
test
repnz
pop
aad
andb
and
jmp
scas
jmp
sbb
cmp
popa
mov
lds
sti
or
mov
