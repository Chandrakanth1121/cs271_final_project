push
sbb
int3
push
sub
in
mov
outsl
mov
jno
aam
sub
jnp
in
xor
mov
cwtl
xchg
mov
or
cmpsb
add
pop
dec
xchg
cmp
dec
inc
orl
mov
shll
mov
lock
sarl
xor
sbb
or
sbb
jbe
xlat
inc
scas
mov
lahf
iret
inc
(bad)
jp
ja
sub
decb
fsubl
push
mov
pushf
ficoms
jp
mov
enter
push
int3
xor
jbe
cmc
enter
xchg
push
dec
fdivrs
out
add
dec
pop
push
adc
lcall
popa
mov
sti
lods
cmpsb
repz
cmp
ret
fsub
pusha
dec
jbe
and
fs
mov
push
cs
push
and
hlt
mov
cmp
push
aam
fisubs
xchg
adc
imul
cmc
add
lds
inc
(bad)
mov
mov
sbb
mov
into
push
pop
jmp
inc
xlat
jbe
mov
push
push
stos
aad
neg
pop
repz
push
insl
rcrl
(bad)
jns
aas
cmc
popf
pop
in
mov
cmp
addl
aas
mov
pop
xlat
adc
(bad)
and
ficompl
dec
xchg
xor
out
cwtl
add
gs
sub
inc
ljmp
(bad)
or
xor
jg
test
inc
lahf
jmp
cld
pop
lods
aam
mov
push
test
or
cmp
cmp
stc
mov
mov
dec
(bad)
aas
inc
jno
add
int
(bad)
shlb
shll
push
add
sti
xor
(bad)
gs
mov
and
movb
das
sub
mov
les
(bad)
and
pop
mov
ret
inc
push
jge
testl
(bad)
push
dec
mov
les
aam
cmc
jl
jmp
mov
imul
cmc
or
jg
xlat
out
cmp
testl
cmpsl
pop
sub
fstpt
stc
lret
jb
sub
das
add
lahf
jmp
dec
(bad)
loope
loope
jae
int
mov
cmpl
lret
cmpsb
add
dec
daa
sbb
scas
lcall
xor
ret
insl
sub
push
lea
sti
fimuls
lock
andl
loopne
inc
inc
clc
enter
stos
cmc
cld
sub
ret
sbb
or
(bad)
call
and
repz
in
fldl
daa
(bad)
cmp
jle
pop
iret
fs
cmp
or
adc
fs
les
mov
ljmp
xchg
mov
xor
adc
sbb
fs
ljmp
sbb
and
lret
mov
js
cli
cmpsb
and
adc
xchg
pushf
rcrb
and
in
pop
ljmp
std
xchg
mov
sbb
push
test
push
add
addl
arpl
leave
in
sub
mov
fs
sbb
push
cmpsl
cmp
pop
es
inc
test
imul
gs
into
cmp
out
(bad)
mov
jle
int3
mov
mov
adc
iret
xchg
int1
xor
push
repz
jmp
sbb
cs
gs
add
(bad)
and
push
or
push
pop
pop
inc
and
sub
enter
mov
movsb
xchg
fildl
in
mov
lret
jp
sti
call
fldenv
iret
data16
push
mov
pop
sarb
das
imul
push
sahf
pop
outsl
xchg
push
(bad)
xor
ds
data16
sub
cmp
pop
movsb
lds
ljmp
xchg
call
dec
jae
imul
pop
iret
mov
pop
pushf
jecxz
jb
cmp
add
fdivrs
inc
jp
insb
inc
add
jno
sub
lds
and
mov
xchg
mov
gs
xor
int3
push
addr16
xor
sub
xor
dec
mov
xchg
rcl
(bad)
jp
jmp
xor
inc
int1
pop
and
in
sbb
inc
call
mulb
sbb
dec
cld
jmp
outsb
push
push
cmp
jne
(bad)
outsb
mov
push
inc
(bad)
in
leave
cmp
insb
mov
outsl
dec
xor
inc
xchg
dec
mov
cmp
ret
xchg
cmc
ljmp
leave
inc
or
push
sbb
jns
mov
jecxz
lock
rcl
aam
jge
std
lods
fcoms
int3
jnp
xchg
xor
(bad)
fadds
sar
pop
sar
dec
repnz
test
dec
cmpsl
or
lret
(bad)
out
cmc
dec
push
outsb
jne
lods
test
fdivrl
cmp
xor
into
xor
sbb
sub
add
ja
int3
mov
(bad)
push
cmp
pop
xor
fisubs
mov
pushf
push
xchg
orb
mov
mov
shlb
lods
rclb
bound
mov
cwtl
aas
test
mov
ljmp
shlb
cmp
sub
mov
jno
lcall
cmpsl
jo
mov
mov
nop
mov
cmp
cmpb
mov
mov
push
cmc
pop
or
lea
mov
mov
jne
clc
cmp
test
ret
je
sbb
in
(bad)
xchg
adc
xchg
into
cli
and
xorb
or
mov
xchg
jg
xchg
xchg
inc
cli
imul
or
xor
(bad)
aas
inc
movsl
mov
roll
cmp
or
cmp
pop
rolb
sbb
push
je
ficoms
lret
cmp
fnsave
enter
aas
(bad)
push
pop
(bad)
nop
push
adc
mov
push
movsl
push
adc
ret
push
lods
push
in
sbb
adc
aas
or
insl
and
mov
sti
sbb
(bad)
jae
xchg
dec
(bad)
mov
call
jl
dec
sbb
loop
movsb
inc
xchg
int
mov
push
adcb
or
into
cwtl
xchg
mov
cmp
dec
pop
subl
mov
pop
pop
lea
in
fwait
fwait
negb
fdivrl
jmp
push
mov
out
negb
xor
cld
iret
out
fwait
sti
scas
xor
mov
repz
testl
jge
mov
push
rcl
mov
shlb
mov
sbb
lcall
(bad)
jp
pmaxsw
cmp
jns
push
pop
fcomps
fmuls
pusha
mov
mov
jl
les
sub
jl
pop
movsl
mov
ret
push
scas
mov
cmp
pop
in
xchg
jmp
xor
(bad)
jmp
ror
pusha
adcl
mov
or
bt
idivb
mov
and
jp
push
and
fiaddl
lods
xor
pop
xchg
mov
sbb
mov
mov
jp
dec
iret
sub
xchg
and
mov
scas
pop
pop
pop
mov
add
cmp
fsubrl
out
(bad)
lret
jmp
push
aad
cmp
fidivs
sub
sarb
loope
push
arpl
insl
add
repnz
clc
jmp
stos
insl
dec
sub
in
cwtl
(bad)
aas
inc
jp
mov
movsl
mov
mov
aad
out
mov
push
push
sbbl
dec
pop
xor
jno
out
lret
repnz
into
lods
sbb
cmp
lret
ljmp
test
out
out
test
popf
fwait
jne
ja
cmp
sbb
cli
decl
mov
pmovmskb
jmp
iret
inc
lcall
(bad)
cmp
mov
push
mov
xchg
push
push
(bad)
aas
and
xor
aas
mov
or
jmp
jbe
dec
shlb
jp
cmp
mov
in
std
add
xchg
fwait
mov
add
mov
int3
outsb
fdivs
call
ret
sbb
jnp
jbe
fwait
cmpsb
ss
dec
jle
out
int3
int
ret
cld
push
addr16
in
sahf
inc
xchg
add
mov
mov
xchg
xchg
(bad)
sub
(bad)
and
sbb
cmp
push
mov
xchg
repz
and
push
inc
mov
and
(bad)
adc
sbb
jne
mov
mov
mov
or
out
jb
cmp
sar
mov
enter
fldenv
and
ds
orl
mov
in
mov
and
negl
repnz
xchg
ja
push
cmp
mov
mov
adc
sbb
inc
and
(bad)
fdivrs
fisttpl
lea
dec
add
mov
mov
xor
pop
mov
xor
pop
aas
insb
cmp
xchg
outsb
cmp
stos
shll
rolb
push
js
pop
sub
