test
pop
cwtl
insl
arpl
mov
push
fisttpll
and
nop
dec
xor
push
pop
mov
sbb
rcll
dec
ja
xor
xor
add
sbb
mov
mov
fcmovne
loopne
fs
sbb
rorb
into
xlat
sbb
fldenv
lret
sbb
aam
cmpsl
push
fwait
aam
test
cmp
mov
sahf
xchg
aam
pop
enter
pop
dec
loopne
stc
int3
dec
out
lret
int
jb
ret
cwtl
xor
add
xor
insl
mov
out
push
xor
push
adc
(bad)
xlat
sbb
push
adc
(bad)
cmp
add
inc
xchg
addr16
ds
inc
jne
ret
sbb
notl
ss
sbb
rcl
repz
xlat
mov
pop
mov
dec
dec
inc
ret
repnz
or
lret
loop
push
push
push
(bad)
mov
mov
sbb
mov
xor
xchg
push
stos
xor
push
es
rcrb
adcl
ret
mov
bound
dec
lods
jge
push
fildll
mov
adc
mov
gs
and
dec
push
dec
popa
gs
mov
adc
cltd
lock
xor
popa
(bad)
fmull
pop
dec
cmp
cld
rcl
dec
inc
mov
fcmovnbe
mov
mov
jle
push
push
cmp
pop
cmp
repz
jnp
(bad)
mov
inc
test
inc
push
rcrl
mov
sarl
leave
push
sbb
outsb
insl
sbb
add
push
test
in
(bad)
dec
pusha
loopne
stc
stc
fcoms
xchg
je
iret
xchg
cmp
and
lock
adc
mov
dec
sub
out
pusha
push
cmp
push
test
pop
xchg
popa
fwait
adc
in
pop
xor
sub
ja
mov
(bad)
jl
pop
mov
repnz
pushf
mov
pop
imul
adc
mov
imul
push
fwait
rcrb
xor
pop
insl
(bad)
(bad)
aam
sbb
ljmp
push
aam
inc
dec
sti
hlt
cmp
subb
xchg
int3
adc
jle
xor
and
mov
inc
mov
pop
sub
sub
sbb
lock
sti
pop
out
aad
cmp
std
unpcklps
das
cmpsl
(bad)
pop
adc
fwait
cli
push
push
rorb
jno
and
and
push
fcoml
xchg
pop
in
popf
stos
sbb
pop
sbb
mov
mov
pop
cmp
in
mov
pop
xchg
ret
loope
fwait
(bad)
cmp
lret
sti
(bad)
and
in
lea
repz
out
ljmp
daa
sbb
mov
push
aaa
pop
mov
cmp
in
mov
xor
sbb
pop
xchg
aad
cmp
cmpsb
push
push
rcrb
push
or
jns
int1
lret
insb
fldcw
sbb
loopne
mov
cmpsb
push
pop
out
into
outsb
mov
inc
(bad)
lcall
arpl
test
pop
adc
(bad)
stos
dec
inc
sbb
pop
int3
adc
loopne
xlat
mov
loopne
push
popa
int
adc
shlb
cs
arpl
fidivrl
ljmp
popf
cs
pop
rcll
pop
orb
xchg
lret
(bad)
in
in
pop
imul
cltd
jecxz
test
inc
inc
test
daa
fsts
stos
js
jae
and
jae
dec
sbb
int1
lret
(bad)
(bad)
sub
cmp
rorl
popf
out
pop
push
add
repnz
inc
(bad)
ror
data16
je
out
lahf
ja
dec
xchg
xchg
and
repnz
inc
cmp
inc
push
out
lahf
pop
fnstsw
push
jg
jge
rcl
jne
mov
dec
fdivrl
mulb
pop
into
xchg
mov
mov
in
pusha
lea
rcrb
or
cmp
fiadds
dec
pop
repz
adc
and
dec
fcomps
pop
mov
sbb
movsb
push
test
cltd
pop
dec
sbb
mov
push
pmaxub
xlat
xor
std
xchg
inc
sub
pushf
mov
insb
enter
pop
pop
sub
sahf
pop
add
sbb
rorb
je
psubq
cmp
jg
loope
xor
inc
and
sahf
cmp
in
test
xchg
push
mov
test
outsl
pop
push
(bad)
addr16
and
in
push
pop
ja
add
sub
(bad)
and
fst
mov
cmp
xchg
int
fiadds
add
and
dec
push
cmp
bound
sub
ficompl
push
loope
iret
xchg
push
pop
ror
hlt
push
clc
popa
xor
mulps
in
test
push
pop
sbb
test
jne
sbb
(bad)
and
lods
inc
pop
cltd
push
(bad)
pop
int3
iret
insb
jl
jns
xchg
or
sbb
pop
inc
xchg
pop
je
in
test
dec
or
adc
rcl
add
outsb
pushf
shr
inc
xor
insw
popa
push
lea
push
fdivrp
(bad)
cltd
aam
push
jae
fwait
pop
je
pop
pop
(bad)
xchg
adc
xchg
cmc
leave
dec
sbb
in
push
jae
adc
mov
push
or
cltd
adc
test
iret
addr16
pop
push
push
cmpsl
bound
nop
ss
pop
xchg
inc
sub
shlb
jae
aad
adc
pop
jl
jns
mov
dec
(bad)
sub
xor
ret
sub
popa
shl
jge
push
push
pop
pop
sub
push
fidivs
aad
test
or
xor
sarb
aas
idivb
xor
scas
negl
stos
ljmp
(bad)
mov
mov
fmuls
arpl
rorb
pusha
daa
dec
adc
leavew
push
mov
pop
xor
push
xor
mov
bound
sbb
sub
loope
dec
mov
iret
jo
cmp
je
jo
popa
js
xlat
pop
dec
jns
pop
dec
jo
(bad)
pop
inc
or
or
loope
scas
in
cmp
xor
cmpl
fsubrs
pop
int3
dec
dec
sbb
fwait
outsb
(bad)
mov
sub
test
insl
push
sbb
sar
sbb
lea
roll
or
pop
pop
xlat
push
push
mov
xor
jmp
sub
lahf
fwait
rcrb
add
jae
fldl
push
fnsave
int1
pushf
aam
inc
loope
pop
bound
jp
xlat
(bad)
fcomp
cmp
adc
stos
jnp
in
outsl
ret
mov
aam
adc
mov
aam
pop
mov
movsl
pop
fbstp
push
jno
test
pop
popa
push
push
sub
mov
xchg
scas
jge
sub
dec
push
dec
shlb
sub
dec
mov
jle
mov
andb
dec
rorl
adc
movsb
xor
cmp
jb
das
adc
xchg
test
sbb
mov
mov
push
cmp
push
and
mov
mov
repnz
cwtl
push
sub
in
fnstsw
and
or
pop
sbb
aam
mov
(bad)
sbb
fcomp
iret
dec
and
bound
(bad)
xchg
xchg
jns
cmp
das
adc
push
lock
repnz
sbb
dec
fldt
pop
rolb
ja
stc
mov
lret
xchg
movsb
xchg
orl
dec
push
and
xor
call
stos
stc
cmp
push
push
loope
sub
sbbl
xchg
dec
cwtl
inc
stos
je
mov
sbb
pop
out
pop
and
outsl
outsl
test
xor
mov
adc
pop
leave
cltd
bound
in
adc
addr16
gs
jmp
mov
outsl
(bad)
call
in
jle
inc
insb
rol
mov
test
xor
test
mov
mov
dec
sbb
sti
lock
xchg
pop
pop
aad
push
ficomps
rcll
jmp
dec
pop
loopne
dec
(bad)
lret
mov
xchg
xor
or
sub
mov
adc
mov
sub
ret
sub
leave
sub
sub
sub
std
inc
jle
xchg
jbe
adc
(bad)
or
mov
mov
jle
and
mov
sub
test
fistpll
sub
fdivrl
mov
dec
push
adc
add
out
mov
cmpsl
or
jp
