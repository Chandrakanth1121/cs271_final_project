dec
nop
mov
jb
adc
jb
xor
pushf
int1
dec
ffreep
inc
insl
mov
lahf
dec
adc
rep
xchg
inc
aam
fcomps
clc
add
mov
cltd
xor
popa
fwait
leave
rolb
pop
fsubr
jmp
fidivrs
movsl
or
push
cmc
je
sahf
adc
ss
jbe
sbb
mov
sbb
pop
andb
mov
push
cltd
scas
fdivs
jne
mov
push
jno
fs
sub
mov
push
lahf
and
test
push
push
add
int3
jecxz
jb
push
or
mov
or
fstpt
rorb
sbb
adc
and
sbb
add
push
sub
cwtl
xorl
mov
dec
movsl
xchg
xor
lock
pop
or
(bad)
fs
xchg
fildll
dec
push
clc
lea
cmpsl
push
jo
mov
inc
imul
cmp
adc
sbb
nop
sub
cli
xchg
mov
int3
jge
shr
or
ret
inc
xor
xchg
cwtl
add
outsb
pop
add
xor
push
scas
and
push
roll
into
sbb
mov
push
(bad)
mov
fdivl
dec
loop
dec
push
sbb
jmp
aaa
xchg
cmp
jo
ss
push
lods
jae
sub
inc
pop
(bad)
sbb
xchg
pop
and
ds
push
out
push
or
in
fsubl
adc
fldt
adc
loope
rorl
insl
rcll
push
and
mov
std
enter
stos
xor
and
sbb
nop
outsb
fnsave
roll
jns
out
insl
aam
mov
lds
mov
mov
fistl
int1
loop
test
and
push
inc
call
repnz
das
pop
mov
cs
sub
dec
mov
fcoms
gs
test
in
sbb
cs
int1
xor
adcl
cmc
gs
xchg
mov
std
pop
jmp
mov
jae
cmc
loopne
lcall
mov
cltd
fldenv
test
mov
dec
shlb
add
sub
cmpsb
pop
push
stc
in
inc
pusha
scas
adc
in
add
mov
pop
dec
pop
sbb
call
add
xchg
dec
cmp
das
cld
jno
add
dec
xchg
(bad)
sbb
scas
adc
movsl
subl
pop
mov
pusha
repnz
pusha
jne
sahf
movsl
mov
dec
movsl
rolb
inc
sbb
es
jae
ficomps
lcall
sbb
dec
mov
js
mov
xor
or
insl
rcl
mov
jno
adc
sub
std
or
push
sbb
bound
shrl
xchg
or
sbb
xor
jge
dec
aad
test
test
and
push
ret
pop
test
clc
sub
push
mov
xchg
addr16
stos
inc
movsb
loop
xchg
arpl
mov
jl
lods
outsb
subl
lret
std
cmpsb
shrb
inc
add
in
(bad)
sbb
xchg
dec
dec
ljmp
in
sbb
add
mov
xchg
testl
lahf
mov
jbe
jbe
and
mov
cmp
sbb
imul
pop
and
xor
or
inc
inc
inc
sub
inc
inc
push
mov
mov
sti
lea
jnp
int1
mov
jnp
arpl
xorl
or
in
test
enter
cwtl
ss
sarl
inc
test
js
es
pop
stc
insb
cmpsl
movsl
adc
test
sub
xor
inc
in
mov
xor
faddl
movsl
add
and
sbb
test
cmpsl
mov
cli
or
bound
shll
iret
addr16
pop
pop
xchg
imul
pop
and
mov
push
int1
nop
aaa
mov
jne
lods
rcll
jecxz
push
pop
lods
adc
fnsave
fstl
sub
inc
cld
xchg
jmp
clc
incl
add
ftst
aaa
outsl
xchg
shr
mov
push
jne
call
jo
insw
inc
sbb
mov
push
stos
gs
xchg
jns
and
fistl
fidivrl
les
xchg
iret
test
push
enter
jae
jbe
dec
out
mov
clc
add
test
lods
jmp
pop
outsb
popa
int3
or
push
mov
dec
js
(bad)
push
push
lret
push
pop
push
rcrb
inc
adc
jmp
aas
mov
push
dec
or
test
xchg
ljmp
inc
mov
imul
sti
pop
imul
in
adc
(bad)
mov
mov
popf
and
add
cwtl
mov
daa
jns
or
or
je,pt
and
es
jecxz
jle
and
adc
sbb
xchg
adc
lahf
mov
mov
lds
fstpt
pop
(bad)
or
iret
ljmp
xchg
in
mov
insl
cmp
out
test
enter
cmp
cmp
xor
pop
xor
and
mov
xchg
ljmp
jle
sub
add
sbb
pusha
(bad)
jge
mov
aas
and
jnp
lahf
mov
std
sub
push
cmp
jg
daa
jne
mov
dec
lds
or
adc
inc
pop
hlt
dec
shrb
mov
stos
sub
xchg
add
add
sub
pop
ret
fwait
ds
out
cmp
jb
loopne
push
gs
outsb
sub
insb
jne
mov
mov
mov
lret
add
mov
pop
mov
addr16
mov
stos
pop
int1
jo
and
daa
stos
std
in
push
sbb
cltd
cmpsb
ret
sbb
or
xchg
imul
shl
loope
sbb
adcb
std
or
inc
cltd
fnstsw
dec
ja
mov
sub
aaa
lahf
adc
hlt
sbb
(bad)
ljmp
mov
pop
add
xchg
fwait
int1
adc
xchg
sub
mov
xchg
fdivs
cld
cmc
gs
add
ljmp
shll
jb
shlb
push
push
in
hlt
in
mov
add
cmc
sub
aaa
movlhps
cmp
(bad)
lcall
out
test
adc
jo
pop
(bad)
leave
nop
ljmp
push
pop
lahf
dec
(bad)
stos
psubsb
dec
jl
jmp
das
int3
xchg
mov
push
iret
gs
jbe
xchg
sbb
push
mov
dec
jno
hlt
lock
es
add
sbb
stc
ds
ds
jno
fwait
repz
push
fwait
cmp
test
shr
adc
test
mov
mov
int1
fdivr
pop
cld
push
and
jb
push
test
imul
cmp
inc
mov
pop
or
rclb
or
lea
in
ret
cmpsl
ljmp
call
xlat
mov
push
xchg
mov
cmpsl
xor
or
ljmp
pop
sahf
mov
aad
push
or
out
push
jnp
in
or
fstps
lea
jg
or
lock
int3
insb
or
lret
or
(bad)
repz
push
neg
sub
in
sbb
pop
mov
nop
adc
sub
aaa
in
mov
pop
sahf
and
arpl
int
mov
aad
fidivrs
inc
test
mov
rcrl
mov
jno
fs
pop
popf
notb
pop
push
cmpl
adc
int1
jae
in
(bad)
cmp
in
movsl
sbb
jge
push
arpl
push
popa
and
lahf
lods
sub
daa
mov
ret
test
pop
mov
les
sbb
cltd
pop
mov
lcall
mov
mov
ret
xchg
pushf
fwait
lahf
sbb
or
fs
sub
add
in
push
add
fpatan
lock
fsubs
push
mov
and
xor
cli
rolb
insb
or
sbb
scas
mov
sub
cmpsb
stc
push
mov
sahf
repnz
aam
mov
repnz
rcrl
daa
int3
out
pop
sbb
dec
in
punpckhwd
adc
(bad)
mov
mov
push
push
stos
xchg
sub
jle
pop
loope
addr16
inc
mov
sub
mov
outsl
mov
xorb
outsl
insl
and
fstl
cmp
out
test
pop
insl
or
subb
inc
lret
addr16
test
fistpll
in
clc
xchg
lret
cmpsl
test
dec
insb
dec
out
std
fistpll
sbb
(bad)
loopne
call
inc
cmpsl
inc
stos
call
push
or
fcomps
xchg
