add
loope
sbb
cmp
add
das
add
ret
lea
in
sbb
shlb
(bad)
push
add
(bad)
repnz
mov
das
cs
adc
mov
sbb
mov
mov
je
fucomp
(bad)
std
mov
mov
je
movl
movsb
and
je
(bad)
or
xor
or
lock
add
sub
cmp
add
add
ret
xchg
jbe
js
enter
push
movzwl
cmp
or
std
scas
inc
cmp
cmpl
mov
mov
setne
jmp
add
es
inc
mov
jg
cmpsl
lea
je
jbe
call
fs
and
int
clc
push
(bad)
fadd
inc
and
test
mov
xlat
ds
cmc
or
push
or
add
lahf
addb
fimull
pop
or
sub
dec
fucomi
ljmp
and
push
push
mov
push
push
push
xor
push
movsb
sub
loopne
imul
mov
add
sbb
je
(bad)
xchg
call
pop
add
fdiv
cmpxchg
fwait
aam
ficomps
add
imull
int
pop
xor
decb
adc
in
repz
pop
test
and
sbb
add
lcall
rorb
push
pushf
cmp
jbe
es
cmp
mov
pusha
mov
sahf
dec
dec
dec
int3
nop
mov
lea
mov
(bad)
(bad)
sti
cmp
mov
test
jle
cld
mov
mov
lea
mov
mov
push
mov
add
(bad)
mov
addr16
mov
add
inc
cld
mov
jl
mov
outsl
xchg
insb
cmp
jne
mov
xchg
lret
loop
shll
clc
(bad)
ficoml
xchg
fcoms
mov
or
je
sub
lea
outsl
and
arpl
ja
pop
mov
loopne
int3
mov
mov
(bad)
cmp
jae
gs
pop
pop
pop
pop
lea
das
mov
cmp
lea
(bad)
pusha
out
daa
inc
and
xor
xor
or
inc
mov
mov
loopne
pop
push
dec
jl
sbb
xchg
rolb
jmp
inc
cmp
sbb
jg
ljmp
adc
mov
jno
loope
dec
mov
push
add
lods
push
mov
pop
add
addr16
push
mov
xchg
sbb
mov
dec
nop
add
sti
jecxz
in
pop
xor
(bad)
loopne
jae
ret
sub
loope
pop
xlat
dec
mov
sub
adc
sbb
call
sub
fsubl
sub
sub
je
psrlw
loope
call
loop
shlb
cs
sub
outsl
mov
or
lods
pusha
flds
ds
sbb
out
xor
movsl
and
or
addr16
or
pop
mov
xchg
adc
int1
inc
lock
push
mov
inc
sti
xlat
push
daa
jmp
popf
pop
or
in
gs
mov
jmp
cld
insl
movl
mov
inc
call
jb
jb
and
sbb
adc
aad
jb
or
mov
pushf
loop
loopne
mov
or
add
add
ficoms
int
ror
add
mov
jge
(bad)
adc
pusha
clc
jecxz
mov
cmp
cmp
mov
das
lods
jb
in
subl
jne
mov
loopne
adc
test
pop
push
rcll
popa
addb
jbe
filds
add
adc
dec
out
mov
mov
add
mov
imull
mov
decb
cmp
sub
lea
rolb
fisubrl
adc
push
enter
data16
outsl
(bad)
fiaddl
popa
jns
xor
pop
outsl
mov
xchg
sub
into
lret
mov
clc
or
outsb
cmpl
jg
(bad)
mov
negl
and
insl
in
xor
jle
insb
(bad)
cmpsl
dec
dec
xor
cltd
mull
aam
scas
fisubrl
js
dec
mov
adc
cli
in
mov
fimull
mov
or
gs
mov
lea
adc
pop
sub
sbb
insb
xlat
sbb
jo
mov
xor
fdivl
sub
xor
jl
lock
pop
push
fadd
and
mov
test
push
lock
lods
test
add
adc
cld
cmpsl
hlt
pop
fs
es
movsb
adc
sub
jle
jge
push
adc
adc
test
jns
loope
(bad)
xchg
pusha
insb
adc
jecxz
pop
pusha
or
ret
pushf
push
divb
testb
xchg
dec
lcall
sub
fadds
sub
cld
cmp
pop
adc
cmp
in
pop
test
cmpb
or
xchg
outsb
rol
in
push
jp
ret
cmpsb
in
cmc
rcll
inc
pop
jl
sub
cmp
add
sub
adc
cld
or
scas
mov
xchg
mov
in
test
push
sbbl
add
int
push
add
add
sbb
ja
add
push
xchg
add
jecxz
rorl
jbe
es
mov
mov
imul
add
cmpsl
int3
aam
fdivs
ja
fs
sub
in
rorl
xchg
lods
mov
adc
or
cmp
mov
and
les
mov
fdivrs
jle
aam
fsubr
rorb
cltd
or
xor
sub
mov
add
push
fmull
or
inc
out
dec
ljmp
mov
loopne,pn
in
mov
push
movsl
loopne
add
ret
ret
cmp
mov
fwait
sub
fdivr
inc
lock
cmp
add
or
int1
xchg
cmpsb
inc
int1
pop
cld
pop
lea
sub
sbb
fs
push
clc
addb
inc
cmp
in
mov
in
pop
aas
hlt
test
je
popf
and
loopne
push
mov
add
push
loopne
cmpsb
loopne
shrl
mov
mov
mov
inc
cmpsl
sub
pushf
adc
(bad)
xor
sbb
inc
imul
movsl
adc
pop
(bad)
and
pop
jae
xchg
jmp
cmp
adc
scas
mov
and
decl
sbb
mov
mov
add
nop
ja
nop
std
cli
xchg
or
popa
xchg
dec
lods
in
rcrb
mov
addb
enter
in
push
enter
lahf
nop
pop
sar
cli
(bad)
rolb
(bad)
int3
std
cli
addb
nop
jmp
xchg
imul
insb
lea
add
shrd
leave
add
jp
sbb
aad
adc
mov
sub
scas
aad
in
push
mov
push
add
xor
repnz
pop
or
mov
inc
jmp
aas
aas
lods
adc
mov
mov
mov
xchg
mov
cmp
and
lea
test
(bad)
aam
mov
mov
sar
out
(bad)
sti
pop
mov
sar
and
mov
mov
cli
shrd
sar
pavgb
sbb
movsb
ret
in
lcall
daa
outsb
inc
adc
lock
and
xchg
repz
mov
mull
xchg
out
xchg
adc
aam
and
mov
enter
out
loopne
cmpsb
jo
sub
loopne
mov
push
(bad)
mov
loopne
xchg
popf
sti
js
push
xchg
xor
pop
sub
inc
dec
ret
jmp
pop
rcl
(bad)
sub
out
lock
or
rorb
data16
leave
(bad)
test
xchg
sub
enter
push
mov
cmp
into
adc
dec
xor
mov
leave
xor
jo
push
(bad)
out
nop
mov
xchg
pop
cs
mov
clc
jge
lds
push
dec
xor
adc
jge
repnz
and
and
pop
jb
cmp
push
decl
sbbb
imul
xorb
sbbl
or
mov
(bad)
lock
jnp
jl
xor
test
jne
dec
movsb
cwtl
xor
das
pop
push
push
ret
sub
cmc
mov
cmpl
adc
sub
test
xchg
daa
cltd
nop
mov
and
mov
jno
test
sub
inc
and
and
rorl
andb
nop
or
pushf
addb
pop
mov
xor
imul
scas
jmp
jmp
mov
mov
or
jmp
pop
dec
inc
jno,pn
xor
and
in
cmp
mov
les
and
mov
insb
pop
sar
aam
sub
std
les
mov
xchg
lret
enter
and
sbb
les
mov
and
shrb
lahf
adcb
pop
