push
ljmp
xor
enter
lods
popf
mov
lahf
cmp
int
cmp
push
jle
sub
push
insb
nop
outsl
in
mov
cmp
pop
cmp
mov
mov
push
dec
nop
popf
push
shlb
xor
test
lret
push
rorb
xchg
jae
and
push
jecxz
ss
sub
rclb
fcmove
mov
push
out
push
or
xlat
mov
fcmovu
xor
mov
(bad)
rorb
int3
pop
data16
inc
sub
push
pop
into
imul
fwait
xchg
and
lea
shl
sahf
dec
cmp
cwtl
sub
dec
push
loopne
es
popf
adc
out
or
ljmp
sub
pushf
jl
or
(bad)
xor
int1
lahf
mov
cmovae
test
xchg
out
mov
and
int3
or
out
pop
movsl
jae
lret
and
hlt
cmp
mov
bnd
pop
lea
out
cmp
push
int3
or
cmp
xchg
mov
dec
mov
inc
mov
mov
inc
mov
stos
cwtl
jnp
stos
fsubs
xchg
int3
push
decb
js
ret
cli
pop
pop
lret
pushf
dec
adc
lods
iret
xor
cmpsl
jge
lcall
cs
js
shll
cmp
fwait
nop
fwait
int1
adc
sbb
insb
sub
push
jp
clts
jl
ljmp
mov
lcall
sub
std
into
jl
(bad)
dec
loopne
ja
xor
adcb
and
pextrw
mov
js
mov
add
in
test
ret
jecxz
push
(bad)
mov
sbbl
aas
out
mov
mov
jbe
subb
mov
sub
fcmovu
adc
out
mov
orl
aaa
dec
dec
push
xor
push
aad
dec
pop
mov
leave
xor
mov
sbb
fcmovbe
fmull
pusha
int1
ja
mov
push
int
cs
movsl
negb
out
push
insb
and
rolb
jl
les
adc
sbb
in
jb
mov
(bad)
repz
xchg
dec
arpl
push
fildll
add
sti
mov
adc
add
fistpl
and
adc
or
nop
sbb
shl
mov
or
jle
pop
push
add
int
or
inc
or
and
int3
sub
into
cwtl
dec
(bad)
push
mov
nop
sahf
mov
nop
insb
cmp
movsb
fsubrs
dec
jb
(bad)
or
pop
(bad)
cwtl
or
and
cmp
push
fsubrs
and
sbb
movsb
fwait
push
mov
in
cmc
imul
inc
mov
jae
popf
cmpsl
or
inc
dec
mov
(bad)
push
je
popf
cmp
lahf
or
and
ror
inc
add
mov
int1
jne
daa
insb
push
out
sub
mov
enter
push
int
fwait
mov
int3
jecxz
push
jne
stc
es
fsubl
pop
jbe
aaa
jne
add
adc
sbbb
outsb
pusha
aaa
subb
and
inc
data16
(bad)
cwtl
repnz
dec
ficoml
mov
test
dec
xchg
in
xchg
pusha
out
imul
shr
int3
inc
lret
or
or
xchg
ss
inc
int
xchg
loope
popf
dec
movsl
or
xor
mov
cmp
into
or
or
sbb
jns
mov
hlt
rclb
inc
inc
aaa
mov
sbb
addb
mov
jbe
mov
push
push
pop
out
pop
pop
push
(bad)
mov
inc
dec
mov
pop
sub
mov
insb
lock
cwtl
inc
sbb
int3
test
daa
cmc
pop
dec
sub
xor
roll
cwtl
adc
movsl
sub
jle
mov
pop
or
push
xchg
adc
inc
dec
adc
test
push
mov
cltd
or
daa
imull
and
int3
xor
stos
(bad)
push
sub
into
les
cmp
cmp
pop
lcall
andl
int
push
movsb
(bad)
ror
clc
pop
mov
sbb
mov
movsl
or
fsubl
enter
sbb
adc
jecxz
dec
in
push
lods
mov
inc
and
push
inc
jl
mov
xchg
pop
test
mov
add
addl
lret
lcall
repnz
inc
pop
aam
(bad)
dec
dec
or
inc
ja
jno
push
mov
call
test
dec
leave
mov
outsl
inc
mov
sbb
sub
push
gs
and
push
sbb
shr
aam
ja
test
mov
faddl
pop
(bad)
addr16
ficompl
in
insb
int3
cmp
out
sahf
push
dec
divl
mov
leave
pop
stos
(bad)
pop
push
insb
fs
cmp
outsl
sbb
aaa
mov
inc
shll
inc
sahf
int3
(bad)
sbb
out
add
mov
movsb
shrb
add
pop
mov
int1
popa
loope
cmp
sbb
js
push
sahf
(bad)
ljmp
mov
xchg
stc
and
and
aas
test
(bad)
nop
sub
mov
insb
dec
test
cmp
or
or
inc
aam
in
in
cld
(bad)
shrb
dec
xlat
movsl
jge
nop
sub
mov
inc
jp
out
(bad)
dec
out
mov
lahf
cld
mov
stos
push
addr16
fiaddl
xor
or
cmp
das
sub
call
push
enter
inc
sbb
je
repz
mov
sbb
mov
lret
dec
xor
pop
xchg
loop
cwtl
loopne
lret
and
iret
(bad)
cmp
lret
fdivl
stos
jp
movsb
push
out
sub
sbb
imul
push
pop
cld
sarb
sbb
pop
imul
mov
in
shll
out
es
mov
pop
push
and
jmp
lret
sarb
loope
aaa
and
shl
out
loopne
cli
jae
pop
push
ja
sub
jle
scas
mov
test
fdivrs
sub
movsl
or
cld
out
nop
sbb
repz
xor
cli
and
fwait
rcrl
test
lods
popf
xchg
shl
jge
loope
pop
cld
inc
jg
lcall
je
add
sub
rorb
add
cmovae
les
jle
cltd
pusha
dec
adcb
loope
int1
dec
idivl
fcomp
pop
xchg
lods
sti
inc
arpl
sti
or
jbe
ds
mov
add
xchg
in
clc
in
imul
mov
sbb
imul
push
cltd
out
lea
movsb
dec
test
add
pop
xchg
push
adc
dec
and
jg
jge
rcrl
jge
mov
push
inc
sbb
adc
xchg
arpl
arpl
pop
dec
pop
loopne
sub
and
dec
inc
push
pop
inc
data16
mov
into
addr16
pusha
jmp
(bad)
gs
inc
test
mov
out
(bad)
pop
sub
inc
mov
dec
push
xor
inc
popf
inc
rcl
cltd
jne
cltd
pusha
sub
sbb
push
push
cwtl
popf
subl
xchg
pop
rcrl
pop
loopne
sbb
add
cmp
cld
jae
mov
out
movb
mov
push
dec
sbb
scas
mov
xor
fwait
mov
and
stos
repz
cmp
fwait
in
divl
xlat
xor
sub
adc
movsl
imul
leave
orb
rcll
rclb
sub
jl
out
cs
rcrb
fwait
sub
pop
je
cld
ljmp
mov
into
push
jge
cmp
(bad)
cltd
add
jbe
xor
repz
cmp
add
lahf
fsubr
push
or
hlt
pop
pushf
arpl
pop
negb
imul
(bad)
mov
fs
cmp
orl
xor
or
fisubrl
sbb
es
aas
add
inc
mov
add
in
fs
das
lock
ret
cmp
je
dec
fdivrs
or
clc
lahf
mov
int3
mov
or
aas
fwait
or
sbb
or
sub
(bad)
test
psubsw
stos
sbb
xchg
cltd
dec
inc
mov
mov
pop
pop
bound
sub
push
push
lods
or
lea
decb
sahf
rolb
jb
movsb
(bad)
popa
mov
push
sbbb
jl
out
