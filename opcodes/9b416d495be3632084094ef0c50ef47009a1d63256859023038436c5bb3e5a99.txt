xchg
enter
push
xor
inc
scas
dec
push
roll
or
mov
pop
cmp
pop
test
mov
dec
mov
xor
xchg
ja
sbb
stc
mov
pop
cmp
push
gs
js
lret
cmp
das
push
mov
je
mov
inc
sbb
enter
mov
ror
mov
xchg
jno
xchg
push
(bad)
test
sarb
cwtl
xor
push
divl
lret
adc
lea
xor
sbb
std
mov
push
or
jae
leave
(bad)
mov
mov
mov
dec
int3
or
cmove
into
js
mov
lds
popf
jle
out
scas
xor
sub
pop
jns
adc
fiadds
shll
adc
sbb
mov
sbb
es
xor
dec
push
lock
xor
inc
push
jl
test
jns
push
mov
fiadds
xchg
push
pop
sbb
and
mov
daa
jne
movsl
into
clc
inc
and
mov
dec
iret
flds
mov
dec
xor
sub
push
das
push
clc
push
rcrb
sbbb
cmp
shll
dec
push
jno
fimuls
cmp
jne
sbb
gs
sarb
jle
mov
mov
or
pop
inc
je
shll
dec
sbb
inc
dec
(bad)
cmp
pop
fxch
add
jns
(bad)
nop
pop
xchg
dec
shll
sub
roll
xor
mov
loopne
(bad)
fistpl
jne
push
mov
push
lret
fldenv
mov
stos
xor
and
in
add
test
add
xchg
insl
push
pop
sbb
add
cmc
lret
or
sbb
out
imul
cmp
push
xor
pusha
or
sbb
xor
loop
mov
jge
sarl
jmp
test
inc
sahf
call
add
dec
test
popf
imul
mov
xchg
add
or
or
inc
dec
add
mov
pop
jno
or
bound
push
roll
jecxz
sub
cmc
jbe
shl
mov
mov
int3
call
or
nop
in
xchg
insb
add
int3
push
leave
test
or
jecxz
arpl
jns
into
xor
pop
mov
cld
packuswb
xchg
pop
cmp
shlb
pop
xor
jge
fdivl
ret
sbb
mov
inc
jo
daa
sub
lods
xor
mov
call
es
pop
rcr
adc
pop
push
dec
out
cmp
js
sbb
in
fsts
adc
adc
xor
jl
lock
jb
aaa
add
mov
mov
inc
subl
clc
sbb
das
inc
push
out
outsb
jo
mov
xorb
out
sbb
lret
sub
dec
push
add
daa
out
in
movsl
xor
xchg
push
ret
inc
test
out
xchg
mov
pop
xchg
repnz
adc
pusha
iret
jae
out
push
cmc
xor
shll
imul
inc
or
xor
(bad)
cmpsl
dec
mov
mov
daa
scas
and
inc
stc
hlt
cmp
outsb
ljmp
lret
and
(bad)
inc
sbb
mov
xbegin
fisttpll
data16
(bad)
xchg
or
xchg
pop
sbb
pop
dec
(bad)
mov
dec
mov
shrl
dec
mov
cmpsb
inc
jp
dec
(bad)
xchg
mov
jbe
movsl
cmp
mov
jnp
push
adc
jno
jno
or
lahf
mov
daa
push
push
sbb
(bad)
xor
push
push
aas
aas
mov
mov
pusha
clc
and
or
ficoms
cmp
add
addr16
mov
int3
push
mov
add
leave
mov
mov
in
std
mov
mov
insb
mov
inc
sbb
lret
mov
mov
add
push
stc
in
iret
call
repnz
jmp
push
sub
jge
int3
test
sbb
mov
loopne
hlt
sbb
daa
adc
jne
decb
cmovle
jecxz
jb
or
loopne
mov
push
dec
xor
cmp
enter
int1
mov
cmpsb
cmc
addl
xorl
dec
(bad)
sbb
lahf
addr16
xor
inc
dec
pop
mov
hlt
dec
mov
jl
mov
push
sahf
hlt
dec
jle
lcall
fsts
mov
test
and
push
loopne
repnz
push
cmp
scas
imul
sub
mov
inc
mov
mov
mov
bnd
es
mov
cltd
jno
push
pop
dec
into
dec
pop
lock
iret
iret
dec
cmp
dec
dec
xchg
pop
in
add
mov
js
mov
mov
fcoms
jp
xchg
cmp
push
insb
add
fisttpll
sub
hlt
pop
dec
inc
xorb
sarb
cmp
push
das
stos
jge
mov
sub
xor
addr16
into
sbb
cli
adc
push
jno
lcall
mov
xchg
leave
push
out
dec
inc
inc
lds
int1
or
(bad)
ret
shrl
cmp
rcrb
xor
aaa
xchg
xchg
dec
xchg
pop
aaa
or
adc
mov
in
inc
push
call
xchg
testl
xlat
and
add
mov
xchg
cmp
jb
inc
js
or
ss
std
add
adc
or
mov
enter
sbb
push
inc
rorl
ficompl
(bad)
xor
fwait
mov
push
dec
mov
cmp
loop
fcomps
rcll
xchg
sub
inc
pop
lret
idivl
sbb
aas
xchg
fisubrl
in
or
cmp
push
mov
rorl
inc
or
jb
mov
push
popf
cmpb
shlb
push
mov
xchg
add
sub
and
mov
popf
push
lret
pop
nop
fnstcw
adc
ljmp
lea
repz
jg
movsl
dec
xchg
shr
(bad)
add
push
out
or
cmp
cmc
mov
loope
adc
into
xor
cmp
setle
daa
mov
xchg
ss
and
push
inc
or
movsl
pop
mov
inc
(bad)
jmp
dec
inc
lock
cmpsb
dec
xchg
in
inc
loopne
ffree
stos
sbb
cmp
leave
jl
ret
ljmp
jg
out
dec
mov
int1
out
add
xor
ret
rcll
out
shlb
inc
cmp
(bad)
and
bound
jecxz
adc
ljmp
cmp
xor
add
cmc
enter
push
mov
pop
scas
cmp
(bad)
out
(bad)
jbe
sub
test
movsb
movsl
mov
jno
les
cmc
jns
hlt
push
fdiv
push
xor
cmc
inc
xor
in
(bad)
or
jg
and
mov
bt
dec
lret
fistpll
mov
push
push
and
gs
sbb
pop
mov
aaa
int
sbb
popa
out
out
mov
cmp
daa
mov
shr
jbe
scas
imul
rcrb
jl
sub
pop
adc
push
xor
add
leave
mov
xchg
iret
cmp
repnz
ret
loopne
mov
dec
mov
enterw
push
(bad)
fisubrl
inc
dec
call
add
in
call
(bad)
data16
testl
adc
pop
pusha
xor
js
mov
test
adcb
loope
stc
mov
inc
mov
push
push
push
repz
dec
sub
pusha
mov
je
(bad)
adc
insb
lcall
sub
xchg
mov
cmpsb
pop
push
xchg
stos
cmp
in
sti
inc
cmp
sahf
jl
out
cmpsl
pop
push
mov
mov
inc
cmc
xor
cmp
mov
add
jbe
pop
test
and
xchg
xchg
mov
and
rorl
cmpsl
push
pop
adc
dec
dec
out
push
jno
in
jno
pop
fneni(8087
sub
leave
xchg
cmp
mov
pop
cs
test
xchg
(bad)
jno
lea
int1
mov
scas
dec
clc
adc
dec
lods
mov
and
pop
add
jb
stos
ja
mov
and
in
mov
pushf
inc
inc
jb
ss
lcall
shr
cli
call
movsl
push
fidivrs
mov
mov
xor
push
inc
jecxz
out
jae
sub
xor
shll
or
xchg
jo
inc
push
repnz
pop
in
xor
jb
int1
sbb
sbb
