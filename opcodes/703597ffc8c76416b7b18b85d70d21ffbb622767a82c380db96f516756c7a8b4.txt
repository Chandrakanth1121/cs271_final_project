mov
adc
add
inc
outsl
outsl
insb
gs
outsb
add
or
add
mov
insb
jae
add
jb
lea
sub
add
push
imul
testl
or
dec
insb
imul
add
(bad)
out
fcmovne
pop
pop
dec
and
addr16
push
xor
data16
das
add
jns
test
push
outsl
jb
add
(bad)
stc
scas
lcall
mov
cmp
call
outsl
jne
insb
andb
out
ffree
pop
or
jb
outsb
arpl
nop
rorb
push
push
je
insb
out
sti
outsl
fcoml
push
imul
push
andl
jbe
adc
mov
add
cld
xor
adc
out
add
xor
pop
push
dec
bound
fdivr
push
arpl
pop
sbb
and
mov
in
jo
(bad)
dec
xor
fwait
insl
clc
jb
popa
arpl
add
pop
inc
arpl
jg
add
int3
addl
jmp
cmp
std
nop
call
mov
or
fcoms
call
adc
leave
aas
or
insb
pop
ds
adc
pop
movsb
pop
mov
inc
jo
pop
adc
loope
sbb
jle
or
outsb
fs
sarl
sub
addl
jno
ja
dec
add
push
inc
popa
push
push
imul
dec
leave
leave
dec
mov
jle
push
leave
leave
pop
sbbb
leave
leave
leave
push
jl
dec
leave
leave
leave
leave
inc
inc
cmp
leave
leave
leave
leave
xor
sub
leave
leave
leave
leave
and
and
leave
leave
leave
sbb
leave
leave
adc
mov
leave
cwtl
or
add
cmp
lret
add
les
add
jbe
lcall
add
xor
ret
addr16
xchg
pushf
pushf
faddl
pmuludq
in
mov
in
push
push
mov
mov
fadds
push
int3
mov
test
jne
fstp
testb
in
mov
mov
ret
lea
out
(bad)
incl
push
mov
mov
inc
cmp
jne
mov
mov
mov
push
nop
mov
add
(bad)
mov
ja
mov
mov
xchg
add
test
xchg
mov
mov
mov
jne
(bad)
fimuls
or
adc
add
mov
aaa
push
mov
or
adc
ret
jae
(bad)
fisttps
int1
mov
mov
mov
add
rcrl
clc
jg
mov
or
push
or
ret
and
pop
repz
xchg
mov
push
or
inc
add
adc
or
aaa
sub
jne
(bad)
mov
cmp
test
pop
pop
pop
push
(bad)
out
add
mov
mov
xchg
cmp
jb
mov
add
jo
(bad)
add
int
bound
jne
mov
divb
mov
dec
ret
jmp
pop
out
lods
pusha
sti
mov
add
pop
repnz
sub
outsl
addb
sub
mov
lock
jno
jmp
xor
(bad)
sbb
scas
sbb
sti
jne
sbb
nop
out
cmpl
cmp
mov
jl
add
xchg
add
add
ljmp
fiaddl
and
push
jg
mov
mov
test
je
mov
mov
jbe
(bad)
adc
(bad)
mov
push
dec
pop
cmp
mov
push
mov
data16
jne
ja
dec
jmp
push
pop
outsb
pop
fs
cmpl
aas
sub
shr
fucomip
mov
inc
pop
xchg
mov
(bad)
hlt
lret
and
call
pop
jno
mov
popf
jmp
in
es
ja
mov
popf
mov
xchg
hlt
cmp
ja
cmp
jp
hlt
outsb
xchg
or
sbb
jmp
loopne
or
movl
filds
mov
ljmp
jbe
jle
sbb
adc
je
pusha
sbb
pop
push
adc
incl
mov
mov
and
mov
add
sbb
jle
inc
sub
or
lds
mov
rcr
mov
jle
add
and
mov
cmp
or
fidivs
or
jbe
scas
adc
sti
push
push
ficoml
sub
adc
pop
or
cmp
mov
je
out
jb
inc
ja
xor
jmp
sahf
inc
lock
sub
or
sub
jae
mov
cmp
jae
std
xor
sbb
inc
adcl
rorb
ss
ja
clc
mov
call
insl
out
cmpl
out
shl
shlb
cmp
jg
(bad)
cmc
popf
sahf
inc
xlat
mov
pop
inc
in
je
mov
enter
inc
ds
adc
jne
push
(bad)
pop
add
sti
mov
cmpl
movsl
and
push
and
mov
ljmp
shl
mov
cli
jl
inc
mov
out
add
je
cmp
inc
sub
lock
sub
frstor
mov
stos
mov
pusha
int1
xor
nop
or
pop
sar
gs
sub
pusha
jno
push
jbe
fwait
add
lcall
fsubr
jne
int3
imul
xchg
ss
jne
xchg
cmp
movsb
lds
sub
fs
ret
inc
popf
adc
sbb
xchg
lea
lcall
cmp
inc
mov
mov
(bad)
jnp
push
lock
jae
mov
out
roll
xchg
jle
pop
fcoms
mov
in
mov
(bad)
ret
addr16
dec
jo
add
adc
jmp
push
data16
ja
sbb
hlt
push
add
add
lahf
std
cmp
push
push
push
mov
push
cmpb
adcb
and
fldcw
adc
xchg
seta
sti
push
mov
or
jns
push
mov
jle
hlt
inc
cmp
in
mov
ret
add
les
loopne
or
pop
pop
pop
push
adc
sub
fstpl
push
cld
ret
mov
pop
pop
outsb
test
pop
xchg
test
rclb
nop
or
lods
add
iret
add
sbb
push
arpl
adc
roll
adc
jns
push
dec
xor
imul
test
je
bound
adc
sbb
cmp
add
add
fistpl
push
cmp
cmp
add
adc
jb
or
adc
mov
leave
jns
add
sar
test
and
out
imul
mov
mov
mov
testl
jb
add
or
or
cmp
add
jmp
inc
sbb
add
sbb
cmp
jl
movl
inc
add
sahf
es
or
(bad)
outsb
inc
or
mov
and
add
sub
adc
add
test
cld
pop
adc
adc
shrl
adc
insb
or
push
or
push
rolb
aas
leave
mov
add
and
popf
inc
jns
push
(bad)
xor
adc
je
jmp
fisubl
aad
lods
enter
ret
aas
add
testl
dec
jb
sub
cmp
cmp
sbb
cmp
or
add
test
fsubrp
scas
jp
fdivs
add
mov
clc
add
ja
scas
fbld
test
jne
mov
(bad)
bound
and
jmp
sub
mov
pop
adc
sub
lods
add
dec
mov
roll
xlat
mov
into
push
fists
sbb
lea
sub
cld
jg
clc
sub
sub
cmp
(bad)
jmp
or
adc
add
fdivrl
or
adc
xlat
cld
lea
and
add
in
mov
aad
(bad)
(bad)
sarb
stos
clc
add
adc
shrb
ficoms
or
inc
mov
and
mov
xchg
iret
jmp
out
rorb
add
sub
shll
aaa
adc
out
ret
nop
hlt
cmpsb
mov
sbb
sbb
cmp
fwait
mull
inc
adc
push
pop
add
sub
cmp
or
mov
pop
mov
pop
adc
xchg
mov
adc
or
mov
mov
movb
daa
or
adc
adcl
and
pop
ret
decb
and
movsl
mov
cwtl
cvttps2pi
lds
fwait
or
xchg
lds
out
pop
push
mov
cmp
pusha
xchg
dec
sub
add
or
jg
adc
repz
(bad)
sub
lds
jmp
mov
loopne
in
jbe
loop
pushf
outsl
add
sbb
pop
testb
cmp
mov
cld
adc
leave
