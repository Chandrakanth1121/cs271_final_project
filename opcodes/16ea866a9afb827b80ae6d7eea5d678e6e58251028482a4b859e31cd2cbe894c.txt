stc
add
jne
mov
fcoml
ret
aas
cmpsb
lret
aaa
enter
call
std
add
outsb
in
add
ljmp
inc
or
jmp
dec
pop
dec
add
add
fcompl
add
lahf
and
test
push
jbe
cmp
pop
jl
adc
cmp
scas
bound
aas
sub
aaa
inc
inc
add
lea
mov
cmc
insl
cli
adc
push
popa
into
mov
push
pop
into
sub
test
sbb
int3
movl
or
iret
or
add
mov
or
cmp
mov
add
push
xor
movsl
rcrl
test
push
push
dec
add
insl
scas
xchg
(bad)
mov
cmp
or
scas
aaa
adc
mov
inc
fs
lret
mov
js
sbb
fstl
int
mov
aam
cld
and
adc
push
pop
inc
xor
cmp
inc
jmp
daa
test
and
cmp
test
mov
(bad)
fmuls
pushf
push
es
xor
ret
cmp
mov
pop
int3
add
lds
and
mov
mov
push
sub
pop
sub
cltd
xor
push
xchg
dec
push
push
mov
clc
push
jp
mov
pop
cmp
lods
push
lock
je
dec
fisttpl
(bad)
call
test
mov
cmp
mov
push
and
dec
int1
idivl
(bad)
mov
loope
push
leave
inc
insb
test
fwait
pushf
frstor
adc
pushf
rcr
inc
clc
sbb
jne
sbb
or
outsb
(bad)
les
jge
xchg
dec
mov
imul
lods
inc
jecxz
je
jg
call
mov
sbb
je
or
cmc
push
dec
sbb
fstpl
jbe
push
lods
push
gs
cmp
dec
lret
faddl
imul
movsl
xchg
ja
ja
lret
adc
cmp
nop
(bad)
jmp
sysenter
xchg
jmp
orl
add
dec
int
and
dec
test
jmp
movsb
imul
inc
mov
imul
aas
jl
sub
sbb
insb
scas
in
dec
dec
rcll
rcll
jmp
gs
scas
fistps
ljmp
test
xor
addr16
sub
ret
aad
fldenv
bound
outsb
push
or
dec
mov
xor
mov
sub
lret
insl
mov
push
rorl
and
imul
inc
(bad)
imul
pop
repnz
imull
daa
mov
insl
test
and
ljmp
mov
mov
adc
cld
adc
ret
push
inc
push
fs
ja
jle
adc
jge
push
and
repz
popf
bound
imul
mov
imul
fwait
std
pop
or
xchg
addl
sbb
xchg
and
push
fistl
or
out
stos
inc
dec
shr
cmp
xchg
outsb
shlb
adc
int
lea
sub
scas
cmc
add
pushf
lods
sti
adc
sahf
xchg
cmp
fstps
insb
and
dec
clc
lcall
inc
loopne
fisubl
and
je
push
or
pop
scas
pop
adc
inc
push
rol
mov
inc
pusha
or
inc
or
xchg
pop
hlt
outsl
testl
jne,pt
add
sub
fs
imul
mov
paddsw
in
sub
xor
mov
xor
and
dec
add
dec
insl
ja
lea
paddd
jne
aaa
adc
in
mov
xchg
pop
cmp
mov
mov
inc
hlt
xor
push
fisubl
(bad)
cmpsb
pop
xor
lahf
add
or
xchg
inc
outsl
test
push
lahf
mov
fs
mov
pop
pop
in
(bad)
insl
sbb
(bad)
push
sbb
xchg
stos
sub
push
mul
outsb
mov
and
clc
xor
(bad)
cmp
cmp
adc
jo
ds
push
(bad)
inc
inc
cs
pop
inc
aas
mov
pop
rclb
in
dec
mov
scas
movsl
xchg
jo
je
dec
rcrb
aam
sub
mov
pusha
mov
jns
add
push
arpl
sbb
stos
js
jg
adc
adc
iret
sbb
and
lcall
and
out
xor
pop
addl
mov
lcall
sub
jb
push
enter
pop
out
enter
and
insb
sub
leave
sbb
and
xor
jecxz
pop
xchg
inc
insb
sbb
and
lods
jns
lcall
cmp
in
or
mov
scas
pop
(bad)
adc
add
inc
jbe
jns
sub
(bad)
dec
mov
lods
jecxz
add
test
ds
gs
pop
cld
add
adc
test
cli
pop
clc
or
imul
es
loope
cmp
jmp
aas
or
pusha
addr16
or
mov
or
adc
mov
fcomip
movsb
cmpsb
es
aaa
push
popf
js
push
jp
inc
daa
xor
cmp
xorl
std
gs
mov
es
je
add
jne
out
in
cmp
and
mov
push
xchg
cmp
and
fadds
xchg
inc
push
mov
xor
aas
outsb
add
mov
bound
orb
pop
cmp
lods
test
into
pop
jbe
clc
(bad)
push
fnstsw
sbb
cmpsb
cmp
sub
js
(bad)
fnsave
out
cmp
pop
xchg
cmp
push
cli
leave
in
mov
jl
add
orl
adc
push
mov
sbb
and
sub
jg
xchg
repnz
dec
out
sub
stos
pop
push
cs
movsl
divb
(bad)
pop
cmpsl
pusha
xlat
gs
jl
xchg
(bad)
push
pop
pop
call
and
push
fidivrl
mov
stos
ljmp
pusha
cmp
pop
sahf
cmp
std
cmp
cwtl
insb
jg
lods
imul
and
mov
into
sarl
add
in
test
adc
mov
js
or
je
dec
(bad)
test
stos
sub
jbe
add
pop
or
rol
mov
adc
data16
mov
test
arpl
xchg
add
push
mov
out
add
jno
sbb
push
xorl
out
push
pop
mov
mov
leave
jmp
lahf
int
xor
out
pop
xor
pop
stos
sub
les
loopne
sub
cmp
rolb
jb
push
pop
imul
mov
mov
lds
insl
or
insl
add
test
jge
add
lahf
and
mov
imul
ret
loop
adc
sub
(bad)
enter
test
xchg
fcoml
jae
pushf
add
mov
insl
sbb
pop
dec
cmpsl
sub
dec
(bad)
das
enter
cmp
gs
loope
mov
in
out
xor
xchg
adc
dec
xor
cs
outsb
xor
pop
inc
cmp
xchg
adc
lret
negl
dec
inc
pop
inc
mov
sbb
xchg
fldenv
loope
inc
imul
sti
loopne
mov
push
leave
ret
lret
sub
ds
hlt
jge
ds
pop
lods
dec
scas
cmpsl
inc
ja
lds
adc
outsl
mov
divb
inc
pop
add
mov
(bad)
pop
lret
movsl
imul
inc
cmp
mov
rcrl
popf
testb
aam
mov
xor
(bad)
ds
add
mov
sbb
pop
lret
leave
cmp
movsb
xchg
notl
xor
sub
insl
pop
mov
mov
outsb
sbb
jle
out
xor
jnp
imul
or
iret
addr16
fwait
rcl
mov
jae
out
repz
mov
aam
das
adc
in
daa
stos
sub
out
movsl
sbb
add
lods
pop
cmp
pop
jle
ret
inc
cmpsl
and
jo
mov
sub
mov
jnp
inc
int
out
arpl
pop
test
sub
pop
ret
mov
(bad)
stos
loope
sub
adc
jg
inc
sarl
lds
das
xor
(bad)
bound
sub
add
aaa
sbb
or
pop
sbb
sbb
dec
std
push
dec
test
insb
out
(bad)
fnstenv
mov
imul
cmovle
js
dec
add
fs
fisttpll
add
jl
(bad)
nop
addr16
mov
pop
rol
pop
fs
xchg
push
fs
bound
cs
