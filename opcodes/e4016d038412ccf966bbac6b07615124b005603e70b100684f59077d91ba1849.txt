js
popa
loop
test
pop
ds
shrl
ret
sub
lea
sbb
add
sbb
dec
push
ret
jp
shl
inc
mov
mov
push
test
int3
dec
xlat
cmp
int1
shufps
rorb
aas
insb
sub
sub
in
and
adc
popa
jg
cmpsb
dec
lods
jle
insb
sbb
imul
stos
fstpl
cmpsl
out
jge
out
std
xchg
pop
fnsave
fiadds
jecxz
out
mov
cli
mov
out
or
mov
mov
int
xor
mov
xorl
mov
pusha
repnz
inc
mov
test
mov
dec
sub
out
and
test
int1
or
cwtl
shl
cmpsb
out
and
add
sub
or
push
sub
ss
das
mov
jg
clc
pop
dec
jp
mov
in
out
or
idiv
(bad)
or
dec
sub
or
dec
movswl
add
nop
pushf
add
lret
(bad)
aaa
ja
cmp
daa
adc
jo
sbb
jecxz
test
sbbl
ds
cs
in
test
int1
add
(bad)
jmp
int3
cmp
dec
addb
test
or
stc
adc
arpl
enter
scas
pop
jo
out
imul
sub
pop
(bad)
jmp
imul
and
and
scas
aad
in
and
scas
pop
and
xchg
ret
jecxz
sbb
sbb
jno
add
loop
test
repz
call
jmp
sub
sti
xchg
mov
popa
test
out
sbb
notb
aam
sbb
mov
push
add
insl
in
adc
test
sub
test
popf
pop
mov
or
int1
push
insb
shrb
mov
xchg
inc
sbb
inc
in
aaa
ret
out
ret
mov
hlt
je
mov
and
std
xlat
push
in
sar
lods
sub
cltd
cs
loope
int3
jbe
daa
xlat
lea
pop
shlb
divl
ss
mov
cs
inc
and
popf
inc
jnp
pop
fwait
imul
xchg
inc
mov
push
jp
cmp
cmp
aas
dec
dec
cmp
jns
aas
push
mov
(bad)
in
inc
std
shll
shll
and
fistps
sbb
dec
pop
lock
decl
arpl
pop
lcall
stos
ret
sub
pop
mov
sub
pop
call
insl
dec
add
inc
adc
hlt
dec
shrb
scas
cmpsl
scas
ret
push
nop
push
mov
lods
mov
jno
mov
(bad)
out
aad
(bad)
testb
imulb
es
pusha
push
mov
pop
xchg
sarl
stos
or
jne
dec
cmp
push
test
inc
xlat
xlat
cs
js
popa
popa
test
std
mov
je
or
(bad)
dec
loop
js,pn
insl
xchg
aad
in
(bad)
sarl
dec
push
sub
mov
ret
xchg
jae
sti
rcrb
jnp
cmp
push
push
daa
int1
lods
out
cmp
cmpsb
push
ds
shlb
out
div
mov
mov
add
pop
aas
stos
and
inc
jnp
iret
mov
fnstsw
inc
dec
int1
cld
sub
out
mov
stc
mov
gs
js
and
or
sarl
scas
stc
cmp
push
roll
mov
mov
dec
fsub
enter
nop
lahf
clc
cmp
mov
std
loop
imul
pop
das
and
jnp
test
stc
add
mov
arpl
inc
mov
mov
pop
(bad)
enter
mov
adc
add
and
faddp
fadd
(bad)
in
mov
arpl
test
pop
leave
mov
in
pop
imul
call
pop
int1
insl
repnz
pop
pop
sbb
dec
or
(bad)
stos
jl
daa
scas
jl
dec
loopne
das
mov
and
arpl
(bad)
dec
subl
or
int1
and
sahf
xchg
adc
rcpps
repz
cmp
aam
es
mov
xor
pop
imulb
mov
and
xchg
outsl
push
sahf
aad
cmp
rclb
shll
ficompl
add
hlt
push
and
push
push
divl
push
dec
(bad)
mov
xchg
cmp
mov
ret
inc
cmp
gs
inc
loopne
xor
addr16
xor
iret
dec
mov
add
inc
cli
or
stc
out
out
rorl
inc
(bad)
popa
xorb
div
add
out
jns
ljmp
fsub
mov
ss
insl
dec
mov
loop
or
lods
inc
push
sub
daa
cwtl
insl
and
pop
mov
in
lds
std
daa
pop
pop
dec
cmp
lahf
ja
pop
pop
imull
push
iret
scas
add
jle
sub
insl
or
ljmp
jle
inc
mov
scas
shr
stos
xor
lock
daa
inc
add
cmp
add
add
mov
jbe
pop
xor
or
pop
daa
mov
dec
or
popa
push
or
int1
inc
add
mov
test
xor
pusha
dec
lret
mov
hlt
pop
movsb
cli
in
inc
add
or
shll
inc
push
sub
(bad)
mov
push
pusha
pop
mov
jnp
les
mov
push
xabort
loopne
inc
xchg
jo
or
fstps
aas
jle
xor
ja
or
xor
fimull
cld
pushf
jg
push
jb
mov
cltd
jnp
sbb
das
imul
sarl
cmp
pop
sub
add
addr16
cmp
or
inc
sarb
int3
add
mov
and
ror
insl
pushf
pop
mov
xchg
je
int1
lds
xchg
je
jno
mov
and
xchg
movsb
gs
cmp
xchg
jmp
sbb
cmp
sarl
std
push
pop
sbb
aaa
mov
daa
xchg
cmp
add
push
xchg
or
xchg
std
out
rcrl
and
push
mov
push
push
aas
gs
leave
in
scas
int
push
dec
xorb
sbb
mov
and
jl
int1
dec
jo
into
jecxz
fistpll
jge
or
xor
jecxz
jne
xor
pop
or
andnps
push
or
add
cmp
sub
dec
pop
das
jecxz
rcl
(bad)
xchg
loopne
jg,pn
dec
and
jbe
add
push
leave
rclb
inc
popf
inc
daa
mov
cmpsl
or
repnz
fsubs
lods
push
and
jo
nop
mov
inc
dec
jbe
sbb
sub
loopne
push
and
cmp
pop
sub
jo
push
out
cmpsl
fwait
pop
aaa
pop
sub
lea
aam
and
xchg
fsubl
adc
push
xor
inc
xchg
push
ljmp
ja
ret
lea
int1
test
jle
ja
push
and
imul
cmp
(bad)
mov
xor
cmp
cmp
(bad)
mov
cmp
in
adc
or
and
push
mov
fldcw
sbb
cmp
gs
imul
mov
int
or
or
aam
add
xchg
fimull
sbb
leave
ljmp
mov
cli
movsb
(bad)
xor
dec
jecxz
repz
popf
pop
aaa
outsl
add
jbe
add
push
popa
imul
add
imul
arpl
push
jmp
sub
divl
(bad)
rclb
lea
int1
mov
xchg
pop
add
jecxz
pop
ja
stos
sbb
fimull
mov
mov
sub
sub
and
adc
aas
jcxz
sbb
bound
push
das
jae
stos
lods
addl
dec
popa
mov
jmp
push
ds
push
cwtl
out
mov
ljmp
mov
dec
push
push
push
movl
lahf
inc
aas
push
mov
mov
push
xchg
dec
mov
bound
or
leave
sub
cmp
jle
pop
ds
inc
dec
xchg
cmpsl
pusha
std
call
(bad)
pop
sub
cmp
cld
sbb
xlat
mov
cmpsb
bound
pop
mov
mov
mov
fs
cmp
xchg
add
cld
scas
ret
pop
xchg
out
into
sysenter
jmp
fidivrs
push
add
pop
and
push
jo
mov
pop
and
