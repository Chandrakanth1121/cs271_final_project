rex
cmp
sbb
and
jae
maxps
fs
or
mov
loope
pop
jb
push
stos
jrcxz
repnz
(bad)
out
repz
(bad)
cmp
cmc
mov
fs
(bad)
sub
fldcw
jge
pop
or
xor
jb
rex.xb
popf
jno
adc
leave
movabs
(bad)
rex.wb
or
movabs
jp
pop
sub
or
lea
and
adc
sbb
push
jp
jp
xor
cmpsl
(bad)
cltd
pop
jno
pushf
(bad)
mov
fimull
pop
int1
fs
(bad)
jb
or
movabs
(bad)
xor
cltd
loope
int1
jp
jle
push
rex
data16
std
push
lods
pop
sub
adc
(bad)
cmp
mov
pop
stos
xchg
pop
shl
out
push
adc
fwait
(bad)
pop
(bad)
movabs
sub
adc
sub
adc
lock
(bad)
movsb
sub
rex.xb
add
or
sub
popf
test
rcr
jp
jae
fsubr
pop
sub
rex.wb
(bad)
mov
stc
cltd
(bad)
adc
(bad)
fstps
insb
rex.wxb
push
push
rex.w
or
rex.rb
popf
and
rorb
mov
shl
cwtl
jns
sub
rex.xb
(bad)
jg
push
rex
mov
ja
movsl
rex.rxb
mov
(bad)
xor
and
mov
jae
adc
or
ret
rex.wxb
es
rex.rb
rex.rxb
rex.wb
loopne
mov
rex.wxb
xchg
ds
jrcxz
push
sub
test
hlt
int
movabs
xor
shll
jo
pandn
scas
rex.wrx
jmp
mov
(bad)
movsl
loopne
cltd
jns
xor
test
jl
movabs
cmp
(bad)
xchg
xor
str
scas
pop
jrcxz
fnstenv
add
(bad)
fdivrp
mov
sbbb
add
xchg
insb
roll
(bad)
in
(bad)
imul
mov
scas
push
sbb
push
add
(bad)
sbb
loope
insb
stos
xor
movabs
mov
andl
out
cmp
shll
cmpsl
cmp
stos
(bad)
(bad)
(bad)
and
push
js
(bad)
sub
(bad)
movabs
jg
or
rex.wb
repz
cwtl
xchg
cmp
in
je
sbb
adc
xchg
js
cmp
leave
jns
sub
cmp
movsb
call
rex.r
xor
jecxz
push
cmpsb
imul
(bad)
fstl
xchg
jnp
cmp
lret
push
jb
mov
rex.xb
mov
(bad)
fs
(bad)
and
fildll
(bad)
movsb
movsb
rex.wx
(bad)
imul
(bad)
cwtl
(bad)
push
mov
movabs
out
gs
(bad)
cmp
push
cmpsb
fcomps
sbbl
mov
(bad)
pop
gs
(bad)
fmuls
(bad)
push
rex.w
sarb
mov
(bad)
push
mov
movabs
(bad)
ret
sbbl
(bad)
cmp
test
out
mov
jg
popf
xchg
cmp
xchg
add
test
sbb
sbb
ficomps
popf
mov
sub
shl
and
push
xor
movabs
pop
cld
mov
and
and
stos
rex.wrb
rex.wxb
insl
cmp
cld
(bad)
rex.wb
mov
loope
pop
add
push
cmp
bswap
rex.wxb
mov
rex.rb
pop
testw
rcrb
outsb
push
movsb
setbe
jmp
cmpsb
push
shlb
popf
pop
test
xchg
ds
pop
xchg
jae
rex.rx
rex.rxb
rcll
rex
mov
fists
ret
add
push
add
(bad)
js
fstl
mov
sti
add
add
cmc
cmp
(bad)
test
test
mov
add
rex.wr
rex.rxb
xlat
xor
sbb
movsb
sub
adc
mull
xchg
fwait
addr32
push
rex.x
test
rex.x
mov
imul
jp
jne
add
mov
xchg
sub
xlat
jnp
(bad)
jae
data16
or
(bad)
jno
sahf
mov
rorb
cmp
mov
cwtl
mov
mov
rex.b
add
imul
(bad)
xchg
lret
(bad)
rex.wrxb
rex.rb
mov
(bad)
(bad)
pop
(bad)
movabs
rex.wrb
jge
cmp
add
push
(bad)
mov
add
int
movsl
movabs
mov
rex.xb
call
and
rex.wrb
imul
and
mov
roll
jge
repz
jne
push
pop
mov
pop
rcl
cmp
and
push
(bad)
sub
jae
(bad)
sbb
(bad)
(bad)
sbb
sub
and
mov
mov
pop
cmc
sub
add
ficoms
(bad)
lods
(bad)
jae
pop
movsl
psrad
imul
fwait
jns
fdivl
sub
mov
movsl
(bad)
mov
stc
insb
cwtl
mov
mov
(bad)
push
frstor
popf
xchg
xchg
pop
(bad)
rorl
or
pop
pop
mov
push
stos
test
push
(bad)
add
xchg
shll
(bad)
(bad)
push
fs
loope
movabs
sarb
push
bts
(bad)
(bad)
xchg
int3
xlat
and
mov
int3
ret
cwtl
sub
(bad)
(bad)
mov
push
loope
xchg
ds
push
jrcxz
jae
movabs
cmp
add
jmp
mov
jb
(bad)
ret
test
xchg
pop
ja
add
cwtl
rex.w
(bad)
cmp
stos
sbb
in
outsl
rex.wx
mov
adcl
and
mov
cmpsl
xchg
mov
sti
repnz
cmpsl
cmp
out
mov
and
rex.rb
std
rex.wrb
and
and
rorl
mov
fsub
mov
fistpl
rex
mov
jno
lret
cmp
push
in
mov
pop
cmp
lahf
cmc
loope
addr32
mov
adc
ficompl
xor
and
mov
outsb
cltd
scas
sbb
xchg
(bad)
invd
rcrb
(bad)
js
(bad)
push
rex.rxb
xor
testb
test
push
(bad)
(bad)
movabs
(bad)
pop
adc
lret
adc
adc
negl
xor
insb
sbb
pop
rex.wrxb
ds
shlb
rcll
xchg
rex.wb
pop
(bad)
mov
addl
lea
jns
stos
sbb
imul
or
cmc
mov
iret
(bad)
fdivrl
sub
rex.w
rex.wx
(bad)
add
(bad)
jmp
rex.xb
or
xchg
mov
rex.wrxb
or
xor
ret
outsl
fidivrs
mov
imull
stos
cwtl
sbb
xlat
sti
rex.wrxb
out
pop
out
xchg
sub
jmp
lods
jmp
mov
mov
insb
cs
fisttpl
sbb
pop
xchg
add
rex.rxb
rex.r
stc
and
(bad)
enter
repnz
rex.wrb
or
(bad)
test
rex.b
cmpsl
ret
outsl
mov
popf
pop
pop
(bad)
xchg
cltd
add
adc
or
rex.wxb
rex.rb
mov
lea
ficoms
pop
add
cltd
(bad)
cmp
pop
add
(bad)
js
push
sti
(bad)
(bad)
fcoml
mov
mov
out
rcrb
pop
notl
rex.x
and
(bad)
adc
or
adc
mov
outsl
mov
or
lret
xor
lods
loope
rorb
push
out
movabs
add
pushf
fldl
ret
call
mov
jnp
xchg
sbb
(bad)
xlat
ja
movabs
{rex2
pop
movabs
movabs
mov
fwait
jnp
pop
jno
rex.b
xchg
jae
sahf
mov
fidivl
sub
sbb
cltd
add
(bad)
stc
mov
lret
sbb
mov
ret
sub
xchg
andl
in
leave
or
movabs
out
pushf
or
std
rex.rx
in
add
xchg
call
rorb
mov
rex
imul
and
pop
lahf
xchg
iret
mov
push
adc
cmp
xchg
lret
cs
loop
movsl
add
cmp
roll
movabs
xor
lods
mov
sub
cmpsl
(bad)
add
mov
sahf
and
in
rex.x
cmp
movsl
stos
(bad)
mov
ret
rex.wrx
ret
sahf
jbe
pop
and
ret
push
sub
cmpsl
insb
mov
sub
pop
int3
pop
mov
mov
and
(bad)
shll
mov
movsl
mov
push
stos
jno
ja
jae
jrcxz
test
shl
sub
mov
(bad)
(bad)
js
scas
and
(bad)
xlat
cmp
movsb
cmp
sbb
int1
(bad)
sar
jno
xor
(bad)
fadd
cs
(bad)
fcmovb
mov
movabs
mov
xlat
sbb
cmpsl
mov
andl
sub
sbb
ret
jg
push
std
xor
jp
push
mov
ffreep
xchg
(bad)
xorl
(bad)
and
jb
rex.wb
rex.x
