mov
mov
pushf
mov
lea
clc
adc
or
inc
cli
pop
add
dec
and
test
sub
test
cltd
movsl
dec
(bad)
fisubrs
inc
add
sbb
clc
xchg
inc
lea
clc
xchg
inc
lea
clc
xchg
inc
lea
clc
adc
or
inc
cli
pop
add
dec
and
cmpsl
add
aas
pop
or
movsb
(bad)
push
enter
outsb
ret
add
rorb
mov
dec
sub
mov
pusha
adc
push
int
addb
mov
das
rcl
test
xor
cmpl
mov
fiadds
int3
orb
lret
adc
dec
ret
mov
lea
clc
xchg
inc
lea
clc
xchg
inc
lea
clc
xchg
inc
lea
clc
adc
pop
not
faddl
adc
aad
jns
add
int
aam
dec
lret
loopne
int3
pop
mov
mov
add
ds
add
mov
mov
sbb
ja
addb
gs
pandn
inc
add
popa
je
mov
dec
insl
aad
dec
gs
shll
xchg
jno
xchg
or
cmc
fldenv
sub
nop
add
mov
mov
sbb
ja
lret
gs
pandn
out
add
popa
je
mov
dec
insl
sbb
shll
xchg
jno
xchg
or
daa
shll
test
mov
mov
and
push
aam
repz
xorb
mov
nop
adc
rorb
popa
jo
aad
dec
mov
jg
loope
mov
scas
mov
sbb
or
rol
adc
dec
inc
insb
or
push
sbb
clc
xchg
inc
lea
clc
xchg
inc
lea
clc
adc
pop
not
faddl
jns
add
dec
lret
loopne
repnz
xorb
sbb
dec
xchg
mov
mov
test
push
aam
enter
jns
xchg
add
push
xchg
dec
stc
les
enter
jns
mov
mov
cmp
mov
dec
mov
and
mov
sbb
or
dec
sbb
adc
dec
gs
(bad)
punpcklbw
iret
rcrb
fstl
inc
push
dec
gs
(bad)
adc
iret
js
sbb
iret
aas
pop
repnz
ds
shlb
out
aad
or
inc
fstp
or
sbb
dec
insb
gs
dec
bound
ffreep
addb
aam
enter
jns
and
dec
gs
xchg
dec
lock
int
enter
dec
inc
dec
(bad)
cmp
insl
jns
dec
gs
shll
xchg
jno
xchg
or
push
and
aad
dec
mov
push
mov
orb
(bad)
mov
js
jo
sbb
dec
fnsave
mov
inc
pusha
mov
sbb
clc
xchg
inc
lea
clc
xchg
inc
lea
clc
mov
inc
inc
(bad)
or
dec
add
gs
pushf
xor
xchg
inc
lea
clc
xchg
inc
lea
clc
adc
push
int
addl
add
daa
sti
xchg
inc
lea
clc
xchg
inc
lea
clc
xchg
inc
lea
clc
mov
je
pop
push
shll
dec
mov
dec
gs
mov
inc
mov
add
ficoms
dec
fdivl
or
fwait
(bad)
pop
cmpsl
adc
dec
gs
repz
lock
gs
mov
xchg
inc
lea
clc
adc
dec
movsl
fldl
stos
(bad)
or
sbb
repnz
inc
cmp
adc
inc
insb
or
repnz
cli
dec
gs
or
dec
mov
mov
rolb
lret
mov
mov
orb
dec
inc
insb
xor
jb
in
sub
inc
lea
clc
xchg
inc
lea
clc
xchg
inc
lea
clc
mov
mov
gs
or
dec
jle
gs
dec
xor
xchg
inc
lea
clc
xchg
inc
lea
clc
and
aas
dec
inc
mov
jne
adc
loop
(bad)
orl
test
inc
cmp
clc
adc
add
inc
cli
pop
jo
scas
add
sti
xchg
inc
lea
clc
xchg
inc
lea
clc
xchg
inc
lea
clc
mov
popa
repz
inc
mov
add
and
orb
dec
in
gs
pushf
xor
xchg
inc
lea
clc
adc
push
int
addl
add
sti
xchg
inc
lea
clc
xchg
inc
lea
clc
xchg
inc
lea
clc
mov
je
pop
push
cmc
shll
jns
int
mov
mov
int
(bad)
mov
dec
inc
fs
js
insb
nop
or
repz
dec
sbb
fldenv
push
push
or
test
inc
mov
add
inc
lea
clc
xchg
inc
lea
clc
xchg
inc
lea
clc
adc
dec
movsl
fldl
pop
arpl
sbb
int
into
sbb
mov
xor
sbb
insb
or
inc
loop
aad
or
aad
insb
or
aad
or
mov
mov
cmpsl
dec
inc
cltd
insb
add
aad
movsb
xor
and
imul
leave
ss
inc
pandn
inc
dec
movsl
pop
dec
cmc
mov
inc
lret
fimuls
dec
(bad)
(bad)
mov
cwtl
test
pop
inc
scas
dec
nop
or
repz
loope
int
mov
js
push
or
cmp
xor
mov
(bad)
mov
aam
dec
gs
aas
dec
gs
dec
dec
(bad)
sbb
mov
fildl
fldl
inc
aas
pusha
nop
adc
jp
fs
dec
bound
dec
mov
jg
loopne
mov
dec
mov
add
pusha
aad
pusha
insl
push
hlt
dec
gs
rorl
xchg
jecxz
aad
ss
andb
adc
xor
mov
cmp
fiaddl
fisttps
inc
pop
pusha
dec
add
ss
add
ss
shrb
xchg
fwait
mov
dec
loopne
mov
std
inc
pandn
inc
cltd
insb
adc
aam
je
lea
repz
gs
shll
xchg
jne
push
add
lcall
mov
mov
xor
push
push
inc
movsl
dec
gs
mov
test
repz
rclb
stos
loopne
aad
or
dec
ret
dec
(bad)
jp
roll
inc
mov
inc
lea
clc
fs
orl
dec
lds
js
ss
sbb
or
ret
sbb
mov
sub
jo
nop
jbe
test
jbe
insb
or
push
push
or
cmp
shll
or
rcl
sbb
repz
mov
mov
dec
gs
cltd
insb
add
inc
lea
clc
xchg
inc
lea
clc
mov
xchg
(bad)
mov
pop
push
sbb
insb
sub
insb
cwtl
xchg
repz
mov
adc
dec
gs
outsl
cwtl
and
(bad)
gs
add
inc
lea
clc
sub
dec
mov
fimuls
aad
or
dec
mov
je
aas
dec
dec
mov
test
fcompl
fucomip
mov
gs
test
loope
jge
jne
and
dec
loop
mov
incb
clc
xchg
inc
lea
clc
xchg
inc
lea
clc
xchg
inc
lea
clc
xlat
push
push
(bad)
sbbl
sbb
aam
(bad)
gs
or
inc
fstp
(bad)
ret
cmpsl
or
insb
add
aad
dec
xchg
inc
lea
clc
xchg
shlb
rolb
lea
nop
dec
mov
sbb
inc
or
sbb
add
dec
dec
mov
add
cli
dec
ret
imul
bound
sbb
push
pop
into
sbb
test
(bad)
lea
and
(bad)
int3
and
(bad)
shlb
xchg
repz
enter
mov
push
aad
xor
cmpsl
or
bound
and
mov
rol
sub
stos
jge
in
add
jmp
inc
insb
sbb
push
xchg
lds
jns
xchg
repz
add
sub
insb
add
(bad)
dec
mov
dec
aad
dec
fbstp
add
jmp
inc
insb
pop
sub
xchg
lds
jns
xchg
rep
push
fdivrl
jmp
inc
insb
or
rorl
popa
jo
aad
inc
pop
bound
