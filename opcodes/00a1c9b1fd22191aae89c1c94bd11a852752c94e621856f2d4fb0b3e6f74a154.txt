and
cmpsl
(bad)
repnz
(bad)
xor
mov
clc
and
add
dec
stos
adc
push
adc
push
clc
pop
clc
xor
jg
cli
mov
sub
jmp
jne
cli
and
sbb
cmp
add
hlt
sbb
mov
ficomps
sbb
and
adc
sbb
adc
xchg
(bad)
das
mov
mov
cld
mov
push
fiadds
enter
les
inc
inc
ss
aas
dec
xor
movsl
test
sbb
adc
add
pushf
adc
adc
add
cmp
gs
fsubl
mov
test
clc
and
mov
add
mov
xor
jb
or
lret
movsb
inc
insb
addb
rclb
lock
mov
push
push
xor
jge
ret
int
xchg
or
sbb
pop
cltd
push
push
shl
xor
ret
inc
add
jne
add
je
imul
test
clc
push
cmp
out
jg
ds
ret
xor
add
and
mov
sbbl
scas
jp
adc
(bad)
cwtl
jl
(bad)
mov
les
lcall
cld
push
xor
inc
adc
lcall
pusha
or
popa
and
(bad)
pusha
adc
ficoml
ja
ja
imul
adc
pop
adc
xor
mov
add
mov
xor
js
or
cld
mov
iret
add
js
insl
jbe
adc
pop
popa
aam
js
mov
or
xorb
mov
loopne
add
enter
cmp
cmp
xor
lret
jl
push
leave
push
ret
test
adc
add
cmpsb
je
cmp
lahf
adcb
or
scas
je
cwtl
std
xor
adc
mov
repnz
pop
(bad)
aam
js
data16
mov
push
xor
jns
add
sti
jl
divb
outsl
adc
cmp
push
js
jmp
add
jno
sbb
sbb
je
(bad)
pusha
and
ja
or
dec
std
inc
addb
(bad)
scas
popa
(bad)
clc
xlat
cmp
lahf
pusha
add
sahf
dec
(bad)
in
lret
jle
je
xor
mov
cld
pop
popa
aam
js
or
or
cmpb
inc
mov
mov
xor
adc
ss
cmp
addb
divl
or
dec
std
popa
jo
nop
faddl
mov
fnstenv
xor
bound
xor
mov
fidivrs
je
cwtl
dec
adc
dec
pop
enter
jl
adc
adcb
fdivrs
pusha
cmp
push
push
xchg
ret
pushf
fcmovu
dec
add
testl
int3
lret
jl
add
push
cld
cmovns
cld
iret
push
adc
adc
add
dec
xor
mov
cld
mov
adc
cli
jle
inc
cmp
jmp
push
ds
arpl
iret
push
jge
clc
dec
enter
cld
cli
xor
pop
aas
nop
and
andps
push
popa
xchg
into
cmp
xor
decl
xchg
imul
ds
xchg
test
decl
bnd
xor
mov
sub
lock
jg
cmp
bound
xor
into
cmp
ds
sbb
adc
cmc
fisubrl
push
sub
and
inc
jne
xchg
fimull
bound
xor
pop
cli
push
in
scas
xor
lret
pop
ss
cmpb
xor
xorb
cmp
ficoms
sbb
pop
std
jp
and
push
xor
ret
pop
adc
std
mov
hlt
pop
nop
stc
aaa
out
fidivrl
shl
adc
xor
ds
int3
jp
cmc
jl
cs
arpl
iret
loope
inc
sti
jg
out
pusha
clc
sti
js
cld
cli
xor
pop
inc
cmpb
xor
cmp
(bad)
xor
leave
sbb
into
and
xchg
(bad)
dec
adc
dec
mov
scas
cmp
decl
(bad)
dec
mov
adc
dec
pop
cmp
arpl
adc
stc
jg
jl
xor
and
scas
push
xor
adc
pop
rolb
mov
(bad)
cmp
push
les
pop
adc
stos
inc
xchg
jge
leave
clc
add
int3
sbb
jp
adcl
add
sbb
adc
cld
xor
push
jp
sub
je
mov
fmull
push
cmp
xor
outsl
push
popf
lds
inc
xchg
pop
adc
pop
dec
aam
xor
mov
cmc
xchg
mov
or
or
pop
stos
xchg
ret
xchg
push
xchg
nop
and
pop
add
dec
cwtl
add
popa
sbb
fiaddl
int3
xor
fimuls
sbb
je
mov
adc
cs
fsubrl
add
stos
adc
add
out
cld
fcmove
sarb
jb
mov
cld
jle
je
xor
movb
clc
cmp
cmp
jge
adc
mov
paddsb
add
xorb
test
aaa
inc
pop
dec
xchg
xor
adc
xchg
mov
or
sbb
mov
fimuls
sbb
(bad)
fdivrp
js
aaa
fisubrl
je
fmul
jge
imul
or
testl
or
sub
pop
jns
js
add
std
adc
pop
outsb
mov
sub
adc
(bad)
cmp
adc
cld
(bad)
scas
cmp
cmp
mov
xor
add
pusha
or
das
repnz
lret
jge
xor
lret
lods
lcall
mov
addl
cmp
adc
xor
pop
mov
sbb
pop
inc
push
subb
clc
jg
dec
pop
cmc
cld
cli
mov
sub
adc
cld
fimull
popa
pop
mov
scas
cmp
sub
enter
mov
hlt
ret
jl
sub
enter
fmull
imul
test
js
jg
jl
xor
xor
je
test
xor
test
ret
test
je
xlat
add
in
lcall
cld
pop
je
cmp
cld
adc
leave
pusha
popa
sbb
incb
das
dec
dec
push
std
leave
adc
cld
out
rol
inc
mov
fnsave
fsubrs
push
lahf
das
sbb
test
push
aam
stos
lcall
cs
jae
das
es
cli
pop
pop
stc
jnp
scas
sti
add
in
mov
rorb
xchg
pop
or
sti
jl
test
adc
cmp
jl
(bad)
inc
ret
ds
pop
call
push
int3
pop
int1
js
stc
cli
repz
cmp
lahf
std
fistpll
xor
fxch
out
and
sub
push
pop
xchg
ljmp
cmp
mov
js
in
push
inc
mov
jno
mov
pop
dec
adc
leave
mov
out
data16
lea
lock
mov
ror
cld
jno
mov
clc
fwait
sbbb
xchg
aaa
out
adc
xor
loope
and
and
(bad)
fmull
xor
add
push
stc
fimuls
nop
push
into
(bad)
pop
mov
cmp
dec
pop
push
adc
test
inc
scas
dec
call
dec
testl
dec
xor
adc
add
add
or
leave
(bad)
and
(bad)
cwtl
jle
bound
fcoml
jns
lock
daa
jp
popf
mov
mov
xchg
int3
outsl
mov
dec
cmpsb
mov
dec
(bad)
repz
inc
jg
clc
(bad)
repz
add
rolb
add
dec
xor
pop
rcrb
jge
push
mov
or
rolb
push
fmuls
jmp
je
push
fstpl
mov
(bad)
shl
adc
push
sbb
(bad)
notl
ret
xchg
insl
sbb
mov
divb
jmp
mov
(bad)
incl
cmp
push
inc
ret
cmp
aas
xchg
sbb
in
outsl
out
mov
ficompl
test
jae
add
jno
inc
and
pop
packssdw
in
loopne
xchg
cwtl
aaa
mov
xorb
mov
mulb
fstpt
cmpsb
ljmp
or
pop
in
packssdw
fmuls
fldt
mov
shrb
inc
sub
pop
inc
ss
inc
pop
sbb
xor
and
cwtl
sbb
repz
flds
adc
pop
addb
data16
divb
xchg
mov
mov
mov
jl
inc
push
mov
xor
ret
testb
fstl
inc
jecxz
subb
push
xchg
mov
das
sti
sahf
in
xchg
mov
