inc
dec
scas
jns
push
mov
popf
call
daa
and
lods
mov
test
xchg
loopne
dec
int
and
(bad)
adc
xlat
cld
fidivrl
sbb
shll
in
cli
mov
adc
in
mov
dec
imul
cmp
ljmp
les
jl
sarb
adc
jo
jo
dec
inc
push
mov
add
call
out
sahf
xchg
js
mov
and
daa
std
add
dec
outsb
jo
leave
or
divb
mov
mov
insb
fwait
xchg
mov
dec
pop
jecxz
add
xor
add
(bad)
lahf
inc
mov
sbb
cmp
movsl
fsubl
lret
push
push
xchg
sbb
call
pop
sub
inc
fwait
int3
rcll
pop
xchg
cs
(bad)
ficoml
cmpsl
into
add
mov
mov
mov
orb
int1
arpl
or
dec
das
push
add
dec
add
jb
enter
inc
add
mov
pop
mov
ret
daa
ljmp
std
dec
sar
test
push
dec
and
(bad)
in
subb
mov
(bad)
fwait
gs
gs
pop
push
dec
idivb
add
jb
jae
or
xchg
loop
add
cltd
cmp
fs
mov
je
or
test
lret
in
aaa
mov
data16
and
je
scas
xchg
sbb
cltd
data16
cmp
test
leave
cli
sar
or
sub
out
cmp
adc
repnz
cmp
test
fistps
bt
neg
jmp
shr
push
call
push
jne
aaa
aad
ret
or
bound
sbb
insl
stos
lods
push
bound
fcom
in
cmp
sar
call
aas
sub
pop
shlb
test
(bad)
aad
dec
(bad)
push
sbb
push
fs
push
push
fistps
mov
xor
add
ja
jbe
dec
jne
push
jb
jo
jb
dec
gs
fs
call
daa
sbb
push
xchg
stc
push
adc
mov
push
sbb
cmpsb
jo
push
adc
inc
push
xchg
dec
adc
dec
jb
std
xor
pop
dec
pxor
jo
fsubrs
add
jle
ljmp
push
jmp
stos
cmpl
push
sti
iret
adc
adc
jb
adc
inc
pop
jle
cli
xchg
jmp
dec
jne
and
sub
imul
mov
inc
or
roll
add
mov
xor
sub
xor
aaa
pop
add
add
in
loopne
fwait
stos
inc
adc
test
rcrb
nop
sub
jo
scas
pop
sbb
int3
mov
inc
jo
scas
xchg
(bad)
mov
mov
les
rcrb
pushf
fsubr
inc
pop
je
push
dec
adc
dec
sbb
jns
push
pop
mov
sub
sub
cmovle
in
addr16
subb
outsl
aaa
cmp
mov
xor
iret
mov
cwtl
movsb
jle
push
stos
out
xchg
cmc
push
lods
stc
out
cwtl
xor
cmp
ds
mov
add
inc
jno
das
pop
mov
into
xchg
sub
inc
mov
or
mov
repnz
cmpsl
stos
or
les
fwait
cwtl
mov
mov
dec
pushf
mov
xchg
stos
mov
mov
inc
shl
or
lret
mov
sahf
inc
jl
dec
out
scas
in
filds
roll
mov
jecxz
les
mov
cmp
and
mov
sub
mov
in
add
test
xchg
fsts
out
mov
(bad)
xchg
out
call
iret
rorl
dec
and
stc
or
sub
popa
lock
(bad)
sbb
xchg
lods
and
mov
inc
inc
scas
jl
mov
mov
stc
test
cli
fnstenv
aam
int
push
sub
hlt
int3
call
push
pop
sub
rolb
fistps
jecxz
xchg
mov
scas
xlat
out
bound
cmp
cmp
movsl
out
pop
add
out
add
rcll
mov
jl
cli
lahf
rcll
jmp
inc
lock
aam
or
pop
sbb
xchg
stos
leave
pop
lods
inc
out
fisttpl
inc
int3
lea
out
aas
pop
imul
leave
adc
xor
push
pop
and
(bad)
xchg
nop
jp
xor
jo
subb
jecxz
adc
and
sbb
sub
into
adc
daa
adc
stos
negb
ret
loop
cmp
out
fcmovne
repz
lret
sti
lret
out
fndisi(8087
fisttps
xor
iret
cmp
out
xlat
xor
fistps
add
or
jg
sbb
test
dec
sub
push
adc
pop
xchg
mov
cli
iret
aas
test
sbb
cli
inc
pop
xor
sbb
inc
or
gs
push
std
aam
test
ljmp
std
es
jg
imul
and
rolb
dec
mov
hlt
in
push
xchg
adc
mov
movsb
jecxz
test
popa
loopne
sbb
test
scas
orl
xor
bound
mov
xchg
sub
or
mov
inc
dec
jp
lods
push
ja
pushf
mov
pop
dec
jle
popf
inc
push
fistps
xchg
mov
adc
sub
mov
adc
pushf
je
repnz
push
fstps
pop
mov
nop
adc
sub
dec
mov
shl
ds
int
sbb
add
scas
push
xchg
cmp
sbb
mov
ret
xchg
repz
cmp
mov
pusha
jmp
mov
xor
mov
cli
mov
test
mov
test
fisttpll
sub
jbe
push
sub
sub
cmp
push
rcrl
lods
(bad)
xchg
mov
add
arpl
dec
mov
(bad)
insl
scas
mov
outsl
pop
push
jbe
xorb
movsl
mov
lods
cltd
xchg
movsl
dec
ja
imul
push
fistps
inc
dec
sub
into
test
shl
out
and
cmp
xchg
fnstcw
(bad)
insl
stos
lea
push
jl
dec
mov
dec
xchg
lock
push
cltd
in
cmp
dec
mov
popa
mov
ljmp
jg
pop
ja
mov
or
cmc
dec
or
outsb
das
pusha
sub
sbb
std
add
rcll
push
notb
shr
and
lea
std
cmp
jbe
fimull
inc
or
pusha
fucomi
or
repnz
je
push
fidivrl
mov
mov
imul
or
aaa
push
das
hlt
leave
sbb
aas
ret
stc
xlat
cld
or
cli
sarb
adc
das
jae
loop
jno
inc
mov
push
xor
mov
in
xchg
jb
loop
mov
cmp
fcomps
jmp
jge
mov
or
xor
and
xor
fwait
adc
int
in
sbb
fnstenv
test
adc
movsl
pop
cmp
(bad)
pop
adc
leave
mov
xor
lds
cltd
xor
cmpsl
das
idivl
inc
loop
cmpl
fstpl
imul
cmp
cmp
cmp
sahf
dec
mov
cmp
iret
pop
cmp
sbbl
sti
in
cmc
sbb
push
jl
xor
rorl
int3
sti
(bad)
jae
fadd
ja
lds
jne
loope
push
aas
xor
loopne
loop
cltd
xor
lea
xchg
jne
out
push
add
sarl
cmpl
(bad)
fpatan
xor
push
inc
sbb
iret
pushf
xor
hlt
lret
jne
inc
add
add
mov
aam
mov
lods
aas
mov
jb
xor
jb
iret
lods
cmp
sub
push
lret
jae,pn
lahf
lods
out
mov
fidivrl
xlat
jno
(bad)
nop
ret
rcrl
sbb
(bad)
lock
iret
fcmovb
xor
movl
cmpsb
out
clc
add
lret
adc
int
xor
jg
sbb
mov
fs
pop
add
add
jp
jge
xor
inc
shl
sub
mov
sbb
xor
mov
lods
mulb
mov
out
push
add
inc
and
lret
lods
sbb
fisttps
aad
fnstsw
or
pop
add
lock
jb
rol
aaa
inc
xor
xor
int1
inc
adc
and
cmc
fstp
cmpb
(bad)
