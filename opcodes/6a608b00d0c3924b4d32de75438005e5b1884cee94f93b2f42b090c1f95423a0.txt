jo
add
add
add
dec
add
add
add
add
add
add
add
push
scas
mov
xchg
test
xor
jg
shlb
ret
(bad)
adc
stc
imul
rorl
pop
cmpsl
fsubl
xchg
push
lods
fucom
mov
jp
xchg
and
vsubs{bad}
and
push
push
fcmovnbe
test
xchg
les
stos
inc
and
insb
xor
mov
leave
pushf
orl
(bad)
aad
push
jmp
inc
sub
xor
push
lods
push
lret
xlat
lea
addr16
or
je
mov
test
dec
pop
adc
imul
or
or
or
mov
push
push
out
push
cmc
jae
cmc
and
push
sbb
xchg
popf
pop
push
subb
jnp
mov
mov
jns
pusha
bound
sub
xor
aad
mov
shlb
enter
pop
int
cmpsb
sarb
jne
fildl
movsl
xor
inc
or
sbb
pop
fisttpl
and
pop
push
or
pop
push
mov
xor
rcll
mov
xchg
aad
ja
inc
fadds
loope
dec
test
ljmp
lret
push
xchg
dec
stos
add
test
fdivs
xchg
popf
cmp
xlat
xchg
inc
addr16
nop
mov
push
movsl
lock
sub
mov
loop
fidivs
and
mov
add
adc
cltd
es
jb
cmc
out
repnz
repz
ds
lret
push
jns
mov
add
cs
lcall
dec
in
add
mov
push
movsb
pop
and
push
ljmp
inc
jmp
mov
sub
push
or
push
pop
and
(bad)
(bad)
out
pop
ds
inc
(bad)
jmp
data16
(bad)
popf
mov
in
cmp
dec
mov
add
dec
and
enter
add
(bad)
lods
aaa
sbb
rcrb
inc
bound
jae
adc
mov
stos
add
(bad)
push
xor
cmp
in
int
cwtl
jp
xor
scas
int
out
imul
lahf
sbb
push
lods
xor
inc
mov
sbb
xchg
into
scas
xchg
push
bound
pop
inc
push
cmp
xchg
nop
mov
jl
mov
sbb
fs
and
cmp
push
iret
cld
sub
mov
push
lock
mov
pusha
or
sti
repz
jl
or
mov
xchg
out
xchg
jmp
movl
nop
inc
push
xchg
in
insb
dec
test
pop
sahf
pop
sub
lds
xor
out
push
scas
xlat
push
ja
xor
fimull
inc
push
div
int1
cmp
fisubrs
xor
stc
jnp
imulb
pop
jo
sti
pop
push
sbb
loop
adcl
mov
cld
mov
dec
push
dec
scas
aas
dec
and
ficoml
xor
mov
(bad)
push
lods
xchg
xchg
outsl
rclb
ret
not
es
xchg
jae
sub
js
and
pop
lock
ss
imul
dec
pop
or
sbb
das
cmpl
dec
push
loope
mov
mov
gs
sub
test
stc
jns
mov
mov
lcall
popa
dec
cli
jle
adc
xor
mov
xor
inc
xchg
mov
cmp
adc
(bad)
jne
or
mov
lcall
ret
test
in
cld
xor
dec
dec
(bad)
mov
mov
xor
mov
pop
das
pop
aam
push
add
sub
movsb
popf
movsb
or
movsl
clc
test
sbb
fcomps
popf
jne
inc
adc
sahf
mov
fcomi
les
scas
fs
mov
sbb
mov
inc
jmp
and
xchg
xchg
pop
dec
sub
push
xchg
or
mull
dec
inc
sub
mov
xor
bound
out
daa
nop
sub
or
cmpl
dec
add
xorb
jmp
enter
adc
mov
mov
dec
xchg
leave
std
xor
xchg
mov
pcmpeqb
and
add
aad
and
mov
in
aad
jl
fbld
mull
mov
push
and
add
lds
mov
push
les
mov
push
jl,pt
lock
mov
je
out
inc
(bad)
popf
call
test
fistps
ja
lahf
inc
sti
or
rol
in
out
jbe
mov
adc
rclb
xchg
mov
outsb
cli
cli
sbb
adc
add
mov
xor
(bad)
inc
addr16
daa
addr16
rclb
lea
or
mov
pop
adc
push
(bad)
pop
enter
push
loope
in
mov
ja
cmc
dec
sub
(bad)
(bad)
xor
jo
mov
and
mov
les
xorl
test
int1
mov
in
gs
outsb
out
rorl
es
iret
in
sub
mov
and
xchg
out
mov
ja
mov
leave
popa
pop
or
out
jp
xor
inc
loope
subl
adc
mov
mov
data16
pop
xchg
sbb
inc
out
rcr
aad
jmp
sbb
scas
arpl
mov
xchg
outsb
mov
mov
test
pushf
push
lcall
idivb
std
cltd
and
scas
shll
clc
ss
les
pop
sub
jne
pusha
bound
in
mov
stc
addr16
in
shll
pushf
or
mov
aaa
pop
add
pop
pop
cmp
shlb
rcll
(bad)
or
shlb
cwtl
xlat
sub
leave
or
outsl
xor
hlt
push
test
sbb
adc
pop
cli
xor
mov
dec
ficoms
jns
xchg
pop
flds
xlat
inc
jmp
inc
pushfw
sub
jl
incb
add
in
jmp
pusha
dec
addr16
aas
testl
and
gs
dec
jp
lock
mov
xchg
test
call
(bad)
jmp
or
mov
pop
jbe
imul
mov
mov
pushf
mov
push
pop
xor
and
stos
push
or
rol
mov
cs
jb
int1
loop
cmp
push
nop
outsb
dec
jne
add
pop
push
dec
cmp
sub
mov
cmp
jae
jae
cmpsl
jecxz
inc
subb
and
dec
ljmp
xchg
jge
cmc
push
shlb
and
dec
in
testl
add
test
mov
push
fldcw
or
inc
shl
mov
loope
mov
notl
push
imul
pushf
xlat
bound
mov
xchg
mov
pop
lods
adc
es
subl
mov
in
mov
rcl
int
pop
int1
and
leave
dec
rcrb
lods
(bad)
pop
cmpsl
adc
pop
pop
xor
sbb
ss
cmp
dec
mov
test
push
daa
(bad)
pop
push
mov
loopne
sub
dec
mov
pusha
idivb
call
inc
repnz
call
add
subl
rorl
mov
inc
jmp
int3
hlt
gs
cmpsb
adc
xor
add
adc
sub
xchg
dec
shlb
mov
inc
and
insl
int1
push
insl
inc
addb
jnp
jl
ss
es
flds
jnp
cltd
pop
sub
push
sbb
in
test
lcall
xchg
(bad)
mov
sub
scas
les
in
les
in
jge
pop
jmp
pop
popa
cmp
mov
subb
ja
sub
imul
in
adc
test
bnd
lds
push
es
and
xor
data16
outsl
and
lds
rolb
push
lock
popf
scas
and
test
pop
les
shll
xor
ds
dec
push
mov
or
test
jns
outsb
das
push
fmuls
jo
aas
orl
fdivs
rcl
mov
insb
es
fcom
push
arpl
and
xor
mov
jmp
jp
adc
rcrl
add
push
sahf
movsb
mov
rcr
push
popa
push
sti
xor
cmp
jle
fisubrl
imul
xchg
decb
fldt
aas
and
(bad)
in
pop
(bad)
fcmove
xchg
gs
repz
fstl
aas
sub
in
and
adc
cmp
mov
andl
(bad)
std
xchg
cmp
sub
and
push
mov
dec
xor
mov
fnstenv
outsl
ja
aad
sarl
into
dec
add
push
inc
std
(bad)
imul
