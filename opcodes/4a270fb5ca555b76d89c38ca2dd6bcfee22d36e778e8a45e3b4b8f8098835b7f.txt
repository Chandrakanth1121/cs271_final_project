nop
jle
cwtl
cs
ret
fcmovbe
aaa
sub
stos
(bad)
movb
push
cltd
xchg
in
jge
add
jbe
mov
imul
outsb
pop
daa
add
test
add
pop
daa
inc
ja
daa
mov
xor
xlat
pop
out
or
inc
push
and
sub
popf
mov
cmc
and
dec
xor
cmova
test
xchg
cmpsb
pop
pop
pop
dec
or
into
cmp
scas
aam
jo
jnp
outsl
insb
dec
addl
or
negl
cmp
push
push
adc
xchg
je
movsb
jle
pop
jne
test
daa
xchg
sub
(bad)
gs
mov
lods
inc
inc
push
cmp
lds
(bad)
xor
pcmpgtw
rcrl
aas
dec
hlt
rorl
shlb
mov
xlat
xlat
add
sub
push
sbb
mov
mov
inc
cmpsl
inc
pushf
popa
not
pop
(bad)
lret
shl
mulps
mov
(bad)
xor
push
dec
xchg
in
inc
aaa
scas
adc
rcrb
pop
test
push
ja
inc
out
clc
jge
add
cmp
xorb
aam
incb
mov
inc
mov
sub
dec
lock
xchg
and
sbb
lcall
jne
mov
mov
mov
shl
push
sbb
and
aam
dec
into
jmp
test
inc
les
aam
js
mov
push
push
mov
ja
xor
loop
rcrb
cmpxchg
aas
call
sub
add
pusha
stos
mov
outsl
and
test
mov
testl
es
aam
out
cmp
xorl
and
xor
out
pop
rcrl
and
or
inc
dec
jl
jmp
pop
shlb
imull
addr16
and
lahf
dec
clc
(bad)
and
cmpsl
cmpsl
mov
shrb
pushf
fdivrl
and
cs
inc
add
mov
or
mov
xchg
jb
jae
xor
sub
add
outsb
sbb
cltd
rclb
ret
add
pop
clc
fcompl
push
sbbb
(bad)
mov
add
sub
and
xor
cmp
shrb
mov
cmpsb
sub
data16
outsl
sub
fcoml
iret
in
push
ret
xor
or
je
rcll
fnstenv
cltd
fidivrs
sbb
addb
add
out
test
jo
sub
sbb
or
bsf
aas
leave
xor
and
scas
xchg
lock
xchg
es
mov
mov
sbb
xchg
mov
out
lcall
sbbl
idiv
inc
dec
fldt
push
add
je
ljmp
or
repnz
mov
mov
or
(bad)
push
pop
lock
test
cmc
sbb
xchg
insb
and
unpckhps
(bad)
lods
sub
jecxz
(bad)
in
mov
fwait
sub
imul
cmp
cmp
popa
sbb
and
test
adc
aas
clc
cmp
sub
jne,pt
es
push
dec
and
(bad)
xchg
push
or
pop
push
cmp
pop
pushf
jle
ja
dec
adc
jno
or
mov
xchg
cmpsl
dec
flds
jbe
jbe
add
sub
fsubrl
jecxz
lahf
jl
pop
xlat
mov
pop
pop
es
aas
mov
test
arpl
adc
and
loop
lock
aas
push
cltd
call
inc
pop
cmp
add
les
aam
add
insl
fnsave
jg
xor
inc
pop
push
jb
pop
mov
sti
popf
jbe
push
int3
push
pushf
pop
cmp
dec
mov
loopne
xor
push
insb
rcr
cmp
cs
jl
sbb
mov
lret
ret
(bad)
(bad)
cltd
jb
and
pop
mov
loopne
jno
cs
js
data16
pop
inc
fnstenv
rol
lahf
int3
mov
pop
inc
cmpsl
neg
das
inc
pop
ss
sbb
test
cli
xor
mov
dec
(bad)
insl
inc
incb
mov
cmpsl
xor
pop
or
dec
push
pop
(bad)
rol
pusha
(bad)
pop
es
in
and
sub
cmp
jge
es
sbb
or
cmp
mov
test
mov
or
mov
fwait
sbb
inc
add
dec
jg
sbb
maxps
mov
xorl
pop
push
repz
xor
int1
sarl
inc
sti
add
cmp
add
mov
dec
sbb
mov
fwait
sub
mov
cmp
aam
dec
out
jae
xchg
aam
add
inc
jo
movsb
jge
stos
and
jno
mov
pop
mov
sub
mov
jbe
in
cmpsl
inc
cmp
dec
xor
jg
jnp
stos
insl
jp
add
daa
rcl
pusha
adc
rorb
sysenter
cmp
popa
dec
lret
shlb
cmp
int1
fs
pop
shrl
pop
pop
push
loopne
or
int3
push
mov
or
pop
push
inc
imul
lock
adc
push
push
inc
mov
int3
mov
dec
and
cmp
mov
sbb
inc
jns
fnstcw
sbb
mov
push
pop
sbb
rorl
adc
pop
stos
adc
les
push
adc
add
jmp
rolb
add
ror
aaa
and
and
insl
std
cmp
cmp
xchg
(bad)
fs
clc
xor
and
inc
repz
push
popf
cmp
dec
aaa
fs
(bad)
lds
lcall
popa
outsl
push
out
repz
push
xchg
jecxz
imul
adcl
jnp
pop
jp
jnp
enter
and
inc
out
sbb
lea
ljmp
adc
xchg
sbb
outsb
sub
xchg
testl
imul
push
shll
gs
clc
sbb
mov
shrb
cmp
in
sbb
jl
mov
dec
sti
push
test
lds
pop
int1
inc
cmp
push
stos
(bad)
and
jno
jno
insb
sub
out
push
rcrl
sub
sti
mov
or
add
cltd
ds
dec
cld
push
push
push
clc
fidivs
sti
cli
addr16
loopne
int1
ja
mov
rorl
xchg
shlb
push
sbb
daa
je
dec
jmp
pop
ret
lret
or
xlat
jecxz
insb
dec
pop
enter
jnp
popf
jmp
push
cmp
dec
std
push
mov
push
sub
inc
arpl
push
jmp
jle
inc
and
dec
imul
push
inc
dec
cmp
dec
ss
mov
dec
mov
call
adc
cwtl
scas
lret
dec
fisttpll
pop
xchg
add
data16
fistpl
mov
aad
imul
xor
fmull
lea
cmc
ret
mov
and
xor
out
outsl
lods
dec
std
mov
mov
sbb
sbb
jg
(bad)
jns
adc
inc
xor
cltd
arpl
mov
ds
ja
and
xchg
cmpb
mov
testl
test
std
mov
dec
add
int3
mov
xchg
dec
inc
xchg
inc
push
aas
je
xor
lods
sub
push
popa
sbb
mull
xchg
bound
andb
mov
pop
stos
and
mov
pop
orl
daa
dec
mov
shrb
push
mov
adc
std
jns
mov
pusha
loop
into
bound
mov
repnz
test
enter
push
xor
dec
cmp
es
int3
fimull
inc
fbld
push
cwtl
sti
mov
bound
cmp
hlt
rorl
loop
inc
int1
pushf
push
pop
std
xchg
cmp
vminsd
fistpl
adc
pop
or
popa
addr16
dec
adc
in
ljmp
or
push
pop
mov
out
std
cmp
inc
sub
aaa
inc
adc
xor
jg
jp
mov
mov
and
lods
push
cmc
ss
sub
adc
out
push
shrb
push
fistps
(bad)
pusha
es
xor
xor
sub
inc
ds
(bad)
push
adc
pop
jne
fs
enter
addb
or
imul
sti
mov
insb
js
dec
push
xor
clc
sub
mov
push
jg
push
mov
push
inc
and
pop
in
fdiv
and
cmp
pop
xchg
andb
xor
add
inc
add
cmp
push
ss
push
test
xlat
dec
(bad)
