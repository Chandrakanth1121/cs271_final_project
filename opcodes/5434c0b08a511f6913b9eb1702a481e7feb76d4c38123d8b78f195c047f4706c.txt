xor
xor
add
pop
and
outsl
imul
jo
imul
mov
add
(bad)
mov
cs
sub
mov
xor
fdivrs
leave
movl
sbb
int3
out
cmpl
movslq
add
(bad)
(bad)
jns
push
rex.rb
push
(bad)
mov
mov
test
je
mov
jg
call
mov
xor
jmp
int
xchg
ret
(bad)
in
call
jge
sbbl
je
xor
xor
sub
nop
mov
mov
pop
movzwl
(bad)
cli
or
add
addl
(bad)
jbe
nop
clc
sbb
test
setne
jmp
adc
shr
jns
insl
mov
(bad)
mov
rex.r
rex
rex.wrx
lock
mov
jns
xchg
ja
(bad)
(bad)
cmp
(bad)
outsb
push
xchg
lea
outsb
lock
add
mov
clc
sub
rex.w
rex.wr
fwait
mov
call
sbb
mov
cmovno
push
push
stos
and
jnp
or
sub
adc
adc
jo
jmp
outsl
cmp
je
add
(bad)
mov
lods
clc
lock
rex.w
rex.w
test
cmp
(bad)
cmp
rex.wrx
adc
out
clc
imul
(bad)
jg
fcoml
(bad)
test
(bad)
add
fdiv
ret
or
es
call
enter
xorl
add
std
sub
call
shl
mov
mov
insl
enter
sbb
shl
cmp
call
and
(bad)
out
jle
test
jle
or
fisttpl
or
call
fstpl
jle
mov
call
lock
sbb
sbb
rcll
(bad)
clc
fbstp
(bad)
out
(bad)
clc
std
loope
movl
cmpsb
call
in
mov
loopne
int3
add
mov
mov
(bad)
rex.wxb
cs
scas
sub
(bad)
mov
sbb
sarl
shlb
and
pop
pop
pop
sub
lock
fildll
test
pop
out
(bad)
or
mov
(bad)
fldz
sar
push
or
out
jns
(bad)
jg
jbe
mov
rex
fwait
rolb
outsl
mov
sti
mov
test
outsl
push
imul
cmpsb
leave
mov
fbld
cmp
(bad)
(bad)
sub
xchg
mov
jmp
sub
jg
in
add
xchg
lret
add
movsl
add
sbb
rex.w
sbb
leave
cld
cs
add
or
(bad)
(bad)
cli
(bad)
outsl
int
cmp
push
and
sub
out
(bad)
mov
clc
mov
rcl
ds
mov
mov
call
add
mov
pop
hlt
cmp
mov
rex.rb
(bad)
(bad)
fisubrs
rex
and
repnz
rcll
scas
xor
je
jb
sub
jrcxz
or
add
jrcxz
or
push
loopne
roll
lcall
add
add
rex.w
data16
lock
push
(bad)
ja
pop
sarl
jl
nop
rex.wx
pop
ret
gs
ds
push
pop
out
(bad)
mov
xor
imul
push
rex.wrxb
or
cwtl
sub
sbb
add
jg
lods
and
movsxd
pop
ffree
ret
(bad)
(bad)
adc
xorl
cmp
test
add
xchg
mov
pop
or
mov
pop
ret
int3
call
fsubrs
jle
(bad)
loopne
call
(bad)
test
ja
pop
xchg
xor
test
add
adc
sahf
lahf
cmpsb
jp
(bad)
xchg
lock
leave
add
pop
adc
out
or
in
test
mov
(bad)
sub
negb
rorb
mov
cmp
xor
add
(bad)
cmp
fldl
rex.wrb
ds
in
call
divl
or
imul
mov
(bad)
jns
mov
loopne
(bad)
out
xor
sbb
push
jbe
int
movsxd
mov
pop
div
(bad)
and
shlb
(bad)
rex.wxb
negb
xchg
(bad)
nop
sub
jrcxz
mov
mov
or
mov
scas
lods
cmp
mov
lea
cmpsl
cmp
sahf
jge
testl
scas
stos
pop
jns
jrcxz
fnstenv
fcoml
push
jge
rex.w
es
xchg
xchg
fdivrl
lea
loopne
out
fstl
sub
xor
and
lret
movabs
addr32
sbb
test
rex.wx
repz
sahf
(bad)
jnp
lock
sbb
rex.wrx
test
je
iret
mov
(bad)
adc
(bad)
xlat
rex.rx
mov
mov
{rex2
mov
fisubrl
sbb
sub
int1
mov
cli
xor
mov
lods
es
loope
(bad)
fcmovb
movsxd
(bad)
rex.wr
in
loop
outsb
lea
scas
call
sbb
sub
cmp
test
and
repnz
{rex2
ds
fidivrl
cmp
push
jmp
scas
cmp
lahf
test
add
push
sbb
ja
(bad)
clc
out
(bad)
(bad)
cmp
pop
insl
mov
sub
fidivs
mov
ds
rex.wrb
test
push
jrcxz
add
cmp
lods
fmull
test
stos
mov
in
je
add
or
je
movsl
add
or
cmp
xorl
sti
add
mov
add
loope
add
imul
cmp
mov
ret
(bad)
mov
ret
and
mov
pop
leave
ds
push
and
ret
fnsave
or
(bad)
rex
mov
mov
add
rex.wr
rex.w
(bad)
in
cmp
repz
rcll
jle
and
insb
mov
jnp
(bad)
(bad)
sub
mov
shl
fwait
(bad)
push
pop
pop
or
negb
sub
xchg
xchg
js
push
in
in
sahf
pushf
cmp
push
sahf
jge
mov
pop
pop
mov
jb
fisttps
mov
in
cs
mov
divl
lahf
(bad)
rex.rx
ds
fists
adc
cmp
cld
jmp
lea
jmp
xchg
sahf
mov
(bad)
sub
in
push
cmp
jns
and
movsb
jb
fscale
mov
ds
lahf
push
test
mov
(bad)
es
int
xor
(bad)
sub
pop
xchg
mov
call
rex.rxb
add
jo
pop
(bad)
add
lret
xchg
cmp
add
es
movsb
(bad)
lods
ss
call
add
fisubrs
cmpsl
(bad)
pushf
pop
rex.x
pushf
ja
pop
xor
pop
nop
mov
(bad)
or
sub
scas
(bad)
jns
sbbl
add
xchg
addl
mov
(bad)
movabs
and
addr32
jae
xlat
sub
add
in
jmp
cmp
cltd
fsubrp
mov
sarl
lock
cltd
je
add
adc
loop
in
ret
decl
and
sahf
int1
ficoml
or
mov
xor
sbb
add
rex
rcl
push
mov
movabs
(bad)
(bad)
(bad)
mov
(bad)
loopne
xchg
or
xchg
(bad)
rex.wx
and
insl
(bad)
sub
cmp
test
sahf
rex.wr
adc
mov
rex.wxb
sub
cmp
(bad)
rex.rx
push
mov
mov
cmc
jge
js
pop
xchg
pop
push
movhps
sar
insb
iret
cmp
cmp
lcall
int1
jrcxz
push
movabs
movsb
(bad)
rex.wr
and
ret
ftst
ss
rex.wrx
clc
movabs
ja
add
xchg
test
or
or
pushf
sub
shr
int1
xchg
(bad)
movabs
addl
xor
insl
out
sbb
ret
fstpl
jnp
(bad)
cmp
movsxd
scas
rex
lods
sub
ss
es
(bad)
(bad)
xor
(bad)
rex.wrx
mov
(bad)
sub
movabs
cmp
cmc
cmp
add
test
sbb
sub
(bad)
jne
movsb
cmpsl
rolb
and
fdiv
jmp
fs
or
mov
sbbb
pop
stos
jb
and
lea
mov
test
xchg
cltd
xchg
mov
test
rex.rb
rex.x
andb
enter
pop
int1
and
movsxd
xor
(bad)
rex.x
(bad)
mov
ficoms
lahf
push
xchg
(bad)
scas
rex.wrxb
push
test
add
notb
add
cmp
xor
(bad)
jno
add
cwtl
and
divl
sbb
add
adcb
xchg
iret
pop
add
cmp
push
iret
mov
add
pop
leave
sbb
mov
rex.wrx
jb
test
clc
rex.rxb
in
nop
jrcxz
rex.b
and
in
nop
add
xchg
rex.x
stos
js
or
ss
imul
leave
in
add
add
loop
pushf
mov
mov
sub
rex.x
rex.wx
add
enter
pop
xor
xor
and
