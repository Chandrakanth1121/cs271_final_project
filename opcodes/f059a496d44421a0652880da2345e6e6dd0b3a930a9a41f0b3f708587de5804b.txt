push
sti
fidivrs
jo
mov
mov
cmp
bound
dec
jo
les
add
adc
out
sbb
mov
jb
jg
or
outsb
or
test
cmp
or
jmp
frstor
and
(bad)
test
mov
pop
out
mov
jb
in
or
jbe
jecxz
mov
das
ja
mov
jae
mov
fcmove
out
jp
dec
mov
out
sbb
enter
aas
jns
push
xorl
arpl
test
xchg
insb
repnz
cmp
inc
mov
mov
fisttps
insl
xlat
in
nop
sbbb
ret
ss
aas
(bad)
jmp
mov
jnp
int1
fdivrl
cltd
pop
or
xor
jno
dec
add
lret
into
sbb
or
fcom
adc
jmp
dec
int1
imul
std
sub
push
cmp
push
push
add
mov
(bad)
(bad)
jnp
out
or
mov
pmuludq
(bad)
adc
cmpl
adc
mov
mov
jbe
or
out
mul
xchg
inc
scas
push
xlat
push
xchg
pusha
jecxz
pop
mov
sbb
movsl
int
or
jge
fcoms
es
and
xor
rol
jae
adc
push
stc
lds
and
ficoms
jge
aam
dec
mov
push
in
(bad)
lock
cmp
stc
inc
mov
lahf
insb
cltd
adc
cli
fwait
js
fwait
inc
shrb
xor
imul
sbb
push
sbb
xor
mov
(bad)
inc
sbb
and
mov
xchg
pushf
xorb
pop
xchg
loopne
push
in
scas
add
mov
jl
mov
int
mov
daa
mov
and
cmpsb
pop
cmpb
imul
jnp
pop
lock
and
mov
xchg
inc
or
mov
lods
enter
addl
xchg
jge
pop
or
rcr
fidivrs
push
mov
dec
int1
rolb
in
push
shrb
shlb
insb
leave
xchg
cltd
leave
push
add
fdivs
ja
push
pop
add
int1
test
inc
xchg
cmpsl
cmp
out
repnz
in
daa
call
sbb
push
clc
or
jge
clc
mov
(bad)
(bad)
pop
(bad)
push
outsb
xchg
lret
leave
sbb
or
push
mov
dec
sbb
xchg
cmp
decb
pop
jno
out
cmc
mov
dec
movsl
xor
jb
cmc
xchg
(bad)
fiadds
repz
cltd
sbb
push
aad
jl
aas
adc
push
insb
push
jp
pop
outsb
sbb
sbb
inc
and
dec
aam
ficompl
in
int3
roll
loopne
jmp
mov
add
fwait
mov
jne
test
xor
pop
adcb
ss
andb
pop
add
jp
adc
cld
scas
and
mov
add
negb
movsb
lahf
push
in
sbb
mov
mov
into
sarl
pop
cmc
pop
jmp
ret
imul
pusha
test
insl
sbb
leave
movsb
cld
imul
jae
mov
out
insl
inc
call
push
jecxz
(bad)
repz
ficomps
sub
mov
in
jno
lret
outsl
adc
in
jno
insl
pop
cmc
aas
ret
(bad)
pop
pop
stc
sub
pop
ds
xchg
jg
xchg
xchg
jge
ret
cld
pop
sbb
inc
cmp
xor
cmp
ljmpw
nop
pop
fsqrt
rcrl
inc
js
jnp
jle
xor
xchg
ja
lcall
(bad)
pushf
setae
daa
mov
out
lea
pop
mov
cmp
xchg
ficomps
clc
push
fdivr
arpl
divl
jns
sbb
out
inc
ljmp
push
inc
push
sti
hlt
out
lret
repnz
jl
mov
and
loope
push
jne
aas
test
mov
ljmp
cmp
sahf
js
mov
stos
mov
int1
xchg
jle
or
dec
lods
dec
add
sahf
mov
xor
push
outsb
ja
ds
push
dec
or
pop
in
sub
jl
movsb
add
jb
clc
fnsave
lahf
inc
les
imul
lds
sbb
cmp
js
push
and
mov
popf
negb
aam
fidivs
jae
insl
jb
popa
lcall
int1
gs
adc
out
mov
stos
pop
mov
mov
jl
test
ret
or
add
ljmp
or
pop
jl
aad
jb
push
arpl
mov
jp
ficomps
ret
cmp
pop
mov
sbb
push
push
pusha
insl
mov
pop
jns
sti
mov
test
xlat
fs
mov
shlb
cmp
jbe
cmp
push
gs
cli
mov
add
out
cmp
push
cmp
mov
(bad)
fildll
xchg
mov
sbb
mov
mov
js
fs
or
xor
xchg
sbb
jae
push
rep
cmc
pop
repnz
sub
sbb
inc
movsb
jae
push
rorb
mov
mov
nopl
cmc
jnp
mov
sub
clc
stc
adc
sub
sub
push
push
adc
mov
inc
mov
dec
hlt
pop
shrl
add
xchg
and
xchg
std
mov
or
movsb
rcrl
mov
cmp
sub
jmp
push
add
out
cmp
loope
repz
xor
nop
inc
loopne
ret
or
hlt
shl
les
xchg
and
pop
imul
jno
or
mov
(bad)
movsl
cmp
bound
add
inc
adc
mov
(bad)
nop
jp
ret
push
adc
aas
in
dec
fwait
aaa
scas
lea
fidivl
sub
repnz
jge
push
pop
iret
push
int
and
xor
(bad)
test
inc
(bad)
frstor
mov
add
mov
pop
stc
jp
cmp
pop
mov
xchg
fwait
push
pop
call
sbb
outsl
push
jmp
aad
xchg
mov
push
das
(bad)
inc
daa
mov
notb
fwait
mov
sub
sub
mov
fldl2e
shlb
iret
jnp
and
cltd
into
into
pop
mov
insb
(bad)
shlb
sbb
jge
jo
pop
push
lret
lds
mov
scas
inc
stc
jmp
mov
xchg
dec
shr
iret
(bad)
mov
mov
dec
push
or
(bad)
(bad)
mov
xchg
cmp
sub
sub
sbb
into
jbe
fldcw
ja
cwtl
std
fsubrl
movsb
adc
xchg
mov
xor
sbb
leave
pusha
sub
cwtl
dec
sbb
int
loopne
add
xor
dec
ds
jp
mov
xchg
insb
sub
or
xor
fwait
ret
int1
jb
mov
dec
mull
out
nop
inc
inc
inc
sub
lret
cltd
inc
mov
es
cmpsl
push
nop
xchg
fistpll
scas
add
push
mov
xchg
lret
pushf
pop
mov
lret
(bad)
out
inc
pusha
bound
(bad)
or
cmp
gs
and
leave
or
movsb
sbb
fcoml
dec
pop
ljmp
nop
cmpl
push
repnz
add
clc
mov
out
sub
mov
dec
test
jge
in
(bad)
js
jae
push
sbb
push
or
mov
xorb
cmp
mov
bound
mov
or
mov
pusha
pushf
jbe
add
stos
shl
fdivs
cmc
pop
(bad)
cmp
jle
sahf
in
sub
jecxz
into
jl
sub
pop
subl
mov
int1
out
cmpsb
jnp
xchg
repz
stos
shrl
pop
cld
sbb
dec
jmp
test
repz
mov
in
hlt
aad
add
jne
cmp
mov
xchg
ret
(bad)
push
cwtl
ljmp
sbb
push
notl
lret
int3
movsb
mov
and
dec
outsb
dec
repz
push
orb
(bad)
popf
pop
add
cli
push
mov
data16
lcall
outsb
stos
std
shrl
pusha
out
push
cli
mov
xchg
pop
and
mov
(bad)
fsubrl
sbb
or
sbb
test
pop
or
popf
mov
add
inc
bound
or
and
jbe
in
xchg
dec
jmp
push
fdivr
push
int
out
(bad)
jle
adc
mov
pushf
popa
pop
