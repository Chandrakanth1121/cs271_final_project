inc
stos
push
out
lock
loope
ret
cmc
sbb
mov
pop
pop
insb
(bad)
pop
push
sub
(bad)
repz
insl
fisubs
push
fwait
add
inc
and
test
outsl
lcall
int
pop
ret
pusha
mov
fxch
pop
loope
push
fistpl
bound
inc
pop
dec
cmp
jae
mov
sub
mov
shll
xor
andl
sub
(bad)
sbb
dec
cld
nopl
dec
sahf
cmp
sti
rcrb
adc
sub
and
xchg
shl
dec
das
xor
mov
push
(bad)
mov
cltd
incb
xor
(bad)
roll
in
ret
sub
sti
jl
push
mov
sbb
es
int1
retw
sbbb
outsl
lock
lea
ret
inc
jmp
loope
mov
xor
sub
ror
decb
sti
mov
or
pop
(bad)
push
ja
incl
aad
pop
inc
in
mov
dec
iret
push
repz
push
test
xchg
ss
pop
push
loope
pop
and
mov
(bad)
mov
(bad)
pusha
pop
mov
xchg
jno
jb
popf
out
mov
or
adc
pcmpgtw
stos
daa
mov
inc
cld
sti
mov
into
cmp
jns
(bad)
sub
stc
xchg
fwait
inc
movsl
inc
sbb
mov
xchg
mov
mov
leave
std
and
dec
jmp
and
dec
mov
push
call
mov
mov
les
sbb
into
int
divb
sub
inc
(bad)
push
mov
cld
sbb
iret
and
pop
mov
push
nop
or
push
mov
mov
pushf
ss
mov
test
insl
mov
pop
jp
sbb
mov
or
outsl
jmp
loop
mov
xchg
(bad)
push
sbb
lock
sbb
insl
sbb
mov
lock
leave
stos
les
jbe
test
out
adcb
xor
lds
and
dec
pop
dec
mov
jo
fs
ja
and
leave
mov
sbb
mov
push
jmp
lret
mov
arpl
in
in
dec
outsb
sbb
jnp
out
mov
dec
push
imul
mov
fdivs
fidivrs
mov
movsl
push
jmp
inc
fdivs
push
jb
ss
pop
jae
add
ret
push
pop
mov
test
jb
push
call
js
jle
jb
movsl
arpl
inc
xor
cwtl
xor
into
mov
pop
inc
dec
or
sbb
(bad)
les
ret
stc
add
lahf
sub
jae
addl
mull
sbb
mov
(bad)
jns
push
call
das
push
adc
fld
push
lahf
adc
mov
aam
lahf
popa
pop
adc
into
xlat
(bad)
and
call
ss
add
cltd
or
cmp
addb
jecxz
sbb
cltd
dec
mov
sahf
test
push
negl
stc
or
ds
cld
ja
add
mov
mov
adc
fdivrs
mov
dec
dec
pop
insl
imul
mov
jo
jl
cmp
cmp
add
cmp
pop
push
xor
mov
inc
xor
(bad)
ja
pop
stc
lret
in
fdivrl
into
dec
sbb
ljmp
xchg
sbb
xlat
jnp
movsb
lret
inc
aaa
inc
push
fstl
and
jp
xchg
popa
adc
sbb
scas
nop
pop
jge
add
inc
jne
mov
inc
adc
imul
aad
mulps
in
dec
mov
arpl
jp
or
int
jae
push
imul
lahf
xor
inc
push
jno
mov
inc
inc
mov
daa
cmp
scas
outsb
dec
push
out
push
sub
pop
xlat
cmp
mov
out
xlat
fdivrs
sub
xchg
mov
inc
jecxz
stc
addr16
int1
push
mov
sub
xor
pop
ret
addr16
push
jae
test
stos
cmp
or
add
mov
(bad)
cmc
lahf
int
in
mov
loopne
adc
mov
sbbb
stos
data16
inc
xchg
lea
fsubr
gs
push
inc
cmp
mov
addr16
dec
sbb
imul
int3
js
xchg
push
adc
repnz
push
mov
lret
dec
scas
scas
adc
jnp
pop
in
fistpl
bnd
shlb
xchg
repnz
and
pop
int
stos
jo
fs
fistps
fstps
into
or
scas
fdivs
push
push
push
and
dec
popa
aas
push
jnp
stos
adc
repnz
cs
inc
mov
outsb
and
add
inc
(bad)
ja
in
leave
addr16
mov
mov
mov
hlt
add
sbb
addr16
inc
dec
mov
cmp
daa
hlt
mov
lahf
xor
cmpsb
pop
sub
lock
mov
mov
lret
mov
stos
xor
(bad)
out
lret
add
adc
(bad)
arpl
sbb
in
pop
push
mov
mov
and
clc
ds
xlat
inc
int3
cmpsl
loop
lods
push
out
mov
adc
lahf
pusha
rcl
jp
lcall
loope
or
ror
cmp
mov
add
dec
rorl
fdivrl
pop
fwait
imul
insb
jo
std
inc
jg
aam
push
inc
cmp
rolb
int3
and
mov
sub
(bad)
push
dec
mov
mov
faddl
mov
mov
loope
fldcw
mov
sbb
imul
arpl
adcb
lea
inc
inc
sub
fwait
jecxz
leave
inc
adc
dec
and
xchg
shrl
int
and
iret
mov
je
mov
push
cmp
push
shll
mov
or
jno
mov
(bad)
out
adc
dec
mov
sbb
xchg
sbbb
jns
or
inc
mov
jb
repz
inc
lret
pop
xor
into
(bad)
mov
imul
pop
je
pop
iret
repnz
and
add
test
mov
xchg
scas
add
lahf
mov
imul
pop
dec
adc
out
mov
popa
inc
jne
hlt
mov
pop
mov
push
xor
jno
adc
stos
xlat
stc
test
jns
sbb
pop
repnz
dec
ja
jl
xchg
pop
sarl
js
sahf
cvtpi2ps
fld
cmp
push
sti
lcall
jb
cmp
xchg
cmpsb
push
sub
fists
mov
mov
(bad)
int1
xor
adc
loope
rcrl
pop
lcall
shll
inc
(bad)
sbb
jbe
into
mov
outsl
aas
pop
rcrl
mov
andl
fisubrl
mov
xor
jle
repnz
pop
mov
add
and
cld
pop
mov
dec
fimuls
in
jmp
mov
pop
adc
rolb
and
mov
cmp
push
sarb
dec
cli
sar
mov
inc
mov
push
push
sahf
jns
roll
outsb
add
scas
mov
jl
jae,pt
cmp
mov
sbb
pop
hlt
push
cmp
gs
dec
cltd
mov
lods
fucomip
addr16
sbb
push
xor
pop
in
testb
pop
in
into
dec
inc
dec
mov
cmc
inc
je
pop
cmpsb
movsl
jnp
and
loopne
xchg
mov
mov
push
test
pusha
ret
cmp
ror
cmc
lret
sbb
lods
fidivl
xchg
imul
scas
lea
(bad)
push
add
cmc
jg
sub
push
rorb
xorl
pop
sbb
mov
push
dec
inc
jbe
sub
pop
movsl
xchg
ds
sti
sub
add
mov
fidivrs
and
jo
popa
mov
inc
mov
pop
mov
and
fwait
add
stos
pop
cmp
mov
inc
or
ret
or
and
mov
mov
jle
inc
(bad)
push
xchg
(bad)
mov
lock
nop
scas
outsl
sbb
pandn
rcll
stc
dec
gs
arpl
repz
mov
in
sbb
in
cmp
push
pop
in
jg
xchg
add
aas
mov
pop
cmp
mov
mov
sbb
lea
cltd
cmp
push
xor
arpl
dec
pop
daa
dec
aam
out
and
pop
je
divb
int1
mov
sub
je
pop
int
ret
jecxz
pop
sub
