add
rol
jmp
ret
add
inc
gs
jne
jb
outsb
je
jb
arpl
jae
lea
clc
bswap
neg
test
cmp
clc
add
jmp
rol
test
clc
cmp
xor
add
jmp
clc
sub
not
test
test
jmp
jmp
xor
add
jmp
xor
jmp
mov
clc
btr
mov
cmp
stc
clc
add
cmp
xor
clc
jmp
clc
add
jmp
jmp
add
jmp
ror
clc
add
cmc
rol
neg
stc
cmc
xor
cmc
clc
neg
xor
mov
stc
cmc
clc
lea
clc
test
mov
stc
ror
lahf
mov
lea
cmp
cmp
clc
xor
test
add
cmp
cmc
test
bswap
neg
stc
cmc
add
stc
clc
rol
stc
test
jmp
cld
rep
not
pop
popf
mov
cmovg
movswl
pop
jmp
pop
push
mov
sub
lahf
out
nop
add
sub
imul
mov
ljmp
imul
mov
sbb
loope
ss
das
test
xchg
fwait
or
mov
mov
or
stos
add
adc
sti
outsb
dec
push
int1
loopne
out
out
imul
ljmp
mov
push
in
inc
push
sbb
cld
inc
pop
fisttpll
jns
scas
sbb
adc
jns
jg
pmullw
and
push
mov
push
dec
push
mov
lea
adc
cli
leave
and
cmc
mov
mov
clc
inc
dec
mov
sbb
movsb
loope
mov
rolb
sub
and
xchg
add
lds
in
enter
stc
out
call
clc
jb
outsl
jbe
sbb
pop
mov
fdivl
mov
in
add
xorb
in
pop
jg
xchg
addr16
stos
pusha
pop
cmc
lods
cli
scas
sbb
cltd
add
add
adc
cmpsb
pop
push
add
inc
clc
adc
ss
out
push
dec
pop
jecxz
cld
test
ljmp
aas
outsl
adc
adc
cmpb
sbb
cmpsl
adc
and
fwait
sarl
ljmp
xchg
mov
les
das
and
jns
imul
je
xchg
shll
and
xchg
adc
je
fistps
clc
sbb
insl
sub
inc
insb
push
push
shl
inc
push
xchg
jecxz
mov
add
outsl
add
in
jecxz
loopne
(bad)
stc
loop
mov
add
insb
dec
lds
jmp
pop
push
nop
sub
movl
dec
aaa
out
test
adc
daa
sub
xor
or
mov
ret
push
adcb
je
fisubl
ljmp
push
cmpsb
daa
mov
jb
push
aaa
fisttpl
push
or
adc
and
test
inc
aad
out
scas
aam
pop
data16
mov
inc
jp
lods
std
inc
das
inc
pop
stos
pop
ljmp
jg
mov
sub
lods
(bad)
pop
cld
dec
das
dec
repz
iret
loop
mov
movsl
jl
or
test
mov
pop
(bad)
enter
sbb
popf
and
out
movsb
inc
inc
sbb
mov
xchg
cmp
loopne
adc
push
xor
cltd
xchg
pop
lods
lods
in
idivl
and
mov
mov
add
mov
push
cwtl
sub
jmp
jbe
mov
dec
sar
btr
xor
not
pop
pop
pop
jmp
rol
xor
stc
add
jmp
add
jmp
add
and
sub
add
add
and
pop
adc
add
add
mov
ror
test
mov
cmp
add
mov
add
rol
mov
test
jmp
jmp
add
add
add
add
add
add
mov
sbb
add
add
add
mov
or
push
mov
das
loope
add
(bad)
add
mov
inc
addr16
call
hlt
popa
cmc
xor
in
adc
xlat
cwtl
fcoml
adc
inc
push
inc
inc
adc
push
mov
pop
mov
stos
mov
and
aas
div
insb
cs
mov
mov
xorl
dec
fs
das
mov
daa
ret
fldcw
mov
dec
fldt
push
inc
push
and
cmp
bswap
(bad)
into
push
sbb
xchg
adc
test
gs
imul
les
pop
sub
sbb
flds
fists
sbb
xchg
xchg
add
fidivrs
pop
insb
loop
mov
(bad)
cmp
ds
fcoml
mov
jbe
dec
ficoms
jnp
inc
fcmovb
dec
call
jl
sub
xchg
xor
ss
dec
imulb
cwtl
pop
mov
cld
mov
repnz
pop
sbb
jg
ds
int1
adc
mov
in
loop
stc
or
add
(bad)
(bad)
out
and
add
call
push
shrb
pop
movsb
jp
shlb
sbb
lret
cli
pop
lcall
push
lods
push
sbb
ficomps
rcll
movsb
push
jecxz
inc
ja
out
sbb
into
fwait
jle
mov
sub
in
cmp
dec
mov
xlat
jge
push
pop
dec
cmpsl
or
xorb
lret
popa
lret
mov
popa
je
out
pop
adc
lods
mov
dec
mov
imul
mov
int3
stc
insl
add
imul
insl
add
and
jg
int3
pop
adc
sub
xor
jp
jbe
lods
or
dec
jo
ret
mov
push
lock
mov
pop
orl
pop
iret
sbb
insb
stos
into
outsb
mov
add
jno
sbb
daa
cmpb
out
ljmp
std
jge
adc
sub
sahf
pop
imul
pop
jp
jmp
xor
cmpsl
testb
popa
or
jo
es
jne
sahf
push
shlb
sbb
outsb
shll
cld
nop
(bad)
loopne
push
stc
dec
xor
sti
imul
fwait
mov
push
cmp
loopne
out
mov
xor
jle
adc
dec
adc
jnp
push
loopne
mov
(bad)
xor
pop
push
dec
xorl
xchg
push
adc
sahf
cmp
iret
jne
sub
jle
mov
into
push
js
mov
jge
cmp
cmp
das
push
and
xchg
add
cli
sub
fbld
aam
xor
enter
mov
in
decb
mov
sbbl
daa
cmp
dec
scas
aaa
xchg
push
pop
(bad)
fisubrs
ds
sti
popa
clc
out
cld
or
lods
and
cmp
jno
outsb
js
pushf
push
ljmp
int1
dec
pop
dec
sub
outsl
(bad)
mov
pop
movsl
cmpsl
bound
and
insb
dec
mov
push
jo
adc
pop
cld
(bad)
lcall
adc
dec
dec
addr16
insb
inc
loop
das
hlt
mov
or
jo
in
or
pop
cmp
cmp
mov
and
int
sub
in
lcall
hlt
sub
int
or
pop
mov
adc
cmp
rorl
scas
rorl
jbe
sbb
mov
mov
xchg
dec
in
inc
mov
mov
sub
mov
add
cmpl
enter
and
add
jge
dec
arpl
or
repnz
mov
xor
or
dec
push
xchg
xchg
cmp
iret
xor
sub
adcb
xor
lret
pop
popf
mov
sbb
add
leave
cld
jmp
ret
ljmp
mov
bound
cld
inc
mov
das
push
push
addb
adc
decl
push
pop
test
push
data16
stos
cmc
clc
xlat
or
pop
cmp
jbe
push
leave
insl
enter
cltd
push
add
insb
xchg
or
adc
inc
ret
push
dec
pushf
push
sbb
xchg
imul
jo
add
xchg
cmpsl
push
lcall
cli
xchg
xchg
jge
sub
mov
jecxz
mov
mov
and
out
sbb
repz
xor
cld
or
jl
mov
sbb
outsb
scas
adcl
ja
jo
rcrb
inc
stos
mov
adc
pop
inc
push
xchg
fisubrl
mov
les
dec
ljmp
je
xchg
lods
addps
js
call
