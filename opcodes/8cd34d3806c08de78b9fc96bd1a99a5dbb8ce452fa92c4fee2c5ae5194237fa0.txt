xor
inc
ret
push
push
call
xor
push
call
cmpw
jne
mov
add
cmpl
jne
movzwl
cmp
je
cmp
je
mov
jmp
cmpl
jbe
xor
cmp
jmp
cmpl
jbe
xor
cmp
setne
mov
mov
push
call
pop
orl
orl
call
mov
mov
call
mov
mov
mov
mov
mov
call
call
cmp
jne
push
call
pop
call
push
push
call
push
call
mov
mov
lea
push
push
lea
push
lea
push
lea
push
call
add
mov
cmp
jge
push
call
pop
push
push
call
call
mov
mov
push
push
push
call
add
mov
mov
cmp
jne
push
call
call
jmp
mov
mov
mov
mov
push
push
call
pop
pop
ret
mov
mov
cmpl
jne
push
call
call
orl
mov
call
ret
jmp
jmp
cmpl
jne
jmp
push
push
push
call
add
ret
push
call
neg
sbb
neg
pop
dec
ret
push
push
call
movl
cmpl
jae
andl
mov
mov
test
je
call
jmp
xor
inc
ret
mov
orl
addl
jmp
call
ret
push
push
call
movl
cmpl
jae
andl
mov
mov
test
je
call
jmp
xor
inc
ret
mov
orl
addl
jmp
call
ret
jmp
push
push
call
pop
pop
ret
xor
ret
int3
push
mov
push
mov
mov
lea
sub
push
push
push
mov
mov
push
mov
movl
mov
lea
mov
mov
lea
push
mov
call
add
mov
mov
addl
ret
jmp
jmp
add
ret
ret
xchg
xor
xchg
ret
xchg
addl
xchg
ret
add
pop
push
push
xchg
add
mov
push
pop
push
xchg
add
push
xor
pop
push
xor
pop
xchg
pop
push
push
ret
jmp
ret
ret
push
push
push
push
push
push
push
push
push
push
push
push
call
add
pop
pop
pop
pop
pop
pop
pop
ret
mov
ret
push
xchg
add
ret
mov
ret
push
pop
xchg
xchg
xchg
push
pop
mul
push
pop
xchg
addl
xchg
ret
mov
ret
push
pop
ret
add
ret
push
pop
ret
add
push
mov
push
push
push
xor
push
mov
xchg
mov
push
push
push
call
push
push
call
call
push
call
push
call
push
call
push
call
push
push
push
push
call
push
call
push
pop
push
call
push
call
call
call
call
push
cmp
jae
ret
pop
call
add
js
add
sub
add
push
mov
call
pop
add
mov
mov
movb
jmp
mov
call
mov
mov
test
je
mov
mov
cmp
jl
mov
call
mov
call
mov
pop
pop
pop
ret
mov
mov
jmp
ret
test
je
push
push
call
test
je
ret
lea
xchg
test
je
push
call
ret
lea
mov
test
je
movl
push
push
call
pop
ret
lea
push
push
mov
mov
mov
test
je
movl
push
call
add
dec
jne
pop
pop
ret
lea
test
je
mov
shr
je
push
push
push
call
test
je
ret
push
push
push
push
add
push
add
mov
mov
mov
test
jg
mov
call
jmp
lea
cmp
jge
push
lea
mov
mov
call
mov
test
jle
lea
mov
mov
call
jmp
mov
mov
mov
call
push
mov
mov
mov
call
mov
test
jge
xor
mov
mov
call
mov
(bad)
and
sbbl
insb
xor
sahf
cs
sarb
dec
add
ljmp
sbb
or
shr
mov
enter
rorl
je
xchg
cmp
push
aaa
mov
scas
xchg
hlt
fists
inc
pop
xchg
sbb
pop
adc
(bad)
loopne
sarb
(bad)
movsl
pushf
inc
into
mov
dec
cli
insb
add
addr16
push
jmp
shlb
mov
loope
or
and
stc
inc
repnz
jmp
sbb
push
mov
into
xchg
jnp
aad
jmp
andb
xchg
push
loop
and
mov
pop
lods
xchg
and
(bad)
iret
adc
int3
decl
arpl
loop
mov
jo
mov
dec
mov
cmpsb
fldl
jb
iret
fs
mov
xor
xchg
test
pop
aam
inc
sbb
lret
push
rclb
fisttpll
push
ret
sbb
jl
je
outsl
push
cli
pop
in
loopne
pop
mov
sub
les
loope
outsb
jb
std
xor
sub
push
les
aaa
hlt
out
push
movsl
imulb
and
mov
pop
call
inc
or
lods
enter
pop
ret
roll
cli
gs
pusha
hlt
(bad)
fbld
pop
jge
cmp
aaa
adc
leave
pop
rclb
data16
and
rol
xor
xchg
mov
jecxz
out
pop
or
(bad)
sub
cwtl
fcmovne
xchg
fs
test
xor
out
mov
pop
mov
pop
test
je
ss
cwtl
xchg
mov
aaa
ror
mov
insb
mov
int1
daa
push
div
xchg
pop
dec
or
cmp
(bad)
mov
xchg
popf
ficoml
push
sub
(bad)
xlat
fidivl
mov
mov
inc
shrb
jmp
sbb
loopne
mov
or
mov
lods
jle
add
lret
pop
inc
xor
ret
xorb
bound
cmc
insb
lods
(bad)
lock
test
fmulp
mov
aaa
dec
cmp
cmp
cmp
inc
xchg
push
jb
loopne
in
and
addr16
mov
sub
mov
ja
cmp
fadds
movsb
ret
push
xor
xor
inc
out
sbb
aad
ss
lcall
lods
xlat
test
into
dec
mov
fadd
flds
outsl
pop
cmp
pop
mov
and
and
popa
jl
adcl
repz
jle
fdivs
je
movsb
mov
pop
ja
sbb
pop
dec
jecxz
lea
cmp
add
test
rorl
sti
jno
or
shrl
sbb
dec
pushf
nop
mov
iret
xlat
testb
inc
test
daa
jge
ja,pt
mov
add
insb
xor
mov
mov
and
popf
bound
push
add
xchg
shrb
push
lods
push
mov
push
push
xchg
(bad)
call
sbb
add
loopne
pop
ret
pop
es
je
xchg
(bad)
cmp
dec
popa
aad
pushf
xor
jno
in
xor
and
mov
dec
fdivl
adc
jb
xchg
scas
shr
push
mov
dec
lods
and
adc
sub
lea
movsb
lods
jno
sbb
aad
call
mov
imul
adc
add
push
adc
test
add
add
inc
add
sbb
xor
out
shl
mov
arpl
shll
pop
mov
jae
dec
in
int
sbb
outsl
shl
mov
push
lahf
dec
adc
mov
add
sbbb
rcrl
out
jae
add
jge
xchg
mov
xor
adc
fstps
popf
and
jecxz
stos
pop
test
cmp
pop
cs
mov
lcall
push
out
or
int3
mov
fidivrl
mov
mov
mov
inc
adc
pop
lcall
arpl
ljmp
pushf
out
fnstcw
movsl
xchg
xor
fs
loope
xor
loopne
lds
imul
in
inc
jns
aad
pop
ret
adc
lock
xor
and
iret
lahf
cs
jae
orl
or
push
xchg
and
xchg
xor
addr16
es
push
movsb
jno
int
xor
