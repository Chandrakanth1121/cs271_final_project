jnp
or
add
lock
loop
jae
inc
(bad)
sarl
das
and
ret
xchg
outsl
out
mov
cs
loope
adc
cmpsl
mov
and
jne
pop
idiv
iret
push
repnz
push
in
mov
scas
xchg
mov
(bad)
cmp
stos
into
aam
push
repz
pop
inc
sbb
roll
pop
aam
and
sub
lea
ret
xchg
out
xor
out
(bad)
jecxz
jge
xchg
fwait
dec
lcall
push
sub
in
or
fidivl
inc
loope
es
stos
mov
xor
out
shlb
and
push
cs
push
aas
(bad)
dec
jb
(bad)
enter
shll
shr
adc
leave
(bad)
in
sti
test
loopne
rorb
xlat
push
ds
aaa
repnz
add
cmpsl
test
cmp
sub
ja
int3
inc
lea
enter
lea
lds
and
daa
mov
scas
fdivrl
rcr
and
enter
rcll
mul
sbb
rcr
aas
mov
out
clc
aaa
repz
add
add
iret
hlt
repz
lahf
xchg
adc
or
loope
jo
(bad)
or
lcall
fldcw
pop
inc
rcrl
pop
inc
xor
jmp
pop
push
jae
out
mov
repnz
push
jbe
mov
adc
out
sub
xor
frstor
sbb
das
mov
mov
jb
jns
jnp
xchg
mov
push
cmp
ret
mov
pop
lds
adc
in
inc
int1
mov
mov
add
rdmsr
int3
jns
das
cwtl
jmp
mov
jmp
mov
bound
movsl
cmp
ret
and
xorl
ss
ret
in
push
in
xor
xchg
out
out
arpl
xlat
lret
(bad)
and
stos
pop
jge
enter
and
cwtl
xor
jno
std
int3
jge
or
mov
shl
xor
add
fisttpl
cmp
stc
or
xor
popf
sub
inc
div
aad
xor
mov
loopne
xor
pop
sbb
or
lock
dec
mov
add
and
mov
push
xchg
orb
or
clc
cmp
out
sub
cmc
(bad)
lcall
fisubs
les
dec
lret
mov
push
shrl
mov
sbb
popf
fcmovnbe
loopne
mov
test
jns
sub
loopne
xchg
(bad)
fisttpl
mov
or
test
xchg
fwait
loope
adc
adc
pusha
add
sbb
insl
kandb
push
lret
lret
mov
xor
xchg
das
fisttps
out
ljmp
out
or
les
mov
cmp
inc
clc
xchg
add
add
(bad)
xchg
and
sub
sub
mov
push
addl
and
(bad)
jb
out
(bad)
sub
sub
std
cmp
sahf
(bad)
das
outsb
mov
sub
xlat
fstl
jns
hlt
out
into
cld
pop
cmc
int3
and
push
pop
mov
(bad)
test
and
repz
iret
fcomps
inc
dec
popf
adc
repnz
mov
arpl
dec
xchg
loop
add
leave
cmpsl
inc
(bad)
adc
cmp
fstpt
sub
ret
dec
repnz
and
pop
ljmp
xchg
subb
mov
orl
inc
aas
push
int
mov
xchg
push
movsb
or
and
aam
in
jbe
insl
xchg
mov
lds
mov
push
fsubrl
pop
add
out
aaa
sub
int3
mov
or
and
cmp
xor
lahf
addr16
cltd
daa
sub
rorb
popa
fwait
lcall
mov
lods
mov
into
dec
and
leave
push
jno
mov
inc
push
push
hlt
sub
lea
fnstsw
mov
fisubrl
fcoml
lahf
pop
out
fcmovnu
add
pop
inc
rorl
(bad)
or
and
and
or
iret
cs
das
push
and
dec
fmul
pusha
ljmp
jae
ss
cmp
cmc
(bad)
pop
leave
fdivr
iret
xor
std
fwait
stos
fstps
jge
add
mov
mov
mov
(bad)
(bad)
mov
mov
push
(bad)
xlat
adc
adc
and
lds
mov
into
sahf
rcl
add
jge
rolb
push
dec
loope
cmp
cmc
(bad)
fs
adc
sbb
lods
call
leave
xor
iret
and
scas
lds
jmp
xchg
repnz
dec
ror
mov
shl
jae
loopne
out
mov
add
test
sti
lock
inc
fldt
sbb
aam
adc
dec
lock
(bad)
sub
aaa
or
por
sub
arpl
sub
lret
or
imul
(bad)
adc
sbb
repnz
(bad)
pop
lahf
add
push
adc
nop
mov
xchg
inc
int3
xor
or
mov
popf
or
fcmove
pop
stc
(bad)
lea
xchg
cmp
rcll
sahf
iret
out
push
in
fcoms
xchg
sub
mov
pop
fiadds
out
and
jns
sub
out
xor
add
scas
sbb
repz
(bad)
int3
xor
cld
roll
push
jbe
xchg
or
and
dec
movsl
xchg
adc
sbb
iret
xchg
lods
rcr
loop
sub
cltd
sti
iret
imul
(bad)
pop
adc
popa
in
mov
lcall
cmp
sub
iret
aas
(bad)
rcll
and
mov
in
roll
mov
adc
rcrl
repz
jmp
adc
cmp
cli
das
xchg
inc
xor
in
xchg
jmp
shrl
iret
loopne
dec
or
movsl
dec
aaa
adc
sub
(bad)
ds
push
lret
or
mov
dec
into
adc
fsubrl
insl
jmp
sbb
daa
jp
cs
xchg
mov
sub
orl
mov
ficomps
mov
mov
stc
popf
rol
pushf
sbb
cmp
mov
mov
int1
sbb
aaa
imul
fcomps
nop
loope
rep
adc
insb
mov
mov
mov
lods
pop
or
in
lea
dec
pop
inc
adc
sbbb
fcmovnu
lcall
rcr
(bad)
mov
mov
rorb
mov
jge
or
(bad)
inc
std
add
or
push
lock
sub
adc
lret
out
popf
lea
lock
sub
pop
rcrb
fsubs
mov
(bad)
xlat
sbb
or
sub
testb
loope
mov
int1
enter
js
out
sub
and
idiv
ss
lahf
inc
lods
and
xor
fbld
(bad)
dec
outsb
jp
lfs
xor
and
sbb
mov
pushf
jmp
inc
xlat
or
sti
xchg
aaa
and
test
cmp
ret
mov
loopne,pt
fwait
xchg
sti
rorb
in
ficoms
cmp
mov
mov
push
rcl
jmp
je
test
push
pop
xchg
and
aaa
lcall
push
dec
lods
out
in
rcrb
(bad)
(bad)
xchg
push
lret
dec
out
pop
mov
jg
repz
xor
mov
sbb
sahf
into
sub
jae
fisubl
add
and
push
sbb
lret
xchg
pusha
and
rcll
nop
repnz
cmp
sbbb
daa
cli
adc
iret
mov
inc
xchg
pop
xlat
ja
and
fisubs
ret
out
adc
push
cmpsl
mov
xchg
pop
fisubl
push
jle
jg
cmp
add
shll
cld
fcmovbe
out
or
enter
jecxz
mov
fldcw
xchg
movsb
es
shl
or
test
inc
xchg
or
int
inc
pop
call
add
jg
fbld
cwtl
dec
push
int3
mov
xchg
fidivs
xor
pop
mov
in
fcoml
cltd
movswl
lahf
lret
std
in
mov
ljmp
xor
xlat
sbbl
xchg
inc
xchg
movsl
rcl
sub
mov
psubw
out
aas
fisubs
std
jne
adc
ds
mov
clc
mov
aad
clc
cmp
push
sbb
in
mov
int
stos
mov
lret
aaa
mov
inc
rcrb
loope
lret
xor
sub
addr16
push
les
lret
adc
cwtl
out
mov
cmp
and
dec
lret
fimuls
xor
ret
push
loop
iret
fsubl
and
inc
in
jns
push
movsb
