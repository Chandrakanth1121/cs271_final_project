repnz
jmp
movsb
push
lods
xor
dec
fldenv
or
int3
mov
pop
push
pusha
notl
push
or
seta
adc
testb
inc
fdivr
jmp
mov
or
inc
aad
lock
sub
jns
fs
iret
mov
lahf
mov
xchg
sbb
sub
outsb
pop
pusha
jmp
fs
ljmp
xchg
arpl
xor
sbb
sub
or
insb
sbb
lods
cli
insb
lds
fstl
cmpb
imul
daa
sbb
adc
popf
das
push
lods
xchg
clc
test
fidivrl
popf
in
aaa
cmp
and
adc
xor
jl
xchg
or
loopne
mov
sub
pop
stc
sbb
fcompl
cld
in
xchg
xchg
or
mov
test
fisttps
cmp
hlt
nop
push
mov
scas
mov
in
popf
xorb
jo
insl
mov
lret
fsubr
sbbb
lcall
popf
adc
stos
sbb
jae
hlt
rcrb
mov
sbb
xchg
cmc
mov
stos
jne
lahf
stc
adc
scas
jge
push
xor
adc
fwait
shlb
mov
fstl
lret
sbb
(bad)
jl
cwtl
fcoms
out
adc
test
cmpsb
xchg
aam
ror
pusha
mov
mov
and
jns
int1
pushf
xchg
sbb
aam
pop
fwait
aad
adc
xchg
push
cmp
cmp
xor
push
imul
xlat
clc
rolb
mov
in
add
adc
in
mov
pop
cmpsb
adc
outsb
test
jl
insb
sbb
cltd
inc
inc
and
pop
(bad)
stos
sti
mov
adc
mov
push
push
lds
stos
daa
mov
stos
pop
fdivp
jge
imul
and
xchg
mov
aaa
sti
mov
mov
in
insb
scas
jmp
sbb
and
jno
pop
push
jo
mov
fildll
cmp
popf
adc
into
xchg
mov
andb
fnstenv
pop
push
mov
jl
leave
jmp
jl
push
imul
jnp
jl
inc
not
add
loope
jbe
jl
mov
add
cs
lods
dec
int3
push
in
outsb
sbbb
lds
lods
lret
shll
push
push
fidivs
test
cmp
imul
mov
call
mov
mov
adc
jge
fwait
jno
jle
lcall
and
mov
cmp
mov
xchg
fimuls
shll
mov
fldl
lret
add
pop
mov
add
lcall
arpl
stos
out
fwait
arpl
test
add
cmc
scas
mov
test
adc
add
bnd
insl
ret
xchg
and
or
xchg
and
fidivrl
and
sbb
movsb
data16
mov
xchg
pop
inc
mov
sahf
in
push
add
loopne
and
pop
push
sub
xchg
jns
adc
iret
dec
arpl
cmp
add
outsb
pop
xchg
mov
fimull
xchg
mov
loopne
mov
sbb
inc
pinsrw
mov
push
outsl
les
hlt
mov
inc
xchg
ds
pop
daa
mov
mov
mov
ja
in
mov
mov
imul
je
stos
or
call
je
xor
loop
es
sti
or
repnz
mov
daa
sarb
shl
in
or
stc
(bad)
jle
pusha
lcall
cld
enter
ret
inc
mov
and
and
xor
mov
aam
dec
lods
jnp
test
ljmp
rol
or
inc
sti
add
insb
adcb
outsb
pusha
out
jnp
test
arpl
into
sti
cltd
mov
push
mov
ret
mov
dec
and
popf
arpl
scas
mov
out
jne
loope
inc
lods
sbb
mov
and
sub
leave
jae,pt
sub
inc
jge
out
add
push
and
or
out
fisttpll
jns
cmp
movsb
or
out
mov
cmp
dec
psllw
(bad)
jmp
xchg
or
daa
movsl
push
enter
int1
imul
sub
fdivl
test
sbb
sbb
sbb
lea
lods
loopne
daa
xchg
out
add
jnp
cld
pop
(bad)
imul
mov
repnz
cwtl
lahf
rcrb
bound
rorl
repnz
lcall
aas
loopne
aam
xchg
sbb
push
xchg
mov
test
rclb
movsb
ret
fimuls
xor
fst
(bad)
jle
sub
xchg
push
dec
adc
pushf
andl
mov
test
jnp
lea
outsb
loopne
jp
push
lahf
fildll
cmpsl
jecxz,pn
inc
shlb
mov
lods
mov
loopne
fs
nop
fwait
mov
shrb
mov
cmp
stos
cltd
push
and
xor
mov
fdivrl
out
lahf
dec
push
inc
sbb
mov
cmp
mov
jbe
rcrb
sub
fstpl
sbbl
cmp
push
ljmp
ficoms
enter
cmpsl
mov
cmp
mov
jno
sub
push
inc
pop
xchg
or
cmp
add
shlb
in
jbe
sbb
insb
dec
adc
mov
ja
test
push
mov
sub
(bad)
push
lcall
cltd
pusha
mov
dec
sbb
pop
movzbl
push
clc
mov
push
popf
mov
cwtl
mov
mov
clc
lahf
mov
int1
add
fcoms
orb
xchg
cwtl
sbb
xor
adc
xchg
shll
mov
rcl
sbb
scas
adc
les
jl
push
mov
addr16
mov
pop
stc
cmp
cmp
cltd
and
aad
adc
mov
jae
les
sbb
pop
adc
adc
push
mov
and
int
jno
sub
sub
fs
mov
fcmovbe
and
xchg
nop
xchg
jl
jns
or
cwtl
mov
or
adc
adc
pop
and
lods
mov
sti
test
push
pop
push
pushf
outsb
jmp
shrl
out
pushf
push
cmp
fstl
lahf
movsl
(bad)
adc
jle
int1
pop
fs
movsl
sahf
push
scas
dec
adc
push
mov
dec
xchg
arpl
out
dec
lret
and
fcmovb
pusha
out
mov
sarl
bound
adc
or
cmpl
aas
imul
imulb
and
adc
cmpsb
rclb
in
sbb
jns
or
int
jns
test
jge
sahf
jae
in
adc
jb
and
mov
sub
test
add
std
sahf
add
pop
mov
push
sbb
insb
push
lods
lret
mov
in
int
mov
sbb
sbb
jns
mov
aas
adc
push
loopne
jl
mov
in
mov
(bad)
pop
pop
movsl
mov
pop
out
mov
jns
cmp
leave
xchg
pop
outsb
or
in
sbb
jb
arpl
(bad)
stos
out
cltd
add
sbb
in
and
jns
mov
mov
cmpsb
xchg
xchg
roll
rorl
cmc
mov
loopne
push
mov
les
bswap
je
lahf
cmp
xor
pop
int
mov
lahf
arpl
cwtl
in
loop
xchg
out
jg
inc
jb
pop
push
pusha
sbb
int
rcr
sub
jge
push
cmp
mov
dec
int3
and
sbb
xor
lock
xchg
mov
xor
sub
mov
or
mov
test
mov
mov
add
cmp
adc
mov
into
shrb
pop
and
pop
mov
fisttps
sahf
pushf
mov
(bad)
cld
xchg
in
shlb
sbb
inc
fldt
es
jne
push
mov
push
out
bound
mov
mov
loop
and
and
aaa
xchg
inc
out
lods
sbb
repnz
(bad)
outsb
add
jae
pop
inc
lds
mov
xchg
mov
enter
popf
pop
inc
sahf
pop
sbb
jo
inc
cld
sub
cltd
in
movsl
test
shrl
pop
test
lds
movsl
stos
mov
add
cmpsl
pushf
xor
call
mov
xchg
xor
dec
push
push
rcrl
gs
sarb
dec
gs
cmp
loop
cmpsb
mov
in
in
lea
jnp
lahf
mov
lock
arpl
add
xor
or
in
daa
sbb
mov
mov
jbe
cmp
pop
fldenv
gs
mov
insb
add
dec
jecxz
xchg
