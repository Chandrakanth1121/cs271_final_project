xchg
sub
iret
inc
mov
push
dec
jecxz
cmc
lods
stos
jmp
aas
cmp
mov
aaa
dec
lahf
pop
inc
ljmp
dec
pop
adc
popa
lea
xchg
fsincos
lret
cmpsl
(bad)
dec
addr16
lahf
mov
push
jbe
adc
cwtl
loopne
sbb
mov
mov
fmul
pop
das
pusha
arpl
xor
in
mov
lea
adc
xor
(bad)
insl
outsb
mov
push
push
mov
loop
jb
ss
(bad)
ds
bswap
int3
or
lods
xchg
les
pop
dec
mov
jb
pusha
ja
scas
dec
in
xor
dec
sbb
jno
lcall
pop
aad
xchg
xor
rorl
popa
xor
fwait
sub
adc
pop
lahf
imulb
int1
jbe
nop
aas
sbb
lret
lret
mov
ljmp
xor
lret
int3
(bad)
mov
aas
mov
arpl
adc
dec
in
nop
imul
or
xor
inc
pop
data16
aas
andb
dec
xor
push
and
jecxz
fnstcw
imul
int1
scas
jg
insl
(bad)
out
lods
in
pop
xor
cmp
(bad)
jmp
dec
lock
jge
dec
xor
out
popa
cmp
es
imul
enter
hlt
bnd
imul
lods
mov
inc
mov
in
ds
adc
std
repnz
dec
xor
xchg
fnstenv
xor
jne
mov
inc
dec
inc
fidivrl
dec
rcll
jno
cmp
mov
jno
sbb
jecxz
popf
push
dec
jne
imul
jp
out
jmp
jl
ja
ret
nop
lret
test
loop
lret
cli
pop
insl
pushf
mov
pop
xchg
mov
xchg
adc
xor
outsb
call
out
negl
sahf
cwtl
cmp
or
dec
push
jbe
in
test
pushf
orl
scas
pushf
addr16
mov
aam
addb
lcall
fstps
push
push
rcl
inc
push
ss
lcall
sbb
bnd
xchg
into
fwait
ret
pusha
ss
fwait
pop
and
outsl
push
lods
dec
dec
jnp
and
ds
(bad)
xor
enter
or
pop
or
out
inc
push
pop
adcl
pop
dec
mov
cmp
scas
scas
inc
pop
das
lahf
mov
sbb
and
ret
bswap
xchg
mov
dec
push
sub
mov
lds
mov
rolb
mulb
sub
inc
(bad)
dec
fdivrs
repnz
je
dec
xor
adc
out
sbbl
mov
jmp
cs
push
fdivs
in
(bad)
fistl
push
push
push
and
pop
jge
std
les
fs
into
mov
out
out
out
mov
pushf
test
or
mov
imul
push
sub
repnz
popf
rolb
sbb
out
js
mov
in
orb
les
gs
jmp
into
inc
outsb
sbb
sbb
xchg
adc
push
scas
dec
dec
sub
adc
out
inc
rolb
and
sub
mov
push
inc
jp
push
pop
mov
pop
sub
out
gs
fisubl
hlt
mov
hlt
jle
fmull
dec
int1
dec
loopne
push
(bad)
dec
lods
push
dec
adc
inc
fmul
cli
mov
cmp
xchg
sbbb
dec
pop
aam
mov
adc
adc
lods
xchg
sub
ror
mov
cmp
jbe
es
lret
xorb
data16
add
push
jge
adc
fnstsw
cltd
lret
and
mov
xor
or
or
pop
mov
jae
pushf
sbbl
mov
ret
cmp
sub
cltd
ffreep
gs
inc
add
test
push
ja
les
dec
std
add
imul
inc
jmp
cs
int3
adc
cmpsb
es
daa
xchg
pusha
daa
daa
xor
stos
rorb
xor
fildll
in
xchg
fcomps
insb
pop
out
ret
fs
or
out
sub
imul
lret
or
incl
lods
cmc
push
or
inc
jae
scas
push
das
dec
mov
or
push
add
push
sbb
cmpsl
push
mov
movsb
insb
int3
fldz
push
lods
jp
lods
lret
leave
jle
dec
or
fucomp
sub
idivl
sbb
cmp
mov
push
xchg
sti
or
mov
addl
push
out
push
dec
cwtl
call
mov
jmp
and
push
lret
xchg
jecxz
test
push
into
fwait
and
ret
cmp
lds
push
sub
push
jmp
cmp
jl
push
mov
stos
fcmovu
repz
popf
sbb
xor
adcl
cmpsb
cltd
pop
jle
cmpsb
xchg
sub
int1
in
scas
(bad)
les
ljmp
cmp
pop
xor
out
push
dec
imul
dec
push
leave
ljmp
scas
call
jnp
cmpsb
(bad)
fists
bound
mov
inc
add
adc
pop
(bad)
xor
hlt
mov
inc
ret
mov
dec
xor
jmp
pusha
andl
filds
pop
aad
sbb
in
data16
push
cmp
xchg
mov
and
adc
push
push
(bad)
jnp
add
cmpsb
mov
xchg
loop
std
dec
into
dec
stos
push
shll
cmpsb
in
mov
mov
mov
or
les
aas
fsubrl
push
sub
in
pushf
mov
ds
jno
test
repnz
push
mov
jge
scas
push
rcrl
divb
sbb
cs
xchg
mov
js
xchg
inc
pop
out
addr16
pushf
mov
or
mov
lods
inc
dec
pushf
jo
repnz
andl
(bad)
std
inc
subb
mov
pushf
test
jae
or
and
aad
pop
and
int3
add
cwtl
ret
ljmp
iret
in
loopne
stos
inc
outsl
mov
int
mov
xchg
mov
adc
cmc
rcrb
mov
push
test
xor
je
mov
push
pop
adc
pushf
sti
inc
push
mov
repz
inc
inc
leave
mov
or
enter
popa
cs
mov
xchg
cwtl
adc
dec
jo
fdivrl
out
and
fadd
repz
xor
adc
int1
cmp
push
stos
mov
xchg
aad
leave
stc
inc
jmp
jnp
adc
orb
inc
sbb
push
popf
cmpsl
out
jmp
fs
dec
sub
push
pusha
pushf
xchg
imul
rcl
mov
adc
out
insl
sub
mov
sub
xor
adc
mov
cmc
mov
arpl
push
xchg
jbe
mov
movsb
push
jle
mov
mov
mov
scas
popa
stos
dec
inc
adc
mov
mov
shll
std
or
mov
into
jle
jle
adc
dec
andl
test
mov
and
pusha
push
mov
test
fisubs
shrl
(bad)
stc
pusha
insl
xchg
int
cmp
mov
adc
jnp
inc
mov
or
bound
add
pop
imul
jns
mov
add
cmp
push
xchg
pushf
hlt
dec
dec
daa
xchg
movsl
mov
jecxz
pop
and
popf
loopne
gs
xchg
or
mov
adc
lea
mov
or
fs
insl
lea
cmp
dec
mov
inc
std
jae
xor
cltd
or
ret
cmp
mov
jmp
mov
xchg
or
fsub
add
sub
add
out
or
stos
fisttpll
aas
push
leave
repz
pop
sub
inc
mov
and
cs
lahf
cmp
cmp
mov
pop
imul
dec
insb
dec
scas
jle
imul
js
pop
sub
clc
in
jnp
sub
pop
sub
mov
mov
mov
popf
scas
stos
pop
jmp
sqrtps
dec
xchg
dec
aam
sub
outsl
xchg
mov
leave
or
xchg
add
in
pop
ljmp
and
(bad)
xor
jmp
movsl
aas
jnp
out
xor
push
push
inc
aad
cs
outsb
push
inc
ds
das
fld1
push
cmpsb
jp
in
aad
fmull
lret
(bad)
mov
push
xchg
sarb
