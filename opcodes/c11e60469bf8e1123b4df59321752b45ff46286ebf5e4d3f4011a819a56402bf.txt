test
sub
push
inc
xor
ret
(bad)
mov
shl
xchg
rol
cmp
inc
mov
pop
repnz
mov
pop
dec
mov
push
insb
roll
add
cmpsl
or
ret
test
addr16
xor
ret
(bad)
mov
shrl
push
shrl
push
shrl
push
shl
xchg
ror
mov
inc
mov
pop
shlb
enter
(bad)
sub
lret
cmp
inc
(bad)
adc
sarb
inc
xchg
jge
(bad)
xor
or
adc
mov
dec
jb
push
in
int1
xchg
(bad)
into
mov
inc
mov
fisubrl
dec
xchg
iret
clc
dec
pop
fisubrl
inc
xchg
mov
stos
arpl
rol
sub
sub
add
daa
roll
add
(bad)
mov
shrl
push
shrl
push
shrl
push
shl
xchg
iret
into
scas
aam
mov
(bad)
and
dec
pop
repz
rcrb
inc
mov
add
jnp
mov
ja
dec
pminub
sub
sti
and
lret
add
lds
cmpsb
aaa
aaa
xchg
test
addr16
in
xchg
add
inc
(bad)
mov
mov
cmp
inc
(bad)
and
enter
lret
sub
jnp
mov
ja
dec
pminub
sub
and
lret
add
lds
cmpsb
aaa
aaa
fsin
lds
jg
dec
xchg
add
inc
(bad)
mov
mov
cmp
inc
(bad)
and
sahf
mov
cmp
jne
in
ja
sub
lret
mov
jmp
roll
jecxz
sub
sub
(bad)
and
inc
ja
inc
xchg
mov
stos
arpl
rol
sub
sub
add
roll
test
gs
(bad)
mov
push
shrl
push
shrl
push
shl
xchg
iret
into
scas
aam
mov
pop
repz
mov
pop
inc
mov
jmp
roll
addr16
ja
dec
je
and
paddw
rol
and
(bad)
mov
inc
jne
and
ret
andb
dec
jnp
ret
mov
mov
xchg
add
cs
and
sarb
sub
int1
cmpsb
lret
and
cld
dec
into
(bad)
jmp
roll
ret
cmpsb
ss
(bad)
and
cli
inc
into
(bad)
adc
roll
(bad)
(bad)
sub
push
lret
loope
dec
out
(bad)
and
mulb
adcl
arpl
inc
pop
dec
ds
mov
stc
cld
and
ret
andb
dec
jnp
ret
inc
(bad)
mov
inc
in
and
sarb
inc
xchg
int1
cmpsl
mov
add
inc
(bad)
mov
mov
cmp
inc
(bad)
and
test
fdivrl
mov
jne
in
ja
inc
orl
dec
mov
push
dec
cmp
add
ret
inc
(bad)
scas
sbbb
in
inc
xor
ret
dec
fcmovbe
outsb
mov
shrl
push
shll
in
pop
lret
xchg
int1
cmpsl
enter
dec
ja
mov
shrl
push
shrl
push
shl
xchg
(bad)
into
mov
inc
mov
pop
in
mov
mov
mov
shrl
push
shrl
push
sarl
in
(bad)
push
ljmp
test
pop
ja
lds
and
loop
xchg
addr16
dec
ja
dec
inc
ja
fisttpll
std
push
int1
cmpsl
push
inc
(bad)
and
outsl
int1
cmpsb
push
inc
(bad)
and
fisubrl
push
shrl
push
shl
xchg
mov
jmp
fdivrl
dec
pop
in
shlb
and
es
popf
repnz
sbb
cli
scas
test
stos
and
mov
lret
pop
inc
(bad)
and
int1
cmpsl
mov
pop
fisubrl
dec
pop
fidivl
inc
orl
dec
pop
fidivl
dec
pop
fisubrl
inc
and
test
cwtl
rolb
and
pop
outsb
mov
shrl
push
shrl
push
shll
in
pop
lret
xchg
inc
(bad)
and
int1
cmpsl
fiadds
and
fidivl
push
shrl
push
sarl
scas
nop
mov
(bad)
xor
sub
nop
mov
dec
inc
fisubl
and
and
int1
xchg
leave
sarb
inc
mov
pop
call
sub
outsb
mov
shrl
push
shrl
push
shll
in
pop
test
addr16
xor
imul
mov
shrl
push
shl
xchg
(bad)
into
mov
inc
mov
pop
call
sub
outsb
mov
shrl
push
shrl
push
sarl
in
(bad)
push
sti
enter
enter
lret
dec
pop
fisubrl
dec
push
jne
(bad)
mov
push
add
and
inc
(bad)
test
pop
jne
in
jnp
mov
jge
leave
lret
ret
enter
lret
into
cmc
clc
pop
mov
ja
pop
in
ss
mov
shrl
push
shrl
push
shrl
push
shl
xchg
mov
jmp
fdivrl
dec
pop
loopne
rclb
ds
adc
das
shll
fdivl
fdivr
and
cli
fdivl
inc
(bad)
and
cli
adc
lret
movsb
mov
jl
push
cmp
lret
add
dec
pop
fisubrl
sub
add
ds
xor
or
mulb
jmp
mov
test
dec
or
stc
mov
lahf
xorb
lret
xchg
inc
jnp
mov
jge
(bad)
enter
aas
dec
push
add
stos
mov
out
test
and
add
(bad)
in
inc
(bad)
and
inc
cmp
dec
add
jge
ret
xor
test
pop
jnp
mov
jne
leave
adc
movsb
ds
ja
inc
mov
int
stos
push
mov
ret
ss
mov
push
enter
mov
and
(bad)
and
inc
iret
jecxz
mov
mov
lds
std
test
pop
cmp
out
or
pminub
lock
jb
pop
roll
or
out
aaa
aaa
fisubrl
push
shrl
mov
inc
(bad)
mov
mov
jne
leave
(bad)
or
jb
enter
jge
subb
in
enter
inc
fsubrl
stc
sti
and
lret
in
ja
in
jnp
mov
xchg
xor
mov
cmp
dec
test
inc
test
xchg
rol
push
out
lret
roll
and
lcall
faddl
cli
push
cmp
push
mov
sub
and
sarb
inc
orl
sub
push
in
adc
daa
lock
cmc
mov
inc
mov
or
test
addr16
or
mul
ret
and
fisubrl
jmp
inc
(bad)
and
fiaddl
dec
mov
add
outsb
mov
shrl
push
shrl
push
shll
dec
aaa
fimull
dec
outsl
fisubrl
push
(bad)
stos
push
ret
pop
add
lret
inc
mov
mov
dec
dec
fisubrl
push
ljmp
xchg
dec
jns
lds
fsub
(bad)
push
movb
repnz
roll
push
shrl
push
shrl
push
sarl
loope
jl
lds
stos
in
addr16
and
inc
(bad)
cmpsl
or
ret
mov
pop
inc
(bad)
and
(bad)
and
ret
pop
ret
into
shrl
cs
jns
ret
inc
(bad)
sub
push
jle
sub
jp
ret
inc
(bad)
sub
mov
and
and
(bad)
cmp
roll
popa
dec
jge
ret
inc
dec
lcall
gs
std
and
test
das
xchg
int1
xchg
xchg
inc
ja
inc
subb
push
pop
fisubrl
adc
repz
pop
sub
addb
pop
fisubrl
or
stos
adc
aas
mov
int
add
movb
into
cmc
mov
dec
pminub
inc
subb
cmp
or
fidivl
inc
addb
pop
fisubrl
or
test
addr16
addr16
mov
ret
pop
es
les
and
inc
int1
xchg
mov
outsl
in
jle
adc
fsubl
xchg
add
dec
pminub
inc
addb
pop
fisubrl
or
test
addr16
mov
test
mov
ret
pop
es
les
roll
mov
call
cmp
add
jle
cmp
inc
aaa
faddl
clc
push
aam
xor
in
addr16
mov
ret
add
and
