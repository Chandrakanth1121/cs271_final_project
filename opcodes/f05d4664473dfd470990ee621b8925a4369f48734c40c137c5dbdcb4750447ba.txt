out
adc
adc
rcrb
scas
rcrl
push
inc
rcrl
out
leave
scas
out
xor
mov
es
dec
(bad)
aam
je
mov
out
int1
jmp
mov
inc
test
lcall
lret
mov
jb
jmp
ret
mov
iret
adc
sub
fisubl
(bad)
repz
iret
and
shr
out
fidivl
jb
cmc
cwtl
adc
jl
sahf
inc
mov
xchg
mov
dec
sbb
fistpll
adc
xor
les
jne
pop
ret
jl
hlt
jl
jns
int3
pop
and
adc
dec
jno
mov
mov
lahf
mov
outsl
pop
push
(bad)
add
(bad)
fildll
cltd
push
lret
add
push
cmc
inc
lods
pop
fsubr
loop
movsb
repz
test
in
mov
arpl
leave
insb
pop
(bad)
insb
movsb
outsl
dec
fcoml
jmp
jno
lods
pop
iret
and
arpl
loope
dec
sub
jmp
or
or
jns
rcrl
sahf
gs
or
adc
jmp
add
add
stos
inc
or
xlat
mov
dec
fnstsw
or
sti
and
add
dec
adc
lret
jnp
jbe
(bad)
or
(bad)
sbb
int
lahf
shrl
scas
int
leave
xor
sbb
dec
jnp
cltd
fsub
jae
jmp
sti
mov
adc
lret
push
mov
xlat
xor
sub
xchg
add
pop
rorb
shll
(bad)
adc
das
imul
add
push
fstpl
mov
cmp
fsts
roll
cli
dec
sub
xchg
dec
or
push
popa
pop
push
jno
pop
add
jmp
(bad)
mov
stos
movups
lock
and
(bad)
fimull
lods
pop
sub
sbb
int1
dec
mov
sub
into
and
lods
(bad)
jae
mov
outsl
repnz
rorl
push
lds
push
sub
lret
jle
iret
and
int1
inc
and
ljmp
cmc
in
stos
imul
fmul
and
or
insl
andl
mov
rcrl
dec
sbb
or
(bad)
mov
and
pushf
std
mov
or
sbb
push
jecxz
scas
and
sbb
sarb
mov
mov
into
dec
sbb
outsl
aas
lods
inc
pushf
or
lds
xor
aaa
push
xor
cltd
aad
cmc
xor
mov
mov
into
push
push
je
or
add
ss
dec
inc
ss
inc
pop
mov
stos
xchg
je
sbb
sub
rorb
xor
adc
mov
test
mov
outsl
mov
or
ljmp
pusha
sbb
pushf
mov
bnd
push
(bad)
int3
test
sub
arpl
push
inc
mov
jle
mov
les
sub
rcrb
push
and
loope
(bad)
xor
xchg
mov
loopne
fildll
cmp
jae
hlt
mov
lret
lcall
cli
mov
stc
cmc
sbb
leave
mov
divb
int3
pop
cmp
test
jns
fucomip
je
repz
inc
sub
into
jne
mov
lret
lret
gs
cltd
push
inc
js
dec
cld
out
adc
call
js
ss
mov
call
cmpsb
push
bound
enter
sbb
inc
(bad)
popf
adcb
or
cmpb
(bad)
pop
xchg
enter
out
dec
sahf
jne
(bad)
call
es
je
cmpl
push
loop
mov
xchg
cli
lret
mov
and
fsubp
push
pop
push
xchg
push
or
repnz
sbb
in
cmp
sbb
movsb
mov
test
fmuls
sarl
cmp
cmp
hlt
jnp
jae
adc
and
dec
jns
push
xor
daa
test
notl
add
mov
mov
add
cmp
outsb
push
dec
das
aad
call
add
ljmp
push
fildll
xor
xor
cmc
mov
test
adc
negl
pop
fbstp
cmp
mov
test
jmp
out
stos
sbb
or
shrb
cltd
nop
addr16
sbb
lea
cld
incl
jp
lcall
adc
jmp
rol
jnp
pop
jne
insb
dec
inc
fldenv
cwtl
ja
cwtl
pop
outsb
add
add
mov
sti
enter
adc
mov
adc
inc
and
mov
push
shlb
xor
mov
inc
adc
cmp
adc
test
jne
mov
mov
fs
xchg
jno
jo
mov
cmp
dec
arpl
mov
adc
cli
mov
fcomps
mov
push
and
repz
push
pusha
addr16
or
push
ds
cmpsl
iret
stc
nopl
mov
std
lcall
jno
in
mov
fimull
xchg
mov
push
mov
sbb
lock
xlat
mov
clc
ror
and
movsb
out
ret
sbb
lock
sarb
fidivrs
inc
fsubrl
adc
dec
jno
ret
ret
stc
leave
js
adc
ja
xor
or
(bad)
bound
push
ret
cmp
mov
out
sub
aam
cld
cs
jge
cltd
mov
push
mov
ds
in
jo
cld
ss
dec
push
jmp
lret
(bad)
cltd
lcall
lret
gs
sbb
mov
xor
or
repz
popa
cmpsb
jle
negl
outsw
cmpsb
sub
jle
fdivrp
mov
jae
inc
mov
lret
pop
lret
loop
rcrb
decl
mov
mov
sbb
pop
xor
push
(bad)
push
adc
aas
jnp
adc
mov
mov
dec
adc
or
jnp
out
push
out
cmp
cld
cltd
inc
in
mov
enter
imul
addl
stos
adc
(bad)
in
pop
pop
sub
jge
xorb
push
xchg
lret
adc
lds
cmp
int1
dec
adc
or
dec
mov
out
int1
push
push
fcomip
mov
scas
int1
pop
add
adc
ja
sub
movsb
push
jb
clc
cmpsl
mov
lock
shrb
mov
ljmp
out
cmc
shll
jge
push
fldt
sbb
xchg
shlb
sbb
jo
js
rorl
and
push
dec
(bad)
push
push
jp
bound
dec
mov
sbb
pop
add
adcb
insl
rcrl
xchg
pop
mov
adc
xor
xbegin
xchg
(bad)
xorl
sgdtl
adc
shrb
rolb
stos
je
sub
movsl
(bad)
decl
mov
jle
mov
loop
adc
rcrl
cli
in
cmp
movsb
xchg
idivl
push
scas
shll
xor
mov
cmp
int1
iret
sub
aad
mov
imul
push
sub
xor
(bad)
iret
dec
dec
inc
mov
add
lds
cmp
lcall
outsl
xchg
dec
insl
mov
sti
iret
(bad)
sbb
mov
push
fcmovne
mov
fistpl
xchg
cmp
push
fdivs
clc
or
repz
int1
xchg
(bad)
sarb
jae
fcmovu
fbld
add
popa
rorb
dec
xchg
fwait
daa
cld
shlb
push
and
mov
out
dec
mov
push
mov
xor
xabort
push
and
or
test
adc
jmp
and
sbb
scas
jnp
fisttpll
mov
stc
and
insb
mov
push
and
int
out
int3
(bad)
mov
(bad)
sbb
clc
das
popf
fmul
out
mov
sub
sbb
xchg
lret
out
add
mov
test
push
xchg
jns
sub
rcrl
or
int
dec
and
xchg
movsl
xor
mov
mov
dec
or
adc
jmp
dec
es
mov
imul
stos
daa
pop
cwtl
mov
or
les
mov
popf
xchg
dec
cltd
addl
pop
das
fs
(bad)
lock
sbb
mov
xchg
and
int3
and
aas
(bad)
pop
mov
fcomps
dec
cmpsl
es
stos
lcall
cmp
cmp
stos
fbstp
mov
sub
push
in
cmpsl
adc
pop
jp
fisubrs
and
cmp
xor
ffree
xchg
(bad)
decb
mov
or
jae
pusha
ret
imulb
pop
loopne
cli
jbe
push
dec
dec
jb
lods
xor
insl
movsl
lret
negb
push
sbb
jecxz
and
