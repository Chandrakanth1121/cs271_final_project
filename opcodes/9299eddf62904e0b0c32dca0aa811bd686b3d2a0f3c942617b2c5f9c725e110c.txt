mov
add
add
add
add
add
add
add
add
add
add
push
call
mov
add
push
add
push
add
or
sbb
add
add
add
adc
add
add
jb
add
jo
add
jae
add
or
push
push
jae
add
or
pop
outsl
or
add
fimuls
or
or
add
or
pop
outsl
or
add
sub
add
or
add
or
lea
add
add
or
add
mov
add
fimuls
push
sub
push
outsl
or
add
fsubrl
add
add
add
add
add
daa
add
add
add
add
adc
dec
pop
add
add
add
xor
jge
pusha
sbb
aad
fsubrp
ficomps
pop
popf
mov
leave
mov
ss
lods
dec
daa
arpl
cwtl
fadds
insb
arpl
cmpsb
lret
jmp
fnstenv
dec
xchg
hlt
sbb
and
inc
xor
inc
inc
mov
or
dec
call
idivl
pop
out
sub
lock
pop
imul
mov
jns
out
in
in
int3
into
jae
shll
or
lods
pop
mov
outsl
xchg
(bad)
xchg
shrb
div
les
fstpl
fldl2t
aaa
mov
test
mov
pop
pop
mov
jmp
inc
mov
int
shlb
sbb
mov
sub
popf
and
mov
cmp
lods
fldt
adc
pop
sub
mov
push
mov
pop
jecxz
mov
decl
pop
(bad)
mov
xor
out
push
leave
popa
sub
fwait
xchg
(bad)
push
mov
mov
pop
repnz
pop
je
int1
mov
mov
(bad)
add
mov
xchg
mov
adc
mov
out
and
mov
js
call
inc
mov
int3
jns
mov
fs
movb
inc
mov
cmp
lods
sub
sbb
outsb
mov
scas
jmp
in
iret
ss
int3
and
(bad)
ret
rcrl
outsb
jg
jecxz
lahf
cli
mov
test
jp
fstpt
lret
mov
cmp
into
imul
sbb
js
ret
mov
or
mov
xor
mov
mov
test
fsubs
aam
sub
mov
ret
mov
mov
sti
push
ds
ret
jecxz
and
nop
cld
push
aam
push
sahf
cli
out
test
push
leave
mov
push
xor
ret
add
dec
dec
cli
es
fsubl
fistps
push
xchg
imull
xchg
pop
inc
ror
adcb
mov
and
mov
jg
push
cli
lods
jns
adc
pop
stos
dec
xor
pop
mov
mov
xchg
push
cmpsb
add
scas
ret
sbb
pop
xchg
sbb
call
enter
mov
clc
les
not
pop
loope
fbstp
mov
xchg
idiv
aad
mov
pop
arpl
cltd
dec
mov
push
dec
or
popf
pop
outsl
push
xor
popf
ret
dec
out
out
orb
flds
mov
popf
add
xchg
lock
sbb
loope
mov
ljmp
cld
popa
add
inc
xor
inc
mov
mov
pop
loope
inc
nop
sub
mov
adc
xor
inc
popa
cmp
fdivs
test
pop
xchg
movsl
rcrb
and
mov
sub
mov
jbe
push
push
push
movsb
push
aaa
cltd
push
dec
(bad)
and
cltd
stos
bound
lret
cmp
fcomip
(bad)
gs
inc
mov
iretw
mov
idiv
xchg
fcmovne
cmp
push
dec
rsqrtps
jno
shrb
inc
mov
cmp
lret
ljmp
out
lea
in
xor
sbb
jge
cmc
sub
mov
out
cld
push
xchg
jne
inc
add
mov
jb
mov
int1
daa
xor
adc
cmp
leave
dec
mov
in
insl
add
sub
push
sarb
sbbb
les
ret
sahf
mov
movsl
push
test
mov
in
gs
inc
adcb
mov
mov
fs
aas
dec
push
inc
in
mov
loope
out
sbb
arpl
bound
cld
adcb
cmp
and
lret
out
stos
rorl
out
push
adc
scas
adc
mov
cmp
add
int1
sub
int1
sub
test
vmwrite
psllw
push
push
mov
cmp
and
push
mov
cmp
arpl
int1
mov
sahf
lock
les
js
inc
cmp
adc
mov
int1
mov
fiaddl
pop
and
les
addb
push
stc
aaa
cld
cld
sub
push
cld
cld
cmp
inc
sub
lret
out
paddb
and
pop
in
lahf
cmp
(bad)
sbb
xchg
jb
inc
push
push
pop
push
inc
xor
popa
jg
adc
dec
test
fwait
test
das
pop
mov
jp
out
sahf
test
and
jb
mov
mov
sub
mov
roll
cs
mov
lret
mov
stc
jno
and
in
mov
mov
mov
jp
sub
pop
inc
jns
jmp
mov
(bad)
sbb
cmpsl
out
test
pusha
push
daa
xor
in
sbb
outsl
and
mov
gs
popa
nop
stc
mov
popa
inc
loope
push
enter
clc
xchg
push
test
mov
mov
and
test
add
sbb
rclb
pop
jb
sub
xchg
jg
inc
mov
cmp
rclb
mov
jle
call
cltd
decb
addr16
sbb
adcb
mov
int1
mov
adc
jl
xchg
stc
sahf
movsb
fimuls
mov
jge
pop
push
ss
outsb
movsb
loopne
inc
pop
cmp
lret
(bad)
adc
psraw
les
xor
repnz
and
inc
xchg
xor
push
jae
pop
sub
push
aam
or
inc
push
jb
iret
lret
mov
rcrl
insb
add
(bad)
(bad)
scas
test
push
in
cmc
in
cld
add
jno
mov
and
out
je
sbb
fisubs
inc
cmp
rolb
fisubs
mov
dec
ds
enter
lods
and
mov
cmp
and
ficoms
call
inc
jle
inc
iret
insb
mov
dec
movsb
pop
into
lret
add
enter
cld
cmp
pusha
or
jg
ret
loopne
xlat
inc
int1
lea
inc
jl
and
mov
sub
nop
xchg
push
mov
nop
inc
sub
or
and
and
or
cmp
push
or
inc
call
inc
and
cmpsb
xchg
adc
or
notl
jno
dec
js
test
cmp
push
and
push
mov
xadd
in
add
pop
sbb
cwtl
addr16
mov
mov
jb
ret
mov
arpl
dec
jmp
sbb
push
shll
stc
dec
cmp
push
call
and
mov
sbb
add
daa
xchg
mov
outsb
ljmp
pop
in
add
jo
sub
call
mov
rorl
out
add
dec
mov
mov
sbb
gs
push
push
inc
scas
sti
pop
je
and
stc
and
or
inc
imul
add
scas
lahf
inc
fcompl
add
inc
into
dec
push
xor
sbb
jne
dec
fnstsw
push
repnz
mov
cmp
cmc
stc
jp
push
inc
xchg
and
out
cmc
lds
sub
aaa
test
pause
sahf
iret
out
frndint
sub
std
(bad)
push
in
fiaddl
dec
or
movsl
scas
inc
mov
add
aam
sbb
pop
test
sub
dec
aas
and
aam
pop
sub
adc
movsl
sub
fisubl
in
mov
loop
jo
xor
fistpl
cmc
mov
cmp
mov
lds
(bad)
cli
loop
jo
cmc
(bad)
insl
rclb
pop
push
jno
mov
(bad)
out
stos
pusha
sahf
out
dec
xchg
scas
mov
loope
mov
push
mov
dec
push
mov
add
popa
lcall
mov
adc
outsb
sbb
sub
inc
loop
sbb
lcall
inc
mov
lea
