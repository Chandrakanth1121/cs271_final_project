js
arpl
add
daa
xchg
add
data16
and
pop
mov
outsb
data16
pop
mov
add
sarb
jbe
outsb
or
mov
out
adcb
cmp
test
jne
cmpsb
in
add
lahf
xchg
ret
pop
jmp
sbb
mov
add
push
xchg
xchg
sbb
cltd
push
aaa
or
xchg
jb
rorl
mov
add
mov
aas
mov
enter
mov
aam
lea
js
xor
xlat
or
imul
and
dec
jns
mov
push
sbb
sbb
jo
xchg
jno
(bad)
(bad)
or
int1
mov
sarb
js
decl
jns
mov
or
jmp
fmulp
lcall
jae
mov
mulb
shlb
cmc
push
mov
xchg
test
imul
or
mov
ret
outsl
and
push
popa
test
mov
add
xchg
pop
std
insl
mov
loop
in
xchg
imul
sub
std
addr16
in
mov
mov
ja
jbe
push
xchg
adc
dec
nop
push
(bad)
aad
fdivs
adcb
add
stc
movsb
dec
inc
fstpt
out
add
pop
inc
or
mov
inc
mov
pop
mov
andl
inc
decb
loop
clc
loopne
ror
adcl
ja
sub
fildl
pop
push
push
mov
test
(bad)
loopne
cmpsl
sbbl
adc
inc
push
inc
mov
push
cltd
xchg
lock
mov
add
packsswb
outsb
inc
(bad)
pusha
test
in
pushf
insb
test
add
js
sub
nop
aas
sbb
sub
lret
je
outsb
xchg
jo
pop
adc
cli
nop
iret
jmp
mov
fsts
jbe
jge
nop
aam
es
sub
push
test
xlat
lahf
jl
xchg
adc
and
aam
adc
pop
lea
in
les
lock
cwtl
xchg
and
mov
outsb
jnp
mov
ljmp
sbb
movsb
mov
xchg
dec
lret
sub
sbb
sbb
cmp
adc
inc
call
ljmp
outsb
jnp
mov
cltd
mov
(bad)
xlat
int3
sbb
mov
mov
dec
lret
push
outsb
data16
mov
mov
mov
cli
xchg
cmpsb
dec
mov
aam
jmp
lcall
sbb
mov
addr16
subl
push
stos
in
out
das
lcall
pop
xchg
adc
sarl
out
andl
fwait
xor
sub
push
inc
sub
int1
and
test
and
test
test
jl
xchg
sub
and
movsl
jle
ljmp
push
xchg
daa
loopne
mov
outsb
mov
lcall
loop
sub
mov
cmp
xor
sbb
mov
cmpsl
cmp
push
ret
or
pushf
rclb
leave
mov
xlat
cmp
cmp
sub
sbb
dec
lcall
mov
int3
das
push
test
xchg
and
lods
in
cli
lods
cmpsb
dec
jecxz
mov
jmp
add
aas
ffreep
(bad)
push
mov
ss
loope
lret
mov
(bad)
outsb
adc
enter
test
push
into
cmp
cltd
adc
sbbl
lcall
(bad)
aam
es
cmp
cltd
mov
popf
xchg
ja
mov
int
jo,pn
and
lret
mov
pusha
popa
cmp
fs
jl
(bad)
movlps
outsb
mov
(bad)
and
sub
mov
pushf
cmp
cmc
jmp
sub
cltd
mov
sahf
js
sub
or
cli
imul
adc
jne
add
xchg
mov
sub
adc
sbb
adc
jbe
mov
lret
push
xchg
jp
pushf
inc
mov
sub
rorl
or
dec
pop
sbb
int
sbb
mov
add
adc
sub
xchg
jp
pushf
mov
sub
sub
push
or
outsb
call
and
jle
arpl
in
mov
lcall
jns
mov
inc
or
push
(bad)
push
in
in
cli
in
cmpsb
dec
movsb
out
pop
xchg
dec
and
jnp
test
adc
xchg
scas
adc
mov
imul
mov
mov
lcall
test
in
fsubl
scas
mov
movsb
push
pop
jmp
cwtl
or
mov
jp
adcb
push
mov
push
btc
push
sub
push
test
mov
mov
in
xor
mov
xor
addr16
add
or
ret
cs
ror
cmpb
or
fcom
test
insl
fwait
mov
loop
jno
and
sbb
test
push
dec
out
repz
scas
sbb
or
stos
stc
or
nop
mov
and
movsl
cmp
pushf
gs
mov
xchg
test
mov
popa
shl
mov
xor
lods
xchg
mov
mov
das
and
mov
in
repnz
sub
inc
pop
outsb
cmpsl
adc
popa
popf
mov
loopne
push
int3
push
sbb
push
mov
xor
sahf
xchg
mov
sbbl
add
adc
and
lea
xchg
xor
lods
pop
pop
add
loop
and
pop
mov
ss
lret
sbbb
outsb
pushf
sub
pop
lds
scas
je
lret
pop
cmpsl
xlat
insl
or
addr16
sbb
pop
mov
into
lods
repz
jne
jg
pop
sub
aaa
in
lods
leave
mov
and
in
mov
sahf
sub
loop
andl
shrl
pop
inc
shll
push
add
sub
or
out
or
mov
add
lret
mov
xor
enter
pop
jbe
inc
divl
xor
and
fcomi
sbb
xor
mov
jmp
sub
int1
push
dec
xchg
lret
push
imul
jg
add
ja
xchg
and
cmc
enter
nop
jae
xchg
mov
mov
sbb
sbb
mov
pop
cmp
je
(bad)
out
cmpsl
add
je
sbb
cmpb
lock
mov
jg
inc
cmpsb
arpl
dec
sub
test
inc
testb
jge
notl
sbb
lcall
cmc
push
scas
mov
add
(bad)
mov
mov
fnstenv
in
inc
or
xlat
fwait
sbb
outsb
mov
xchg
jno
daa
push
pop
mov
ljmp
fimull
pop
adc
cmc
or
add
lods
ljmp
mov
out
jg
pop
pop
push
sub
dec
xor
mov
movsl
cltd
sub
insb
adc
neg
pop
stc
or
and
sbb
add
mov
fistps
push
sbb
subl
aaa
int1
and
jno
pop
pop
lahf
es
stos
mov
sti
pop
movsl
cmpsb
cmpsl
jne
mov
xchg
in
add
rcrl
jg
lea
mov
jge
les
mov
aam
out
pushf
(bad)
adc
jg
inc
mov
ss
cmp
jo
cli
lods
enter
std
mov
push
sar
mov
cwtl
int
fs
pop
sbb
push
popa
pop
test
fcoms
add
mov
enter
jp
dec
imull
divb
mov
fwait
pop
dec
fidivrs
mov
push
mov
loope
sahf
xchg
mov
fs
into
cwtl
(bad)
shlb
mov
les
notl
leave
jp
scas
inc
or
lcall
test
jl
scas
in
sub
and
sahf
mov
mov
mov
lods
popf
in
and
add
outsl
sbb
aam
lods
aaa
ja
repnz
sub
mov
scas
test
adc
stos
leave
add
sbb
rorb
jno
adc
mov
push
xlat
mov
scas
lret
jns
fmuls
or
xlat
xchg
pop
(bad)
pop
and
cmp
push
jl
adc
xchg
push
enter
jl
jp
or
inc
push
iret
aad
ror
insb
lds
push
pop
mov
mov
push
in
nop
dec
xor
daa
mov
push
nop
pop
mov
(bad)
hlt
clc
stos
(bad)
sbb
test
mov
sbb
and
mov
(bad)
pop
nop
xchg
loop
mov
add
lea
std
sub
lock
push
jle
sbb
sub
fistpll
cmp
mov
inc
add
int3
or
or
les
fdivl
mov
dec
mov
or
lock
(bad)
