rolb
jnp
scas
sub
in
or
cmp
dec
stos
cmp
dec
shr
fistps
ljmp
and
lods
push
pop
cs
aas
push
cmp
push
push
test
(bad)
scas
pop
inc
cmpsb
sub
push
out
aaa
xlat
fdivl
or
sahf
inc
pop
shll
insl
movsl
xor
nop
sub
loope
dec
andb
xchg
inc
test
inc
cmp
cmp
mov
rol
add
sub
jbe
ja
popa
test
push
inc
fbstp
ss
pop
in
std
xor
mov
inc
es
mov
test
(bad)
cs
xor
out
xlat
cltd
test
cmpsl
(bad)
sub
es
scas
pushf
cs
lods
cmp
lods
dec
and
loope
push
aaa
es
pop
pop
loope
ss
cmp
xlat
dec
mov
loop
mov
xor
jmp
lea
cmp
xor
into
cli
fisttps
fdivp
testl
push
push
pusha
aad
push
push
(bad)
in
mov
and
sub
das
cld
sub
xor
xchg
sbb
xor
xor
hlt
ljmp
xor
es
jl
and
or
popa
push
adc
mov
or
push
xor
push
loope
mov
std
jnp
cmp
ss
std
stos
jns
push
jle
lret
jmp
int1
outsb
sahf
push
cmpsb
dec
into
ss
jmp
es
out
out
pop
xchg
push
test
pop
sub
in
adc
sbb
pop
inc
repnz
fwait
iret
cmp
mov
mov
int1
cmp
out
(bad)
xchg
not
cmp
sbb
and
notl
mov
inc
(bad)
jae
lret
mov
leave
popf
jge
or
imul
sarl
insb
sbb
mov
xor
sti
adc
mov
pop
and
rolb
mov
push
sub
and
add
insl
(bad)
jns
adc
shlb
(bad)
leave
sti
xor
in
sti
mov
ds
add
add
aas
enter
idiv
mov
mov
out
clc
mov
sbb
inc
movsb
lds
rorb
pop
xorl
in
mov
xchg
out
iret
add
xor
sti
shll
inc
pop
dec
andb
jnp
push
pop
dec
aad
jo
mov
notb
sbbl
int
inc
es
inc
add
pushf
scas
outsb
ret
sub
(bad)
fsubr
or
ds
mov
push
mov
pop
pop
aad
xchg
jne
gs
push
push
inc
sub
xchg
push
shll
nop
and
push
bound
adc
idivb
(bad)
adc
daa
pop
rcll
imul
xor
inc
pusha
lods
jmp
in
jl
lods
add
arpl
and
scas
sbb
sarb
sarl
jno
and
xlat
test
jnp
(bad)
imul
out
int
xchg
cltd
stc
mov
stos
bswap
xor
add
(bad)
pop
mov
mov
cmp
fadds
fxch
cmp
xor
sub
push
sub
pop
mov
(bad)
test
adc
mov
jge
fld1
cmp
pushf
popa
push
lahf
push
mov
int
jo
pop
pop
sbb
jne
orl
xchg
xor
dec
fs
jp
push
into
push
xor
push
ds
lret
clc
dec
or
xchg
ja
xor
dec
shrl
loope
sarl
loopne
mov
mov
fldt
push
mov
push
mov
idivl
pop
push
inc
fninit
or
sub
and
lds
inc
inc
push
xor
sahf
xchg
std
nop
fcoml
popa
out
mov
or
mov
iret
in
divb
mov
int1
adcb
push
sbb
jo
xchg
jo
fs
cmp
xchg
or
fwait
(bad)
in
and
xchg
std
clc
sbb
call
adc
inc
adcl
sbb
sub
iret
xor
loop
mov
jb
push
loop
ljmp
scas
dec
push
mov
js
push
sub
fwait
cmc
repnz
es
std
add
push
pop
pushf
mov
fists
push
or
pushf
outsb
(bad)
ss
sbb
jo
dec
push
mov
xor
and
mov
lahf
aaa
(bad)
sbb
inc
js
ljmp
in
stos
int1
cwtl
mov
bnd
mov
push
aam
int1
dec
or
bound
(bad)
daa
in
mov
push
sbb
sbb
jo
lds
or
mov
out
sbb
mov
dec
loope
test
inc
test
push
(bad)
(bad)
mov
ljmp
jae
add
ljmp
mov
push
push
lods
pop
or
addr16
popa
shlb
or
daa
idivl
pop
or
scas
loop
push
in
jg
cmc
mov
ss
cmp
loop
sub
aad
adc
inc
cmp
sub
push
pop
and
in
cmp
(bad)
cmc
(bad)
ficoms
mov
jle
sahf
or
aad
scas
(bad)
cld
mov
cmp
adc
daa
adc
outsl
add
pop
xchg
pop
and
xor
popa
lds
add
mov
repnz
test
dec
cmp
xor
jp
int1
rcr
add
cmpsl
mov
jl
adc
xor
cld
add
or
fwait
or
je
jg
sbb
out
fldl
in
pop
adcb
repnz
push
jae
daa
mov
aam
push
adc
sub
pop
xor
sbb
inc
test
arpl
jae
adcb
add
adc
movsb
dec
adc
pop
negl
cmp
sbb
add
aam
xor
inc
sbb
mov
jl
ljmp
dec
inc
test
push
aad
xchg
lods
fistps
jp
pop
test
xor
xor
sarl
aas
repz
insb
iret
or
hlt
add
lods
cli
xor
outsl
push
fldcw
jge
in
pop
pop
int1
insl
pop
faddl
int
cld
addl
mov
arpl
mov
mov
inc
add
mov
in
popa
leave
sub
in
adc
imul
sub
(bad)
mov
insl
cli
mov
xorl
mov
push
fs
js
and
fwait
aad
adc
jae
or
lret
cmc
jge
and
mov
mov
sarl
cs
ret
dec
pop
lcall
sbb
and
jns
dec
mov
int1
ja
mov
lret
push
into
pushf
fwait
cmp
and
mov
pop
jecxz
cs
jno
scas
bnd
jae
xlat
shlb
xchg
pop
xor
mov
outsb
pop
in
push
(bad)
lret
neg
js
mov
pop
ja
movb
pop
mov
add
cmp
lcall
scas
sbb
out
mov
imul
sub
jnp
lods
(bad)
aas
shll
loopne
and
in
jbe
ror
inc
push
into
cmp
(bad)
int1
pop
jmp
mov
in
fsubs
mov
nop
cwtl
mov
scas
addr16
add
cs
mov
ficoms
dec
and
pop
shlb
(bad)
xchg
neg
sbb
fsubs
or
loope
add
pusha
(bad)
nop
xor
mov
pop
jno
inc
aad
mov
jp
gs
in
cwtl
psubq
cli
je
push
xorl
cwtl
xchg
scas
iret
push
gs
ja
jmp
ret
sub
xchg
test
std
ret
das
adc
dec
or
jg
fildll
fs
jmp
imul
pop
cwtl
xchg
in
lahf
ja
ja
mov
mov
mov
inc
jge
sbb
jmp
jns
orl
and
adc
es
fcomp
fstpt
out
cli
jb
lock
jns
fiaddl
lea
leave
mov
xor
push
cmp
stc
mov
inc
aas
dec
sbb
pop
add
movsb
leave
scas
ds
mov
into
pop
jge
adc
jb
xor
clc
std
inc
out
sub
pop
xchg
jbe
aad
sbb
jmp
cmp
rcrl
pop
push
cmpsb
xchg
mov
cmp
cmpb
and
mov
fs
sub
jmp
mov
cmp
add
push
jno
push
out
cs
cmp
adc
xor
xchg
mov
scas
sub
ss
and
popf
stos
std
