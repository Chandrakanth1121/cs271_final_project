add
add
add
add
add
add
add
add
test
add
add
add
push
sbb
add
pop
mov
xor
negb
nop
push
pop
cmp
mov
daa
add
xchg
xlat
jns
sbb
daa
xor
call
adcl
mov
mov
pop
out
fs
jne
inc
or
dec
and
out
xor
ja
mov
cltd
lock
iret
xchg
xor
pop
lods
in
push
lcall
inc
das
mov
or
test
xchg
testl
fbld
jp
ret
jl
daa
ret
mov
push
data16
push
jle
push
xchg
mov
jp
test
mov
inc
sahf
cwtl
adc
dec
pop
cli
pusha
out
sub
clc
pop
sub
push
dec
pop
fstps
xor
je
ljmp
test
int3
mov
cmp
cld
(bad)
cli
xchg
jle
jg
in
xchg
jp
push
aaa
outsl
adc
adc
testb
mov
fwait
rcrl
inc
es
and
cld
insl
sub
pop
fisubrl
xchg
imul
lds
xchg
mov
in
mov
in
test
jbe
test
stos
(bad)
insb
xlat
fucomp
gs
cmp
sbbb
adc
xchg
sbb
xchg
lret
int3
stos
push
jp
fisubs
out
xchg
insb
fldenv
mov
fwait
dec
ljmp
loope
pop
ret
jns
lcall
dec
aad
pop
loop
out
jle
int3
jne
insb
xor
sub
cwtl
rcll
jecxz
push
sbb
in
cmp
sahf
fs
call
lahf
sub
pop
jo
sqrtps
mov
fdiv
cmp
mov
lcall
out
dec
movsb
inc
movsb
test
out
pop
xor
int3
subb
stos
das
mov
sti
out
push
int1
xchg
xchg
dec
and
jb
sahf
xor
xchg
test
test
imul
shlb
insb
or
dec
insb
aaa
jecxz
pop
addl
scas
insl
jl
test
ret
stc
ss
lret
mov
sub
fistpl
xor
mov
cmc
mov
inc
fidivl
mov
cs
pop
mov
std
cmp
pushf
lock
std
xor
mov
in
add
mov
call
mov
mov
jae
jp
add
insl
pop
xor
push
add
cmp
test
push
sbb
popa
sub
add
enter
aaa
mov
movb
rorl
push
es
enter
mov
(bad)
test
in
lahf
jge
insb
jmp
mov
mov
pop
fsub
(bad)
ja
cld
in
rcll
(bad)
cld
mov
ja
loope
mov
(bad)
cmp
xor
jns
mov
ja
test
leave
cwtl
sbb
and
cmp
jae
or
mov
add
in
aad
imulb
or
loopne
lods
xchg
cli
scas
das
xor
cmp
imul
ret
into
mov
(bad)
adc
in
mov
fwait
cmpsl
and
das
out
imul
outsl
es
jp
push
sub
sub
lods
lea
push
decb
cmp
out
push
rol
sub
out
xchg
je
fmuls
in
cwtl
rcrl
lfs
or
and
and
ret
or
jns
dec
mov
push
sub
lret
hlt
popa
jecxz
xor
lods
sti
dec
dec
js
jae
pop
sub
stos
rcrb
mov
mov
mov
push
xor
jle
sub
leave
cmp
inc
aam
test
call
mov
int1
or
lods
(bad)
fdivrl
adc
dec
adc
and
push
push
xor
fldcw
xchg
imul
sbb
(bad)
pop
mov
int
xchg
cwtl
jae
sahf
out
clc
insb
outsl
out
mov
lret
outsl
in
repnz
(bad)
clc
decl
mov
int3
mov
jae
out
dec
mov
out
and
movsb
gs
mov
aad
adc
sub
sub
loopne
mov
adc
mov
hlt
in
pop
cld
mov
pop
add
push
ja
and
inc
or
push
rclb
lods
fisubl
arpl
adc
orl
or
out
and
vcvtss2sd
mov
cwtl
stos
fisttps
jb
pop
inc
lds
add
dec
test
shll
jle
sbb
enter
dec
push
cmc
mov
clc
mov
mov
inc
stos
aaa
lahf
jae
scas
and
adc
mov
in
dec
stc
jno
(bad)
(bad)
rolb
shrl
lret
js
repz
clc
daa
and
subl
out
push
mov
call
ja
mov
jbe
push
stos
xor
sbb
les
mov
jb
cmp
roll
pop
testl
mov
push
ret
push
rolb
inc
push
insl
push
push
or
lcall
(bad)
in
bound
cwtl
mov
xchg
xor
lock
iret
(bad)
xchg
and
and
pop
inc
inc
rclb
int1
insb
inc
add
cs
or
movsb
cmp
insb
enter
bound
push
pop
int1
push
fwait
outsl
and
mov
std
pop
lock
add
ss
jg
jbe
cltd
idivl
stos
rorl
stc
fidivrs
add
bound
xor
aam
stc
and
mov
cmp
popa
cmp
fistl
clc
mov
pop
jb
ljmp
into
leave
cmpsb
jl
js
call
mov
jl
mov
cmpsb
ret
ret
dec
les
sbb
cmpsb
testl
xchg
adc
xchg
imul
adc
sbb
and
jno
clc
out
jp
cmp
jo
sahf
jg
stc
arpl
mov
xchg
or
aad
popf
lret
daa
pop
adc
insl
push
and
lods
adc
into
xchg
push
out
xchg
(bad)
xchg
jmp
lcall
cmpl
mov
fwait
dec
dec
lea
inc
jns
xchg
jns
ja
and
add
adc
lcall
dec
push
dec
movsl
imul
pop
sbb
mov
test
stos
add
fwait
in
sti
jbe
aaa
cmpsl
push
fs
(bad)
or
rorl
leave
cmp
jg
(bad)
jnp
addr16
push
adc
arpl
test
bound
mov
and
sbb
je
mov
cs
shrl
jnp
mov
lods
popf
inc
in
xor
not
les
xor
cli
jb
push
das
jns
pop
mov
arpl
add
pop
sbb
cltd
imul
cmpl
aad
cmc
pop
rcrb
stos
stos
xchg
inc
mov
sub
adcl
push
mov
ss
adc
idivl
inc
loopne
cmpsl
cwtl
jmp
jmp
jg
movsb
popa
push
jnp
in
data16
test
cmpl
stos
fstpl
jb
mov
pop
gs
enter
fisubl
fldt
cmp
lods
lea
enter
xchg
insb
fstps
pop
in
orb
into
sbbl
add
mov
in
loope
jb
mov
lds
mov
sub
adc
lcall
pop
mov
fisubrs
push
fwait
mov
in
insl
(bad)
pop
ds
mov
adc
adc
stos
lret
xor
imul
pusha
push
dec
mov
(bad)
or
fsts
inc
sub
sub
mov
in
insb
push
sbb
inc
jg
pop
aad
lcall
hlt
aad
nop
cmp
cld
adcl
push
mov
pop
xchg
subl
fwait
lods
inc
cld
push
or
pop
inc
leave
inc
inc
shrb
dec
push
stos
movsb
and
gs
xor
pop
jg
rcrl
fmuls
jle
rcrl
inc
xchg
bswap
dec
hlt
or
adc
test
mov
pop
loopne
decl
int
jns
lods
jnp
pop
in
fstpt
psrlw
jae
fwait
das
or
fdiv
pop
push
lds
xor
out
fisttpll
mov
add
adc
into
negl
add
adc
push
mov
sarb
leave
inc
mov
lret
(bad)
sti
pop
sti
pop
sarl
cmc
jbe
and
cld
or
and
cmp
sahf
pop
sub
sub
jb
dec
inc
add
in
add
fs
(bad)
and
dec
xchg
adc
stos
lea
mov
pop
addr16
