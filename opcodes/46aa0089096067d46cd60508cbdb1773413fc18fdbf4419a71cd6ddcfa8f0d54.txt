scas
fildll
and
cmpl
pop
movsl
fucomip
aad
sub
(bad)
ljmp
or
push
mov
jg
negb
aam
mov
mov
inc
insb
mov
xchg
sahf
jp
xchg
stos
jp
fistl
mov
int
and
stc
lods
cmp
dec
mov
jge
add
add
js
lret
mov
jo
bound
mov
test
fsubr
xchg
les
push
cwtl
lock
lods
mov
out
pop
lock
imul
mov
inc
sub
in
fucom
ljmp
out
in
push
pop
pop
scas
leave
jle
jne
mov
subb
sar
push
or
jp
lret
call
mov
xchg
cwtl
or
push
loop
dec
mov
lds
data16
lock
jl
and
pmullw
bound
test
addb
insl
jb
cwtl
push
divl
mov
mov
outsb
ja
out
lret
cmp
lock
shll
mov
sbb
hlt
in
xchg
mov
cmp
mov
dec
inc
and
jp
sub
pop
inc
mov
ljmp
mov
or
cmp
ja
mov
ret
sub
add
cmpsl
adc
lea
(bad)
movsb
lock
mov
and
sub
fadd
xor
inc
insl
fistl
or
xchg
jg
dec
(bad)
ficoml
adc
and
add
mov
fdivrs
test
xchg
xchg
sbb
mul
cmp
sahf
sub
out
add
mov
sub
mov
mov
inc
dec
mov
(bad)
aam
test
loope
xchg
movsl
xlat
call
stc
or
or
cwtl
add
gs
int3
ja
inc
dec
stos
jle
jle
pop
mov
pushf
loope
mov
ret
sbb
push
jl
mov
add
add
mov
bnd
lcall
rclb
xor
hlt
fcoms
push
fs
fstps
sub
lahf
pop
in
(bad)
jmp
push
sti
adc
pop
mov
lea
into
sub
cmp
ret
adc
scas
adc
mov
dec
sub
ret
(bad)
js
outsb
decb
mov
mov
push
mov
jge
sbb
mov
push
(bad)
in
aam
das
dec
(bad)
sub
mov
lods
mov
fwait
cmpsl
mov
in
(bad)
mov
fwait
and
dec
roll
xor
jmp
adc
dec
pop
stos
movb
loop
pop
push
movsb
mov
mov
or
cmpsb
test
inc
fstpt
inc
mov
movsl
push
popa
mov
mov
xchg
enter
or
push
dec
cmpsb
mov
jmp
mov
xor
jb
adc
mov
sub
mov
imul
xchg
xlat
lcall
popa
xchg
enter
push
and
sahf
sbb
pop
jg
mov
xchg
(bad)
sub
lea
loope
ds
(bad)
movsl
pop
sti
adc
adc
int
mov
xchg
or
fisttps
push
and
and
adc
dec
lret
test
mov
adc
sbb
push
mov
mov
daa
mov
jo
test
lds
sub
mov
sbb
or
cmpb
mov
and
out
enter
scas
scas
loop
xchg
outsb
mov
pop
jg
jae
popf
sub
pop
xorb
sub
pop
out
fisttpl
mov
dec
scas
and
push
hlt
adc
mov
mov
jbe
jmp
out
mov
ljmp
dec
cmp
lret
jb
pop
sub
pop
pop
jns
mov
orb
mov
dec
ja
insl
ja
jg
fcmovu
xor
pop
pop
lret
add
out
fnsave
mov
pop
jmp
rclb
xchg
push
shlb
inc
xchg
jb
pop
iret
out
loopne
fistps
pop
adc
or
call
sub
mov
jle
mov
(bad)
mov
test
adcb
jl
mov
jnp
mov
inc
and
jne
repz
repnz
aas
in
add
outsb
insb
outsl
call
shlb
inc
cwtl
ret
sbb
(bad)
out
sub
bound
add
cmp
xchg
imul
les
aam
mov
lods
into
(bad)
mov
sbb
push
cmpsl
cmp
jns
(bad)
es
out
leave
dec
pop
adc
jnp
in
pop
lods
fdivrs
mov
xor
ret
jb
les
enter
or
push
cmc
shll
scas
lea
shl
adc
jae
sbb
xchg
out
xor
jge
fcomps
xlat
mov
mov
jo
pop
lods
repz
movsb
adc
jo
(bad)
xor
stc
fcmovb
push
bnd
pop
nop
adc
lock
ja
lret
mov
test
pop
mov
aam
test
mov
cmc
loopne
add
pop
mov
mov
fndisi(8087
lods
dec
mov
xchg
inc
jg
pop
xchg
mov
fwait
sub
xchg
in
outsl
mov
ficomps
nop
rolb
adcl
dec
push
jns
mov
rcr
sub
mov
adc
pushf
mov
roll
mov
sbb
je
xorl
push
out
ljmp
out
cli
pop
lahf
mov
or
iret
(bad)
mov
test
lock
and
subb
mov
(bad)
cli
add
fs
pop
mov
or
sbb
test
pop
aad
sbb
sub
test
pop
jno
push
fidivrl
stos
sbbb
mov
fistpll
outsb
gs
mov
lgs
mov
push
and
push
mov
lahf
jmp
sbb
jne
mov
loope
pop
in
les
xor
lds
nop
and
fsubs
ret
pusha
add
push
sub
(bad)
scas
std
sbb
(bad)
xchg
(bad)
popa
lahf
mov
or
or
dec
or
(bad)
xchg
cmc
push
insb
popa
loope
insl
mov
mov
testb
push
inc
rorl
stos
ret
jb
int1
jo
inc
dec
add
mov
adc
add
pop
dec
mov
fldcw
push
hlt
jbe
xchg
mov
out
(bad)
jge
jg
test
inc
jg
roll
in
imul
push
xchg
fs
ds
test
repz
sub
aaa
xor
addb
psrlq
sub
call
mov
or
mov
sbb
dec
in
data16
jl
sub
jp
stos
repnz
pusha
sahf
jnp
adc
sbb
mov
bnd
insl
mov
mov
or
dec
adc
sbb
(bad)
mov
out
cs
add
xchg
lcall
cmpsl
mov
mov
or
pop
lock
sahf
xchg
shll
mov
rcr
in
stos
out
sahf
dec
sub
test
js
cmp
or
jmp
push
sbb
fcoms
mov
bound
sbb
pop
loop
mov
aam
adc
dec
or
clc
jmp
out
daa
in
cmpsl
punpckhwd
adc
pop
adc
imul
or
jg
in
(bad)
notl
adcl
jle
js
inc
aam
out
mov
pushf
mov
int
enter
in
and
stos
rcrb
ret
cmpsb
hlt
add
push
jmp
lods
(bad)
stos
pop
sbb
jbe
adc
(bad)
pop
adc
lahf
ret
sub
mov
movsb
mov
test
lcall
and
jmp
shrl
xchg
jo
sub
sub
(bad)
shrb
mov
inc
xlat
add
(bad)
pop
ret
xlat
(bad)
xchg
pop
in
jnp
leave
mov
pop
aaa
sbb
mov
or
sbbb
(bad)
mov
push
inc
cld
add
and
ja
push
mov
push
gs
int1
jae
testl
or
test
aad
mov
shlb
mov
mov
sub
adc
(bad)
cltd
cli
imul
lods
and
nop
lods
out
aaa
nop
push
pop
mov
mov
push
popf
and
mov
call
push
ds
mov
es
popf
test
xchg
mov
fisubrl
outsl
mov
loop
inc
add
push
arpl
xlat
inc
shrl
push
dec
adc
cmpsb
or
xchg
jge
fildll
xchg
sarl
fnstsw
cmc
or
test
mov
je
inc
sub
adc
lock
jb
shlb
sbb
fisubrs
(bad)
jmp
pop
xor
je
(bad)
clc
cmc
mov
mov
cmp
adc
adc
lods
or
jge
andl
push
int1
