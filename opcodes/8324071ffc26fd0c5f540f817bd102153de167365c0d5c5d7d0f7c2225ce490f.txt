xor
pop
pop
jl
xchg
and
mov
adc
xor
jg
lahf
sub
push
xchg
sbb
je
fstpt
jns
popf
cmc
jge
lahf
dec
jne
cmp
jnp
sahf
roll
fucom
iret
fwait
ret
xchg
std
rcrb
mov
sbbb
mov
iret
dec
jle
stos
sub
cmpsb
inc
shll
add
jno
dec
and
notl
cmp
mov
aad
repz
adc
stos
jge
mov
aam
repz
outsb
repz
in
popf
fwait
jp
cmpsl
sub
xchg
fwait
sbb
popa
test
or
(bad)
bound
lock
cmpsb
(bad)
push
mov
fwait
add
cltd
inc
jb
mov
and
cltd
jnp
fistl
lret
lcall
in
int
jno
mov
call
outsb
fnsave
and
mov
xchg
sub
xor
jmp
out
xchg
fiadds
loopne
mov
cwtl
fsts
sarb
xor
(bad)
cli
popf
push
push
shrb
lods
fstpl
lods
insb
push
xchg
cmp
std
(bad)
lahf
add
scas
sub
cmp
jb
bnd
xorl
xchg
repz
data16
xchg
sahf
mov
inc
(bad)
(bad)
lcall
xlat
jmp
lods
jp
xlat
orl
shlb
nop
outsb
pop
bound
stos
jnp
repz
mov
sub
sbb
pop
pop
test
je
cmp
clc
scas
sub
loope
popf
imul
aas
sub
sbb
inc
stc
cltd
leave
mov
mov
cwtl
jmp
cmp
repz
pop
pop
fisttpll
lret
adc
out
adc
and
ljmp
lock
out
repnz
push
loope
sti
xchg
rep
dec
sahf
mov
fs
movsb
and
(bad)
and
jle
mov
cmp
xchg
lcall
int3
jae
cmp
cmc
popa
lods
inc
jo
lea
dec
loopne
nop
hlt
stos
(bad)
xor
pop
dec
int3
dec
shll
inc
cwtl
lds
xchg
insb
ret
fdivrs
in
and
inc
and
shrb
inc
in
movsb
fimuls
pop
and
insb
(bad)
fcmovb
rclb
ret
stos
and
outsl
addl
pusha
adc
jge
add
fimull
dec
mov
push
lds
jge
imul
mul
xchg
iret
push
std
and
and
das
rcl
dec
in
xor
mov
nop
stos
pop
xor
(bad)
arpl
xor
sbb
scas
into
adc
or
mov
cmpsl
and
jnp
mov
jno
jno
mov
sbb
(bad)
loop
rcl
les
arpl
test
cmpsl
mov
fxch
fcoms
sub
jp
mov
xchg
imul
or
stc
xchg
xchg
(bad)
addr16
lahf
sarl
popf
loope
fstpl
xlat
jno
mov
shll
rcrl
mov
sbb
mov
lahf
shll
xor
std
dec
cmpsb
fs
pop
(bad)
jl
pop
lret
lahf
(bad)
movsb
xchg
bound
push
lds
shll
adc
addr16
iret
int
push
fwait
push
sahf
(bad)
lahf
adc
jp
cltd
lret
pushf
roll
js
cmpsl
fidivs
mov
sbb
push
mov
xorl
fnclex
push
movsl
loope
clc
jle
popf
std
lea
(bad)
(bad)
decb
and
int3
xchg
sbb
lcall
filds
cmpsl
fs
into
mov
divl
stc
dec
push
add
xor
xchg
test
stc
sbbb
jbe
test
xchg
jbe
les
inc
js
jns
and
pop
stc
push
mov
lods
std
aad
push
mov
and
xchg
xchg
(bad)
xchg
loopne
int
and
rcr
ja
pop
push
mov
lea
mov
mov
in
aam
and
cwtl
sets
sbbb
cmc
stc
and
jg
xchg
sub
int3
lahf
(bad)
jge
popf
movsl
imul
test
call
xlat
nop
jle
inc
cmpsb
and
and
or
jge
(bad)
mov
test
pop
jge
scas
pop
adc
adc
jge
jbe
jle
or
repnz
mov
clc
jo
jge
int3
pop
jae
lret
(bad)
sahf
pusha
dec
loope
int
sub
mov
es
das
clc
pop
aam
pop
xchg
fwait
leave
and
jle
xchg
loope
sbb
jne
mov
push
pushf
in
outsb
leave
jo
sbb
push
loop
inc
pusha
mull
int3
adc
push
rcll
loop
ss
sub
sar
jae
cltd
repz
and
(bad)
rcpps
xchg
sarb
xchg
out
cli
inc
int
dec
cmpsl
mov
xchg
ret
xchg
jno
sub
inc
sub
(bad)
scas
shrl
ja
imul
ret
data16
(bad)
insb
scas
cmc
outsb
sti
add
mov
fldl
les
and
ja
or
xor
je
inc
cmpsb
mov
add
xor
cmp
int1
repz
pusha
(bad)
add
popa
push
xorl
aam
mov
jo
xchg
ret
mov
scas
jne
cmpsb
int3
mov
mov
fmull
fdivl
stos
add
cmp
(bad)
sahf
ss
inc
aas
cli
jns
jbe
cltd
dec
movsl
cmp
cld
add
int3
push
mov
jne
jbe
pop
clc
jno
adc
test
pop
inc
adc
aad
xchg
sbb
fdivrl
adc
cmp
pushf
aam
sub
(bad)
xchg
xor
popa
aam
lcall
jge
push
jb
ss
js
movsb
sbb
push
dec
out
ss
mov
cmpsl
popf
xor
pop
xchg
test
mov
in
je
test
leave
mov
push
xchg
lcall
arpl
adcb
loope
jne
adc
inc
shll
adc
insl
push
cmp
stos
mov
push
pop
fstl
mov
es
dec
(bad)
xor
cwtl
xchg
inc
xor
in
ja
int1
sub
movsb
je
lahf
inc
or
pop
int
adcl
jmp
aam
xor
(bad)
cmpsb
pusha
jns
add
jb
push
jo
loop
stc
or
subb
rcl
xor
mov
mov
push
leave
jns
sbb
dec
popf
aad
cmpsl
sub
add
rorl
inc
je
out
ret
lea
shll
xlat
rolb
lret
clc
jg
jge
rcr
stos
cld
push
outsb
dec
sub
inc
pop
mov
ds
rcr
loope
(bad)
pushf
cmc
mov
pop
imul
pop
aam
arpl
xor
js
cwtl
clc
daa
cmc
jb
and
jbe
int3
lret
pushf
pop
pop
cmp
push
fidivrs
das
adc
jecxz
lcall
pop
dec
nop
xchg
out
rep
shll
rep
ret
push
xchg
mov
(bad)
or
pop
push
js
pop
dec
(bad)
aam
push
inc
push
push
lret
xchg
push
sahf
push
pop
jno
lds
fidivrs
mov
jnp
idiv
je
pop
push
repnz
sbb
jns
cmc
in
push
mov
cltd
rolb
or
cli
push
in
add
ljmp
jl
je
stos
fildll
lret
jnp
jg
xchg
mov
push
and
rcrl
int
lea
pop
push
insl
push
sub
mov
in
cmpsb
pop
jle
faddl
stos
cld
xchg
imull
inc
cmp
mov
test
int
xchg
repnz
mov
filds
insb
xor
stc
shll
hlt
xchg
loopne
fstpt
sub
pusha
les
dec
jns
pop
loope
dec
or
aad
jbe
ficompl
lcall
int1
iret
cmp
loop
je
das
and
iret
sub
push
dec
sub
mov
sub
aas
xchg
jmp
push
mov
hlt
push
loop
xor
push
xchg
mov
adc
shlb
add
ret
cwtl
je
mov
dec
push
sarl
xchg
ficomps
nop
pop
test
rol
mov
hlt
test
dec
filds
movsl
sub
lahf
and
push
cmp
push
xchg
int1
xor
xor
adc
push
push
sbb
mov
xchg
xchg
lcall
