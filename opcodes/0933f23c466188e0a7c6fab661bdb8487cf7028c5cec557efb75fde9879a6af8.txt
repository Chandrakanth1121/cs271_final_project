xor
xor
add
pop
and
push
stos
rex.rx
(bad)
ja
mov
add
andb
rex.wrx
mov
cs
sub
mov
xor
fdivrs
leave
movl
sbb
or
cmpl
movslq
add
push
(bad)
push
mov
xor
data16
mov
mov
test
je
mov
(bad)
push
or
fisttpll
frstor
xchg
fstp
and
xor
ds
clc
add
shlb
sub
nop
mov
mov
pop
movzwl
(bad)
cli
or
add
cmpl
(bad)
jbe
nop
clc
sbb
std
rorb
xchg
shr
and
(bad)
adc
mov
sub
rep
fisubl
mov
rex.r
rex
ds
loopne
mov
jns
xchg
out
testb
cmp
(bad)
outsb
push
xchg
lea
fucom
or
add
mov
push
fimull
rex.w
rex.wr
fwait
mov
call
(bad)
fidivrs
push
push
push
push
push
stos
and
jo
(bad)
jo
movabs
push
jo
jmp
fisttpl
(bad)
add
cmp
je
add
call
(bad)
mov
outsl
lods
clc
lock
rex.w
rex.w
test
fbstp
(bad)
cmp
rex.wrx
adc
adc
movl
testb
sti
add
roll
mov
call
mov
mov
adc
adc
cmp
mov
call
cmp
(bad)
data16
insl
enter
sbb
mov
out
cmp
call
and
test
jg
fisttpl
mov
sub
xor
mov
call
in
div
jnp
int1
call
lock
sbb
adc
out
mov
or
clc
fbstp
(bad)
out
movq
(bad)
mov
jge
xchg
(bad)
movabs
mov
mov
ja
pop
(bad)
rex.wxb
add
sbb
mov
repnz
(bad)
mov
sbb
je
cltd
decb
pop
pop
pop
pop
sub
(bad)
cmpsl
loope
scas
xor
stos
(bad)
out
or
sarl
xor
mov
in
loope
int3
jbe
or
(bad)
cmp
(bad)
std
jrcxz
ret
mov
rex
fwait
rolb
jrcxz
fistl
mov
insb
enter
pop
std
(bad)
cmpsb
mov
movabs
xchg
movsxd
std
mov
jmp
or
jg
fcomps
(bad)
rex.r
nop
rex.wb
mov
add
je
(bad)
call
sbb
add
repz
jmp
or
and
sub
pushf
cmp
mov
clc
mov
mov
lock
(bad)
mov
call
add
mov
outsl
hlt
cmp
mov
rex.rb
(bad)
fisubrs
or
or
(bad)
push
loopne
push
and
(bad)
leave
leave
jae
scas
xor
ror
leave
xor
and
mov
imul
or
push
loopne
roll
lcall
add
adc
rex.w
(bad)
shl
lock
push
(bad)
ja
pop
push
movntps
(bad)
pop
ret
gs
nop
prefetch
or
mov
xchg
(bad)
rex.x
data16
add
(bad)
insl
(bad)
xchg
add
(bad)
sub
push
push
or
out
sub
and
jae
xor
or
xchg
cmp
(bad)
xor
xor
test
add
(bad)
adc
add
add
push
lret
cmp
fsubr
fisubrs
add
int
sbb
sbb
in
sbb
rex.rb
sub
add
mov
sub
mov
fidivs
add
lahf
cmpsb
mov
adc
sarb
(bad)
mov
mov
and
add
(bad)
and
insl
int3
stc
subl
test
xchg
(bad)
sub
loop
rorb
cmpsb
loope
cmpl
mov
loopne
leave
pop
ja
rex.r
subl
jnp
mov
rex.wrb
cltd
divl
or
addl
push
mov
cmp
sbb
pop
jbe
int
movsxd
sbb
js
enter
test
clc
(bad)
push
loopne
and
nop
gs
mov
lock
xchg
fwait
jmp
fstpt
jrcxz
mov
lret
out
rex.wrxb
xor
lret
rorl
(bad)
push
nop
sahf
xor
jle
stc
mov
xchg
scas
es
pop
jnp
pop
jns
and
lret
orl
jno
rex
leave
mov
xchg
sarl
rex.rb
movsxd
mov
add
xor
out
(bad)
in
xchg
ds
push
mov
(bad)
adcl
lahf
push
rex.r
addl
insl
ret
xor
push
(bad)
sbb
mov
cmp
fs
loope
cli
leave
(bad)
rex
shll
rex.wr
lea
jnp
mov
xor
xor
mov
imul
je
fcmovne
enter
(bad)
movsxd
shrb
lock
sahf
jl
fildl
rex.wrb
or
jmp
mov
enter
jbe
imul
fisubrl
rex
push
pushf
test
mov
rex.w
movsl
call
xchg
neg
(bad)
mov
{rex2
add
and
cmpsl
and
test
sarb
mov
add
or
(bad)
in
jb
add
or
mov
add
add
imul
push
mov
and
xchg
(bad)
and
sub
xchg
push
repnz
leave
outsl
adc
sbb
mov
movsxd
sub
lret
insb
jge
(bad)
cmp
cmp
and
xchg
or
int
sti
rex.r
loopne
sub
and
(bad)
mul
sub
sbb
rex.wrb
(bad)
or
xchg
ret
pop
(bad)
sub
filds
mov
cs
push
mov
cwtl
sub
cmp
rex
rex.rx
rex.rx
mov
xchg
jl
movsl
and
and
mov
push
cmp
ds
adcl
out
cmp
cld
jmp
movabs
(bad)
rex
in
test
movsl
cmp
scas
sub
(bad)
mov
fcoms
cmp
cwtl
movsl
call
pop
pop
pop
mov
(bad)
adc
call
(bad)
(bad)
(bad)
adc
movabs
rol
rorb
rex.x
push
outsb
(bad)
and
add
push
ficoml
rex.r
rex.rb
cmp
xchg
adc
(bad)
repnz
fiadds
(bad)
enter
jns
frstor
xor
rolb
mov
pushf
sahf
subl
jns
mov
fstl
add
(bad)
xor
(bad)
mov
mov
and
ficoml
lea
sub
adcb
repnz
test
cmp
and
mov
xchg
xchg
cmpsl
cmp
mov
cmp
sti
adc
lret
fildl
stos
movsl
lea
push
xchg
loope
lret
mov
out
xor
lret
pop
enter
mov
(bad)
es
sub
add
stc
ret
shll
jmp
and
adc
and
jmp
call
or
mov
hlt
sti
clc
out
cmp
lea
cmp
shll
sbb
push
movmskps
push
rex.w
mov
or
clc
xchg
mov
gs
adc
and
test
rex.wx
rex.wr
(bad)
in
(bad)
movb
fnstenv
and
sarl
lea
xchg
add
ds
(bad)
mov
out
adc
push
test
addl
xchg
test
rex.rxb
cmp
mov
test
(bad)
stc
add
fidivs
cwtl
leave
or
push
cltd
movabs
movsb
jrcxz
add
and
mov
(bad)
std
xchg
(bad)
and
rex.r
movsb
jb
(bad)
xchg
cmp
(bad)
enter
jmp
(bad)
rex.wrx
xor
ret
or
rex.wrxb
cmp
loopne
mov
xchg
shll
rex.xb
insb
rclb
call
adc
hlt
jmp
rol
or
xchg
adc
fucomp
je
movabs
sub
sub
push
(bad)
movabs
(bad)
movsb
repnz
push
xor
rex
sub
and
loopne
es
rex.wx
xor
pop
sbb
filds
pushf
cmpsb
nop
(bad)
cmp
movabs
sbb
loop
ljmp
in
add
cmp
xor
test
test
sti
sbb
lock
push
movsb
pop
cmp
sbb
xor
adc
(bad)
mov
jns
pushf
rex.w
(bad)
pop
shlb
add
or
outsl
int1
(bad)
push
ss
jmp
add
sarb
loop
or
xlat
cmp
mov
rex.wr
repnz
shrb
stos
rex.wrx
(bad)
(bad)
(bad)
push
in
xor
cmpsl
stos
mov
in
sbb
clc
divl
(bad)
cmp
movsl
and
sbb
jo
frstor
ds
loopne
push
movabs
ret
or
fdivrl
and
(bad)
jb
sti
pop
jmp
hlt
xor
push
xorb
(bad)
movabs
rex.xb
(bad)
movabs
adc
ja
(bad)
nop
(bad)
xchg
jge
add
mov
jo
leave
leave
or
ret
lea
lock
cmp
add
