mov
movsb
dec
mov
fwait
mov
mov
xchg
add
ret
mov
bound
mov
lods
jecxz
out
sarl
mov
inc
stc
inc
push
adc
sahf
test
movsb
jg
mov
jecxz
rcll
popa
leave
and
dec
push
(bad)
rolb
xchg
mov
jecxz
(bad)
rcr
pop
xor
rclb
pop
fsubrl
mov
add
stos
inc
mov
out
jmp
cwtl
pusha
push
cwtl
dec
or
lods
imul
out
push
mov
dec
aad
pop
pop
out
fcoml
outsl
dec
jmp
aam
(bad)
outsl
aad
int
mov
fucom
mov
arpl
cwtl
aaa
xor
mov
mov
lret
and
mov
stos
mov
jae
cmp
lods
pop
jp
pop
mov
lods
pop
mov
scas
lock
dec
mov
pop
inc
fwait
xchg
and
(bad)
cwtl
inc
pop
xor
and
mov
subb
fmuls
mov
outsl
scas
(bad)
call
pop
dec
xlat
mov
outsl
int
enter
jecxz
test
stos
xchg
roll
ficoml
push
inc
ljmp
ret
xchg
iret
and
scas
mov
inc
repnz
fidivs
ret
ret
and
movsb
jge
pop
sahf
lea
repnz
test
and
out
into
ret
xchg
bound
enter
dec
cwtl
xchg
add
xchg
inc
mov
fimull
call
out
inc
sub
mov
aad
mov
cmc
cli
lods
lret
pop
lea
push
pop
repnz
incl
jmp
lock
fs
fists
jno
or
bound
in
gs
lods
mov
xchg
scas
or
jg
lods
stos
mov
mov
mov
mov
cwtl
(bad)
inc
loopne
jg
adc
push
xchg
lahf
inc
fistl
enter
add
pop
adc
inc
inc
rorl
push
pushf
xchg
pop
pop
jmp
mov
sbb
mov
adc
sub
enter
mov
ja
xor
cmpsl
jbe
adc
fadds
lret
shl
lea
jnp
push
mov
pop
mov
idivl
or
(bad)
jl
rorl
mov
pop
test
jne
xor
push
jmp
mov
lea
mov
jb
(bad)
push
or
int3
pop
jo
scas
push
adc
jmp
mov
popf
mov
mov
adc
sysexit
push
cmp
or
insb
cmc
jo
adc
cmp
faddp
enter
jbe
inc
lock
adc
int3
test
into
into
jbe
xchg
mov
int
bnd
sub
sti
enter
aas
jmp
lea
xorl
insb
int
adc
adcb
lret
sbb
pop
jo
sub
pop
jbe
mov
mov
xchg
cmp
fldl
mov
shrl
mov
inc
pushf
bound
xchg
jae
repnz
fs
xchg
lahf
enter
aaa
test
mov
add
dec
mov
mov
push
inc
je
lea
enter
call
loop
push
hlt
imul
int1
loope
movsl
hlt
pushf
add
hlt
and
or
rol
movsl
hlt
insl
or
jecxz
or
sbb
or
hlt
popa
xor
jecxz
or
sbb
or
int1
std
push
movsl
hlt
outsl
xor
in
or
leave
cmc
push
movsl
hlt
loope
ljmp
cmp
cmc
dec
in
loope
movsl
hlt
imul
mov
push
movsl
hlt
or
loop
test
loop
leavew
int1
push
movsl
hlt
loop
out
push
fstpl
movsl
hlt
rorl
jecxz
or
jne
in
fucomip
shll
in
loope
movsl
hlt
imul
mov
push
movsl
hlt
or
xchg
lock
in
sub
in
sarl
loopne
int1
dec
in
out
divl
dec
in
cmp
sbb
inc
lahf
divl
mov
movsl
orl
adc
lods
cld
popf
sbb
rol
mov
out
mov
xchg
lea
mov
test
jmp
jbe
mov
jbe
mov
ja
xor
fs
(bad)
imul
mov
sbb
jo
in
jbe
xor
xchg
idivl
setno
lcall
mov
xorl
push
jbe
int3
imul
fidivrs
xor
ljmp
xor
mov
aad
orl
mov
jae
mov
andl
shll
call
push
lea
fsubrl
and
lea
push
(bad)
lahf
sbb
push
iret
lds
(bad)
je
fimuls
(bad)
mov
mov
or
insb
popf
and
rolb
xor
ret
enter
jbe
lret
jbe
pop
cmpsb
popa
leave
cmpl
(bad)
jne
cld
lret
xor
sbb
lret
mov
inc
(bad)
mov
jb
adc
inc
or
mov
out
jl
mov
lods
mov
or
jbe
rcll
int
aam
cmc
lret
aaa
adc
mov
cmpl
lcall
ss
clc
ja
test
test
mov
mov
(bad)
fisubrs
lret
push
mov
aad
inc
enter
sti
ret
or
inc
lea
ret
dec
add
dec
enter
dec
jo
push
push
mov
fmull
enter
jo
adc
lret
lret
inc
mov
add
or
dec
lret
lcall
sbb
sti
repz
orb
pop
leave
sbb
sti
sub
lret
sbb
jmp
imul
cmc
mov
inc
mov
and
pop
xchg
ja
cmc
dec
xor
jbe
fisttpll
mov
pop
movsb
xor
fwait
xor
imull
mov
sti
jns
mov
jns
mov
jns
je
mov
imul
and
and
mov
xor
push
dec
mov
mov
mov
jbe
jo
je
and
jg
mov
mov
push
and
lods
xor
or
cld
movsl
lock
fucomip
outsb
jle
mov
xchg
aad
stc
nop
js
push
mov
sbb
jge
popf
dec
pop
lahf
xchg
cmpsl
loope
lret
in
jecxz
sub
mov
gs
repnz
jb
insl
sbb
repnz
int
mov
dec
xchg
dec
loop
xchg
fmuls
pop
popa
leave
cmp
in
cltd
lock
pusha
repz
push
cmp
leave
mov
dec
and
inc
mov
mov
jbe
mov
jne
test
cmp
sub
inc
pop
jnp
or
cltd
mov
std
adc
ja
mov
sahf
adc
jnp
mov
cltd
lret
jecxz
xchg
pop
repz
loope
(bad)
dec
mov
pop
shl
hlt
jne
mov
popa
insl
mov
mov
mov
dec
add
sahf
jns
int
testl
sahf
jp
or
jo
or
outsl
cld
adc
dec
scas
popa
mov
jnp
jne
mov
fwait
lret
lock
xlat
jecxz
jns
mov
mov
push
and
jmp
or
orb
jnp
cmc
popa
insl
ret
mov
jno
cmc
ja
mov
popa
adc
or
test
jecxz
insl
dec
cmc
sbb
insl
xor
(bad)
push
pop
data16
sti
outsb
leave
or
inc
dec
clc
lea
lock
sub
(bad)
mov
adc
stc
popf
aaa
push
ds
adc
cltd
adc
cltd
adc
cltd
adc
cltd
adc
cltd
adc
cltd
adc
adc
mov
pop
pop
adc
fdivrl
cwtl
in
add
rclb
out
stos
enter
cwtl
sarb
lea
rcrb
sub
pop
sbb
add
sub
sub
nop
sbb
dec
divb
dec
xchg
nop
loope
xchg
adc
xor
dec
shll
sbb
nop
sbb
push
cmc
callw
nop
loope
popf
adc
xor
dec
sarl
sbb
nop
and
insl
std
pop
jmp
ljmp
jge
inc
in
push
loope
mov
dec
mov
adc
pushf
mov
out
sbb
inc
mov
nop
xchg
sbb
cli
push
shll
jp
pop
pop
ds
adc
in
ror
mov
adc
cwtl
xchg
or
imul
cmp
inc
pop
ss
xchg
inc
mov
cwtl
sahf
sbb
aaa
pop
cmp
adc
mov
and
cmp
sbb
fdivs
