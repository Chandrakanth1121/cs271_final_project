lds
lock
aam
cmp
fbstp
les
popf
and
imul
int
pop
xchg
negl
cmp
xchg
(bad)
lock
pushf
push
outsb
adc
sbb
sub
sub
mov
into
out
xor
pop
or
pop
fildl
xchg
push
sbb
ret
or
ret
cmpsl
pop
sub
nop
in
xchg
mov
xlat
aad
push
pop
jbe
push
movsb
inc
in
mov
xchg
testb
cmc
rcr
fistps
mov
shl
out
or
out
adc
sbbl
push
sbb
xchg
ret
out
adc
jg
pop
inc
add
pushf
rcrb
adc
mov
mov
mov
scas
xor
adc
hlt
out
pop
jae
pop
lahf
mov
cltd
sub
lahf
std
movsl
jecxz
dec
xchg
sbb
push
pop
push
mov
adc
rolb
pop
lea
pop
lret
xchg
xchg
int
fistps
je
sub
ficompl
jg
ds
fisttpl
mov
stc
mov
inc
sbb
ljmp
add
add
aad
mov
daa
xchg
pop
add
sbb
scas
fildll
mov
movsl
push
push
ficoml
iret
cmp
js
mov
bound
pop
mov
sbb
pop
ds
pop
pop
(bad)
xor
adc
or
pop
adc
sub
mov
imul
push
rorb
xor
dec
out
add
sarb
scas
mov
sub
xchg
out
sbb
test
(bad)
rclb
xor
dec
test
rclb
or
js
xchg
fiaddl
add
xchg
jmp
aas
(bad)
sbb
lcall
fists
imul
mov
xchg
cwtl
push
fisttpl
xlat
sbb
push
inc
fcmovb
inc
push
add
sbb
sahf
aam
pop
jbe
push
rolb
subl
xchg
mov
dec
lret
int1
mov
in
jne
(bad)
pop
mov
and
pop
rclb
stc
cmpsb
cs
fwait
mov
jae
jnp
jns
and
pop
fstpt
dec
jne
loope
fdivs
adc
and
pusha
xchg
or
roll
sbb
dec
push
outsb
int1
pop
ror
loope
cmpsb
and
or
cmp
in
fnsave
and
hlt
jno
loop
cmp
sbb
inc
push
ljmp
cmc
ja
ds
dec
push
testl
xor
ja
sub
test
insl
jg
gs
mov
outsl
insb
nop
(bad)
jnp
dec
lea
pop
ja
lret
ss
in
push
sbb
shlb
inc
mov
pop
cltd
adc
lods
idivb
sbbl
loope
cmp
or
inc
mov
adc
dec
xchg
jmp
cmp
jge
lahf
push
out
test
xchg
add
xchg
ret
fmull
xlat
jb
sbb
loopne
aam
pop
xchg
mov
push
cmp
inc
(bad)
mov
push
sbb
stc
notl
jle
inc
aad
push
ret
cmp
mov
int3
or
das
fisttpl
add
in
popa
sub
push
lret
cmpsl
mov
data16
push
(bad)
call
sub
adc
push
mov
rcrl
sub
js
inc
jo
lock
test
sbb
cmpsb
add
stos
adc
loop
jbe
mov
and
push
sbb
cmp
sub
dec
insl
inc
adc
pop
(bad)
mov
popa
int1
sub
inc
pop
add
push
mov
test
rcrl
fstpl
rcr
mov
jecxz
outsb
loopne
das
int3
sub
xlat
outsb
push
movsb
in
xchg
(bad)
dec
shlb
pop
push
jno
imull
mov
dec
hlt
adc
or
stos
sarb
push
sub
subl
sgdtl
stos
ss
mov
(bad)
fxch
jl
xor
(bad)
loope
xor
push
xchg
loopne
out
add
sbb
add
rclb
adc
ds
and
sub
outsl
push
and
inc
test
insl
mov
imul
sbb
fwait
rolb
xlat
fmuls
cli
idivl
inc
stos
pop
sbb
in
mov
insl
shlb
int3
js
pop
movsl
sbb
lods
push
pop
and
out
push
xchg
dec
push
pop
inc
adc
adc
filds
mov
cltd
sarl
pop
fwait
outsl
movsl
fdivrs
cmpsb
fistpll
pop
cmp
out
loope
jp
out
push
lret
lods
mov
out
lahf
repz
lret
pop
nop
adc
cmc
jle
adc
or
scas
loope
addb
push
jp
int3
xor
fnstenv
pop
repz
arpl
outsb
mov
cmp
sub
(bad)
pushf
pop
cmp
add
sbb
shl
scas
gs
out
sub
ds
push
(bad)
mov
rcr
cmpsl
push
pop
mov
cs
rclb
xorl
push
aad
inc
fcmovb
cmp
push
xchg
rorb
push
add
imul
aad
imul
cli
leave
repnz
inc
mov
or
xchg
or
jl
sbb
or
sbb
jg
pop
mov
xchg
jnp
gs
(bad)
cmp
adc
test
jno
int3
mov
sub
ficompl
push
loopne
jecxz
lahf
fildll
pop
xchg
jle
xchg
xchg
sub
or
test
lret
int
nop
jbe
xorl
inc
rolb
int
or
xor
push
cmpsb
lret
lea
(bad)
fidivs
mov
or
push
int
inc
pusha
mov
testb
rclb
push
in
lods
inc
sub
rcrb
xchg
mov
inc
ss
add
pop
imul
adc
push
sbb
fldcw
rcr
mov
leave
mov
jo
fs
shlb
adc
xlat
fstpt
pop
mov
hlt
xchg
push
mov
lods
sbb
cwtl
jae
ret
mov
fs
fisubs
(bad)
sbb
nop
outsb
or
cmpsl
mov
dec
cmp
mov
pop
data16
shrb
mov
add
adc
inc
dec
pop
push
dec
lea
push
pop
lcall
pop
test
or
push
pop
sub
mov
push
and
sub
or
ja
imul
mov
jecxz
lea
jns
insb
jo
je
(bad)
lods
xor
into
push
leave
inc
cltd
sub
pop
xchg
smsw
and
dec
mov
je
es
mov
mov
dec
and
inc
mov
mov
flds
xchg
add
lds
dec
adc
sub
mov
adc
andb
xchg
sub
loope
mov
fnclex
or
sub
jne
jl
xor
xchg
dec
pop
xlat
dec
(bad)
scas
mov
xor
pop
fwait
out
xchg
and
ret
xchg
scas
out
dec
ret
into
jp
xchg
sub
inc
rorl
dec
adc
or
cli
xor
or
mov
rorl
mov
pop
leave
sbb
out
mov
in
(bad)
mov
lahf
es
mov
xchg
cmp
xchg
mov
mov
dec
xor
ret
pop
push
into
jmp
push
jae
out
fiaddl
sub
mov
cmpsl
push
adc
jb
dec
cmp
sahf
and
stos
arpl
mov
push
and
out
ret
cld
sbb
(bad)
mov
push
mov
pop
sub
fistl
xor
push
mov
subl
sub
out
addl
mov
push
rcl
push
sub
sub
xchg
push
lock
xor
imul
rcr
xchg
cmp
ret
sub
outsb
cmp
(bad)
fcomip
sahf
xor
jmp
(bad)
rorl
pop
lea
int1
jb
mov
mov
out
lods
add
lds
mov
jno
inc
hlt
push
and
adc
jne
out
(bad)
cli
or
pop
cltd
adc
xchg
lcall
loop
aam
aaa
aaa
adc
push
fmull
push
scas
sub
mov
jge
call
sub
mov
jns
cmc
mov
rcrl
xor
fists
mov
or
jno
xor
notb
fstpt
loope
pop
lods
rcrl
xlat
cltd
scas
sbb
inc
sbb
(bad)
or
aaa
call
mov
mov
dec
pop
add
adc
insl
dec
js,pt
fisubl
mov
test
sti
cmpl
mov
add
imul
ss
mov
into
adc
rcl
sub
