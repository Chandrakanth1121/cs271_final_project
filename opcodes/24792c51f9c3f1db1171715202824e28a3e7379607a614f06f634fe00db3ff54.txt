push
xchg
push
pop
sbb
xor
jb
fucom
ljmp
add
jp
insl
pop
adc
scas
jmp
fs
cmp
shrb
mov
cli
sahf
or
pusha
cmc
or
ficoms
pop
mov
xor
and
mov
jno
cmp
cs
lahf
mov
jne
ljmp
pop
sub
sbb
test
ror
mov
aaa
and
adc
mov
lret
into
push
fcomps
imul
or
mov
fcomi
fistpl
push
mov
outsb
test
xchg
lret
cltd
push
add
or
mov
ret
fs
cmp
or
lret
dec
xchg
xchg
outsl
mov
cmp
cwtl
(bad)
mov
arpl
ret
fmulp
iret
lahf
jle
sbb
jg
lcall
pop
mov
loopne
jmp
cmp
jp
inc
mov
jl
nop
nop
mov
inc
mov
ljmp
call
stc
xor
cmp
fsubrl
xchg
outsb
or
or
add
mov
repz
push
adc
les
addr16
(bad)
aaa
loopne
add
lahf
jl
pop
fisubl
push
popa
pop
out
sub
cld
ja
shlb
test
cmp
test
jmp
and
in
fcoms
sbb
mov
jmp
daa
jb
mov
popa
push
mov
fcomp
and
push
jecxz
mov
pop
adc
frstor
pop
pop
into
adc
inc
stos
or
jle
sub
lock
lock
xchg
mov
push
jecxz
stc
decl
pop
push
jbe
cli
sbb
insb
addr16
adc
mov
xor
int
xor
imul
sub
push
mov
xor
das
jge
or
lret
pop
repz
(bad)
mov
or
daa
or
popa
xchg
outsb
mov
mov
jne
cld
hlt
mov
mov
pop
pop
sar
arpl
fstl
(bad)
adc
or
push
mov
push
stc
mov
dec
into
in
mov
insl
cmp
popf
pop
push
sub
ficoml
sarb
pushf
dec
outsb
rcll
bound
popa
xchg
cwtl
iret
cmp
inc
ret
xchg
int1
out
ljmp
test
push
fnstcw
or
je
fcompl
imul
data16
mov
rcl
das
jecxz
pop
xor
mov
movsl
and
scas
mov
mov
fnstsw
inc
dec
push
xchg
pop
push
rolb
pop
test
sub
dec
out
sbb
test
rcll
mov
push
or
test
xorl
mov
or
sti
dec
inc
test
dec
mov
loope
lcall
lods
daa
pop
mov
fsubr
cmc
lret
sub
out
idivb
repz
add
dec
lahf
pushf
jne
gs
(bad)
jae
add
xchg
clc
pop
mov
sub
pop
rorl
sbb
(bad)
or
cli
xchg
sbb
insb
xor
xor
rolb
dec
pop
sbbl
and
or
push
fldl
scas
sbb
push
pop
mov
jnp
jno
sbb
call
lods
lret
push
cmp
inc
test
ds
mov
jo
pop
push
cmp
dec
cmp
and
add
pushf
subl
shll
addl
dec
pop
pop
xchg
scas
es
fmuls
popa
(bad)
adc
out
and
dec
dec
push
lock
gs
ljmp
sub
out
lea
in
(bad)
jb
inc
incl
rcll
ja
mov
xlat
loope
adc
es
push
in
popf
jle
rcl
inc
pop
pop
add
jb
out
imul
in
sub
xor
sbb
repz
mov
fidivrl
lahf
mov
hlt
jg
mov
into
daa
insb
sbb
jnp
jb
mov
inc
push
xor
mov
and
xor
(bad)
enter
fstps
pop
xlat
int1
dec
mov
lahf
xor
mov
subb
inc
sahf
mov
shll
imul
mov
xchg
jl
cmp
gs
leave
mov
in
xchg
in
dec
sub
xchg
dec
cmp
push
push
xchg
aad
sbb
dec
jno
je
xor
add
cmpsb
mov
dec
loop
rolb
adc
mov
jge
nop
push
adc
ret
out
or
roll
ja
shrl
nop
cmp
mov
mov
dec
mov
cmp
or
insb
and
ss
lahf
xchg
int1
push
leave
shrl
leave
mov
int
fcomi
pop
and
jnp
pop
movb
adc
lahf
push
pop
mov
push
jb
loopne
push
into
loop
enter
xchg
mov
xor
movsb
push
add
imul
mov
iret
enter
fwait
loope
imul
mov
mov
arpl
mov
fwait
mov
xlat
mov
sahf
and
cmp
cmc
xor
mov
cmpsb
notl
sub
repz
push
mov
roll
inc
ds
adc
mov
sti
enter
cmp
out
adc
xchg
pop
cmp
orb
rcl
or
pop
xor
xor
in
push
(bad)
lret
jmp
mov
jmp
clc
push
test
jge
mov
in
test
nop
(bad)
inc
fwait
shll
sub
xchg
stos
in
iret
rcll
pop
adc
sbb
xchg
or
pop
jns
test
pop
nop
ficompl
fcmove
nop
fdivrs
loopne
loope
ret
or
arpl
lcall
or
jecxz
mov
shrb
fisubrs
pop
mov
adc
imul
mov
shrb
repz
lahf
adc
push
sbb
dec
mov
jle
mov
pop
ljmp
sahf
mov
jecxz
fldl
cmp
lock
clc
daa
test
push
imul
test
xchg
out
or
cs
lcall
mov
js
pop
lea
les
mov
xchg
lds
cmc
(bad)
in
cld
cmpsl
cld
test
fs
cs
bound
push
cli
mov
sbb
sub
and
fs
stos
nop
incb
jge
xchg
int1
ja
(bad)
mov
mov
movl
pop
and
and
cmp
mov
scas
sbb
int
lretw
jp
and
cmpsb
xor
or
fmuls
xchg
(bad)
cli
aaa
push
pop
pop
sub
loopne
test
push
dec
xchg
loope
gs
ljmp
jnp
dec
mov
subb
es
or
add
mov
out
outsb
cmp
cmp
jge
in
fadds
or
ret
jle
(bad)
je
rorl
movsb
faddl
sub
sub
pop
pop
pusha
jecxz
shlb
lret
mov
inc
mov
adc
xchg
movsb
push
sub
scas
sar
sbb
stc
xchg
int1
int3
jns
dec
clc
fwait
enter
adc
xabort
push
popa
mov
pop
fwait
lcall
int1
fisubs
insl
inc
jg
cmp
mov
shrb
jo
jl
insb
inc
cwtl
outsl
push
shll
cmpsb
lods
or
popa
fst
fstps
adcl
sub
jno
pop
cmpsl
push
sub
cltd
push
fistps
add
je
data16
pusha
add
and
fcmovnbe
arpl
sbb
ret
mov
inc
xchg
fildl
enter
out
shlb
and
movsl
aam
mov
js
daa
xlat
xlat
sbb
push
(bad)
sbb
pop
ss
lods
inc
pop
jbe
incl
js
mov
xor
int3
mov
push
and
jge
arpl
loopne
hlt
in
mov
fisubrs
cmp
xchg
int
mov
jbe
push
arpl
adc
pop
outsb
dec
add
inc
jmp
sti
xchg
es
adc
int
xchg
das
pop
xor
test
push
sub
lahf
mov
mov
xor
repz
repz
mov
and
movsl
mov
cwtl
pop
add
pop
rclb
pushf
push
(bad)
xlat
popf
int3
inc
adc
insl
div
adc
mov
xchg
inc
(bad)
stos
addb
mov
xor
insl
add
mov
out
scas
or
ret
push
xchg
(bad)
les
jno
mov
into
mov
jmp
cwtl
loop
outsb
iret
mov
fisttpll
stos
xchg
shlb
clc
int
mov
outsb
xchg
inc
dec
push
ds
and
dec
in
clc
lcall
inc
adc
mov
cmp
and
dec
pop
