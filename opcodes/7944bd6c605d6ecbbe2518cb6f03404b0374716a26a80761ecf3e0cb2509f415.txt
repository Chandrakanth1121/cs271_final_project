sbb
dec
jle
pop
arpl
mov
jge
outsb
aas
in
sbb
rcrl
filds
insb
jo
inc
mov
fs
ficompl
sbb
lcall
sub
aas
lret
and
out
sbb
test
lret
add
pushf
lea
into
lret
inc
scas
mov
les
movsl
cwtl
jns
es
call
push
pop
popf
xor
xchg
sbb
loop
popf
xor
imul
cmp
inc
mov
data16
inc
lahf
xor
hlt
sub
test
add
pop
and
lret
stos
test
pop
cmp
push
fs
jle
lahf
aaa
cltd
pop
out
mov
mov
bound
in
lods
xchg
outsb
mov
dec
sub
mov
mov
pop
sahf
and
adc
mov
fsts
cmc
pusha
xor
loopne
sti
sbb
xchg
pop
and
xchg
test
jne
xchg
cmp
and
enter
les
lea
mov
sahf
add
sbb
scas
dec
cmp
mov
cmc
es
lods
lods
aam
mov
push
fbstp
push
aaa
es
push
mov
sbbb
sbb
push
leave
lods
push
cli
and
fsubs
das
mov
arpl
jecxz
mov
jg
jb
test
imul
subl
jo
jge
jg
mov
not
js
frstor
out
fdivrs
inc
xchg
xorb
mov
jb
cmp
cltd
cs
in
test
dec
jge
jg
ljmp
sbb
mov
push
popa
gs
sub
sub
cltd
sub
push
lret
sub
mov
rcl
je
ds
es
daa
lds
jae
adc
insb
int
js
aad
(bad)
or
popf
and
jno
and
jle
jge
int
in
inc
mov
int3
rorb
jp
xor
das
jbe
fisubrs
lahf
fdivrl
test
rclb
rclb
loop
or
std
aam
cltd
push
out
lret
xchg
push
or
filds
fdivrs
data16
push
pop
sbb
jmp
cmp
add
add
fistps
pop
lea
out
mov
jmp
mov
ficomps
or
rcll
lea
adc
dec
hlt
lock
xor
out
movsl
push
bound
jle
xchg
stos
ficomps
push
cmp
insb
jbe
inc
es
(bad)
xchg
and
in
pop
test
out
cvtps2pi
add
cltd
mov
lret
jno
or
dec
outsl
and
and
dec
push
outsb
(bad)
mov
fbld
pop
js
mov
aaa
sahf
mov
into
xchg
jmp
cmp
mov
inc
pop
pop
push
jmp
sbb
xchg
jno
fwait
mov
dec
push
test
or
daa
xlat
enter
sub
push
push
mov
inc
orb
xor
lds
push
in
aaa
mov
pop
sbb
pop
dec
bound
push
(bad)
cmp
cltd
popf
sub
mov
xlat
sti
pop
or
outsl
mov
in
jno
outsb
shl
mov
loopne
push
adc
insl
lods
sub
mul
in
mov
sbb
add
outsl
jns
cli
stos
cltd
push
sub
sbbb
rclb
movsl
adc
bound
nop
or
rorb
pushf
mov
push
fs
addr16
les
push
jmp
in
lahf
or
mov
or
xchg
outsl
fnstenv
xchg
dec
sub
xor
aas
cltd
cmp
lret
xchg
into
add
test
lods
jl
negb
fs
lods
test
inc
push
jns
cmp
ficoml
ret
(bad)
ja
dec
pop
sub
push
movsb
pop
pop
sbb
lds
xchg
xor
dec
push
aad
or
mov
sub
daa
mov
cltd
add
loop
(bad)
jmp
xchg
xchg
mov
out
sbb
filds
jno
sbb
(bad)
sub
ret
push
movsb
aas
sub
mov
and
test
xor
cs
sti
push
xchg
xchg
int3
cwtl
push
cmpsl
inc
push
mov
or
pop
add
clc
fstps
mov
pusha
and
enter
cmp
adc
shlb
idivl
int1
mov
cmp
mov
jo
scas
xchg
add
outsl
rolb
jnp
push
das
sub
sub
lcall
fcmovb
xchg
mov
mov
xor
popa
xor
xor
rorb
and
sbb
sub
mov
and
dec
mov
push
fnstsw
cmp
cs
jbe
sarl
lods
jle
shlb
jnp
xchg
cli
mov
sarl
pop
sbb
repz
xor
dec
notb
push
mov
js
popa
sbb
pop
or
testl
inc
xchg
mov
ss
jns
adc
and
jns
mulb
sbb
lock
outsb
(bad)
lret
std
dec
push
scas
je
(bad)
push
cmp
and
sbb
dec
es
in
sub
or
mov
test
call
in
mov
mov
xor
lcall
(bad)
sub
xchg
roll
inc
adc
cltd
mov
mov
mov
popf
test
mov
xchg
push
mov
xchg
mov
int1
(bad)
(bad)
stc
movsb
scas
mov
imul
and
mov
scas
mov
pop
movsl
stc
loopne
mov
mov
mov
(bad)
sbb
daa
pop
dec
xchg
jno
adc
or
(bad)
jmp
xor
cmpsb
stos
xchg
sbb
leave
cmpsb
jo
loopne
lds
js
sub
into
or
lret
and
dec
outsb
sub
jl
test
pop
pop
ja
mov
sub
and
sbb
mov
shrl
les
test
xor
sub
nop
jp
xor
test
push
inc
or
sub
(bad)
aas
std
dec
mov
mov
mov
and
movsl
fcoml
pop
jg
dec
or
and
mov
push
push
mov
and
sbb
lods
aas
lahf
js
out
push
ljmp
int
mov
mov
inc
push
stc
js
stos
jno
jmp
loopne
add
pushf
sub
out
sbb
sahf
dec
(bad)
sahf
jne
das
insb
rorb
jnp
inc
lods
(bad)
adc
imul
out
dec
jecxz
ja
sbb
mov
add
es
stos
dec
xchg
stos
or
sub
mov
ljmp
testb
ljmp
push
lahf
divl
pop
outsl
adc
mov
jno
gs
push
js
daa
divb
and
inc
mov
sahf
pop
test
lahf
aad
notl
loop
mov
les
cmpsb
in
cmp
repnz
dec
dec
and
int3
test
add
incb
(bad)
outsb
cmp
sub
lods
popf
into
lahf
cmpsb
mov
jb
mov
fnsave
cmp
sbb
ret
popa
cmp
push
fidivs
add
push
jge
ficoms
in
loopne
inc
inc
int3
sbb
mov
sbb
jnp
stos
adc
int1
ljmp
jp
push
fists
mov
out
ss
adc
movsw
in
cs
les
inc
mov
pop
sbb
inc
loope
lea
movsl
ds
lods
lret
push
stc
in
cmp
jo
(bad)
fidivrl
into
pop
jno
cmp
sbb
imul
xor
and
lds
jbe
jnp
jl
inc
push
push
dec
dec
push
jg
add
sbb
out
stc
jnp
dec
aaa
sub
pop
cmp
hlt
xor
call
hlt
add
out
fisttpll
inc
outsl
outsb
pop
fidivrs
pop
iret
and
mov
pop
add
mov
xchg
mov
inc
es
pop
pop
(bad)
inc
or
call
pop
test
and
inc
rcrl
sbb
xchg
push
push
xor
xor
sbb
sub
pop
and
lock
stos
mov
int
gs
clc
lahf
shrb
sub
inc
mov
test
cltd
push
cmp
repnz
sub
jp
fdivrs
inc
jns
push
lods
dec
jg
push
adc
es
data16
scas
xor
das
mov
aas
mov
jmp
push
stos
xlat
scas
sbb
pop
xchg
cmp
xchg
or
xor
cld
sub
xor
daa
popf
mov
add
outsb
(bad)
adc
int3
and
and
jns
