loopne
push
add
add
add
add
add
add
add
xchg
add
add
add
add
add
in
push
(bad)
pop
(bad)
push
push
adc
mov
xchg
test
lods
push
xchg
sub
fwait
push
push
push
int3
vmulps
sbb
and
(bad)
or
fmull
push
inc
ficoms
xor
mov
cmpb
sbb
ficompl
pop
out
movsb
pop
inc
xchg
test
pop
repnz
sub
stos
dec
repz
and
jp
ja
jno
inc
fstps
sub
cltd
(bad)
dec
sbb
cmp
loop
fldenv
push
add
pusha
xchg
add
out
es
fidivrl
cmc
inc
lds
mov
mov
or
scas
jl
js
adc
xorl
xchg
insb
loopne
adc
lahf
sbb
fbstp
div
xchg
mov
hlt
int3
popa
sbb
(bad)
repz
and
dec
or
mov
and
inc
push
cld
hlt
jp
adc
push
stc
mov
int1
pop
mov
add
or
shlb
mov
xchg
cmp
mov
and
mov
mov
call
sbbl
fsub
out
and
mov
jmp
sbb
pusha
push
addr16
sub
xor
fsubs
sbb
fstpl
sbb
jb
aam
shll
stc
insl
fwait
rolb
jns
push
movsl
and
stc
in
or
lock
rorb
dec
loope
lea
inc
push
sub
scas
mov
mov
mov
pop
loope
and
sbb
sti
xor
dec
outsb
out
xchg
inc
xchg
xchg
xor
mov
push
test
mov
jnp
lret
repnz
push
pop
stc
out
sub
adc
hlt
int1
mov
pushf
inc
aas
ljmp
mov
mov
push
shr
push
sub
sbb
jnp
adc
shll
sub
or
xchg
lcall
aad
or
imul
jo
int
cmp
pop
mov
std
ds
pop
setnp
push
insl
lret
dec
mov
jl
mov
in
mov
add
(bad)
gs
add
cmp
incb
push
mov
push
xchg
movsl
sarl
xor
xor
loop
fimull
jl
push
es
movsl
mov
cmpsb
mov
xchg
sahf
repz
mov
cmp
jo
sti
jge
push
xchg
inc
imul
test
aas
push
nop
inc
adcb
stos
shrb
mov
insb
mov
ret
jle
lret
test
mov
mov
xchg
mov
inc
stos
cmp
mov
out
ret
cs
loope
sbb
iret
or
inc
leave
push
add
sbb
jg
enter
mov
jl
mov
dec
mov
fs
hlt
mov
mov
cmp
mov
fstl
jne
movsl
fcomps
pusha
mov
push
js
or
mov
xor
rclb
out
ret
inc
test
(bad)
test
(bad)
adc
mov
pop
push
cli
(bad)
leave
(bad)
test
and
mov
xchg
inc
adc
push
clc
xchg
sub
inc
in
push
xchg
imul
mov
iret
mov
adcb
in
push
mov
int3
shlb
out
(bad)
test
mov
fldcw
mov
inc
jae
repnz
dec
inc
leave
sbb
jg
cmp
stos
popa
mov
lret
dec
cmpb
loopne
mov
xor
fs
outsl
mov
sub
xchg
add
(bad)
jp
xchg
fdivrs
jne
sbb
mov
xor
das
test
stos
mov
push
push
adc
or
cltd
adc
pop
addr16
cwtl
daa
(bad)
aam
sahf
add
mov
xor
xor
add
arpl
pop
mov
imul
xchg
mov
pop
xor
mov
test
pop
sbb
out
mov
mov
jl
add
sarl
mov
je
sub
xor
lret
inc
push
mov
je
xor
out
ret
mov
mov
mov
adc
push
test
and
pop
sub
fldenv
loopne
push
or
xor
push
(bad)
notl
cli
jmp
mov
stos
push
push
popa
sub
xlat
aam
pop
adc
hlt
adc
inc
mov
xchg
mov
pop
mov
inc
test
sbb
sahf
into
push
lret
fnstenv
sbb
xchg
hlt
lock
mov
xchg
and
dec
es
shrb
rclb
pop
pop
pop
daa
in
pop
dec
pushf
std
or
mov
push
inc
cmp
xor
jno
dec
push
sub
pop
stc
jns
push
jbe
sub
push
pop
aam
testb
cmpsb
jge
jae
fdivs
jmp
(bad)
ja
call
pop
ss
xchg
and
cmpsb
xchg
push
jmp
cmp
gs
and
fisttps
inc
cmp
ds
cmp
jo
pop
(bad)
ljmp
sbb
or
mov
pop
or
or
pop
cmp
sub
repz
jge
xor
add
mov
data16
xchg
jnp
jne
xchg
lret
and
in
shll
int
xchg
cmc
mov
repz
dec
or
xchg
push
cmp
aas
jle
jne
dec
std
ss
and
mov
mov
fists
sbb
dec
or
mov
jl
es
lods
jge
xor
clc
aam
pop
adc
adc
je
adc
rcr
jmp
sbb
xor
and
mov
arpl
gs
testl
xor
jecxz
jge
mov
sahf
mov
and
int3
mov
inc
inc
sbb
inc
mov
jns
push
ficoml
bswap
mov
aaa
xor
xchg
dec
mov
pop
mov
push
add
hlt
cmp
out
gs
jmp
mov
adc
je
sti
push
decb
daa
enter
js
mov
test
pop
cwtl
in
das
out
and
xchg
addr16
push
pop
jbe
mov
std
daa
(bad)
push
lods
mov
jns
cli
outsb
adc
inc
mov
dec
dec
neg
and
and
mov
movsl
jns
pop
inc
cwtl
arpl
push
out
xor
test
xor
push
jae
cld
mov
cmc
cmpsb
adc
popf
faddp
jbe
loop
push
shlb
andb
int1
and
ret
stc
xor
les
ljmp
inc
pop
mov
jecxz
data16
lods
ret
lret
mov
leave
xchg
out
out
sbb
mov
mov
out
or
sbb
das
adc
push
sub
dec
dec
mov
cwtl
adc
jmp
in
(bad)
xchg
push
push
sbb
pop
in
and
add
jno
add
adc
iret
shrb
jecxz
or
lea
mov
scas
dec
lahf
inc
dec
push
aaa
leave
cli
ja
(bad)
pop
mov
mov
dec
lret
pop
lcall
lret
repz
and
inc
stc
rolb
cmpl
(bad)
mov
jge
inc
sub
incl
push
mov
adc
jno
push
cld
jp
cmp
ret
dec
mov
pop
call
popf
add
stos
movsl
scas
movsb
dec
test
xchg
push
xchg
mov
pop
mov
sub
lock
sbb
cmp
and
inc
push
(bad)
ja
push
cmpsl
xchg
call
hlt
(bad)
cmp
pop
test
jle
movsb
ljmp
or
xchg
addb
jg
xor
sbb
mov
inc
sbb
negl
mov
adc
loopne
les
outsb
repz
pushf
xlat
arpl
test
pop
pop
sti
shl
ljmp
ds
das
mov
jle
sub
repz
(bad)
aas
dec
into
imul
sbb
mov
xchg
sbb
(bad)
inc
aaa
sbb
in
js
in
push
lds
mov
loop
mov
repnz
shrl
repnz
mov
(bad)
fsubrl
jae
mov
push
clc
mov
cmc
inc
and
mov
xchg
ret
mov
cmp
mov
xlat
insb
jle
mov
scas
sarl
fdiv
test
cmpsb
jne
xor
pop
test
(bad)
jl
(bad)
xor
pusha
repz
daa
das
jae
inc
push
fcoms
mov
mov
in
test
add
fidivl
loop
mov
mov
out
aaa
fnsave
in
mov
popa
