shlb
dec
sub
inc
shrb
and
out
pop
lahf
mov
(bad)
cmpsb
sub
(bad)
shr
sbb
orl
dec
mov
lea
shlb
inc
shrb
push
inc
shrb
xchg
arpl
hlt
cmp
cmp
es
cmpsb
sub
mov
mov
insl
cmp
mov
std
outsb
lcall
rorl
outsb
filds
je
in
add
dec
in
mov
push
scas
push
out
add
dec
dec
sbb
xor
jmp
out
repnz
pop
int3
mov
xor
in
stc
repnz
stos
jns
xor
dec
scas
jae
shlb
inc
shrb
push
inc
shrb
xchg
arpl
aad
out
pop
lahf
(bad)
jmp
data16
sub
add
arpl
mov
xlat
std
jno
add
cld
aas
in
pop
aad
sbb
test
arpl
loop
insb
cmp
jp
testl
xor
dec
inc
ret
cmp
lods
xor
jne
xor
cmc
push
aas
data16
mov
rcll
fnsave
in
add
cld
aas
in
pop
aad
sbb
sub
xor
mov
mov
sub
iret
insb
cmp
jp
(bad)
sbb
cltd
dec
xor
dec
mov
cmp
lods
xor
jne
xor
cmc
push
ds
in
rcll
fucomp
xor
int1
dec
and
int3
mov
arpl
mov
shl
add
(bad)
in
je
xor
jae
int1
dec
xor
in
fnsave
das
int1
dec
xor
arpl
in
add
out
repnz
pop
int3
mov
xor
in
stc
repnz
xor
dec
sub
outsb
repnz
test
push
inc
shrb
xchg
arpl
aad
out
pop
lahf
mov
(bad)
mov
shl
add
(bad)
in
cmc
gs
jae
sbb
xor
int1
dec
xor
xor
inc
xor
mov
xor
mov
loope
outsl
cmp
loop
lret
inc
arpl
mov
loope
outsl
cmp
stos
cmp
int3
aad
cmp
add
mov
out
popa
cwtl
xchg
mov
ds
mov
gs
arpl
out
outsl
mov
xor
mov
dec
aaa
arpl
jecxz
insl
mov
push
scas
inc
xchg
gs
(bad)
out
std
outsb
mov
lea
and
gs
cmp
cmc
pop
cmp
arpl
addr16
cmp
(bad)
in
(bad)
fs
mov
loope
outsb
cmp
loop
rol
shll
mov
xchg
mov
cmp
jmp
cmp
lds
data16
xor
jne
xor
cmc
push
cmp
arpl
cmpsb
frstor
xorb
in
mov
dec
xor
repnz
insl
sbb
sbb
orl
mov
sub
out
cmp
das
and
int1
dec
sub
data16
inc
test
push
inc
shrb
inc
sub
in
stc
xchg
mov
aas
data16
dec
addb
push
inc
shrb
xchg
arpl
scas
cmp
add
add
sub
inc
shrb
push
inc
shrb
data16
inc
mov
dec
pop
and
cmpsb
int
cmp
(bad)
jbe
dec
sbb
xchg
mov
lea
mov
aas
in
lock
sub
xor
fs
mov
cmp
sub
push
xchg
mov
cmp
(bad)
insl
or
test
xchg
arpl
es
add
xor
sub
or
mov
mov
dec
add
push
xchg
lcall
mov
sub
out
stc
xchg
mov
cmp
(bad)
jge
leave
jmp
stc
repnz
jge
in
jmp
jge
int
stc
sahf
dec
sub
cmpb
out
jbe
push
inc
shrb
push
inc
shrb
inc
sub
out
stc
xchg
mov
cmp
(bad)
cmp
push
inc
shrb
cmpsb
les
add
aas
pop
andb
out
hlt
sub
cmp
xchg
mov
cmp
shrl
and
mov
ljmp
cmpsb
sub
push
inc
shrb
push
inc
shrb
inc
dec
sbb
xchg
sub
in
stc
xchg
mov
cmp
(bad)
dec
addb
push
inc
shrb
scas
cmp
add
or
sub
inc
shrb
push
inc
shrb
data16
dec
mov
roll
leave
xlat
insl
or
sub
pop
xor
cmp
push
and
loope
cld
cmp
jbe
mov
dec
outsb
mov
shrl
movsl
fsts
pusha
clc
in
leave
repz
mov
inc
shrb
push
inc
shrb
xchg
arpl
es
add
xor
sub
jo
mov
mov
fsubr
test
cmp
pop
lcall
std
bound
cld
pop
outsb
sub
cmp
out
std
(bad)
dec
or
and
pop
xchg
dec
add
or
mov
sub
xchg
cmc
rorb
pop
outsb
mov
mov
mov
(bad)
imul
lea
scas
xor
add
mov
dec
sbb
jecxz
insb
mov
sub
es
sub
push
adc
jno
repnz
xor
jae
xor
cmp
sub
das
xor
data16
jae
dec
sub
xchg
and
jne
das
jmp
push
cmp
lods
cmp
int1
sub
adc
pusha
cmp
cmp
cli
and
(bad)
cmp
lods
cmp
data16
cmc
jmp
dec
cmp
repnz
xlat
push
jecxz
insb
mov
and
and
xchg
cmc
sub
xchg
cmc
filds
xor
loope
cld
dec
jecxz
push
cmp
call
jp
orb
xchg
inc
shrb
dec
pop
les
data16
xor
jne
ss
push
dec
sub
jbe
add
roll
xor
lea
in
(bad)
popa
xor
mov
rorl
orl
(bad)
mov
sbb
xor
repz
or
repnz
gs
mov
jnp
push
cmp
shrl
bound
test
(bad)
orl
and
in
stc
repnz
in
jae
sub
mov
jmp
stc
in
adc
ret
test
mov
jmp
pop
sahf
mov
lea
outsl
cmp
ss
push
orb
orb
gs
call
add
shrb
push
inc
shrb
in
cmp
lea
les
mov
jmp
shl
add
mov
call
je
dec
adc
jecxz
pop
sub
sbb
dec
lods
or
sub
out
lret
sub
push
arpl
push
inc
shrb
push
inc
shrb
in
insb
cmp
xor
cmp
arpl
data16
sub
mov
jns
xchg
mov
cmp
data16
mov
(bad)
xor
out
jae
out
inc
outsb
cmp
mov
sub
or
lretw
mov
cmp
push
mov
out
shrb
jnp
cmp
pop
cmp
outsb
repnz
enter
xor
xchg
arpl
clc
push
xchg
stos
jge
iret
nop
cmp
or
pop
push
arpl
in
push
loopne
daa
xchg
stos
jge
leave
test
(bad)
xchg
dec
xchg
mov
mov
mov
xor
xor
ret
test
shl
push
mov
ss
out
xlat
jne
shl
daa
xchg
stos
jge
iret
test
(bad)
lahf
dec
adc
xchg
mov
fcmovb
or
pop
insb
insl
arpl
sub
arpl
xchg
arpl
sub
jbe
xchg
das
int1
dec
xor
or
mov
mov
ss
out
xlat
jne
(bad)
daa
xchg
stos
jge
int
cmp
ds
lahf
dec
adc
xchg
mov
fcmovb
or
pop
outsb
insl
arpl
loope
arpl
xchg
arpl
(bad)
push
mov
ss
shr
mul
jo
xchg
das
int1
dec
xor
cmpsb
pop
mov
mov
fcmovb
or
pop
pusha
insl
arpl
aad
arpl
xchg
jl
sub
orl
rcrl
rcll
mov
sbb
mov
xchg
je
clc
inc
xor
xchg
jl
pop
xchg
les
out
push
push
ret
push
sub
cltd
dec
xor
mov
mov
xor
xor
inc
xor
jns
pop
xor
popa
cmp
adc
mov
loope
outsb
cmp
adc
mov
loope
outsb
cmp
xorl
xor
in
jbe
loope
push
push
