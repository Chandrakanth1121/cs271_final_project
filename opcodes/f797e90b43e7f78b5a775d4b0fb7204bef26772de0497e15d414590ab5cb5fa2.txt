out
mov
add
inc
outsl
outsl
insb
gs
outsb
add
add
add
inc
popa
insb
jae
add
jb
gs
push
jns
je
insl
add
xor
or
jae
inc
jmp
popa
jb
incl
xor
das
add
decl
ljmp
or
outsl
jb
dec
outsb
je
xorb
jg
scas
mov
insl
(bad)
insb
add
out
fnstsw
pop
sub
addr16
sbb
xor
mov
cs
cs
int3
mov
call
outsb
into
add
aaa
add
bound
push
outsl
imul
mov
adc
int1
(bad)
stc
mov
in
outsl
cmp
push
push
inc
mov
incl
pop
add
dec
popa
je
jbe
dec
jae
sahf
or
add
sbbl
nop
add
push
adc
(bad)
adc
sbb
mov
loopne
inc
js
outsb
fs
mov
inc
outsl
jne
fcomps
mov
les
outsl
insl
jo
aas
js
in
insl
aam
inc
jne
jb
arpl
daa
call
ja
call
jb
flds
cld
adc
push
xchg
outsb
idivb
add
push
imul
loope
sub
or
push
mov
push
sub
pop
enter
pop
pop
pop
add
or
inc
mov
pop
add
test
adc
jae
add
or
int3
or
insl
push
daa
loopne
adc
rorl
lds
mov
push
popa
data16
scas
enter
dec
add
or
and
sbb
push
inc
imul
in
and
das
xor
push
push
inc
insb
popa
jae
push
bswap
daa
inc
std
add
mov
push
inc
push
push
dec
push
add
push
inc
sub
push
scas
jle
adc
daa
jo
add
pop
cmp
mov
sbb
cltd
std
push
int3
add
xor
xor
or
or
mov
or
outsl
jo
inc
jno
mov
adc
add
data16
pop
add
sbb
adc
mov
jecxz
or
add
xchg
xchg
adc
rolb
inc
(bad)
sahf
gs
pop
rorb
add
and
or
inc
pmulhuw
inc
cmpb
push
mov
in
inc
push
push
push
scas
out
sbb
pop
xor
inc
xor
add
adc
push
(bad)
popaw
arpl
in
cmp
call
bound
add
push
andps
sbb
jle
in
push
movsb
xchg
add
inc
add
int
dec
out
sbb
fdivrs
dec
pop
mov
sti
data16
je
jo
or
insb
inc
and
pop
xor
mov
add
sub
js
out
push
lock
aaa
les
xchg
aam
sbb
mov
in
fbstp
pop
imul
pop
push
dec
cld
xlat
cmp
les
add
ret
dec
pusha
js
cwtl
test
mov
add
and
mov
dec
cmova
ljmp
pop
insl
in
call
dec
jb
jnp
inc
cmpsb
add
xchg
insb
sbb
pusha
jecxz
adc
addb
and
test
add
negb
bswap
or
aaa
sbbl
sub
sub
inc
inc
sahf
int
jns
cmp
hlt
orl
and
cmp
decl
in
inc
or
(bad)
dec
cmp
pop
cmpsb
bswap
cmp
mov
(bad)
addr16
pushf
sbb
cmp
popf
popf
pushf
mov
scas
or
pcmpgtw
mov
inc
jmp
lcall
mov
fbstp
adc
insl
stc
ds
movsl
test
invd
movsl
push
pop
imul
jb
(bad)
repz
jns
sahf
dec
mov
arpl
or
jmp
fsubrs
mov
fs
gs
imul
or
lret
inc
dec
inc
sub
inc
imul
test
roll
stos
dec
outsb
mov
jae
insl
mov
test
shlb
in
pop
or
or
das
(bad)
mov
mov
jne
xor
rclb
sub
jns
cmp
add
xorb
or
push
dec
popa
insl
add
scas
roll
fmuls
cmp
push
imul
sub
sub
push
popa
xor
add
sub
fisubl
jb
mov
sub
or
ss
ret
and
jp
pushf
push
or
imul
dec
or
push
rorl
sub
fiadds
inc
add
cmp
or
addr16
fs
in
add
or
xchg
adc
in
jne
sbb
push
and
mov
or
aas
add
fadds
popa
add
or
cmp
imul
pop
push
fstpt
add
insb
inc
bound
add
add
inc
jae
or
cmp
in
xorl
ds
add
add
js
add
popa
in
dec
push
in
jecxz
xchg
adc
mov
dec
outsl
xor
xchg
jp
jecxz
jnp
fdivrs
popa
out
jnp
pop
mov
xor
fmuls
push
rclb
test
push
arpl
sti
dec
inc
clc
or
int1
xor
sub
add
or
lret
or
push
mov
inc
pop
in
sbb
mov
add
sbb
popa
mov
out
pop
and
push
popa
gs
sub
sbb
je
outsl
outsb
mov
arpl
pop
enter
dec
sbb
out
or
lea
dec
mov
or
adc
add
push
pop
mov
leave
push
pop
jmp
adc
bound
inc
gs
loope
pop
cltd
cmp
jl
je
push
lahf
iret
pop
dec
mov
jbe
lret
test
xor
movsb
pusha
sbb
xor
jge
push
jl
adc
ja
or
test
adc
mov
daa
adc
push
clc
pop
rep
shlb
iret
pop
sbb
fnstenv
test
scas
add
dec
aas
adc
loop
das
adc
pop
push
aas
fdivrp
push
ja
inc
jne
outsl
insl
inc
je
bound
mov
addr16
or
add
adc
loopne
in
pusha
mov
or
jb
adc
adc
adc
xchg
lock
add
gs
imul
push
fisubs
pop
rcll
das
shrb
stos
stos
scas
sub
das
shrd
mov
add
fadds
or
sub
inc
aas
mov
comiss
dec
aas
mov
inc
jge
push
outsl
insb
lods
insb
inc
mov
pop
sub
push
mov
adc
xor
xchg
or
clc
inc
lcall
inc
inc
dec
pop
add
inc
outsb
jl
adc
adc
adc
nop
out
push
jge
imul
inc
ds
or
pop
sbb
sub
(bad)
adc
push
cld
mov
outsl
into
outsl
inc
adc
add
int3
adc
push
daa
cs
push
popa
push
loopne
addr16
pusha
push
push
iret
lock
inc
or
xor
push
mov
rclb
enter
pcmpgtw
push
pop
xchg
sub
mov
clc
cmpsl
jge
and
and
adc
push
jo
jmp
outsl
lret
arpl
lds
into
in
pushf
iret
aaa
jns
outsb
mov
rorl
mov
enter
js
mov
mov
sbb
sbb
pop
or
mov
adc
inc
clc
aas
enter
inc
push
arpl
jae
loope
sbb
ret
in
or
add
fisttpll
fists
adc
(bad)
mov
mov
sub
push
jne
add
adc
test
js
sbb
jmp
cld
and
jl
shlb
pop
lcall
fmull
inc
pusha
fcoms
rcrl
xor
add
dec
xor
push
int3
scas
in
push
imul
lea
loope
fsub
je
nop
xchg
cmp
ss
jb
repz
mov
push
imul
fsubl
cmpsb
mov
add
inc
jnp
jnp
in
add
out
sub
outsl
pop
inc
insb
insb
dec
test
filds
pop
sbb
or
ret
adc
mov
pop
out
dec
ud2
(bad)
dec
flds
push
enter
imul
dec
(bad)
or
int3
add
in
jg
add
addl
jmp
cmp
ror
mov
cwtl
cmp
sarb
mov
