dec
arpl
rcrl
mov
jo
or
cmp
out
xchg
xlat
lods
outsl
jnp
lret
loope
fisttpll
insl
mov
dec
xor
xchg
push
adc
inc
jne
sbbb
std
and
add
loop
add
xchg
push
jecxz
idiv
sub
scas
leave
sub
fdivrp
cmp
rcrl
dec
ljmp
lock
aam
push
pop
rclb
jb
or
cli
sub
fadd
pop
ret
(bad)
push
or
mov
mov
cmp
call
int3
(bad)
add
lret
test
or
sub
adc
mov
push
test
jge
xor
mov
xchg
fisttpl
sbb
subl
inc
push
mov
adc
sub
sarl
push
jmp
jnp
jb
and
add
mov
inc
and
jns
test
sub
and
(bad)
cmp
inc
push
add
xor
mov
inc
push
into
push
mul
sbb
sub
nop
cmp
pop
shll
jge
outsb
push
mov
xchg
int
pop
lret
mov
push
jl
loop
out
jle
pop
xor
int1
or
add
sbb
sbb
mov
sarl
sahf
pop
(bad)
sub
je
add
sbb
add
add
mov
and
cmp
xor
test
mov
pop
add
jg
fld
sar
or
(bad)
sbb
mov
push
adc
fiadds
loop
rcll
inc
(bad)
in
cwtl
sub
sub
outsl
sbb
and
fld
out
stc
loope
xchg
rcrl
iret
pop
jae
xor
rcrb
fs
fsubrs
push
sbb
sub
stos
in
mov
stc
and
mov
aas
sahf
test
mov
out
xchg
out
addr16
sbb
inc
rol
repz
mov
out
pop
aam
lahf
mov
mov
add
xchg
gs
lods
push
push
sbb
test
add
cltd
pop
xchg
lds
ss
and
push
std
dec
cmp
(bad)
js
call
push
cltd
outsl
dec
sahf
nop
jno
jg
lds
inc
ds
shrl
xor
out
or
mov
stc
js
lds
sbb
rorl
jbe
pop
adc
cltd
xor
and
repz
mov
int3
push
lret
jb
dec
xchg
jbe
mov
std
sbb
pop
xchg
test
rol
imul
shrb
pop
dec
sbb
xchg
call
jno
hlt
out
add
mov
fistps
adc
mov
stos
fwait
or
jecxz
push
loopne
and
std
jmp
push
cmp
sti
(bad)
hlt
aam
(bad)
push
sbb
dec
xor
pop
lret
cmpsl
loop
xor
push
lret
cmpb
and
xor
cli
iret
mov
into
or
loop
and
mov
inc
mov
push
jb
hlt
pusha
xlat
mov
sbb
mov
movsb
push
cwtl
stos
add
cmpsb
add
jo
fs
mov
testb
clc
(bad)
fs
dec
adc
shl
sub
mov
jle
xorb
fisubs
jno
mov
aad
mov
xor
xor
cli
lahf
out
or
cld
or
fildll
sub
and
and
stos
stos
inc
pop
cmp
jnp
and
cmpsb
sahf
jmp
cld
mov
mov
orl
mov
dec
dec
mov
fsubl
mov
movb
fsubs
push
cmp
push
mov
or
stos
sbb
and
ds
inc
mov
or
int3
push
loope
mov
imul
jl
adc
popa
jae
leave
scas
cmpl
or
lahf
(bad)
out
loope
push
int3
aas
add
adc
cs
stc
mov
push
jp
jmp
jmp
(bad)
aam
bound
cmpsl
jecxz
in
lahf
repnz
sub
sub
sti
and
sub
ds
sbb
idivb
je
fs
aam
cmpsb
(bad)
stos
jmp
mov
rorl
push
xor
fiadds
loop
outsl
sbb
adc
fiaddl
into
sbb
cmp
inc
pop
xor
mov
testl
stos
test
inc
arpl
(bad)
sub
callw
fcomip
xor
aad
das
fdivs
push
xor
push
repnz
das
or
test
dec
inc
mov
cwtl
out
pop
mov
adc
and
mov
fsubrp
(bad)
sub
shlb
push
mov
stos
and
jl
sub
movsb
clc
lahf
iret
mov
cmp
sarb
dec
dec
and
jecxz
and
mov
xlat
add
aad
scas
outsb
in
(bad)
push
adc
sub
mov
faddl
or
loopne
mov
sub
(bad)
push
(bad)
stc
sub
out
sub
jne
mov
and
int1
adc
sbb
decl
sbb
in
rcll
cmp
repnz
mov
out
jle
into
mov
push
cmpsb
addr16
mov
lahf
ret
lcall
cli
push
jmp
ret
mov
enter
push
testb
js
out
and
cld
jge
orl
dec
nop
push
mov
jne
dec
testb
pop
jb
ja
in
mov
(bad)
pop
cmpl
fmull
cmp
or
lahf
insb
outsb
mov
lock
ds
les
adc
mov
mov
and
mov
cmp
(bad)
repz
mov
xchg
jg
mov
aaa
call
mov
jge
daa
stos
insb
add
sbb
mov
lods
sub
popa
lret
loope
lret
mov
ds
jo
pusha
fcoms
xchg
jl
pop
xchg
cmc
enter
cs
lahf
hlt
push
fwait
cmp
jne
xor
mov
repnz
add
inc
or
jmp
push
scas
loope
sbb
call
rorl
cmpsl
jae
scas
mull
sub
or
cmp
outsl
sarl
dec
ret
clc
sbb
sub
rcrl
out
pop
fdivs
addr16
or
mov
stos
sbb
shrl
jbe
push
inc
ja
sbbl
loopne
lock
maxps
sbb
or
dec
inc
insb
out
lea
jae
adc
jecxz
xchg
jmp
lock
cwtl
push
cmp
sbb
shl
out
enter
orb
pop
ljmp
fiaddl
les
test
syscall
pop
adc
pop
mov
out
jg
pop
pop
popf
jle
(bad)
cmp
pop
test
aas
insb
push
add
mov
xor
fwait
popa
lahf
and
mov
pop
repnz
pop
lods
inc
adc
incl
jns
xchg
jmp
call
das
mov
and
jmp
fsubs
xchg
mov
pop
sbb
push
ret
mov
xor
sub
xor
add
cmp
loope
hlt
lea
fcmovnb
sub
and
mov
mov
push
dec
pop
or
cmc
dec
xchg
inc
and
bound
lahf
dec
mov
xchg
test
arpl
inc
aaa
outsb
add
mov
lea
mov
insl
repnz
shrb
pop
and
mov
dec
push
mov
xchg
out
mov
in
ret
push
imul
data16
pop
cmp
pop
sahf
mov
and
and
add
addl
cmp
faddl
mov
outsl
sahf
sbb
cmp
stos
das
adc
fcompl
(bad)
in
cmp
pop
inc
cmp
sub
out
clc
outsl
out
sti
lahf
aad
add
push
dec
mov
push
insl
add
inc
pop
xor
dec
(bad)
pop
cmp
mov
push
or
aam
arpl
fdivs
hlt
mov
testl
adc
insl
fcmovu
js
repz
sahf
mov
push
mov
and
push
repnz
repnz
(bad)
scas
lea
cmp
ret
mov
inc
enter
add
lds
out
xchg
xchg
sbbl
pop
imul
ljmp
pop
cmp
mov
push
or
jbe
shlb
pop
dec
and
mov
loopne
jmp
xchg
lret
ljmp
xchg
ja
pusha
insl
negl
ljmp
mov
jmp
and
xor
add
jge
lcall
ret
mov
sbb
jnp
sbb
(bad)
sub
or
pop
in
or
jno
lds
xor
mov
xor
jp
test
lea
stos
ret
push
jle
xor
scas
pop
subl
insb
mov
cwtl
aaa
int3
xor
cltd
iret
mov
out
