lcall
(bad)
(bad)
mov
call
push
adc
and
or
add
std
fistpll
and
jg
rol
in
mov
mov
mov
or
lea
fucomip
jmp
sbb
dec
idiv
call
add
and
ja
aas
in
push
xor
es
inc
push
mov
das
jo
push
in
(bad)
sahf
js
jbe
pop
data16
nop
xor
cmp
add
add
sbb
push
add
add
enter
inc
fcomps
cmp
sub
jns
enter
push
or
xor
cmp
or
pusha
and
mov
jl
adc
xor
cmp
cmpl
or
(bad)
repnz
pop
sub
rolb
fstpt
iret
inc
rcr
mov
out
nop
xchg
out
xor
adc
and
adc
nopl
test
adc
shrb
adc
(bad)
popf
testb
adc
mov
pop
push
sub
adc
mov
enter
pop
xor
mov
jns
js
sbb
sub
repnz
or
inc
inc
sbb
and
stc
sbb
sub
pop
notl
sub
pop
sbb
pop
in
xchg
dec
and
pause
and
mov
and
pop
clc
mov
inc
inc
fsubrp
mov
nop
sub
and
inc
inc
and
nop
xchg
out
int3
fdiv
daa
jns
in
shll
fiadds
or
inc
sub
inc
sub
sub
mov
sub
xchg
push
cmp
or
inc
inc
sahf
jo
ja,pn
mov
cmp
and
insl
and
enter
arpl
enter
rclb
dec
rclb
in
adc
xor
sub
push
cmp
inc
xor
or
ss
jns
and
sub
mov
xchg
mov
or
jns
xor
add
cmp
sahf
pop
push
clc
js
cmp
and
out
push
in
mov
jecxz
out
filds
cld
sub
xchg
out
ds
int
xor
pause
pop
in
dec
sub
pusha
je
ror
inc
or
out
mov
xchg
rclb
inc
mov
test
cmp
in
subl
inc
js
jns
xor
fadds
dec
lock
sbb
jo
or
dec
inc
inc
fiadds
nop
sub
dec
pause
xchg
adc
cmp
test
jns
enter
enter
cmp
dec
xor
orb
out
inc
or
dec
pause
xchg
out
push
lods
jb
enter
loopne
xor
cmp
push
adc
xchg
cmp
sbb
or
fnstenv
jmp
fisubrs
mov
pop
sub
enter
jo
push
xor
cmp
and
adc
or
jnp
enter
nop
sub
fs
enter
call
xor
add
pop
pause
xchg
out
mov
mov
pop
or
mov
sub
inc
inc
sahf
xchg
js
push
inc
fisubs
and
outsb
out
jns
repz
fs
mov
cli
gs
xor
es
push
push
cs
dec
shlb
push
push
sbb
mov
enter
nop
lea
sbb
nop
add
pusha
dec
xor
sbb
and
push
mov
sarb
mov
xor
pop
inc
sub
add
sub
inc
push
fidivrl
loopne
fs
push
fs
addb
inc
push
push
fs
and
or
mov
mov
fadd
orb
test
enter
js
dec
or
orb
add
addl
mov
and
xor
add
inc
sub
enter
pop
sbb
or
orb
cwtl
orb
subb
or
push
cmp
insb
mov
xor
add
shrb
js
and
xor
dec
xor
and
xor
add
sbbb
sbb
mov
mov
enter
lea
and
jb
ss
enter
xor
and
push
xor
and
sbbb
inc
sbb
enter
shrb
js
movsb
or
push
xor
fsubs
dec
mov
ret
add
jb
inc
enter
movsb
pop
xor
xorl
push
mov
and
or
dec
enter
std
mov
xor
xor
xor
push
movsb
pop
jmp
add
mov
ret
push
nop
pop
loope
and
add
add
orl
inc
enter
push
or
add
inc
mov
mov
inc
add
inc
enter
rolb
push
fdivrl
in
xchg
xor
test
pop
dec
jmp
mov
push
nop
pop
add
fs
pop
and
insl
add
sbb
dec
in
inc
and
cs
mov
or
dec
mov
lock
mov
add
xor
fimuls
add
lock
adc
(bad)
bound
xor
imull
test
pop
cld
and
add
xor
xor
add
or
add
jmp
xchg
xchg
push
add
insb
push
mov
test
dec
rolb
dec
xor
dec
inc
or
js
and
inc
or
sub
fs
xchg
mov
shr
repnz
sbb
fadds
pop
(bad)
sub
add
mov
lock
cmpb
sbb
out
jg
lods
push
or
orl
aaa
lret
xchg
sub
pop
outsb
push
push
push
movsb
push
pop
gs
cmc
sub
mov
push
mov
incl
push
mov
jg
and
push
sub
push
subb
loop
add
test
add
mov
mov
add
pop
xor
fdiv
push
jnp,pt
mov
mov
sub
add
mov
mov
push
dec
clc
outsl
cs
loop
add
push
push
int
loope
ud0
push
dec
add
fs
je
mov
(bad)
xchg
cld
seta
data16
in
subl
sbb
movsb
xchg
mov
les
mov
mov
pop
repnz
dec
out
out
daa
or
adc
add
jmp
sub
add
enter
adc
xor
jne
loop
and
push
cmpb
cli
push
ja
sarb
mov
add
ret
push
fwait
cmpsb
cmp
sub
cmp
sbb
(bad)
fs
in
xor
lea
mulb
sbb
push
inc
enter
movsb
cmp
push
or
nop
inc
pop
push
sub
push
mov
xchg
inc
cmp
cmp
test
mov
mov
nop
enter
push
(bad)
sbb
sub
fdivrp
(bad)
movsb
fwait
pop
call
out
or
push
sub
sbb
cmpsl
sbb
pop
cmpsl
sub
dec
sub
in
push
(bad)
push
fisubs
fistl
mov
adc
xor
mov
xor
leave
or
push
jmp
lcall
jg
or
sub
push
push
mov
add
mov
cwtl
add
dec
push
push
dec
mov
notl
mov
sbb
cmp
sub
pop
jb
pop
jne
ja
jne
add
cmp
lods
cmp
addl
insb
add
test
cmp
jnp
test
mov
lea
je
adc
push
or
inc
mov
call
pushf
push
add
ret
mov
sbb
ret
sarb
mov
inc
cmp
std
xchg
lahf
push
mov
sub
movsb
adc
mov
dec
movaps
inc
cli
movups
jo
inc
int3
ds
sub
sub
int3
push
dec
xor
fstpt
outsb
outsl
jo
lock
jae
jb
mov
hlt
jne
ja
pushw
clc
jns
loopne
ret
jg
mov
xor
adc
mov
jl
xchg
cwtl
(bad)
popf
cmp
jae
sbb
into
pop
or
xor
filds
sbb
xchg
pop
negl
insl
push
pop
or
or
or
or
enter
stc
sbb
pop
cltd
fcomps
lret
rclb
xor
cld
or
sbb
call
inc
adc
fneni(8087
push
lahf
inc
adc
mov
xchg
pop
in
lret
test
push
daa
xchg
out
jge
shl
dec
inc
pop
in
and
jns
(bad)
xchg
adc
sbb
push
sub
or
jb
(bad)
lret
pusha
aas
in
pop
repnz
or
dec
xchg
mov
push
push
enter
pop
add
in
loop
jb
push
enter
xor
and
and
outsl
jno
(bad)
add
jnp
in
cmpb
lock
cmpl
scas
jle
xchg
xchg
lret
