mov
lock
(bad)
cwtl
out
push
or
lea
jo
add
test
shrl
mov
ljmp
ret
ficoml
test
test
push
data16
xchg
jbe
rclb
or
in
pushf
jno
in
imul
lds
mov
les
cmp
(bad)
xor
pop
int1
xchg
and
pusha
lds
push
nop
sbb
dec
mov
out
dec
out
inc
xor
in
jne
es
pushf
outsl
and
imul
mov
mov
into
fimull
cld
add
jp
test
es
push
cwtl
or
or
xor
xor
jl
cmp
inc
push
ficompl
test
nop
dec
jmp
out
std
inc
mov
push
mov
into
mov
inc
cmp
je
cli
push
or
cmp
pop
xchg
push
nop
xchg
adc
xor
in
sbb
mov
data16
pushf
dec
jae
addb
mov
inc
lock
jl
ja
adc
js
leave
xchg
mov
mov
lock
dec
or
pushw
or
fisubrl
imul
adc
inc
into
push
inc
jmp
stc
cs
dec
and
jno
jnp
es
repnz
jg
scas
push
(bad)
push
jmp
and
popa
and
xor
ljmp
cmpsb
lcall
mov
(bad)
gs
out
jae
inc
pop
sarb
push
negl
xchg
insb
pop
dec
jns
push
inc
adc
or
inc
fldcw
and
int
dec
cltd
clc
push
not
aaa
mov
movsl
ror
or
sbb
out
shld
test
sub
add
jbe
add
inc
adc
jp
pushf
adc
sahf
jle
push
add
faddp
call
mov
lea
es
push
scas
mov
pop
push
ret
cmp
add
push
pop
push
sbb
sbb
outsb
xchg
jne
cmpsb
fs
mov
dec
out
adcb
aaa
roll
lcall
call
jb
rcrb
cld
inc
push
arpl
cs
jle
cld
xor
cltd
bswap
mov
jae
fmull
dec
add
shrl
add
stos
mulb
cmp
imul
xchg
jns
insl
and
jle
sub
insb
pusha
xchg
cmp
sub
filds
mov
xorl
aad
or
xor
inc
add
test
push
ja
shll
push
push
bnd
jnp
fs
int1
and
(bad)
fsubrl
inc
in
jb
xorb
add
les
xor
fcmove
sub
adc
(bad)
lcall
xor
push
mov
ret
out
movnti
filds
adc
add
imul
push
gs
push
fdivrl
dec
cmc
xchg
orb
loopne
je
dec
or
pusha
xor
mov
addr16
popf
add
je
cwtl
outsb
je
and
mov
fistpl
sbb
pop
cwtl
pop
sti
pushf
jnp
pop
nop
xchg
sub
ret
call
movsl
imul
aaa
jns
insb
inc
push
mov
jno
(bad)
lods
adc
adc
jl
jns
shlb
sbb
jecxz
lock
(bad)
xchg
jmp
in
into
enter
xchg
mov
adc
sub
jecxz
ficoml
rolb
leave
dec
mov
outsl
jnp
pop
cld
repz
clc
dec
into
xor
clc
mov
(bad)
lret
or
repz
(bad)
ret
mulb
adc
(bad)
std
xlat
scas
in
mov
shlb
rol
sub
(bad)
cld
ds
sbb
xchg
loop
sub
or
inc
outsl
es
or
int1
cld
stos
pop
mov
shrl
rcll
in
imul
pop
in
mov
sbb
sbb
testb
les
fwait
sti
sbb
pop
dec
pop
pop
add
jo
mov
dec
sbb
inc
cmp
xor
in
insb
cli
ficompl
dec
dec
jp
aad
mov
inc
fcoml
inc
dec
shrb
jns
sahf
or
pop
shrb
fldt
jnp
rcrb
ficoms
or
sbb
ret
out
jne
daa
pop
subb
movsb
lock
leave
mov
movb
out
jle
mov
out
mov
inc
lret
mov
push
add
dec
pop
sub
inc
pop
jo
jbe
ret
test
ret
lcall
rolb
fs
jp
dec
pop
cs
or
mov
(bad)
dec
test
lea
jbe
shrb
outsb
mov
aad
sub
dec
dec
lds
shlb
jg
push
ret
cld
popa
rcrb
jp
test
sahf
adc
pushf
or
leave
inc
mov
xlat
je
inc
bound
repnz
jg
or
add
divl
push
sub
xchg
jbe
jns
push
add
outsb
imul
inc
scas
test
jns
mov
je
out
jb
fmull
outsb
xor
insb
data16
add
cmpsb
(bad)
push
shl
or
test
adc
lret
cwtl
or
push
mov
push
daa
mov
fucomip
dec
out
cs
lds
xor
leave
sub
loope
fld
out
rclb
lods
xchg
loopne
inc
lea
sub
sub
jo
imul
and
ret
(bad)
mov
sbb
jg
adc
imul
in
mov
dec
jp
ret
adc
mov
mov
add
pop
lea
inc
sbb
aaa
rclb
inc
mov
jae
decb
pushw
dec
cmp
push
cmpl
ds
out
jg
enter
xchg
jge
orl
(bad)
cmc
sub
fnstenv
aad
push
and
jae
insl
inc
mov
jbe
jbe
sbb
push
pmullw
cs
into
mov
stos
loop
cmp
pop
fildl
adc
jmp
inc
jle
fs
clc
(bad)
stc
daa
popf
pop
add
enter
mov
enter
scas
loopne
repnz
test
mov
mov
fsubrs
data16
(bad)
fpatan
pop
add
mov
shll
jmp
add
hlt
sub
lahf
imul
call
fsubr
push
sbb
jnp
rcrl
lock
(bad)
sub
int1
js
cmpsb
int3
gs
inc
or
pushf
cmp
cld
or
or
movb
push
fs
fsubrs
sub
xchg
mov
cli
sbb
jns
and
sbb
push
or
mov
mov
pop
add
fcmove
cltd
daa
out
push
sub
xor
dec
push
xchg
sub
addr16
push
mov
and
out
lods
and
mov
outsb
lea
add
pop
addr16
mov
aad
xchg
int3
cmpb
(bad)
push
lcall
aas
data16
int1
les
out
addr16
ror
repz
inc
and
ret
push
xchg
ret
insl
inc
mov
std
xchg
cmc
and
idiv
dec
insl
jno
(bad)
lcall
pop
into
push
adc
rcll
stos
xor
cmp
enter
push
add
aas
sub
pop
(bad)
sbb
lea
mov
sbb
shlb
xorl
bound
push
mov
push
fs
inc
mov
mov
mov
ds
mov
cld
and
les
in
shlb
jbe
(bad)
jb
rcrl
push
mov
inc
adc
ljmp
add
fs
fstpt
lret
mov
in
cld
xchg
mov
mov
daa
fs
pop
jnp
fs
(bad)
in
aam
hlt
pop
out
hlt
inc
push
sub
mov
jl
and
jl
add
and
xorps
push
push
xor
or
xor
ficompl
dec
push
cmp
ret
or
or
push
lret
xor
jae
xor
lret
movsb
lods
jle
xor
(bad)
sti
leave
xchg
stos
jecxz
adc
inc
mov
dec
dec
push
cmpsl
pop
jmp
and
leave
dec
sahf
fldcw
pop
pop
inc
fbstp
xchg
cmp
xor
pop
addr16
test
push
in
mov
adc
xchg
loop
clc
xor
mov
loopne
adc
loope
adc
push
push
and
pop
cmp
xor
cmpsl
jl
lds
dec
jo
shrl
mov
push
sti
cmp
insl
push
dec
iret
push
imul
pop
cwtl
mov
jl
ret
xor
fbld
cmp
jl
add
push
xchg
lods
mov
add
daa
dec
cmpsb
