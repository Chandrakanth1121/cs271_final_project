out
xchg
push
add
cmpsb
imul
cmpsb
imul
xor
mov
xor
in
in
jmp
xor
enter
mov
cmpsb
mov
movsb
pushf
xchg
lcall
je
pusha
jmp
push
dec
inc
arpl
cmpsl
imul
pop
jbe
clc
xor
in
in
bound
sarb
fnstcw
add
xor
mov
xor
shll
pop
push
dec
inc
shll
sub
cmp
xor
adc
add
xor
pop
fidivrs
scas
call
lahf
fwait
out
setge
xchg
xor
xchg
adc
xor
mov
insb
lcall
adc
ja
mov
cld
inc
out
add
in
push
pop
xor
(bad)
(bad)
ljmp
fadds
xchg
pop
xchg
enter
mov
xor
negl
sub
fdivrp
(bad)
(bad)
lcall
call
mov
sarl
aam
cmp
stos
imul
sbb
(bad)
(bad)
ljmp
xor
shl
sti
in
ret
cmpsl
mov
outsb
jne
ja
(bad)
push
cmp
(bad)
(bad)
ljmp
mov
repnz
filds
add
fildl
and
xchg
nop
sbb
(bad)
ljmp
stc
adc
imul
cmpsb
fistps
pop
pushf
loope
je
adc
sbb
cmp
(bad)
(bad)
lcall
leave
inc
mov
push
(bad)
xchg
das
lret
push
mov
add
arpl
into
mov
enter
lcall
ficoms
and
mov
out
(bad)
shrb
jp
addl
pop
(bad)
(bad)
(bad)
(bad)
jle
roll
xor
mov
out
cmp
sub
xchg
adc
push
(bad)
(bad)
ljmp
addl
ret
or
dec
insl
xchg
into
jmp
dec
xchg
mov
pop
push
mov
sbb
pushf
testb
insb
in
or
sbb
into
je
test
(bad)
(bad)
push
loop
inc
cmc
lods
push
and
sbb
shlb
jmp
jnp
fs
pop
pop
pop
pop
(bad)
(bad)
(bad)
jmp
adcb
cmp
loopne
inc
jg
clc
cmp
push
pop
stos
(bad)
push
lods
or
das
(bad)
(bad)
(bad)
call
int3
inc
ret
inc
(bad)
dec
aad
popa
fs
jg
mov
daa
dec
jb
leave
stc
sub
(bad)
(bad)
(bad)
lcall
in
jle
and
xor
sahf
adc
sti
orb
in
or
(bad)
(bad)
lcall
fildl
lock
pop
rcrl
dec
adc
stos
adcb
out
stos
xchg
jl
pop
dec
inc
(bad)
(bad)
(bad)
(bad)
cmp
add
pop
sbbl
arpl
mov
pop
pop
cmpsb
in
cmp
(bad)
decl
jne
dec
mov
je
jb
aas
aas
inc
dec
push
dec
insb
jle
lret
(bad)
in
sub
(bad)
(bad)
(bad)
jp
int
inc
jns
hlt
ss
push
pop
lods
add
dec
outsl
sar
mov
fistl
push
fldenv
(bad)
(bad)
ljmp
ljmp
add
dec
repz
dec
std
mov
and
lahf
bound
int1
mov
out
movsl
mov
(bad)
(bad)
lcall
aaa
sub
sbb
cs
popa
js
scas
iret
repnz
pushf
into
add
jbe
cmc
cmp
lret
mov
xchg
push
mov
add
orb
sbb
cmp
jno
ljmp
cld
jmp
test
rclb
in
cmp
dec
mov
jg
(bad)
(bad)
ljmp
jmp
int3
inc
mov
ds
push
cmpsl
inc
loop
sub
jl
fisttpl
inc
push
iret
(bad)
(bad)
(bad)
lcall
les
and
repz
stc
add
sub
push
jo
lods
shl
pop
(bad)
(bad)
(bad)
decl
lods
loope
push
xchg
rcll
pop
test
inc
cwtl
out
inc
mov
pushf
or
data16
frstor
outsl
(bad)
(bad)
(bad)
(bad)
sti
sti
incb
andb
arpl
mov
aaa
jg
sbb
adc
(bad)
(bad)
(bad)
dec
sub
stos
pop
xchg
adc
xor
push
in
test
shlb
pop
or
(bad)
(bad)
lcall
jns
sbb
(bad)
mov
push
add
out
aad
rcl
xlat
fucomip
clc
or
(bad)
ljmp
scas
aam
sub
mov
cmc
cmp
shll
jbe
and
(bad)
call
(bad)
(bad)
(bad)
(bad)
cmp
(bad)
loop
testl
jle
ret
ljmp
dec
mov
adc
(bad)
push
inc
fwait
repnz
test
cmpsl
push
mov
jne
out
jae
test
mov
(bad)
(bad)
(bad)
lcall
rclb
xor
dec
loop
pusha
add
inc
inc
cmp
loope
sarb
(bad)
decl
(bad)
xor
sbb
fldcw
mov
ss
bound
out
mov
xchg
or
lcall
(bad)
(bad)
call
push
xchg
xlat
mov
dec
sbb
(bad)
mov
sub
hlt
fadd
pop
mov
jmp
xor
int1
inc
mov
jnp
and
dec
(bad)
(bad)
(bad)
(bad)
jg
adc
jg
stos
les
stos
xchg
rcrl
inc
insl
mov
in
dec
mov
(bad)
(bad)
decl
mov
pop
sbb
ficomps
int3
dec
call
push
lahf
push
lods
rcr
xor
(bad)
(bad)
ljmp
add
scas
ret
int
lret
push
stc
mov
cmpsl
fs
fwait
js
movsl
jp
jp
(bad)
(bad)
jmp
test
pop
cmp
ret
fistl
sub
and
cmp
(bad)
(bad)
(bad)
decl
orb
(bad)
pop
xchg
sbb
inc
mov
test
fisubrl
xchg
int3
mov
addr16
(bad)
(bad)
lcall
fstpl
and
(bad)
out
pop
imul
pop
sub
or
and
mov
(bad)
(bad)
ljmp
sbb
xchg
popf
dec
xor
out
push
add
push
sbb
cli
jge
out
and
mov
push
lcall
fisubrl
mov
cmp
rcrl
push
orl
push
stc
push
lea
gs
(bad)
(bad)
mov
dec
xchg
dec
mov
mov
sbb
mov
or
sub
mov
ret
sub
sub
sub
cmpsb
scas
in
cwtl
jns
adc
or
push
adc
pop
mov
popf
pop
movsb
out
lods
sbb
and
mov
popa
inc
cltd
push
mov
pop
(bad)
(bad)
(bad)
push
dec
bound
stos
adc
jns
push
movsb
mov
sub
pop
shrb
pop
pop
xchg
push
lock
mov
push
imul
out
fdivrl
(bad)
mov
stos
jecxz
(bad)
(bad)
incl
sahf
imul
adc
jns
mov
fdiv
lds
add
(bad)
jmp
cmp
cmc
out
xor
pop
sub
adc
call
ret
in
cwtl
in
in
movsl
enter
adc
add
mov
xchg
or
(bad)
(bad)
lcall
cwtl
add
fs
loopne
mov
popf
mov
outsb
nop
out
jmp
or
fbstp
roll
popa
lds
sbb
je
lea
ljmp
jp
pushf
xor
cld
and
imul
(bad)
push
xchg
xor
pushf
dec
sub
(bad)
clc
jecxz
inc
xchg
and
test
insb
(bad)
(bad)
(bad)
incl
xchg
adc
sbb
and
and
xlat
pop
jb
cmp
ljmp
cmp
(bad)
or
test
mov
sbb
inc
sbb
aas
rcrb
ret
adcl
sbb
or
push
mov
(bad)
adc
cmp
subb
or
loope
xchg
sarb
push
jmp
pop
arpl
xchg
jno
lret
jb
sub
push
call
stc
sbb
aas
pop
cwtl
push
int3
cmpsb
mov
das
xchg
sbb
int1
or
sub
test
or
xchg
mov
idivb
test
sub
sbb
pop
push
loopne
in
xchg
pop
call
adc
sub
outsl
sub
rclb
xorb
pusha
fimuls
movsl
jecxz
sbb
mov
jmp
mov
outsl
mov
lods
mov
sub
mov
dec
xchg
mov
pop
pusha
sti
jge
aaa
in
lret
ss
(bad)
(bad)
lcall
flds
