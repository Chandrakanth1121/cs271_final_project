and
add
dec
add
add
add
add
xor
add
add
add
push
and
add
movb
xchg
mov
out
mov
xchg
add
add
jae
gs
cs
gs
jne
arpl
cs
gs
jne
arpl
gs
fs
and
arpl
insb
imul
jae
outsl
outsb
cmp
xor
xor
inc
jne
je
jb
cmp
jb
insb
sub
push
jne
insb
imul
imul
bound
aaa
popa
xor
cmp
xor
xor
cmp
push
jns
je
insl
cs
gs
jne
arpl
cs
jne
je
insl
gs
gs
jne
arpl
gs
add
add
add
add
add
add
jns
je
insl
cs
jb
ja
outsb
addr16
imul
jns
je
insl
cs
jb
ja
outsb
addr16
push
gs
imul
xor
xor
inc
jne
je
jb
cmp
jb
insb
sub
push
jne
insb
imul
imul
bound
xor
data16
xor
fs
push
inc
inc
push
inc
inc
lods
frstor
fcomps
addr16
add
add
add
adc
imul
jne
jb
add
add
add
add
push
add
add
outsl
add
outsl
add
jbe
add
je
add
jo
outsb
add
punpcklwd
add
add
add
(bad)
(bad)
(bad)
incl
add
add
add
add
add
add
jns
je
insl
cs
jb
ja
outsb
addr16
push
gs
imul
xor
xor
inc
jne
je
jb
cmp
jb
insb
sub
push
jne
insb
imul
imul
bound
xor
data16
xor
fs
add
adc
gs
cs
jb
ja
outsb
addr16
imul
add
popa
je
pop
add
add
add
add
add
lsl
add
insb
pusha
add
add
or
or
add
or
add
add
add
or
add
add
sbb
add
inc
inc
add
jge
add
add
inc
dec
inc
add
mov
or
popa
add
jo
pop
jae
add
adc
add
adc
lret
aas
add
add
je
pop
je
outsl
data16
popa
jb
add
arpl
jae
data16
dec
data16
xor
fmull
inc
push
js
in
popf
imul
dec
push
fiadds
and
adc
andb
inc
push
ret
or
ret
dec
add
lock
mov
mov
cmp
je
mov
and
orl
adc
sub
mov
dec
pop
pop
iret
sahf
addr16
mov
mov
scas
pop
imul
ja
mov
mov
(bad)
jg
pop
js
leave
daa
pop
pusha
int1
iret
sbbb
loopne
sbbb
mov
sbb
rcrl
jns
stos
lahf
js
jae
cmp
jg
cld
or
xor
iret
add
add
or
xor
iret
xorb
mov
cld
enter
out
test
jg
mov
das
aas
mov
or
xor
iret
add
add
or
xor
sbb
fisttpll
std
shl
mov
cld
lret
ror
aas
add
or
xor
iret
add
add
or
decl
fdiv
sbb
lock
iret
add
add
or
xor
xor
xor
es
ret
jns
sahf
or
jp
js
stos
pop
or
loope
push
out
or
test
scas
mov
imull
push
aas
adc
movsl
cli
shl
dec
cmc
mov
sahf
stos
pop
or
out
das
ret
jge
js
stos
jg
into
dec
cmc
(bad)
jo
stos
mov
out
cli
mov
sbb
dec
cmc
cmp
sbb
lock
outsl
or
push
cmc
iret
ret
jge
cmp
aad
xchg
push
mov
sbb
mov
mov
or
movsl
jp
pushf
xchg
ljmp
aas
mov
test
test
cmc
dec
cmp
push
xchg
pop
stos
xchg
jns
push
or
push
mov
cmp
xchg
loope
xchg
ljmp
out
jp
cmp
imul
push
jge
cmp
aad
test
push
jge
cmp
outsl
or
inc
test
ljmp
pushf
xchg
ljmp
lock
ljmp
into
dec
cmc
jne
mov
pop
ljmp
ret
imull
aad
test
push
jge
cmp
aad
test
xchg
jp
clc
int1
movsl
jp
cmp
xchg
ljmp
pushf
dec
mov
mov
ret
pop
dec
rolb
push
lock
lods
push
cmp
mov
loopne
cld
aad
cmp
add
loope
xor
adc
pop
inc
fsubrp
add
loope
xor
cld
fsubs
shll
pop
scas
sbb
adc
mov
js
xchg
add
ret
xorb
test
mov
lock
imul
lea
lock
fldt
out
loop
ffree
inc
imul
call
xchg
(bad)
pop
mov
mov
add
mov
jp
lock
pop
cmp
add
mov
and
js
ret
popf
xchg
xlat
mov
pop
cmp
fcomi
mov
loope
mov
xor
xlat
mov
pop
shl
out
loopne
or
fsubrp
jge
jnp
rolb
hlt
imul
addb
inc
pop
mov
cmp
mov
cmp
xor
push
out
inc
lahf
ret
fistpl
lock
xor
lret
sbb
(bad)
addb
push
rol
rcrl
ficomps
data16
mov
mov
imul
push
lock
jmp
push
out
inc
lahf
ret
imul
popa
outsl
cmp
or
add
lods
adcb
rol
jbe
inc
or
mov
pop
in
push
sahf
adc
hlt
mov
push
adc
rcrl
sarl
js
add
and
iret
loope
sbb
mov
hlt
pop
inc
fidivrs
in
adc
push
push
inc
mov
popa
dec
and
rolb
popa
xchg
movsb
mov
push
cmp
mov
rolb
ret
shlb
jg
mov
xchg
int
popf
or
xchg
es
mov
mov
pop
xlat
movsl
mov
lock
or
iret
ret
xor
inc
shlb
inc
sbb
rcrl
jge
jnp
shlb
lock
cltd
ret
pop
adc
inc
sahf
(bad)
addb
loop
jge
mov
mov
mov
pop
rcrl
sub
sub
dec
mov
lock
loope
stos
push
or
or
dec
dec
shlb
js
scas
dec
fsts
xor
cmp
mov
sti
push
pop
push
mov
cmp
push
adc
nop
inc
sahf
testb
xor
pop
pop
mov
add
loope
hlt
test
lods
xor
sub
movsb
fstpl
inc
or
das
dec
or
add
mov
mov
sub
and
inc
mov
or
loop
mov
ffreep
inc
add
outsb
mov
and
pushf
imul
dec
nop
add
cmpsb
jo
inc
sarb
or
xchg
fstps
mov
out
ret
ficoms
gs
and
push
pop
popa
dec
pop
mov
dec
pop
or
rclb
jne
sti
leave
fwait
jns
imul
and
or
stos
lret
mov
mov
pop
les
mov
pop
push
scas
jo
xchg
mov
inc
or
movntq
rcrb
js
adcl
ret
pop
dec
enter
mov
xchg
jmp
loope
inc
pop
test
pop
les
mov
xchg
sbb
or
lret
sbb
xchg
lds
ds
mov
fsubrl
js
out
push
loope
push
sub
push
jp
pop
addr16
rcrl
mov
and
(bad)
cs
push
shll
test
arpl
dec
lcall
ja
mov
mov
mov
lods
out
mov
ret
and
loopne
pop
push
inc
or
push
jecxz
imul
je
test
lods
or
add
ja
aas
je
or
adcl
outsl
pop
xchg
xor
dec
dec
shl
out
adc
cmp
dec
dec
mov
scas
sub
mov
jg
out
ljmp
adcb
inc
cwtl
dec
xchg
xchg
xorb
loop
loope
xchg
sub
