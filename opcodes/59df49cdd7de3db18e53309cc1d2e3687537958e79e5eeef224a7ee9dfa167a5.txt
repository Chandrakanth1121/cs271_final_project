fwait
or
out
(bad)
mov
or
push
fdivr
or
xlat
sub
inc
popa
jmp
scas
out
adc
or
pop
and
or
aas
int3
xchg
lock
pop
ljmp
fisttpl
adc
inc
sub
inc
mov
rclb
in
(bad)
pop
into
inc
imul
mov
fiaddl
into
cld
cmp
rcrl
jns
sbb
mov
add
jmp
out
mov
lods
mov
std
pop
out
add
aad
sub
cld
sub
loopne
cltd
arpl
jns
pop
leave
mov
push
lds
stc
cmp
mov
push
test
push
or
mov
xlat
jmp
or
mov
inc
es
pop
xlat
mov
sbb
adc
aaa
jmp
mov
aas
jecxz
mov
rcrb
divb
lods
push
cmp
inc
cld
aaa
or
lret
notl
mov
inc
stc
popa
mov
jl
xor
mov
js
cmpsl
iret
leave
mov
sub
or
insb
lret
mov
and
mov
sbb
mov
xlat
sub
insb
shrl
fwait
lret
jae
xchg
std
mov
pop
aam
sti
out
and
add
(bad)
sbb
adc
ret
or
loop
lock
sub
clc
dec
sbb
and
cmc
dec
out
lds
fmuls
jnp
xor
xor
xchg
loopne
and
cli
cmp
push
fdivr
test
arpl
and
and
scas
mov
or
inc
mov
cmp
sub
jmp
dec
aam
push
cmp
aaa
jno
mov
dec
push
out
adc
mov
in
inc
shlb
jo
lock
pop
mov
dec
iret
sti
aaa
push
stc
fcmovb
mov
sbb
sub
cmp
dec
dec
dec
loopne
in
enter
(bad)
lret
or
jmp
adc
aam
mov
sbb
cmc
mov
clc
leave
mov
lods
mov
outsl
add
add
rcll
loope
gs
stos
xchg
mov
out
dec
(bad)
cmp
push
xchg
scas
inc
jo
popf
lods
lret
push
popa
jne
ficompl
movsb
fstpt
stos
push
jecxz
in
pop
fdivrs
scas
fsts
mov
(bad)
adc
fisubrl
push
stc
stos
push
lods
mov
and
inc
mov
lret
mov
scas
int3
test
cmp
mov
inc
aad
(bad)
jne
mov
movsl
call
aas
scas
pop
fs
and
cltd
mov
fcoml
(bad)
push
das
fadds
into
xor
cmp
mov
sbb
jmp
popa
in
mov
mov
repz
or
dec
loope
movsb
shlb
mov
xchg
or
(bad)
movsb
pop
push
mov
inc
fwait
jmp
add
and
xor
repnz
add
inc
rol
sub
loope
mov
jne
ss
or
mov
lods
int1
mov
popa
pop
sub
push
lds
cwtl
repnz
adcb
add
mov
lods
xchg
std
mul
cmp
mov
pop
xchg
push
cmp
outsl
mov
mov
adc
sub
lahf
cmpsl
sub
jmp
loopne
mov
adc
ror
jmp
mov
push
daa
and
test
mov
mov
or
pop
cs
jge
push
pop
sub
and
scas
sub
(bad)
rcl
clc
and
test
imull
lock
lock
mov
mov
and
lret
cld
and
cld
stos
fidivl
pop
hlt
and
mov
sub
(bad)
adc
fstpt
push
hlt
mov
and
movsl
sbb
sbb
scas
or
or
ljmp
rcrl
arpl
mov
mov
pop
lret
push
shlb
mov
mov
mov
dec
and
dec
mov
push
or
(bad)
call
mov
into
xchg
aas
or
popa
push
rorb
mov
mov
inc
xor
push
in
and
inc
jns
cmp
pop
mov
(bad)
dec
lods
test
lock
int3
iret
adc
adc
les
js
arpl
repz
mov
cwtl
pop
xor
ret
loope
movsb
pop
in
fldl
frstor
cmc
popf
cmc
cmpps
dec
mov
cmpsl
fimuls
cltd
(bad)
mov
inc
(bad)
ljmp
xchg
sub
out
mov
lea
cmp
sub
ret
push
jae
fnstenv
sub
in
inc
xor
and
jno
lret
in
cmpsb
adc
dec
iret
jmp
ja
mov
(bad)
mov
mov
cmp
rolb
mov
adc
push
cld
in
cmp
andb
xchg
scas
or
cmpsl
in
loop
iret
cmp
dec
cmc
adc
out
(bad)
add
or
out
and
xchg
mov
xchg
or
push
mov
jno
fnstcw
mov
(bad)
mov
xor
fldl
js
outsl
mov
sub
enter
and
xchg
xor
mov
cmp
cmovnp
jecxz
jl,pt
or
das
repz
(bad)
and
sub
sub
sbb
pop
cs
mov
mov
lea
dec
sbb
push
pop
nop
sub
add
push
fs
inc
cmpsb
pop
pop
inc
xchg
pop
add
jno
adc
mov
lods
sbb
mov
jmp
adc
adc
or
push
mov
and
mov
and
mov
sahf
sbb
outsb
in
mov
popa
push
lret
mov
fwait
dec
int
mov
stos
shlb
mov
cmpsb
xchg
xor
or
xchg
mov
shl
cmp
pop
sti
xchg
xchg
or
xor
sbb
dec
test
fs
jmp
cmc
dec
repnz
scas
and
call
and
(bad)
add
push
push
xor
or
test
adc
adc
ljmp
std
xor
xor
loopne
mov
jecxz
je
scas
(bad)
cmp
in
aam
mov
dec
and
push
subb
lods
mov
mov
pusha
mov
push
lds
call
push
add
inc
mov
push
int
sub
mov
xchg
jl
out
hlt
xchg
inc
sti
jecxz
popf
jmp
push
test
insb
cmpsb
leave
dec
mov
and
nopl
cmp
mov
(bad)
pop
inc
fidivrs
aad
inc
ljmp
cmp
(bad)
cld
aaa
popf
mov
mov
sub
call
adc
jno
lds
fisttpll
enter
xchg
push
mov
mov
push
into
in
mov
fstpt
mov
iret
pop
mov
stos
sbb
pop
jge
mov
mov
mov
dec
loopne
ret
loopw
popf
add
cld
add
test
pop
mov
jmp
cli
mov
mov
cwtl
jae
popa
push
mov
xchg
xchg
xlat
enter
mov
xor
jb
subb
fsts
and
(bad)
cmpsb
(bad)
fsubrs
movsb
cmp
sbb
cmp
mov
add
push
add
sahf
adc
xchg
cmp
loope
lock
mov
ss
hlt
jmp
mov
std
loop
fwait
sbb
roll
mov
cmpsb
xor
xchg
test
mov
out
ds
mov
cltd
hlt
pop
subb
pop
mov
xchg
sub
mov
(bad)
popa
mov
int1
push
cmp
cltd
dec
int3
xchg
mov
sahf
out
lahf
fcmove
sub
and
cs
outsl
xor
inc
jb
xchg
add
jg
inc
xor
jmp
int3
push
and
into
jle
jp
ss
pushf
jno
aam
and
mov
push
test
fcompl
sti
adc
pop
cmpsb
pusha
jb
mov
ret
or
fdiv
dec
or
call
nop
xor
out
lock
fcoms
cmp
loopne
hlt
mov
stos
dec
scas
mov
sbb
and
insl
sbb
cmpsb
lret
fisubs
cli
cmp
into
xchg
cmp
imul
mov
xor
jmp
xchg
pop
ret
orb
mov
inc
jle
xchg
nop
add
shl
xor
pop
and
rorb
adc
ds
cmp
cmpsl
out
inc
es
dec
mov
addr16
mov
cmp
shrl
push
mov
sahf
imul
jmp
sbb
stc
mov
sti
dec
js
adc
lret
cmp
jge
jg
pop
xchg
xlat
