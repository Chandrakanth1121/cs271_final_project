xor
push
push
pop
and
(bad)
(bad)
(bad)
ds
(bad)
lods
(bad)
add
out
cltd
addl
add
add
(bad)
add
add
int1
add
rex.rb
filds
or
cmpsl
pop
adc
push
xor
cwtl
xlat
sbb
sub
(bad)
or
movabs
loope
rex.wx
stos
out
mov
jmp
jp
jns
mul
testb
shrb
js
nop
and
push
pop
negb
jae
adc
cmp
pop
shrb
fdivl
jl
mov
pop
push
sub
fs
(bad)
movabs
mov
rex.x
fisttpl
xchg
mov
xlat
cmp
sar
rex.w
fwait
or
je
clc
movabs
lret
imul
pop
imul
loop
or
mov
push
stos
adc
jmp
jne
std
addr32
mov
(bad)
rex
(bad)
rex.wrx
pop
jns
or
pop
mov
lahf
(bad)
xor
test
jbe
(bad)
(bad)
out
test
push
push
(bad)
test
rex.wrb
xchg
cmp
fcompl
mov
enter
movabs
adcb
{rex2
pop
mov
call
mov
xorl
test
test
out
imul
push
jl
sbb
fwait
lea
xchg
cmpsb
push
fs
clc
in
cwtl
sahf
movabs
or
(bad)
movabs
(bad)
jb
insb
std
ja
iret
jrcxz
(bad)
push
rex.x
rex.wrxb
movsb
jnp
mov
imul
(bad)
jno
xor
mov
ret
mov
add
pop
sbb
cs
mov
xchg
movabs
out
mov
lods
loop
cmp
or
push
mov
mov
pop
sbb
lret
rex.rxb
ja
cltd
int
rex.xb
xchg
sub
mov
sbb
(bad)
xchg
insl
xor
rex.wrxb
cs
rex
clc
jp
mov
ja
sub
fs
xchg
xor
in
xchg
(bad)
sub
(bad)
movabs
nop
imul
lea
repz
pushf
mov
and
movsl
(bad)
fimuls
roll
data16
jo
(bad)
xor
(bad)
lea
xlat
jae
lods
push
int
lods
mov
xchg
rex.wb
sbb
insl
cmc
rcrb
xchg
rex.wx
rex.wrx
cmpsb
testb
out
{rex2
or
cwtl
rex.wr
mov
mov
rex.wrb
rex.wx
je
movabs
sahf
sbb
rex.r
(bad)
cmpsb
xor
in
mov
imul
sub
fisttpll
add
(bad)
sti
jrcxz
(bad)
(bad)
xor
insb
int3
imul
cmpsl
fstpl
sbb
adc
mov
(bad)
(bad)
push
rex.xb
sub
push
or
ficompl
mov
xchg
andl
movabs
push
out
cmp
push
std
rex.xb
rex.x
test
pop
lfs
mov
(bad)
fcoms
loope
cmc
{rex2
movabs
mov
xor
iret
mov
pop
(bad)
jnp
lea
(bad)
mov
jne
(bad)
rex.rx
lock
or
jge
out
sub
jmp
rex.wrxb
incb
jl
enter
lods
int
add
xchg
(bad)
sti
(bad)
sub
adc
xor
movabs
cmp
outsb
jge
sti
mov
lock
rex
sahf
cmp
lret
(bad)
mov
hlt
loopne
sbb
nop
rex.wx
jmp
mov
cmp
repnz
repz
sbb
lock
sbb
rex.rxb
xor
nop
fwait
push
push
mov
lret
mov
mov
roll
movabs
cmpsb
jae
fnstsw
xchg
add
push
fidivs
jbe
test
sub
iret
jp
adc
out
(bad)
mov
xchg
{rex2
jl
ret
imul
pop
xchg
add
cld
add
cs
(bad)
jno
mov
mov
xor
mov
call
sbb
pop
xchg
sbb
push
pop
cmp
test
sbb
(bad)
movsb
xor
in
rex.rb
ja
pop
xchg
sub
rex.wrxb
fsubrp
jno
(bad)
incl
rex.wrx
mov
ficompl
cmp
or
es
(bad)
(bad)
mov
rex.wrxb
movabs
jne
out
movabs
sbb
xchg
mov
jl
rex.wx
movabs
lock
lods
push
lret
adc
(bad)
adc
sbb
test
mov
xchg
xchg
xchg
xor
mov
sbb
adc
add
rex.wrx
sub
xchg
int
stc
test
int1
mov
sbb
xchg
rex
enter
adc
outsl
insl
(bad)
pop
or
sbb
mov
sub
std
add
fisubs
or
pop
mov
mov
ss
(bad)
adc
test
leave
adc
(bad)
(bad)
lock
pop
(bad)
xchg
movabs
insl
sub
and
ret
adc
pop
mov
stos
sub
es
(bad)
test
push
cmp
rex.wrb
pop
sbb
pop
xchg
cld
fnstsw
rex.w
es
xchg
jl
leave
adc
{rex2
(bad)
addr32
repnz
mov
(bad)
int1
out
je
shlb
pop
fsub
mov
movb
add
negl
cmp
(bad)
cmc
call
rex.wxb
jnp
push
fs
or
pop
insb
cmp
adc
js
movabs
mov
rex.x
add
rex.rx
add
add
xor
add
out
(bad)
test
test
(bad)
ret
repz
and
sbb
(bad)
mov
(bad)
enter
lret
lahf
fwait
pop
cmpsb
rex.r
mov
movabs
in
cmp
or
(bad)
mov
push
sub
xlat
cmp
shrw
push
xchg
xchg
rex
hlt
or
pop
movabs
xchg
or
stos
mov
push
jno
lret
sub
xor
in
fcmovb
xor
push
pop
movsb
lods
std
rex.rx
repnz
or
mov
fmull
cs
adc
(bad)
leave
(bad)
cmp
mov
add
cmp
sub
xchg
mov
sub
test
cli
sahf
incb
movabs
jp
pop
data16
(bad)
rex.wb
in
cmp
(bad)
mov
rex.rx
pmulhuw
push
add
pop
ja
(bad)
cwtl
rex
(bad)
jle
sub
(bad)
std
ja
xchg
shrb
imul
(bad)
adc
(bad)
out
sbb
cmp
(bad)
(bad)
push
mov
adc
xchg
(bad)
je
cli
rcl
or
jbe
in
mov
enter
{rex2
and
in
rex.wrx
call
add
rex.wrxb
(bad)
mov
enter
xchg
(bad)
(bad)
jbe
(bad)
lea
int
push
sub
jl
jno
mov
rorb
lea
or
pop
pop
hlt
stc
(bad)
mov
movabs
adc
or
in
push
fbstp
or
and
rolb
rex.w
and
push
rex.r
in
leave
addr32
in
adc
cltd
jno
out
xor
insb
pop
rex.wx
sub
(bad)
cmp
mov
(bad)
xchg
(bad)
or
(bad)
data16
(bad)
stc
(bad)
adc
movabs
or
lea
cmp
xchg
cs
adc
fidivs
pop
mov
sbb
frstor
fldl
and
pop
mov
stc
(bad)
rex.w
sahf
mov
test
xor
jno
sarb
lret
xchg
fnstenv
or
jge
sbb
jg
push
adc
or
adc
mov
nop
es
{rex2
rex.r
mov
xchg
xor
fnstsw
rex.x
rex.wr
or
mov
xchg
mov
rcrl
and
testb
int1
jno
xchg
repz
(bad)
(bad)
lret
rex.rxb
push
adc
sti
shlb
(bad)
sub
jl
clc
mov
fs
js
(bad)
mov
mov
mov
add
xchg
mov
movsl
shr
jns
rex.wr
(bad)
pop
out
mov
rex.wb
push
jne
mov
je
push
(bad)
decl
rex.wrb
sub
(bad)
jns
int3
pop
fidivrl
mov
in
imul
add
call
cmp
cmc
pop
jne
loope
rorb
scas
nop
rcr
xchg
cmp
xchg
cs
(bad)
enter
rex.w
and
xchg
and
fwait
gs
jbe
(bad)
add
push
movsl
(bad)
lret
sub
(bad)
add
mov
(bad)
xor
fs
mov
add
xchg
push
sub
pop
scas
(bad)
mov
mov
sbb
pop
repnz
pushf
and
jnp
mov
pop
movsb
(bad)
adc
mov
test
(bad)
(bad)
add
fistl
movsxd
or
negb
insl
(bad)
test
pop
scas
movabs
cli
test
out
add
insb
jns
stos
push
jp
sub
es
mov
movabs
cmc
and
jge
(bad)
in
push
rex.wxb
jo
xchg
stos
rex.wr
mov
