lahf
sub
push
dec
movsl
lods
pop
push
repz
int
inc
sbb
or
in
pop
sbb
or
dec
call
xchg
pop
push
(bad)
out
insl
dec
xor
scas
jno
add
mov
aam
int
jp
jmp
and
cmp
jecxz
sub
lock
das
cmp
ret
and
or
shlb
sahf
mov
in
push
xchg
xor
push
aas
fcoms
pop
pop
mov
or
cmp
fiaddl
jno
lods
sbb
jp
sbb
cltd
ja
popa
or
dec
mov
int
scas
adc
mov
sub
lret
mov
mov
(bad)
and
enter
fisttpll
and
xor
adc
arpl
cmp
inc
cmp
(bad)
addr16
sbb
cs
js
jmp
xor
mov
scas
loope
mov
mov
pop
lods
cmp
in
stos
daa
call
aad
mov
jns
adc
test
in
dec
jno
cli
adcl
call
dec
or
inc
test
test
mov
lahf
push
dec
(bad)
mov
pop
and
cwtl
sbb
sbb
out
data16
mov
and
pop
push
push
pusha
int1
bnd
jp
mov
mul
movsl
xor
mov
pop
sub
leave
or
movsb
pop
mov
outsl
xchg
inc
jle
mov
in
mov
loop
loope
sub
ss
lds
aad
fisubrs
inc
push
ds
sub
call
mov
cli
imul
sub
outsl
fbstp
(bad)
dec
xchg
insl
mov
es
push
inc
test
jg
aas
data16
insl
or
or
jne
rorb
cmp
shll
mov
jg
fwait
lods
dec
add
sbb
jbe
dec
jnp
add
cmp
adc
dec
dec
popa
dec
dec
(bad)
xor
stos
lret
mov
push
pop
mov
pusha
insl
mov
pop
lods
jmp
into
jmp
cmp
jp
movsb
jbe
insl
jne
test
int1
adc
fs
cmp
pushf
and
xchg
int3
jmp
sub
ret
xlat
sti
cmp
dec
mov
out
push
fcomip
loope
lods
jle
daa
jno
cmp
divb
mul
lahf
mov
imul
push
ss
neg
pop
aaa
dec
out
push
push
repnz
iret
mov
outsl
sub
(bad)
in
iret
mov
mov
mov
dec
enter
jge
loopne
or
insb
push
push
popf
xlat
cmpl
dec
es
jne
pop
insl
xchg
je
(bad)
xchg
popa
je
andl
shll
or
cmp
mov
lods
notl
into
adc
cs
popf
(bad)
fistl
(bad)
movsb
loopne
fsubrs
sub
movsb
mov
push
mov
sahf
daa
loope
sbb
mov
cmpsb
in
in
into
ret
inc
mov
in
dec
mov
xchg
mov
mov
lods
push
ficomps
mov
mov
cmp
in
rorb
pop
testl
pop
push
aaa
or
insl
mov
aad
xor
sbb
xor
mov
cmp
pusha
mov
mov
in
jle
mov
jle
sub
inc
loope
mov
ret
int1
arpl
xor
mov
cmp
pop
mov
jl
push
xor
pop
popa
mov
orb
jl
loope
mov
jns
test
xor
js
adc
inc
loop
imul
(bad)
shll
cmovge
inc
mov
sahf
xchg
bound
shll
cmp
mov
mov
and
sub
popf
loop
mulps
and
add
fcoml
xor
sub
dec
rcr
or
call
jb
ret
xchg
enter
or
out
imul
pop
and
jge
inc
lret
mov
out
test
jge
es
and
ds
outsl
sbb
insb
push
imul
mov
je
sbb
int3
pop
nop
mov
jecxz
inc
cmp
enter
lods
jb
mov
mov
jno
xchg
pop
fwait
pop
sbb
add
pop
and
xor
ret
add
movsb
xchg
popa
adc
std
add
mov
jecxz
mov
mov
or
sub
mov
int3
scas
add
dec
pop
push
inc
push
imul
or
cmp
(bad)
mov
ret
cmp
sahf
mov
mov
push
mov
mov
dec
cli
push
mov
and
pusha
ss
lea
push
pusha
ret
push
and
leave
xor
outsb
jns
pop
int1
mov
lds
or
push
dec
pushf
pusha
movsb
or
sub
xor
pusha
imul
fildll
insl
pop
pusha
fwait
cmp
xor
enter
(bad)
or
jno
int1
ss
add
mov
mov
int1
or
inc
shrl
xor
ljmp
and
daa
lock
pop
popa
and
adc
mov
mov
xchg
movmskps
mov
add
push
mov
and
jg
sub
dec
mov
roll
inc
mov
push
and
mov
repz
sub
test
(bad)
mov
or
push
dec
mov
inc
or
xchg
lock
lods
adc
sub
loope
and
sub
push
es
mov
loopne
dec
rcrl
pop
insl
addr16
in
das
mov
or
pop
bound
imul
mov
or
pusha
dec
xchg
(bad)
mov
test
lcall
xlat
mov
je
sub
and
xchg
mov
addr16
and
push
pop
and
cs
iret
ds
mov
call
push
sarl
xor
add
cmp
push
mov
addr16
jns
cmp
xor
arpl
aaa
ret
aam
loope
loope
mov
rcrl
adc
out
outsb
call
rorl
inc
mov
adc
arpl
dec
mov
clc
(bad)
xchg
jle
jnp
call
popf
and
mov
ja
out
lock
mov
pop
in
cmp
loope
mov
outsb
out
xor
sub
loop
dec
jae
outsl
outsl
push
faddp
cltd
dec
jecxz
insl
aas
push
pop
outsl
dec
jb
cli
pop
dec
inc
mov
dec
fcomps
or
adc
xchg
sub
mov
add
shl
sti
(bad)
pop
add
imul
insb
or
xchg
pop
dec
push
xchg
sahf
inc
jo
aaa
sub
or
xchg
lods
cmp
das
sahf
fnstsw
jg
or
dec
sub
inc
add
das
sbb
shll
adc
push
cmpb
inc
and
pop
cli
sub
test
jno
addr16
and
lods
stc
dec
adc
int3
cmp
push
jae
mov
dec
sbb
cmp
sbb
les
outsb
add
adc
push
push
xchg
and
push
sbb
dec
or
pushf
mov
sarb
cmp
sbb
in
dec
cwtl
cs
out
js
pop
stos
call
and
rcrb
jns
fcoml
or
add
(bad)
xchg
push
int3
or
adc
repnz
fldenv
push
or
add
inc
inc
andb
addl
jnp
lret
pop
fstl
xor
fs
adc
lds
es
xor
call
lods
push
shrl
stc
add
sub
adc
inc
adc
mov
hlt
stc
addr16
or
mov
decl
imul
lahf
dec
scas
add
outsb
mov
mov
push
popa
cmc
and
lock
mov
aas
xchg
jb
inc
jne
in
push
loopne
cmpb
(bad)
jo
cltd
jo
and
adc
iret
and
lret
xchg
out
dec
dec
sub
popf
add
aaa
inc
ljmp
xchg
and
or
fwait
xor
cmp
pop
cltd
cmp
add
shrl
in
(bad)
out
jmp
daa
pop
mov
xchg
rorl
mov
ljmp
xor
push
mov
int1
pop
jl
sbb
push
cmp
cmp
cmp
mov
adc
pop
inc
ficomps
in
cwtl
shll
cmp
add
dec
test
addb
lret
fs
rcrb
mov
clc
sub
hlt
adc
jecxz
cmpsl
in
xor
and
push
or
pop
jp
repz
adc
shl
test
adc
data16
push
jno
and
loopne
sbb
nop
