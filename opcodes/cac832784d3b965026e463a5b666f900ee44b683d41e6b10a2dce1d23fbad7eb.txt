pushf
(bad)
lds
push
lods
mov
lret
(bad)
sbb
fimull
inc
sbb
jno
inc
or
addb
sahf
sub
roll
int1
sbb
jo
sarl
fisubrs
push
lds
xchg
add
inc
pop
dec
frstor
rclb
sbb
loope
xor
sub
in
lcall
or
cmp
push
gs
cwtl
lds
cmp
jp
imul
lret
dec
lret
ds
movsb
sarb
in
mov
loope
jno
mov
loop
cltd
aas
adc
lret
addl
fidivrs
(bad)
ficompl
add
nop
push
cmpsl
sbb
lds
push
(bad)
sbb
test
lea
std
sbb
inc
jle
addr16
inc
aas
cmp
dec
fs
sbb
push
imul
in
decl
xor
inc
mov
pusha
mov
jg
inc
loop
imul
pusha
lahf
xchg
pushf
sub
cmp
ds
push
adc
idivb
dec
(bad)
cmp
jmp
mov
pop
pop
aad
fnstcw
adc
mov
mov
mov
sbb
sbb
fidivl
and
xor
mov
fistpll
es
pop
dec
arpl
(bad)
mov
(bad)
adc
sbb
ss
call
xor
pushf
lods
ffree
add
jmp
in
mov
out
push
std
mov
jnp
insl
out
fisttpl
push
mov
in
sub
inc
adc
lcall
in
mov
mov
xchg
enter
pushf
out
adc
cmpsb
mov
jo
je
in
dec
lock
retw
dec
sar
add
mov
outsb
mov
aaa
arpl
add
test
xor
cmpsl
dec
pop
fsubl
mov
orb
repz
xor
xchg
fistpl
add
es
xlat
fnstenv
jp
push
cmp
jge
cmpsb
push
lret
jmp
sub
(bad)
sbb
mov
add
xlat
nop
xchg
aad
sub
mov
inc
(bad)
push
int3
and
mov
test
cmpb
mov
popa
lock
js
push
jge
and
mov
(bad)
int
inc
test
movsb
imul
outsb
adc
cli
xor
sbb
inc
cwtl
jecxz
shrb
jae
loop
jns
stos
dec
sbb
cmp
xlat
es
iret
mov
inc
sarl
pop
seta
test
insb
adcl
push
inc
push
jo
jecxz
insl
xchg
mov
mov
xor
out
and
in
cwtl
aam
dec
xor
dec
es
filds
xchg
xlat
(bad)
incb
out
adc
int3
xchg
jl
xor
sbb
push
enter
(bad)
jns
pusha
add
jg
test
mov
jo
dec
xor
sbb
sub
pushf
dec
jnp
and
stos
in
lahf
(bad)
sbb
pusha
pop
loope
sub
aad
mov
push
mov
or
test
loope
repz
je
and
mov
shrl
dec
insl
fsubr
and
push
mov
pop
leave
cmp
aaa
bound
pop
loope
xrelease
cmp
push
xchg
mulb
es
(bad)
ljmp
lret
rcrl
sub
rol
add
cmp
roll
cmpsl
fstpl
dec
(bad)
sahf
shlb
mov
jl
jns
dec
cltd
jge
movsb
dec
fs
pop
insl
and
test
xor
out
popf
fwait
loop
pushw
insb
cltd
(bad)
or
test
iret
sarl
fcmovu
cmp
jns
pushf
ds
pop
add
pop
pop
test
sbb
mov
int3
xor
insl
mov
add
xchg
scas
and
jno
test
ret
xor
dec
mov
xchg
xchg
test
mov
repz
pop
lea
fdivrl
lock
or
bsf
cld
mov
xchg
cwtl
push
daa
cli
cmp
int1
dec
jo
dec
sbb
mov
aaa
setp
adc
xchg
lret
mov
pop
or
lods
and
push
enter
shrb
repz
scas
scas
push
jnp,pt
stos
rclb
fmul
es
outsb
arpl
sub
aaa
cmp
inc
enter
cmp
mov
add
pop
lret
ret
push
and
or
mov
or
ds
pushf
int3
addr16
movsb
pop
test
cmpsl
scas
pop
xlat
(bad)
pop
std
fstpl
pushf
inc
lods
aaa
push
jg
mov
pop
or
out
mov
ret
aam
jmp
xchg
or
es
add
inc
dec
(bad)
js
inc
cmpsl
push
inc
test
out
inc
dec
mov
pop
aam
clc
or
or
inc
ds
movsb
scas
mov
inc
push
aas
loope
inc
jecxz
lods
fidivrl
jle
(bad)
fstpl
mov
push
inc
xor
or
jne
pop
das
call
fbld
jl
in
sahf
outsb
stos
and
jecxz
jno
(bad)
int3
sbb
sbb
cmc
rorl
ss
movsb
movsl
test
adc
test
xor
(bad)
sti
rorl
cmp
push
ret
dec
sbb
aaa
adc
aam
dec
push
outsb
rorb
fwait
loop
sar
fsubl
mov
loop
and
mul
push
jg
fwait
push
daa
in
jo
je
and
mov
mov
bound
in
mov
xor
dec
mov
shr
xchg
hlt
(bad)
push
std
rol
inc
(bad)
divb
ret
pop
scas
push
mov
mov
rcrb
rcrb
pop
ss
test
jb
ficoml
fnstsw
es
inc
fisubrs
sbb
push
mov
bound
sahf
mov
jp
jae
mov
xchg
fsubp
mov
push
and
push
loope
es
fwait
aaa
mov
ret
lret
inc
cmp
test
or
mov
daa
cmp
xchg
pop
cmp
jns
fdivrl
mov
subl
cltd
call
jmp
inc
lods
repnz
sbb
clc
aam
cmpsb
out
adc
jg
jne
jbe
xchg
popa
pop
cmpsb
push
inc
lods
cli
lods
adc
or
adc
data16
push
(bad)
sub
push
and
pop
lds
push
fsubrl
lods
cmp
mov
shlb
inc
out
ja
pop
dec
(bad)
pop
adc
or
mov
outsb
out
daa
shll
test
lds
adc
mov
and
cmp
add
lea
iret
dec
pop
and
and
fwait
stos
fdivs
loopne
sarb
xchg
lcall
sub
pop
int
jns
fadd
dec
std
addr16
jnp
lock
or
int1
stc
inc
sbb
call
cmp
sahf
xor
cmpsb
fstps
xchg
or
mov
mov
dec
bound
mov
lods
lods
outsl
mov
xlat
rcrb
mov
lret
aad
push
in
add
sub
push
lcall
cmc
rorl
xchg
dec
jb
sbb
push
inc
cmp
cld
fucomip
int3
scas
sub
inc
xchg
push
push
mov
bound
mov
pop
aam
push
repz
push
sub
push
lcall
cmp
loop
push
or
xchg
gs
arpl
(bad)
punpckhbw
fwait
and
jp
jmp
fbld
dec
jbe
fcomi
or
mov
jle
jecxz
sub
add
add
sarb
cmp
leave
xchg
mov
sub
lods
loope
ret
js
cmp
int1
or
enter
push
mov
add
pusha
fs
(bad)
xor
(bad)
fbstp
je
shlb
inc
mov
mov
push
push
add
test
repz
cmp
add
mov
testb
jmp
pop
add
cmc
sahf
std
lret
pop
(bad)
push
in
sbb
shrl
mov
loope
push
lds
ret
xor
es
push
(bad)
sub
out
pop
pusha
mov
xchg
test
mov
cmp
mov
sbb
popf
enterw
and
and
lods
push
mov
and
xor
lret
cmp
pop
out
mov
popa
and
sub
pop
iret
jne
(bad)
in
js
pop
lods
sub
cmp
mov
add
clc
gs
adc
cwtl
inc
jmp
aam
std
sub
sahf
add
lds
fwait
or
mov
lds
insl
negl
orl
adc
in
in
xchg
add
lcall
lret
dec
jp
data16
jp
dec
pop
