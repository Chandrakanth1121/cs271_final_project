stos
add
push
add
mov
fiaddl
add
bound
fidivs
(bad)
sbb
lret
add
dec
cs
cwtl
pop
sbb
into
ret
add
inc
and
pop
jo
rolb
mov
jg
(bad)
sub
inc
sub
cmpsb
lock
daa
arpl
jmp
inc
pop
fnstsw
or
arpl
xchg
daa
es
in
aas
loopne
out
fcoml
push
sub
mov
rorl
mov
mov
inc
xor
stc
jge
add
lahf
sti
fnsave
bound
popf
xchg
repz
sub
dec
lahf
jno
in
lea
in
insl
sub
stos
mov
mov
push
add
arpl
xchg
fstps
test
or
(bad)
rorb
xchg
loope
mov
insl
int1
mov
fcomps
mov
rorb
push
lds
push
cmpsb
push
bound
mov
rcll
cmp
inc
mov
fdivrl
mov
lds
in
xor
dec
push
mov
ss
mov
or
xor
xchg
shlb
movd
aad
mov
shrb
sub
pop
cld
pop
push
std
sbb
dec
call
jle
jp
xchg
push
loopne
add
jns
cmpsl
les
pop
or
add
ds
mov
lods
rcrl
sub
jl
push
and
push
cld
add
shrb
push
xchg
adc
push
daa
(bad)
fstpl
fcomi
xchg
xchg
push
and
cmp
and
jl
jp
call
shrb
pop
arpl
cmc
mov
pop
decl
push
sbb
stc
std
adc
add
and
mov
add
pop
aad
push
jb
or
xchg
popf
adc
inc
push
mov
cmpsl
inc
test
and
movsb
dec
push
cli
inc
test
cmpsl
out
jmp
jmp
cmpsl
les
dec
mov
jmp
cmp
outsl
lock
fwait
add
xchg
fwait
pop
lock
pop
sbb
dec
sahf
jbe
rorl
rorb
cmpsl
mov
sti
mov
negb
inc
scas
adc
pusha
push
into
daa
push
outsl
mov
xor
loope
mov
pushf
pop
and
mov
sub
out
cmpsl
aad
cmp
jge
pop
std
addr16
pop
sub
bound
xchg
lods
outsb
xlat
or
movsb
out
xor
popa
(bad)
mov
xchg
rol
insb
daa
pushf
wrmsr
dec
xchg
push
mov
int1
sub
mov
test
sbb
xchg
xlat
adc
cs
jg
sti
mov
push
mov
dec
sbb
(bad)
cmp
sbb
mov
lods
sub
lods
dec
jle,pn
mov
sbb
and
adc
mov
push
pop
adc
(bad)
mov
movl
mull
sub
enter
xchg
cmp
in
add
int
repz
xchg
lods
(bad)
fwait
and
insb
sahf
mov
pop
cmc
pop
dec
lea
fimull
xor
sbb
and
leave
inc
cmpsb
stos
or
pop
adc
xor
maxps
lret
fldl
adc
ljmp
leave
cmp
or
sub
push
hlt
push
mov
bnd
in
rcrl
push
stc
adcl
aas
mov
lret
xor
cmp
mov
into
xchg
jmp
jnp
es
lret
daa
jecxz
lret
mov
mov
notl
fnstenv
clc
idiv
jecxz
mov
add
dec
push
lcall
testb
mov
pop
jbe
push
jno
adc
fisubl
sub
stos
mov
or
adc
imul
and
sbb
jns
faddp
out
subl
cwtl
sbb
jae
pop
push
inc
into
jmp
xor
pop
orb
xor
jp
pop
inc
incl
fs
push
mov
aam
xor
lret
dec
xchg
cli
mov
fildll
mov
(bad)
fsubs
push
aaa
scas
or
sub
add
clc
adc
sub
mov
shrb
fwait
(bad)
jmp
rolb
jmp
jl
repnz
xchg
pushf
test
repz
ret
xchg
sbb
ret
mov
fmull
sbb
push
arpl
scas
test
js
(bad)
ljmp
int1
je
xor
add
xchg
jo
sub
lock
repz
sbb
ss
test
inc
adc
xor
pop
add
bswap
and
sahf
aas
out
xor
leave
hlt
int3
jp
aad
out
into
mov
mov
sbb
loopne
or
pop
fmul
adc
fdivs
inc
sub
or
add
lcall
out
or
je
or
pop
push
stos
mov
(bad)
jno
xchg
dec
inc
fildll
mov
out
mov
and
jge
out
out
xchg
push
mov
ss
inc
rcr
mov
inc
movsb
or
xor
jp
xchg
bound
cmp
or
arpl
mov
sbb
inc
jp
jbe
imul
int
pop
jecxz
shl
sub
sahf
data16
sbb
push
popa
int1
sbb
pop
shlb
cwtl
mov
lds
mov
cmpl
jae
loope
arpl
mov
inc
and
or
insb
or
mov
gs
cltd
mov
push
lds
adc
adc
fabs
daa
jmp
and
dec
push
adc
lods
mov
lret
mov
jne
xchg
cmpsb
push
sbb
xchg
jmp
bswap
jecxz
pop
(bad)
pop
bound
iret
xchg
loop
mov
imul
adc
mov
ljmp
out
mov
loope
arpl
xlat
sub
stos
sub
and
(bad)
mov
push
jmp
stos
jp
mov
repnz
push
stos
call
mov
jne
jmp
push
int3
movd
pop
sbb
push
dec
arpl
and
xor
mov
lret
mov
xchg
ror
push
xor
push
dec
sub
scas
add
dec
jae
adc
sub
mov
sub
sarl
ljmp
(bad)
push
fs
mov
hlt
sub
leave
mov
cmp
pop
mov
xchg
ret
dec
not
stos
sbb
cmp
jb
ss
scas
shlb
xchg
sbb
jl
shl
dec
xchg
dec
sarl
mov
test
xlat
sbb
and
inc
or
gs
inc
push
ja
mov
or
adc
xchg
repz
fmulp
testl
cmp
int3
mov
cmp
(bad)
dec
sub
xor
sti
test
movsl
jno
iret
fwait
imul
jno
pop
mov
push
test
loope
jb
fildll
mov
push
lret
xchg
(bad)
xchg
fiadds
push
shll
dec
mov
std
(bad)
jge
arpl
(bad)
or
cmp
stos
scas
or
das
das
call
jecxz
in
movb
fldl
ret
push
mov
(bad)
cmp
inc
and
xor
into
push
dec
mov
mov
lahf
popf
test
mov
pop
mov
mov
ficomps
add
or
in
into
push
or
jg
sbb
shrb
xor
loop
leave
inc
mov
and
aad
pushf
or
jmp
mov
ret
mov
(bad)
xor
outsl
mov
add
inc
push
adc
and
int
sub
fdivr
adc
mov
mov
jns
nop
out
cmc
push
sbb
ljmp
stos
aad
arpl
int3
repnz
mov
push
xchg
movsb
(bad)
stos
popf
popa
int3
outsb
mov
xor
pop
jecxz
and
xorl
sub
mov
lret
sbb
push
repnz
call
add
mov
jne
jae
mull
imul
int1
das
das
leave
popf
vmwrite
cs
or
in
mov
mov
daa
mov
fcmovnb
(bad)
xor
jmp
ret
pop
or
xchg
fstpt
mov
mov
pop
ss
xor
jge
lcall
mov
sub
sub
pop
ja
sub
ds
ss
ljmp
jmp
js
sahf
loopne
push
dec
ss
jle
mov
jo
cmp
(bad)
lret
sbb
out
lret
pop
js
rcll
mov
rcrb
(bad)
pop
mov
push
push
cli
pop
sub
and
add
stc
shrl
nop
inc
js
sahf
jecxz
jae
push
push
mov
pop
aas
dec
repnz
aas
mov
lret
push
sti
lcall
add
pop
add
add
push
xor
aaa
