jae
cmp
mov
popf
xchg
push
aad
leave
and
push
fdivrs
fisttpl
in
cltd
loopne
shlb
pop
out
push
ja
or
fs
(bad)
pop
bound
movntq
sub
loopne
(bad)
hlt
or
xchg
pop
push
mov
pop
sub
xor
cmp
push
test
or
jg
cmp
arpl
pop
sbbl
test
pop
adc
in
xor
shlb
mov
mov
push
pop
pop
es
adc
push
jge
int1
pop
outsb
mov
mov
les
ret
iret
sahf
jo
xlat
inc
sub
out
xlat
test
mov
fmuls
xchg
mov
fs
push
aaa
aaa
mov
mov
adc
push
nopl
mov
jbe
popa
roll
shll
pop
jbe
out
sub
imul
pushf
arpl
ss
out
jmp
cmp
ja
std
mov
(bad)
sbb
fstps
push
sbb
mov
mov
lods
mov
lock
xchg
loop
or
cmc
mov
sbb
sub
das
gs
out
clc
enter
push
push
sbb
test
mov
mov
or
cmp
and
push
ja
loope
std
adc
inc
lahf
inc
mull
jge
cmp
aaa
xchg
pop
cld
sbb
jmp
(bad)
cli
mov
fidivrl
cmp
push
and
push
mov
lret
inc
out
dec
pop
imul
sub
int3
fisttps
pushf
adc
popf
add
fdivl
sbbl
sub
movsl
test
adc
ret
(bad)
pop
push
mov
notb
pop
jl
fadds
sbbl
nop
(bad)
js
lret
push
loope
xchg
je
cwtl
xchg
fbstp
das
in
xor
loope
les
mov
push
push
loopne
fwait
lods
mov
scas
aaa
sub
rorl
sbb
push
mov
and
decl
adc
in
push
sahf
xchg
fimull
cmp
test
movsl
xlat
push
push
test
dec
push
cmpsl
loop
sbb
stc
cmpsl
stc
test
dec
paddsb
mov
int1
mov
dec
xlat
and
fildll
mov
xor
rcrl
push
add
sti
and
mov
arpl
out
clc
xchg
repz
jecxz
cli
mov
mov
ss
sub
mov
sbb
xchg
in
push
out
inc
xor
xchg
dec
cmpsb
adc
push
dec
pop
(bad)
addr16
lock
mov
ret
pushf
sub
jne
pop
mov
adc
imul
incb
dec
mov
imulb
mov
orb
dec
ss
cs
xchg
rorl
mov
rolb
mov
lods
pop
sarl
sbb
jnp
pop
jecxz
mov
cmc
jno
jns
xor
test
pusha
(bad)
fidivl
shl
lods
jns
pop
add
inc
mov
stc
repz
aaa
sahf
lret
inc
xor
sub
popa
aaa
inc
cli
sti
adc
ss
mov
dec
test
jb
mov
lea
addl
push
sahf
xlat
lods
dec
stc
or
push
xor
push
mov
mov
mov
inc
xchg
pop
mov
sbb
cld
sbb
sqrtps
mov
(bad)
fistps
pop
jb
mov
sbb
cli
pop
test
stos
(bad)
int1
das
jne
mov
mov
mov
mov
adc
aas
xchg
push
add
adc
or
out
aas
loope
arpl
push
lret
fwait
push
mov
in
and
inc
mov
fisubs
fcmovnu
mov
mov
sub
mov
lcall
lret
sub
stos
jnp
je
xlat
out
jp
rcrl
cmp
adc
jo
in
(bad)
pop
pushf
shlb
jp
out
cmc
mov
shlw
in
mov
out
push
and
pusha
cmp
mul
ret
pop
push
mov
hlt
nop
cltd
out
inc
jl
sarb
in
sbb
rorl
mov
mov
or
mov
mov
mov
pop
or
orb
cmp
lret
out
imul
cmp
aam
mov
fldl
mov
pop
out
cld
xchg
test
inc
jl
sub
sbb
loope
xchg
pushf
pop
(bad)
aas
cli
adc
ds
rorb
ljmp
js
negb
pop
cs
bnd
sbb
adc
nop
cs
jb
jae
sbb
out
arpl
rcll
out
cmp
jge
addb
das
(bad)
adc
mov
das
or
cwtl
aam
push
pushf
mov
(bad)
enter
insb
mov
subl
cmpsl
push
jecxz
cmc
clc
mov
inc
shl
or
into
setl
inc
sbb
in
lock
rcl
ljmp
cmpsl
pop
mov
jle
jns
jns
mov
or
jo
mov
jle
adc
mov
push
int1
add
push
dec
mov
pop
pop
ret
fsub
gs
fdivp
jecxz
or
xor
cmpsb
push
xor
push
roll
push
jle
and
mov
cltd
fadds
sbbl
pop
and
mov
cmc
lcall
mov
xor
mov
xchg
ja
inc
mov
mov
sbb
cmp
sqrtps
xchg
jno
adc
pop
push
inc
dec
sahf
push
pushf
mov
clc
cmc
jbe
imulb
mov
sbb
jns
movsl
cs
insl
cld
pop
sti
lcall
popf
rol
push
sbb
pop
in
add
mov
adc
and
and
add
std
popf
daa
subl
pop
(bad)
mov
inc
mov
in
jle
jmp
insl
or
push
(bad)
sub
lea
push
or
mov
dec
inc
mov
add
stc
scas
fisubrl
int1
sahf
iret
mov
ficoml
(bad)
cmp
xchg
repz
pop
test
cmp
(bad)
mov
jge
sti
outsb
push
repz
xchg
dec
sub
xor
pop
sbb
push
xchg
loopne
push
loope
test
mov
int1
inc
stc
push
mov
sti
cmpl
cmc
imul
iret
add
push
lahf
jge
push
(bad)
jmp
pop
ds
inc
out
add
cwtl
xchg
aad
or
dec
pop
sub
dec
(bad)
adc
outsb
insb
push
lods
sub
addl
push
sub
inc
inc
aas
fwait
lods
(bad)
pop
sahf
xchg
push
flds
fmulp
lret
ret
cmp
xchg
cmpsb
jbe,pn
push
ret
negl
fistl
cld
adc
jo
mov
(bad)
jge
sub
aam
imul
(bad)
pop
mov
cmp
scas
ret
rorl
(bad)
das
cmp
xor
mov
sahf
mov
imul
std
sbb
or
cli
out
je
leave
xchg
jmp
mov
push
ficoml
cmp
push
inc
sbb
dec
mov
pop
arpl
and
push
int1
cmp
lret
jnp
xor
cmpsl
stos
mov
shll
dec
xchg
mov
fs
into
leave
jle
dec
mov
dec
sbb
cmp
mov
out
arpl
dec
jg
xor
push
cmpl
adc
in
aad
enter
imul
cmp
lds
loope
push
int
scas
sub
jecxz
mull
out
lds
mov
xchg
fidivl
lock
push
shl
xchg
sub
sbb
xor
dec
mov
ss
in
adc
repnz
jl
addr16
enter
pop
and
xor
jb
inc
sub
dec
repnz
js
cmp
loope
fimuls
mov
jnp
adc
adc
mov
xchg
and
popa
(bad)
int1
ret
push
pusha
imul
lahf
mov
rolb
sti
movb
adc
daa
hlt
xor
in
lret
(bad)
or
in
lea
call
cmpsb
js
negl
mov
inc
cmp
jge
and
negb
movsb
push
xabort
ret
addl
mov
mov
lea
mov
mov
imul
xor
jg
decb
xor
(bad)
daa
sti
jbe
(bad)
inc
jb
dec
(bad)
daa
mov
jecxz
into
xchg
aas
cmp
lahf
imul
sub
or
adc
and
fstl
stos
stos
xchg
xor
nop
arpl
jbe
mov
add
scas
sbb
add
lock
mov
or
test
inc
out
dec
cltd
(bad)
