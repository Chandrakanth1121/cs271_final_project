pop
jp
cmpsb
mov
xchg
and
cli
test
mov
cmp
lods
mov
cmp
cmp
mov
push
sub
pop
sub
or
test
push
int
notb
push
cmpsb
pop
jge
inc
or
call
mov
mov
addr16
or
incl
xchg
add
ret
xor
daa
cmp
inc
scas
push
bound
mov
divb
mov
mov
or
jnp
bound
xchg
inc
clc
fimuls
pmuludq
and
lret
mov
adc
or
xchg
jle
repnz
mov
rclb
sub
pop
push
ficomps
cwtl
setb
sbb
mov
sbb
xchg
fs
mov
out
push
pop
adc
push
or
mov
mov
mov
lock
xchg
fdivs
test
inc
or
inc
inc
sahf
pop
test
dec
bnd
pop
ss
mov
jecxz
dec
mov
rolb
mov
and
push
popa
les
xchg
std
lahf
mov
clc
xchg
cltd
mov
int
jb
movb
in
(bad)
out
fs
(bad)
lahf
sub
fisubl
out
sbb
add
inc
cmpsb
mov
jb
mov
jns
lods
mov
add
in
pop
int3
movsl
mov
js
sub
jmp
int3
mov
daa
addl
inc
pop
mov
mov
nop
jne
leave
popf
cmpl
fadds
jge
stc
cmp
add
mov
sahf
cli
and
xor
jo
xchg
dec
pop
(bad)
ja
add
dec
xchg
orb
jmp
aam
sbb
pop
dec
ret
dec
lcall
into
out
jne
pop
filds
dec
cs
enter
jb
mov
ret
cmpb
adc
and
pop
stos
mov
xor
xlat
out
fidivrl
push
das
inc
push
mov
jnp
mov
dec
jle
cmc
js
out
lods
inc
std
(bad)
mov
(bad)
outsb
or
dec
jbe
rcrl
push
and
sbb
test
mov
sub
cmp
clc
xor
cwtl
popa
mov
adc
xchg
sub
lock
fld1
lcall
pop
dec
cltd
scas
(bad)
(bad)
mov
pop
lods
pop
jb
rclb
pop
insl
xor
push
xchg
sbb
addr16
stc
xchg
subl
jl
mov
add
lock
cmpsb
mov
ficompl
repnz
insl
pop
daa
dec
jb
outsb
movsb
cmpsw
int
jno
fsubl
mov
loop
loop
fnsave
fidivl
sub
adc
xchg
push
and
popf
xchg
xor
xchg
mov
dec
mov
lahf
mov
lds
lds
lea
rolb
popf
ss
jno
aaa
lret
imulb
lods
pop
into
xlat
cmp
adc
(bad)
fsincos
xchg
mov
xor
jl
cmc
push
lret
xchg
mov
ljmp
or
and
pop
cmp
sarb
imul
mov
jbe
sbb
add
test
jl
aam
dec
mov
jne
sbb
rol
lret
dec
sub
mov
add
or
adc
mov
mov
cltd
jno
sahf
(bad)
js
ficoml
push
orl
xchg
dec
adc
pop
mov
mov
xor
mov
xchg
dec
xchg
mov
inc
pop
jbe
mov
loope
insl
pop
dec
pop
lret
loopne
jge
adc
push
cmp
test
jo
aas
xchg
and
push
dec
pop
lea
pop
sub
add
pop
test
out
pop
lea
push
push
inc
adc
mov
jp
sub
outsl
xchg
in
std
in
cmpl
int1
es
out
ret
add
bound
mov
xchg
jg
xchg
push
and
jbe
int
pop
jae
add
and
sub
mov
test
popa
jmp
into
jb
inc
out
jo
mov
mov
mov
test
lret
inc
dec
ds
nop
mov
outsl
mov
mov
hlt
scas
adc
xchg
jle
inc
decb
pop
lods
rorb
pop
jnp
outsl
sbb
dec
mov
xor
adc
push
clc
scas
dec
aaa
fsubrl
ret
xchg
pop
(bad)
cs
test
orb
fsubs
les
sub
loop
fwait
int3
shlb
pop
xor
imul
dec
insb
mov
dec
and
mov
dec
into
dec
fidivrs
popf
lods
aas
test
sbb
lds
cld
xor
loop
(bad)
mov
mov
xchg
call
pusha
xrelease
cmp
stc
out
dec
mov
js
pop
inc
mov
inc
cmpb
inc
push
dec
in
call
imul
sbb
push
mov
push
mov
aas
dec
xchg
ljmp
cmp
scas
arpl
pusha
xchg
(bad)
je
mov
addl
cld
rolb
cmp
adcb
lcall
jae
shlb
push
push
movsb
cmpb
clc
sub
ss
pop
pop
(bad)
mov
jp
xchg
or
jae
dec
cmp
cmp
pop
call
in
rcrl
add
mov
sbb
xor
fs
repnz
mov
cmp
in
sbb
ficoml
jg
or
imul
stos
mov
dec
mov
lds
inc
add
dec
add
jg
imul
xchg
rorb
lret
cwtl
lret
xchg
fnstenv
push
out
xchg
repz
cmp
(bad)
out
pushf
mov
or
inc
ret
pop
jg
or
stc
dec
rcr
enter
dec
xchg
cmc
sub
leave
inc
movsb
cmp
in
mov
mov
paddusb
push
in
movsb
xchg
scas
push
mov
inc
repnz
jmp
imul
(bad)
pop
xchg
inc
fldt
mull
or
ret
cs
and
mov
cmp
adc
(bad)
cld
xor
inc
push
cmp
dec
sti
mov
push
(bad)
xchg
sahf
lcall
in
stos
or
add
lret
(bad)
jno
lret
and
mov
gs
repnz
jp
xchg
xor
int
cwtl
adcl
dec
test
scas
int
aas
mov
inc
add
out
fwait
jno
shr
ret
pop
or
jmp
int
or
test
add
mov
mov
push
or
enter
fildl
xlat
push
lea
stc
jmp
pop
jle
push
push
fs
dec
inc
mov
dec
dec
(bad)
ja
testb
stos
mov
stc
dec
orl
outsl
hlt
movsl
jecxz
dec
lahf
bnd
sub
std
xchg
or
cmp
lcall
test
fimuls
or
pop
insl
fldt
in
stc
dec
pushf
or
addr16
into
popa
popa
mov
ret
xchg
mov
out
inc
fsubl
jns
nop
aam
or
ret
pop
mov
mov
stc
sti
fiaddl
(bad)
sbb
push
inc
loop
roll
adc
add
std
rcrb
jbe
test
js
pop
insl
fstps
fisttpl
xlat
out
xchg
xor
mov
sub
add
lret
fcoms
loopne
test
inc
repnz
cmpsl
ret
in
mov
jns
cwtl
mov
enter
dec
xor
mov
cmp
push
and
arpl
or
sub
mov
or
add
push
or
jge
cmp
dec
lods
or
push
cmc
or
fs
push
or
push
mov
out
sbb
pop
mov
push
cs
cmp
xor
arpl
cltd
dec
adc
outsb
push
push
lret
int3
enter
andb
not
mov
inc
movsl
fmul
subl
push
xor
inc
repz
xchg
std
call
xchg
imul
dec
mov
repnz
sbb
es
in
push
mov
dec
xchg
mov
out
mov
jne
pop
add
aaa
dec
dec
push
jne
push
mov
dec
add
jp
scas
das
mov
test
jmp
jg
mov
dec
movb
jl
mov
cmc
fiadds
add
lahf
mov
sbb
mov
jae
repnz
jb
or
dec
int1
mov
cmp
lock
inc
dec
cmc
repnz
inc
(bad)
in
stos
jo
or
lahf
dec
shl
clc
fisttps
push
cmp
xchg
call
popa
sbb
jmp
mov
mov
inc
hlt
