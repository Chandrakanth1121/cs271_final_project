push
mov
push
mov
push
mov
xor
mov
mov
inc
mov
inc
cmp
jne
test
jne
jmp
call
xchg
push
xor
pop
xor
inc
pop
pop
mov
pop
ret
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
push
mov
push
mov
mov
push
mov
push
push
push
push
push
push
push
push
push
push
push
call
mov
cmpl
jne
xor
jmp
push
mov
push
call
mov
push
call
mov
mov
pop
ret
int3
jmp
mov
push
mov
push
push
push
push
mov
mov
mov
sub
mov
mov
mov
push
push
push
mov
mov
call
lea
lea
push
push
push
lea
push
call
add
push
push
call
add
movl
mov
mov
mov
cmp
jne
mov
inc
mov
test
je
cmp
jne
cmpb
jne
inc
jmp
cmp
jbe
inc
cmpb
ja
cmpb
je
cmpb
ja
inc
cmpb
jne
movl
lea
push
call
testb
mov
je
movzwl
push
push
push
push
call
push
call
push
call
jmp
mov
mov
mov
mov
push
push
call
add
ret
mov
push
call
add
movl
mov
pop
mov
pop
pop
mov
pop
ret
int3
jmp
push
mov
sub
push
push
push
mov
push
call
push
push
push
mov
push
call
call
mov
mov
push
call
add
mov
push
mov
push
call
add
test
jne
xor
jmp
push
push
push
lea
push
call
test
je
lea
push
call
lea
push
call
jmp
mov
mov
pop
ret
int3
int3
mov
lea
push
add
push
mov
mov
mov
jmp
or
push
movhps
mov
push
call
mov
dec
je
pop
pop
push
xor
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
pop
pop
mov
mov
pop
mov
test
jne
xor
push
mov
inc
xor
int3
int3
push
mov
sub
movl
movl
movl
movl
movl
mov
mov
push
mov
push
call
mov
push
push
call
mov
movl
movl
movl
push
mov
push
call
mov
lea
push
call
mov
pop
ret
ret
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
push
mov
push
push
mov
mov
mov
inc
loop
pop
mov
push
inc
ret
push
xchg
pop
int3
adc
int3
int3
int3
int3
push
xor
mov
mov
cltd
mov
fsts
shlb
scas
xchg
shll
jb
lahf
xchg
xlat
push
rcr
jae
stos
xchg
lret
xor
aad
mov
xlat
pop
sub
iret
jno
popf
xchg
aam
neg
js
mov
stc
bound
or
xchg
shlb
mov
xchg
jae
mov
iret
bound
mov
mov
int
(bad)
jmp
xor
xchg
xlat
fs
mov
xlat
pop
loop
arpl
mov
in
pop
sbb
loopne
jle
mov
cld
jb
orb
xor
fiadds
mov
or
arpl
mov
pop
rcl
bound
out
inc
neg
arpl
mov
inc
aas
scas
cmp
(bad)
ficoms
or
aam
jnp
iret
mov
jb
cmpsb
mov
arpl
xchg
lret
aad
push
cmpsb
xchg
fstl
aam
and
leave
jnp
mov
aam
aas
xchg
pop
sbb
(bad)
fiadds
cmpb
scas
mov
pop
(bad)
aam
pop
pushf
mov
push
loop
outsl
pop
mov
inc
sub
in
pop
pop
mov
int3
fs
je
mov
sarb
mov
xlat
jnp
xchg
jb
adcb
xor
or
test
in
inc
(bad)
in
pop
adc
fisubs
mov
iret
inc
pop
xchg
jb
popf
or
test
int3
inc
loop
jb
stos
mov
inc
out
fs
out
pop
out
gs
xchg
sti
pop
std
enter
mov
pop
idivl
lret
iret
inc
aas
scas
cmp
(bad)
ficoms
adc
fisubs
stos
xchg
testl
lock
out
inc
das
stos
xchg
sarl
js
iret
out
pop
not
jnp
std
leave
fcompl
mov
aam
ljmp
xor
mov
lret
xor
enter
out
inc
not
pop
sbb
repz
xchg
xor
repz
jb
stos
lahf
fnsave
movsb
incb
mov
rorl
je
leave
mov
xchg
(bad)
jb
mov
fisubrs
iret
(bad)
int3
inc
loop
cmp
(bad)
fstl
shlb
stos
sahf
(bad)
push
cld
enter
adcb
cmc
enter
into
outsb
sub
aam
jne
mov
push
test
filds
mov
(bad)
int3
inc
loop
cmp
test
sub
iret
jb
lods
mov
sbb
lret
cmp
mov
fisubs
mov
push
test
filds
mov
xlat
mov
into
jl
std
out
xor
into
into
adc
push
(bad)
out
cmp
mov
push
iret
out
xor
mov
pop
iret
out
mov
stos
inc
mov
adc
outsb
jmp
lcall
out
or
xchg
mov
pop
aaa
mov
(bad)
ds
xlat
das
xor
inc
cld
out
jmp
bound
out
lcall
rdpmc
outsb
std
les
pushf
pop
cmp
int
pop
pop
lahf
insb
jns
clc
mov
jns
fdivrl
push
mov
cmp
movsl
xor
pop
pop
cmpsl
out
pushf
xchg
rcll
movsl
lcall
pop
jae
cmp
ja
cmp
cmp
and
mov
dec
aaa
push
mov
mov
rcll
in
mov
mov
xor
xor
inc
mov
push
idiv
daa
xor
sbb
popa
dec
and
cwtl
scas
mov
stc
mov
into
jecxz
and
js
sbb
out
fwait
das
in
les
outsl
jns
nop
mov
xor
xor
inc
das
jmp
int1
inc
es
push
aas
fnstsw
cmp
cmc
mov
out
xor
xor
int3
pop
xor
xor
pop
pop
push
xchg
sahf
mov
out
xor
into
(bad)
ror
mov
lret
(bad)
iret
mov
test
push
mov
mov
xchg
mov
mov
insl
out
imul
push
mov
cltd
xchg
mov
dec
and
data16
xchg
mov
rcr
ljmp
mov
cltd
hlt
xlat
cs
mov
jno
jg
ficomps
xchg
scas
ficomps
test
adc
out
inc
or
mov
lea
mov
les
pop
pop
iret
out
popa
lcall
xor
cmp
inc
cld
daa
call
pop
movsl
in
pop
xchg
rcll
pop
iret
addr16
lret
(bad)
fistl
xlat
push
jge
lahf
sbb
jo
(bad)
testl
jp
call
mov
sti
movsl
lcall
xchg
xchg
cmpsl
test
mov
std
fdivrs
adc
push
lock
mov
out
pop
push
jmp
bt
xlat
or
rcll
xor
mov
fdivs
inc
mov
lcall
into
sti
movsl
lcall
adc
(bad)
jbe
mov
push
lahf
mov
xor
mov
call
pop
iret
out
lock
mov
or
mov
fdivs
inc
mov
call
fdivr
mov
inc
inc
jp
(bad)
xchg
push
lret
(bad)
out
lcall
pop
pop
movsl
in
pop
nop
rcll
pop
iret
cmpsl
inc
inc
bound
dec
daa
int3
popa
sbb
lret
or
insl
into
jmp
(bad)
jecxz
das
adc
in
jl
into
sti
movsl
lcall
push
iret
