fs
scas
xor
stos
sub
mov
pop
cmp
fsts
add
cmp
xor
jmp
sub
mov
push
push
lea
push
pop
pusha
insl
jns
dec
sti
lret
imul
mov
rolb
mov
scas
push
cmp
repnz
xor
std
cmpsl
xchg
xchg
sti
pop
sbb
jle
jno
cli
xor
stc
mov
(bad)
addr16
adc
push
mov
add
arpl
and
enter
inc
add
sbb
sbbb
ljmp
dec
mov
inc
ficomps
sub
aaa
pop
test
insb
movb
mov
das
stos
dec
xor
pop
jl
mov
rolb
cmpsb
loop
repnz
mov
insb
jo
or
add
xor
cmp
cwtl
pusha
jg
lret
(bad)
mov
pop
rcrl
adc
adc
cs
sbb
call
mov
nop
int1
mov
and
cmp
jnp
jno
push
cmp
mov
inc
aas
xor
push
test
cli
xchg
pushf
jg
es
sub
push
pop
in
sbb
aas
and
(bad)
js
push
imul
dec
jnp
cmp
add
pop
fnstenv
out
cwtl
mov
mov
add
lahf
jbe
cld
mov
xor
cmp
xchg
add
loop
repnz
pusha
or
sub
je
shrl
dec
fcmovnu
mov
les
mov
ss
cmp
jns
cmp
int3
xchg
call
push
fisttpl
imul
sub
(bad)
xchg
loope
sbb
and
inc
aaa
mov
inc
aam
cmp
adc
adc
pop
lahf
mov
xchg
push
filds
test
dec
sbb
dec
aam
ret
jmp
and
fdivs
and
mov
out
adc
xchg
or
shl
mov
(bad)
outsb
loopne
xor
pop
fcom
jl
inc
add
mov
std
xor
adc
in
jle
fdivl
xor
dec
inc
mov
add
ds
push
and
in
sti
xor
add
push
sbb
mov
popf
or
mov
and
mov
push
push
sbb
or
xchg
(bad)
sbb
inc
mov
jb
sub
cmpsb
xor
lds
sub
(bad)
cmpl
loop
int3
push
std
mov
stos
aam
push
cwtl
insl
sub
cmp
popf
mov
lret
xchg
cmp
cmp
xor
sbb
in
lods
push
cmp
inc
jbe
negb
(bad)
xor
sub
xchg
xchg
fdivrs
adc
xchg
or
jl
fnstsw
ja
jmp
lds
mov
adc
popf
andb
dec
lock
mov
and
addr16
mov
movl
mov
pop
stos
decb
lds
mov
bound
adc
mov
cmpsl
xor
sub
sub
mov
and
scas
sub
into
xor
inc
xor
loopne
mov
pop
cmpsb
cs
or
pusha
jp
push
mov
push
repnz
sbb
mov
cmp
sub
fisubl
mov
sbb
jp
mov
je
mov
or
dec
stos
dec
xor
pop
push
or
adc
mov
fisubrl
ret
cmp
push
lahf
mov
(bad)
inc
or
mov
out
ret
xchg
scas
out
mov
sbb
adc
(bad)
ljmp
sbb
cmc
mov
cmp
hlt
push
xchg
(bad)
cld
pop
inc
test
xor
shll
cmpsb
enter
mov
into
sbb
int3
inc
mov
xchg
push
outsl
mov
xor
mov
fcmovnb
sti
xlat
sbb
dec
sbb
sub
add
mov
mov
xchg
popa
dec
enter
cmc
imul
lods
push
lret
sarb
aas
add
lahf
movsl
cmpsb
xchg
nop
jne
mov
ja
ret
hlt
imul
pop
push
sub
jp
ss
mov
jbe
cs
push
jno
into
dec
or
adc
mov
pop
jecxz
cli
dec
test
aas
adc
jmp
pop
lods
loop
scas
jno
push
mov
je
xor
rcrl
pop
out
inc
(bad)
aad
inc
shlb
test
pusha
outsl
clc
ficomps
sar
rcrl
call
aam
xchg
fidivl
and
xor
cmpsb
cmp
jge
sub
xchg
pop
les
push
lods
inc
and
cld
sbb
stos
ds
sti
lods
jg
xor
dec
xor
cmovp
and
(bad)
repz
cmp
cs
mov
mov
sub
js
das
call
call
push
(bad)
jle
fs
ljmp
sub
cmp
repnz
rclb
push
cmc
arpl
lods
cmp
int1
test
dec
push
xchg
mov
cmpsb
test
dec
pop
bound
pop
mov
adc
sub
fwait
cli
(bad)
mov
jmp
xor
ret
mov
lahf
lock
sbb
jne
sbb
cmp
jmp
push
jmp
jo
bound
push
movsb
lods
and
xor
push
push
cld
das
mov
xor
lods
push
cs
jmp
ljmp
xchg
ss
insl
xor
jns
pop
adc
iret
add
xor
or
lock
fdivr
out
pop
xchg
rolb
loop
sbb
lret
loop
jle
mov
out
rclb
xchg
(bad)
mov
ds
scas
scas
jne
cmp
test
js
sub
add
mov
mov
cmpb
sub
mov
jge
add
lea
jnp
jno
aas
popa
hlt
lcall
testl
cs
lods
mov
cmc
ret
fwait
or
test
gs
test
(bad)
fmuls
aad
mov
pusha
and
sbb
xchg
add
test
bound
mov
sarb
dec
je
xor
and
cs
xor
mov
and
loope
in
mov
sub
lcall
stos
jle
andl
int
cs
cli
data16
sbb
movsl
lods
dec
xor
(bad)
int
add
mov
xchg
or
cmp
imul
fisttpl
scas
xchg
in
cmpsl
xchg
pop
iret
fdivr
daa
lds
xchg
shrb
sub
fmull
mov
je
cmp
shlb
or
(bad)
outsl
cmp
xor
fsts
mov
mov
scas
in
push
cmpsb
aas
add
leave
cwtl
imul
pop
sub
or
add
xchg
xchg
xorb
aas
mov
xor
push
sar
dec
insl
pop
xor
lods
sarl
gs
and
test
scas
xor
test
ss
fidivrs
les
decl
cmp
out
add
call
fstps
adc
mov
clc
fnsave
(bad)
dec
cmpsb
lods
mov
repnz
stc
outsl
pop
inc
push
loope
dec
stos
int3
sbb
loopne
lahf
dec
popa
loop
xchg
insl
outsb
clc
pushf
push
mov
mov
mov
sbb
test
ljmp
loop
inc
in
fadd
aaa
xchg
or
and
xlat
popf
or
inc
sarl
push
int1
or
jp
jmp
or
aad
pop
cmp
mov
imul
and
cmp
xchg
xlat
fbld
mov
fldcw
je
mov
mov
loop
out
aas
cld
aad
bound
fwait
movsb
lock
mov
pop
cmp
cwtl
cmc
fnstsw
fcoml
cs
lret
movsb
popa
push
xchg
cmp
into
hlt
mov
mov
(bad)
ljmp
call
mov
jb
std
fstpl
sub
je
or
lahf
inc
ss
xor
subb
int
mov
jo
js
aas
or
jns
jno
repz
shrl
js
and
or
xor
es
in
mov
jg
test
pop
outsb
movsl
push
cmp
in
inc
cld
mov
out
jp
rcrl
mov
xor
dec
(bad)
cmc
adc
lret
imul
popa
cmpsb
rcl
scas
mov
ljmp
out
scas
fs
stos
ss
xchg
fildl
pop
out
int3
pop
cmpsl
add
or
xor
int1
xchg
xchg
cmp
vpminub
pop
mov
fmul
stc
xchg
aas
neg
mov
addl
mov
sub
in
fdivs
mov
cmc
scas
xchg
data16
fistpll
jl
lcall
xchg
xorl
or
int3
jb
inc
cwtl
mov
out
mov
and
imul
(bad)
mov
imul
mov
push
push
test
