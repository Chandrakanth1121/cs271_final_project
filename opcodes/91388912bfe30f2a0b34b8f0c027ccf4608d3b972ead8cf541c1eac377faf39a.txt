insb
xchg
push
inc
mov
es
and
or
aaa
sub
in
inc
push
(bad)
push
(bad)
sbb
out
push
mov
bound
push
pushf
outsl
(bad)
xchg
cs
sahf
imul
mov
cmc
int
mov
cmc
int
leave
jne
mov
jmp
dec
mov
(bad)
push
leave
pop
aaa
imul
(bad)
xor
push
inc
and
add
jno
or
fbstp
or
dec
xchg
insl
imul
outsb
lahf
loop
outsb
lahf
xchg
lret
call
cmp
mov
out
or
cmp
ljmp
adc
inc
mov
gs
ljmp
pop
gs
into
es
cmpsb
mov
cmc
int
mov
jae
addr16
aaa
sub
adc
mov
adc
pop
decb
push
fiaddl
fwait
in
aas
lahf
cmc
repnz
sub
sbb
gs
fsts
imul
lahf
push
mov
xor
ds
mov
sub
rcr
inc
fstl
aas
push
adc
bound
jno
pop
sub
lahf
jecxz
adc
cmc
repnz
sub
and
gs
fsts
imul
rep
mov
xor
ds
pop
add
push
xchg
sub
rcr
inc
fstl
inc
push
adc
pop
aaa
jno
outsb
sub
inc
mov
sbb
sbb
gs
dec
aaa
in
jae
ljmp
push
mov
rcr
cmpsl
lahf
sub
fstl
inc
push
adc
lahf
out
jp
adc
xor
ljmp
sbb
push
pushf
test
push
push
xchg
gs
mov
cmc
int
mov
jae
addr16
aaa
sub
jecxz
inc
pop
(bad)
push
(bad)
dec
aaa
in
xchg
and
or
adc
fwait
out
flds
push
mov
push
out
je
adc
mov
adc
xchg
adc
dec
fwait
push
push
aas
andb
jae
adc
xchg
push
rorl
push
inc
fwait
in
jo
out
stos
mov
gs
push
(bad)
xchg
xchg
data16
and
adc
mov
pop
push
gs
and
adc
mov
add
gs
call
jge
cmpsl
pop
sti
xchg
fistl
adc
add
cwtl
and
dec
pop
adc
fcoml
cmp
adc
and
negl
adc
xchg
adc
addr16
jnp
ljmp
pop
ljmp
adc
adc
testb
push
xchg
sub
rcr
inc
fstl
ds
adc
push
sub
cmp
gs
mov
aad
std
mov
repnz
cmp
out
push
lahf
mov
andb
cwtl
and
cmp
lahf
push
mov
es
cmpsb
mov
cmc
int
inc
mov
idiv
stos
cmp
xchg
outsb
aas
push
adc
jno
mov
cmc
int
mov
imul
or
ss
loop
dec
pop
(bad)
push
into
cmpsb
mov
cmc
int
mov
mov
xchg
(bad)
cs
mov
lahf
pop
imul
adc
mov
sahf
mov
mov
xchg
es
lahf
fucomp
aas
lahf
push
orl
xor
push
adc
imul
sbb
int
mov
imul
or
xor
adc
fidivl
adc
pop
decb
out
pushf
shll
inc
mov
mov
inc
(bad)
pop
aaa
test
fdivr
(bad)
aas
push
adc
std
and
adc
cmpl
daa
ljmp
cmp
cmpl
sbb
std
cs
test
cmp
cmpsb
mov
cmc
int
mov
mov
idiv
mov
std
and
adc
inc
cmp
cmc
int
mov
sbb
cltd
or
or
mov
out
inc
cmp
inc
ds
adc
int
leave
insl
rcl
jmp
dec
mov
(bad)
push
into
cmpsb
mov
cmc
int
mov
mov
negl
inc
cmp
xchg
or
jno
mov
cmc
int
leave
imul
or
ss
(bad)
dec
pop
(bad)
push
into
cmpsb
mov
cmc
int
mov
mov
xchg
enter
(bad)
pop
pop
lock
cmp
out
dec
mov
pop
sub
push
adc
push
sahf
scas
pop
mov
(bad)
inc
cltd
aam
(bad)
loopne
addr16
(bad)
push
das
je
sbb
loop
sbbl
cmp
mov
sahf
mov
int
mov
cmc
int
mov
imul
or
xor
adc
gs
mov
adc
pop
decb
add
call
mov
adc
popa
xor
pop
fsts
adc
add
adc
popa
push
sti
mov
sbb
out
mov
rcrb
cld
mov
adc
pop
dec
ret
gs
fbstp
or
popa
push
cwtl
pop
mov
sahf
imul
xchg
push
cwtl
aaa
mov
xchg
daa
inc
add
ret
add
sahf
mov
inc
cltd
aam
(bad)
fdivrp
push
dec
adc
scas
gs
pop
pop
gs
push
adc
push
fisubrl
cmp
push
adc
andl
lods
cmp
sahf
stos
push
fwait
rcr
dec
mov
lcall
lahf
add
xor
scas
gs
or
fcoml
(bad)
(bad)
cmp
je
inc
fcoms
adc
or
shr
push
mov
lock
xchg
inc
cmp
or
cmpsb
push
(bad)
xor
loop
xor
insl
imul
std
(bad)
outsb
cltd
mov
mov
lock
cs
pop
mov
sahf
loope
mov
fmull
stos
add
push
xchg
sub
rcr
dec
mov
mov
(bad)
(bad)
movb
imul
cltd
call
cmp
sbb
gs
bound
mov
fwait
in
jge
and
aaa
scas
adc
ficoml
out
add
ret
rcl
xchg
(bad)
adc
jne
push
adc
int
adc
cmp
test
push
xchg
sub
jnp
adc
ficompl
ljmp
fsts
mov
sbb
sub
lahf
bnd
arpl
in
cmp
out
imul
cwtl
cs
fldcw
lahf
adc
imul
pushf
lea
in
pop
cld
lcall
xor
xor
ss
int
mov
cmc
int
mov
repz
cmp
imul
pushf
inc
mov
mov
aaa
in
jb
xchg
lret
out
dec
cmp
sbb
cltd
or
imul
sahf
and
cmp
cmpsb
mov
cmc
int
or
dec
cwtl
(bad)
imul
push
xchg
cs
lahf
mov
push
xchg
pop
add
adc
inc
push
adc
pmuludq
push
gs
popf
test
cmp
xchg
or
dec
lcall
pop
xchg
or
ds
adc
adc
push
dec
cltd
shll
push
cld
rolb
sub
dec
rcrl
adc
sbb
stos
mov
leave
mov
(bad)
out
sub
cmp
test
mov
lahf
in
(bad)
aad
sub
cmp
cs
sub
add
aaa
jno
adc
lcall
arpl
out
mov
daa
in
out
pop
dec
mov
in
aad
sub
cmp
insb
scas
sub
xchg
fnstsw
popa
and
(bad)
cmp
lahf
pop
mov
aam
movsb
fstl
inc
out
int3
add
aaa
insl
or
mov
in
aad
sub
cmp
cs
sub
xchg
fnstsw
popa
push
mov
je
fwait
push
gs
lahf
fsubp
add
xchg
pusha
dec
mov
out
or
push
mov
adc
cmp
sub
jl
test
mov
addr16
gs
aad
mov
in
je
jb
jns
bound
jno
aad
mov
in
je
call
shrb
push
pop
pushw
and
and
cmp
popw
pop
fnsave
aaa
jno
aad
mov
fisubs
and
adc
lret
arpl
out
dec
cmp
ds
xchg
pop
ds
adc
fwait
aaa
cmp
mov
lahf
pop
mov
fwait
repz
lahf
pop
mov
fwait
jecxz
cmp
push
add
pushf
sub
lret
cmp
lcall
cmp
xchg
hlt
sbb
adc
ss
jmp
cmp
push
adc
aaa
add
xchg
inc
adc
aaa
push
out
gs
push
adc
and
imulb
notl
imul
push
pushf
das
incl
es
