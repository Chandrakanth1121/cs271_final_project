mov
sub
ds
lcall
add
add
add
add
cld
sbb
jae
notb
stos
add
jns
clc
lods
push
dec
add
pop
cmp
xor
jo
dec
and
(bad)
aad
loop
js
lds
cmp
mov
cmp
gs
movsb
jbe
mov
stc
(bad)
stos
mov
insl
aam
inc
push
aas
psubb
push
addr16
les
fwait
ror
xor
repnz
arpl
je
adc
xchg
cmpsb
scas
xlat
cmp
dec
les
pop
cmp
push
xor
add
fs
sbb
call
cs
outsl
mov
sbbl
repz
popf
sub
lods
js
lahf
fnstcw
mov
mov
cmpsl
shlb
cltd
push
int
fwait
push
cmp
sub
fcmovu
or
movsl
cwtl
ret
sbb
ss
mov
cltd
rcrb
cmpb
xchg
ror
lret
jle
cmp
push
add
jmp
xor
iret
push
mov
dec
fsubrs
sub
arpl
les
inc
mov
mov
xor
pusha
sub
dec
push
shrl
loop
pop
in
test
xor
add
sub
dec
int1
cmp
test
jb
xor
inc
arpl
clc
push
cmc
aaa
aam
je
pop
jmp
xchg
pop
fwait
inc
test
push
cmp
mov
repz
mov
sbb
xchg
decl
pusha
cltd
inc
jb
les
ds
or
cltd
stc
test
test
adc
sarb
ljmp
jne
lea
loopne
jbe
sahf
inc
rorb
xor
mov
negb
lret
mov
aaa
lahf
sbb
or
lock
mov
cmp
int3
inc
lock
sbb
stc
or
aad
test
push
pop
outsb
cmp
mov
dec
cmp
stos
push
(bad)
out
test
push
cmp
fwait
dec
stc
shlb
sbb
add
pop
mov
repz
mov
jmp
cmpl
mov
aad
xor
pop
xchg
test
jp
cmp
dec
insl
je
sbb
nop
push
xchg
mov
or
pop
add
dec
movsb
jno
(bad)
sub
xchg
rclb
jae
cmc
dec
push
jge
leave
push
xor
push
pushf
insl
xchg
mov
incb
jg
stc
sahf
andb
scas
imul
js
jno
loope
mov
test
mov
clc
adc
rcrb
add
inc
les
outsb
mov
mov
and
hlt
mov
(bad)
adc
loopne
xchg
aad
mov
pop
pop
fidivrl
daa
adcl
mov
rcrb
mov
cmp
movsl
or
xchg
mov
mov
shll
and
rorb
les
sti
dec
lds
pop
mov
cmp
mov
test
mov
mov
je
test
jecxz
add
push
mov
rcr
jns
repz
nop
es
mov
cmp
push
addr16
push
xor
fwait
rcrb
xchg
sub
add
(bad)
frstpm(287
mov
mov
test
inc
rorl
sbb
andb
ret
pop
mov
pop
in
shr
lods
test
xchg
sbb
in
stc
fsts
je
pushf
jbe
cli
and
push
push
stc
mul
pop
xchg
shll
ja
lea
stos
comiss
pop
mov
or
ljmp
test
daa
jg
out
movsb
mov
sti
xchg
aad
inc
jo
fcmovne
inc
and
nop
mov
outsl
ds
cmpsl
jmp
scas
dec
aad
jne
mov
hlt
jne
imull
dec
sti
andb
daa
lret
js
sti
lahf
jns
mov
dec
enter
nop
adc
aas
push
shl
lods
ljmp
sub
push
inc
imul
notl
push
inc
cmp
mov
sbb
scas
out
ficomps
push
dec
fwait
(bad)
daa
enter
xor
push
cmp
cwtl
jmp
fidivrl
sbb
push
(bad)
rol
inc
stc
pushf
push
and
shrb
popf
push
stc
adc
cld
out
in
push
dec
jo
sbb
add
mov
xor
clc
aam
cltd
cmp
int
jns
dec
aam
idiv
push
xchg
dec
outsl
jno
jbe
js
mov
outsl
in
lcall
out
mov
das
or
test
pop
inc
xor
jge
xchg
pop
dec
sbb
jae
jns
repnz
mov
inc
int1
into
ljmp
jne
popa
jnp
test
lock
inc
cltd
cli
ss
and
movsb
loopne
sub
test
scas
outsl
movsb
nop
jbe
movsl
pusha
(bad)
loopne
mov
or
(bad)
(bad)
out
pusha
cmp
mov
imulb
dec
in
in
out
jno
xorl
addl
repnz
jno
adc
out
dec
mov
outsl
xlat
and
sbb
adc
push
out
cmpsb
ret
pop
cmp
sub
ja
subl
sub
test
mov
int3
ret
(bad)
jo
mov
mov
mov
stos
test
shrl
popf
aad
cmpsb
mov
add
aas
add
shr
insl
test
int3
lods
inc
sbb
pop
mov
(bad)
lahf
or
lret
neg
jne
jmp
aam
cmpsl
dec
test
(bad)
sub
mov
ljmp
jge
pop
and
andl
cmp
cli
push
cmpl
cmp
in
xlat
pop
mov
sub
push
mov
mov
cmp
and
mov
add
fdivrp
push
bound
mov
xchg
add
cmp
add
jecxz
movsl
mov
pushf
in
cmpsb
cwtl
fstpt
cmp
xor
or
or
imul
and
jmp
jnp
or
inc
inc
scas
int3
push
adc
(bad)
loopne
adc
(bad)
xchg
inc
and
pop
into
lcall
fstps
jb
push
leave
xor
xor
(bad)
mov
fnstenv
fbld
cmp
fnstenv
std
out
pop
xchg
inc
xor
or
cltd
in
stc
jns
add
hlt
fsubr
and
cmp
jmp
jno
cld
inc
or
mov
dec
stos
mov
dec
lahf
outsl
lea
rcll
pop
cmpsb
xchg
dec
pop
mov
dec
cli
cs
pop
(bad)
xchg
mov
or
mov
xchg
lock
dec
loopne
xchg
test
ja
pop
cld
push
sbb
mov
stc
loope
cmc
ret
lds
or
xchg
inc
iret
jl
in
lock
(bad)
mov
mov
jno
ss
xchg
xorb
fmulp
xor
(bad)
sub
inc
int
cmpsb
addb
lods
outsb
in
insb
shll
jbe
cmp
jp
cmp
lret
inc
mov
loop
(bad)
out
cmpb
out
dec
(bad)
mov
inc
push
and
mov
pop
int
cmp
cmp
cmp
lahf
jecxz
lahf
xchg
add
dec
pop
and
dec
and
xlat
aam
xchg
cmc
mov
adc
xchg
dec
(bad)
jge
or
add
sbb
jge
(bad)
xor
mov
mov
insb
or
xchg
test
jo
test
jl
xor
pop
(bad)
mov
mov
shll
or
cmp
test
sub
pop
cmp
std
inc
jo
add
fcoms
into
decl
pop
stos
sbb
fisubl
inc
pop
pop
jns
xchg
jbe
lret
xchg
leave
sub
roll
dec
rolb
pop
push
or
fsts
jbe
cmp
inc
loopne
(bad)
loopne
fwait
je
xchg
mov
hlt
repnz
fdiv
add
pop
dec
shll
mov
idivb
mov
fwait
subb
stos
add
lea
mov
loope
daa
mov
int3
xchg
stos
call
and
jne
or
cwtl
xchg
mov
pop
cltd
mov
inc
loopne
popa
xchg
mov
inc
or
mov
add
dec
call
mov
jg
int3
cli
fstl
mov
pop
or
fwait
xor
sbb
xchg
repnz
call
mov
jge
jns
xor
add
test
ficompl
movsl
push
dec
aas
repz
stos
lret
cmp
pop
dec
loope
cld
pop
imul
das
addr16
push
sbb
mulb
stos
fcmovu
pop
nop
outsl
int3
aad
ror
