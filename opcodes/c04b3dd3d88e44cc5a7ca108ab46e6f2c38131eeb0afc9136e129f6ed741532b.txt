dec
nop
fldcw
fwait
mov
xor
add
mov
es
dec
sbb
add
add
in
cmp
jns
repz
aaa
jnp
xchg
aam
roll
repnz
rcll
inc
push
xor
jecxz
hlt
cmp
pop
xor
mov
pop
adc
mov
pop
aas
subb
mov
mov
pmaxub
(bad)
sub
js
insb
mov
xchg
push
push
pop
jle
jae
scas
add
les
dec
mov
jl
iret
inc
dec
adc
addb
or
xor
dec
cmp
mov
sti
sub
out
rorb
repz
fimull
pop
xchg
andb
(bad)
and
dec
cmpsb
int1
ret
mov
sub
fisttps
mov
aas
cmp
decb
int1
out
insl
in
or
repz
test
fcoml
pop
add
test
jl
dec
xchg
mov
cli
jp
dec
xchg
jecxz
repnz
daa
xchg
in
(bad)
in
pushf
push
shlb
mulb
movsb
cmp
pop
ja
jbe
inc
adc
jg
xor
xor
scas
in
je
mov
jo
fs
(bad)
cwtl
insb
out
pop
cmpsl
sahf
lahf
bound
loopne
(bad)
movsl
dec
(bad)
inc
lahf
popa
jno
pop
push
mov
jmp
jno
punpckhdq
dec
decl
sbb
jle
mov
push
and
xlat
add
sub
aam
test
push
(bad)
repz
xchg
js
cmpsl
add
aam
enter
cld
fidivrs
push
adc
cwtl
cltd
push
fs
fbld
jae
enter
and
inc
lods
repz
pop
sub
and
mov
mov
jl
sti
lret
repnz
mov
dec
lahf
mov
adcb
mov
fcomi
popa
push
lods
in
cmp
lock
xchg
fisubrs
les
cmp
outsl
shll
pop
lock
cli
test
iret
scas
aas
mov
aaa
(bad)
ja
outsl
in
js
cltd
jecxz
xchg
in
dec
lds
jns
dec
pop
pop
and
mov
add
sbb
jl
jle
dec
jmp
and
lods
clc
ds
mov
push
sbb
sti
inc
inc
dec
mov
fwait
pusha
int
nop
arpl
xchg
sbb
(bad)
mov
adc
adc
push
ret
lods
js
cmpb
xchg
lret
inc
adc
aam
inc
xor
push
negb
sbb
rolb
pop
popa
xlat
lcall
int3
and
cmp
arpl
popf
add
dec
fldt
jecxz
lcall
ror
push
call
lea
lret
or
or
pop
xor
gs
sub
xor
mov
(bad)
pop
test
fcomp
aas
dec
xchg
rcrb
and
adc
test
pusha
aaa
jns
fsubl
xlat
addb
pop
pop
test
pop
(bad)
push
notl
jbe
cmpsl
inc
jmp
inc
addr16
incl
xchg
movl
sub
shll
xor
mov
xchg
je
dec
addr16
mov
xchg
adcb
xchg
jbe
inc
aam
mov
(bad)
movsl
mul
add
les
imul
jle
and
int
aas
jmp
out
arpl
mov
or
sahf
fsubs
subl
outsb
push
mov
or
fsubl
sbbb
lret
pop
cmpsb
cmp
jmp
dec
shr
lret
fucom
insl
inc
(bad)
sbb
jmp
sub
test
iret
jmp
push
sub
push
loop
pop
pop
sarl
les
inc
scas
cli
sub
lret
push
xchg
xlat
jns
orl
pop
mov
jno
mov
int
shrl
mov
jle
jmp
(bad)
cwtl
cwtl
das
lret
(bad)
mov
inc
mov
mov
es
push
push
cwtl
out
and
test
mov
push
inc
inc
jno
sbb
sbb
int1
xor
and
mov
xor
ljmp
push
es
insb
jecxz
xor
mov
or
mov
pop
jle
fldt
outsl
jno
add
mov
sub
cmp
mov
mov
xchg
fs
cwtl
sub
push
mov
pop
sub
aas
out
insb
cmp
lcall
cmp
and
loope
inc
clc
aas
loopne
mov
in
xor
(bad)
fsubrl
gs
mov
cmp
lcall
out
(bad)
hlt
bound
or
test
lret
lods
in
test
mov
std
xchg
sub
shrl
add
fs
xor
pop
mov
dec
add
jno
leave
movl
push
cmpsl
cli
int1
jno
and
jno
lea
xor
cmp
jmp
mov
sbb
push
inc
ficoms
out
repz
or
sub
push
pop
pop
loopne
xor
lods
inc
jo
ficoml
(bad)
or
mov
jo
dec
jno
jo
mov
sbb
xlat
push
cmc
cmc
fstl
andl
pop
(bad)
push
andb
(bad)
cld
stos
inc
and
mov
nop
aas
scas
sub
sbb
mov
pop
push
push
js
shlb
es
cltd
out
dec
pop
lock
clc
adc
pop
into
cld
ljmp
pop
mov
lcall
fstl
bound
jle
mov
(bad)
mov
in
mov
mov
jno
mov
or
xchg
cltd
aas
pop
xor
xor
mov
inc
out
xor
xor
in
xchg
into
dec
int1
insl
xchg
sub
imul
jmp
dec
cli
shrb
lds
sahf
xchg
pop
inc
cmp
push
jle
(bad)
outsl
(bad)
pop
aam
test
fsubrs
outsl
outsl
fdivs
jnp
insl
dec
mov
iret
ljmp
push
xor
sub
call
sar
mov
ret
xchg
inc
ds
les
stos
xor
mov
dec
aaa
push
and
or
pop
aad
push
mov
idivb
jecxz
sbb
rclb
lahf
(bad)
bound
cmpb
(bad)
push
jmp
int
mov
sti
fdivs
ja
loop
je
xlat
test
pop
xchg
dec
mov
xchg
or
mov
xchg
adc
movsb
sub
insb
in
outsl
mov
movsb
cmp
mov
dec
push
and
push
dec
push
loopne
repz
ret
mov
outsb
lret
xorb
pop
jecxz
sar
test
nop
aam
aad
cmpsl
adc
mov
cmpsb
jae
(bad)
leave
and
jecxz
jne
jg
cmp
ja
sub
insl
(bad)
or
adc
movsb
mov
pop
and
js
lcall
sub
daa
xor
mov
jno
cli
insl
insb
aas
mov
js
xchg
jp
dec
stc
cmp
push
jl
ret
clc
mov
jmp
movsb
fwait
cmp
loop
mov
sub
sub
push
cmpsb
xor
xor
add
xchg
push
(bad)
push
insl
mov
inc
in
inc
mov
loope
dec
imul
cld
pop
pop
xchg
ss
push
xchg
inc
aad
lods
leave
lret
or
cmp
jmp
pop
jne
sahf
popf
mov
ffree
imul
(bad)
cmp
mov
push
adc
mov
pushf
mov
out
dec
out
push
loop
xchg
fs
sbb
cmp
xor
pop
arpl
pop
pushfw
mov
repnz
cltd
je
dec
sub
mov
nop
mov
fsubrl
dec
push
je
mov
or
jle
push
sti
lock
(bad)
int1
std
add
or
xchg
pushf
out
jbe
pop
jp
inc
out
mov
in
iret
and
leave
lds
out
push
push
inc
cld
sarl
jo
mov
pop
outsb
int1
ret
jne
and
scas
adc
mov
sub
cmpsb
jl
pop
insl
xchg
int1
movb
push
rcrb
or
das
sahf
test
xchg
lods
lret
sbb
pop
lcall
sub
push
jo
or
mov
loopne
adc
nop
push
pusha
xor
pop
ss
xchg
arpl
leave
ret
pop
and
in
hlt
pop
mov
mov
jl
push
call
int1
mov
lahf
dec
add
ljmp
pop
pusha
nop
cmc
movsl
iret
jae
adc
(bad)
mov
sarb
daa
