jmp
sbb
xlat
sbb
stos
movl
out
hlt
add
clc
in
repnz
jb
loop
insb
pop
mov
iret
sub
loop
rex.r
test
cmp
add
repnz
mov
outsl
adc
decl
in
std
sarl
or
(bad)
(bad)
(bad)
push
imul
add
rorl
xchg
imul
(bad)
(bad)
sbb
adc
mov
adc
lret
(bad)
test
add
sub
int3
adc
cmp
pop
(bad)
imul
jmp
repnz
mov
rex.b
jne
repz
rex.wrb
movsb
push
hlt
xchg
outsl
rcl
mov
std
mov
jae
sub
(bad)
(bad)
lcall
xor
sti
add
pop
add
js
test
ror
adc
hlt
xchg
ror
jns
clc
(bad)
lret
jl
and
push
fimuls
(bad)
(bad)
call
fldenv
jbe
ror
rex.x
mov
rex.x
xchg
int3
call
rex.wb
jb
cltd
(bad)
ror
cmp
xchg
out
rex.wx
push
lret
pop
std
adc
and
xchg
jrcxz
sbb
jmp
mov
in
xchg
mov
addl
or
int3
incl
ds
(bad)
(bad)
push
and
rex.x
xor
and
in
(bad)
push
loop
fildll
call
mov
fdivl
rex.rx
cli
and
rcll
xor
sub
sbb
pushf
enter
jl
xchg
mov
rex.rb
lea
(bad)
xchg
(bad)
mov
push
(bad)
rex.wx
push
adc
or
(bad)
mov
mov
adc
in
rex.wr
lret
push
cli
loope
leave
or
(bad)
movabs
iret
sub
repz
mov
sarb
(bad)
cs
test
or
int1
faddl
push
or
adc
jnp
mov
pop
rex.rxb
mov
sub
push
rex.wb
out
scas
imul
cmp
pop
mulb
sub
mov
(bad)
dec
rex.rx
(bad)
xchg
xorl
(bad)
fldt
(bad)
(bad)
movsxd
ss
imul
ss
jrcxz
and
push
rex.wrb
(bad)
sti
(bad)
or
adc
and
ss
add
sub
rcr
sti
xlat
in
lods
int1
(bad)
mov
in
sahf
jbe
pop
mov
rcrb
jg
(bad)
frstor
sahf
and
test
ljmp
fwait
imulb
cmp
movsb
rex.wxb
cld
imull
or
loop
(bad)
mov
sbb
mov
out
outsb
sub
(bad)
(bad)
in
test
jg
mov
(bad)
lods
mov
mov
ja
xchg
ja
test
xor
scas
(bad)
push
sbb
push
jmp
sub
mov
xchg
add
hlt
adc
outsl
xchg
(bad)
jp
push
mov
(bad)
stos
lock
mov
push
sub
sahf
shr
mov
xorl
cmp
push
rex.rb
jge
cmp
decl
pop
mov
add
(bad)
(bad)
lcall
or
movsl
sar
jnp
push
or
sbb
mov
and
rex.wr
mov
notb
xlat
insb
fsubrs
rex.wrb
(bad)
stc
(bad)
scas
mov
(bad)
movabs
movsl
sar
in
sbb
jbe
xor
(bad)
jbe
sarb
add
cld
(bad)
cmp
mov
test
cmp
rex.xb
rex.wrb
mov
xchg
rorl
(bad)
repz
(bad)
rex.xb
insl
cmp
je
(bad)
fwait
xchg
lods
rex.wb
rex.b
lret
xlat
push
rex.wb
mov
mov
rex.wr
imul
dec
or
(bad)
jmp
push
ss
xchg
jbe
sbb
adc
xor
mov
xchg
push
cmp
rol
sahf
cltd
adc
scas
cmp
xor
mov
in
int1
pop
rex.rxb
rex.wx
ret
fistpll
and
ret
(bad)
cs
mov
(bad)
dec
mov
xor
xor
cltd
sub
push
cmp
(bad)
fwait
push
data16
hlt
add
mov
or
push
adc
imulb
jo
fdivl
imul
cs
push
rex.wxb
es
(bad)
cmp
movsl
and
mov
push
xchg
rex.w
divb
mov
js
xor
mov
and
rex.wr
int
fsubs
mov
je
(bad)
add
(bad)
mov
subb
(bad)
incl
(bad)
(bad)
(bad)
call
stos
rex.r
(bad)
or
rex.xb
rex.wx
(bad)
(bad)
mov
mov
rex
push
rex.r
sahf
rex.b
sub
push
sti
mov
(bad)
xlat
movabs
(bad)
imul
(bad)
xchg
mov
leave
insl
mov
add
stos
(bad)
popf
add
movabs
adc
ljmp
cmp
imul
or
jrcxz
(bad)
xchg
cli
movsl
jno
xor
rex.rx
mov
out
xor
jmp
stc
add
(bad)
jne
(bad)
movabs
pop
and
sub
jno
mov
push
pop
mov
rex.wxb
test
(bad)
hlt
stos
mov
adc
scas
rex.wrb
pop
cwtl
jb
mov
scas
xor
lods
cmp
(bad)
stc
(bad)
cmp
stos
cmp
or
loop
or
jg
sub
int1
mov
(bad)
orl
mov
es
(bad)
movsb
cmp
movabs
add
rcrl
movsb
cmp
(bad)
jle
(bad)
mov
rex.x
sbbl
jbe
ds
clc
pop
mov
rex.wxb
push
rex.wxb
sub
mov
(bad)
dec
push
xor
(bad)
pop
rex.wx
movsl
sarb
(bad)
cmpsl
repnz
and
mov
rcrb
(bad)
pop
(bad)
mov
push
xchg
or
lret
ffreep
rex.b
push
rex.wr
cmp
je
jb
sub
mov
(bad)
dec
(bad)
(bad)
jae
(bad)
rex.wrx
jl
or
sub
mov
jrcxz
(bad)
and
rcll
xchg
cli
es
movsxd
testb
repz
(bad)
stos
loop
xchg
(bad)
and
mov
in
imull
add
(bad)
adcl
out
fcmovnb
jp
mov
mov
hlt
(bad)
mov
(bad)
xchg
nop
sub
add
xor
sub
push
jnp
and
out
jne
lock
movsxd
lret
imull
leave
mov
rex.x
rex.b
ds
movabs
sti
mov
push
xchg
push
(bad)
imul
leave
adc
(bad)
incl
xor
cs
xchg
(bad)
pop
xor
pop
lods
xor
pop
cmpsb
push
and
mov
sti
nop
fsubrl
mov
movabs
mov
and
(bad)
rcl
lret
jmp
xchg
rex.rxb
jne
(bad)
mov
sarb
test
rex.wr
in
xor
sub
pop
sub
rex.wrx
jmp
pop
fwait
and
or
jge
(bad)
out
xlat
(bad)
int
(bad)
(bad)
mov
jrcxz
(bad)
cli
rex.r
rex.rb
xor
sbbb
int3
mov
cwtl
jb
lods
(bad)
xor
movabs
mov
std
lret
rex.wb
(bad)
rex.wrb
movhlps
add
movabs
test
int1
incb
rex.wb
(bad)
ds
cmp
pop
in
ja
rex.rxb
cmp
std
sbb
je
add
jae
mov
xchg
divq
insl
adc
pop
jmp
jmp
push
sub
push
(bad)
(bad)
add
ret
out
nop
(bad)
int
mov
lea
repz
iret
jg
cmc
cwtl
sbb
adc
jge
pop
and
rex
mov
adc
push
sub
add
jae
(bad)
cmp
rex.rx
xchg
(bad)
mov
push
rex.wr
rex.wrxb
adc
cmp
xor
(bad)
cmp
xorl
std
and
push
shr
xor
push
es
cmp
ljmp
sahf
(bad)
je
mov
jmp
outsl
rex
sbb
andl
mov
pushf
mov
cmpl
xlat
push
fwait
sbb
in
mov
rex.x
sub
lcall
jle
lods
jl
sbb
hlt
push
cs
sbb
in
push
ds
clc
adc
pop
stos
(bad)
add
(bad)
popf
sub
add
in
leave
(bad)
out
mov
xor
add
movabs
fnstsw
(bad)
pop
andl
jb
pop
mov
xchg
cmp
xchg
xchg
jns
rex.wr
jae
movabs
ds
mov
sbb
cwtl
rex.x
rex.wrxb
sub
sub
sti
xchg
add
xchg
mov
add
test
(bad)
mov
xchg
adc
(bad)
mov
jnp
jb
movabs
adc
ret
(bad)
movsl
mov
xchg
(bad)
rex.wb
adc
incl
stc
sub
push
mov
shll
pop
call
lods
add
cmpsb
mov
out
call
loop
