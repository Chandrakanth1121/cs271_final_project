jo
divb
insb
dec
fldl2t
mov
ds
shll
pusha
dec
mov
out
xchg
mov
or
mov
scas
dec
pushf
mov
mov
imul
mov
dec
xchg
mov
jo
in
adc
dec
in
or
hlt
lcall
or
loopne
nop
int1
ds
stos
xlat
mov
shr
aas
sub
mov
test
jecxz
adc
dec
adc
jecxz
jp
add
ror
ret
(bad)
pop
and
scas
mov
sahf
mov
testb
in
loope
sahf
mov
ficomps
mov
cli
xchg
sub
pop
mov
jmp
cmp
sub
jb
idivb
rcrb
xchg
cwtl
sahf
clc
lods
idiv
adc
sbb
and
shrl
mov
mov
test
dec
dec
jo
or
adc
call
add
pop
xchg
mov
cmpsb
xchg
mov
mov
lds
lcall
leave
jecxz
xchg
fidivl
dec
mov
or
sarl
mov
lret
xor
and
jns
stc
jb
adc
popf
mov
fcmovnu
adc
mov
add
gs
iret
inc
cmpsl
ja
mov
outsl
add
xchg
mov
dec
(bad)
fisubrs
adc
jecxz
jnp
mov
(bad)
(bad)
in
fisubrl
add
sbb
outsl
nop
adc
(bad)
hlt
call
mov
test
cmp
xchg
and
cmp
xchg
adc
mov
push
xor
bound
mov
fimuls
xor
and
jne
xchg
(bad)
jl
cmp
test
sahf
dec
rcrb
imulb
cmp
push
shl
pop
push
je
in
sbb
stc
sub
push
inc
and
push
xchg
aad
inc
arpl
insl
sbb
sbb
repz
loopne
imul
decl
daa
jne
adcl
int1
xchg
fs
push
or
clc
mov
or
ffree
std
sub
stos
cmp
and
andl
jmp
movntps
sub
adc
cmpsl
push
fcompl
rcl
out
jae
mov
inc
cmc
mov
setl
int
pusha
xchg
mov
lods
(bad)
cs
lds
lea
inc
cmpsb
in
sub
pop
ljmp
sub
xor
aad
data16
jne
addr16
xchg
jle
xchg
out
rorb
jecxz
xor
jo
mov
int
mov
add
cld
rcrl
mov
lret
mov
sbb
jl
jns
pushf
and
jge
and
pop
imul
jp
adc
rcrl
jmp
and
mov
ret
jp
push
fsubrl
jp
sbb
xlat
jnp
(bad)
mov
ret
testl
movb
xor
add
sbb
lods
dec
push
test
(bad)
mov
push
movsb
jno
loopne
ror
push
mov
hlt
fwait
and
push
outsl
gs
or
pop
out
sahf
or
push
filds
adc
movsl
mov
mov
mov
fnstcw
mov
push
imul
jo
or
int3
jae
cmp
lret
push
push
imul
sbb
inc
int
(bad)
or
imul
cmp
sub
int3
dec
mov
aaa
adc
int3
fistl
adcb
(bad)
mov
fs
nop
outsl
test
mov
(bad)
gs
adc
add
imul
(bad)
lock
fldenv
aad
push
mov
mov
sub
jbe
lock
adc
repz
or
sbbb
cli
pop
fildl
in
jb
dec
mov
ret
pop
push
cmovae
xchg
cmpb
movsl
mov
shrb
test
mov
jae
cmp
mov
xlat
stc
(bad)
repz
mov
bound
cmpsb
adc
mov
lds
bound
inc
add
andl
mov
mov
inc
push
leave
xor
cmp
cmp
fidivs
insb
rcrb
or
or
inc
xorl
add
add
jae
adc
popf
xor
lods
dec
(bad)
fimuls
mov
mov
and
imul
mov
(bad)
rclb
iret
bound
fisttpl
push
lret
xchg
ss
pop
xor
fistl
add
lea
dec
jns
xor
add
sti
pop
fnstcw
or
ljmp
cmpsb
adc
loopne
(bad)
mov
push
cmp
sbb
cmpsb
int3
inc
in
sbb
je
jns
leave
sub
mov
push
mov
sub
pushf
pop
lret
and
ds
es
int1
in
mov
adc
xor
outsl
gs
pop
jle
in
and
push
jno
loopne
gs
aas
lret
push
jbe
shl
add
in
sbb
mov
stos
pop
lods
lods
rolb
sahf
loope
sub
shll
and
in
into
sbbb
(bad)
pop
jge
mov
push
or
push
lret
fisubrl
dec
pushf
(bad)
fisubrs
sbb
inc
adc
dec
addr16
scas
movsb
pop
push
xor
incb
call
fs
out
loopne
inc
loop
aam
mov
ds
push
mov
cmpsl
repz
sub
push
inc
sbb
mov
dec
xchg
pop
xor
add
sbb
(bad)
push
push
adc
into
js
shll
mov
jo
and
sbb
add
cmp
xor
xlat
stos
lahf
not
pop
leave
test
lods
movsb
enter
mov
iret
push
sti
(bad)
jo
in
addr16
pop
mov
mov
jno
sub
imul
sahf
inc
cmpb
sbb
mov
(bad)
cmp
push
xchg
push
(bad)
mov
loope
or
loopne
xor
mov
shrl
lds
xor
outsl
dec
cltd
hlt
into
shr
pushf
sbb
ss
push
or
pop
jg
outsb
mov
in
mov
jns
mov
push
js
imul
stc
cld
ret
cltd
nop
imul
add
aam
mov
lds
cmc
into
xchg
cmp
fidivrl
divl
pop
adc
fs
mov
mov
lds
incl
dec
push
aad
stos
push
sbb
jae
negb
aaa
repnz
ss
(bad)
push
jb
lret
inc
enter
pusha
xchg
rclb
or
fs
aam
dec
int1
test
lret
repnz
sar
aam
in
imul
dec
jo
cli
xchg
arpl
call
or
data16
cmpsl
or
xchg
dec
mov
add
pop
xor
cs
add
jge
push
or
addr16
leave
cmpl
out
add
dec
sub
mov
(bad)
or
adc
xchg
cmp
ljmp
jae
scas
test
cmpsl
adc
sub
jecxz
bound
pop
push
xorb
(bad)
mov
sahf
xor
xor
insl
xlat
rcr
sbb
loop
dec
lcall
mov
push
and
sub
jmp
sbb
das
sub
mov
cwtl
jno
xchg
jb
pop
fstpl
sahf
(bad)
sbb
xchg
push
(bad)
iret
pop
add
and
clc
cli
(bad)
xchg
pop
int1
adc
sub
stos
test
decl
jns
pop
aas
into
lea
lahf
mov
adc
xchg
xor
cmc
leave
sub
mov
push
sub
inc
xchg
xchg
lods
das
and
push
out
movsl
push
in
filds
arpl
mov
jno
sahf
add
sub
cmp
scas
mov
xor
jl
xchg
push
ret
mov
(bad)
stos
adc
pop
cwtl
push
cli
scas
cld
es
mov
int1
adc
outsb
(bad)
add
xor
fldl
scas
push
das
insl
lea
iret
dec
add
jmp
fimuls
inc
daa
(bad)
xor
call
adc
and
adc
push
pushf
mov
adc
or
out
inc
jmp
dec
fs
(bad)
mov
out
ret
xchg
lahf
add
int3
jae
xchg
fwait
inc
data16
pop
into
cmpsl
leave
push
sbb
dec
push
insl
insb
ss
inc
lret
and
stos
adc
cmp
popf
push
leave
lret
xchg
andb
jge
dec
(bad)
sti
sbb
nop
xchg
cmp
cld
mov
and
insb
lret
roll
out
mov
lods
push
jg
gs
cmpsb
fwait
cmp
add
cmp
stos
(bad)
std
es
mov
pop
mov
mov
add
or
push
add
inc
outsl
mov
test
xor
inc
adc
and
fisubs
