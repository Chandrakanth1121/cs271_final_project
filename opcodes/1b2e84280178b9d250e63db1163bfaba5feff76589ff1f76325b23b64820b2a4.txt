lock
push
add
add
add
add
add
add
add
test
add
add
add
push
sbbb
add
mov
push
xchg
inc
ljmp
mov
and
inc
mov
mov
mov
and
test
imul
in
int3
cli
xor
add
js
je
and
and
ja
and
bound
dec
iret
mov
cwtl
mov
(bad)
stc
xchg
fwait
xor
pop
mov
pop
test
adc
movb
xchg
sub
cmp
jae
cmpb
lock
cld
cmpsb
mov
mov
inc
xchg
adc
cmp
mov
ss
adc
mov
out
test
or
cmp
mov
call
mov
inc
jbe
or
add
add
mov
stc
and
push
dec
push
xor
sub
shr
mov
loope
les
data16
mov
out
mov
imul
jecxz
mov
int
sbb
das
mov
lret
insl
sub
dec
xchg
les
insb
and
cld
scas
ret
lods
push
lock
inc
mov
or
jp
addr16
pop
pop
xchg
mov
jo
mov
cld
ret
stc
inc
in
pop
push
push
enter
rorb
pop
in
jmp
inc
add
les
pop
sub
(bad)
xchg
jle
mov
mov
out
adc
in
in
jne
pop
(bad)
out
xchg
aad
sub
xchg
xchg
lods
dec
(bad)
shrl
push
add
cmc
jmp
xchg
std
cmpsl
jnp
mov
jge
inc
adc
jp
sbb
movsb
mov
cmp
(bad)
pop
inc
inc
test
sbb
mov
fnstenv
in
sbb
or
femms
fidivs
push
or
fcompl
push
jne
rcpps
jle
mov
add
cmp
mov
mov
cmp
dec
out
popa
jp
arpl
mov
into
pop
stos
in
in
mov
pop
psubb
jbe
cmp
sbb
scas
lcall
scas
add
roll
mov
sbb
ds
sbb
shll
dec
cld
adc
fisttpll
outsb
jns
jmp
jbe
shll
xchg
(bad)
cli
lret
lds
out
mov
movsl
push
data16
xor
iret
mov
mov
bound
push
lock
adc
or
imul
loope
cmp
cli
dec
aaa
cltd
xchg
push
adc
cs
insl
sub
lahf
mov
pop
mov
aaa
dec
or
hlt
jle
xchg
mov
sarb
aad
test
push
gs
sub
ret
(bad)
adc
mov
(bad)
or
inc
lret
pusha
andl
jp
loope
lods
scas
push
pop
jp
(bad)
dec
orl
inc
mov
push
cmp
movhps
outsl
std
lahf
loop
xchg
fs
mov
sub
push
sbb
loopne
sbb
pushf
(bad)
in
xlat
jae
test
clc
stos
xchg
cli
adc
inc
lds
sbb
hlt
adcl
enter
cmpb
cmpl
mov
orl
aas
pop
add
jmp
push
in
pop
sti
push
leave
sarb
cmp
or
lea
jge
sbb
and
push
and
jns
movsb
jnp
int1
and
aam
lahf
inc
sti
shl
fcmovnb
pop
fwait
sub
jecxz
or
inc
fs
mov
leave
jp
and
cmp
or
sti
add
fsubp
and
ds
pop
aas
jb
sub
pop
jl
lret
jmp
push
push
pop
and
loopne
das
lcall
pusha
int
dec
insb
fnstsw
lods
pop
movsb
into
lea
int1
mov
pusha
popa
dec
hlt
fsubp
xor
sbb
out
insb
out
in
aas
pusha
test
(bad)
pop
insl
adc
loop
jns
mov
push
ss
adc
adc
mov
xor
inc
in
loop
cmpsl
sbb
xchg
int3
fbld
std
pop
jno
(bad)
stos
data16
mov
mov
enter
cmp
mov
sbb
movsb
fcoms
xor
test
les
mov
mov
mov
mov
ljmp
mov
or
adc
push
into
add
ret
sti
out
dec
add
mov
push
cmc
push
pushf
fdivrl
mov
testb
mov
push
ljmp
add
jae
mov
clc
push
int
sub
mov
sahf
les
clc
pop
ret
push
jns
popf
inc
adc
scas
sbb
lock
xor
int
push
jmp
jl
fildll
ret
(bad)
(bad)
adc
arpl
mov
jl
pusha
outsb
imul
lods
fsubl
mov
fbstp
cwtl
lods
xchg
(bad)
sti
clc
addb
mov
ror
inc
inc
sarb
adc
fnstsw
add
cwtl
out
adc
or
mov
fdivrs
mov
lds
cmp
xchg
mov
or
cld
enter
dec
cmp
mov
cmp
rol
jo
pop
cmp
test
xor
pop
call
int
adc
popf
stos
aam
sub
lock
mov
in
inc
fstpl
push
mov
stc
cmc
jbe
stc
aas
data16
lds
into
sub
push
jns
into
loop
in
mov
gs
sub
fistpl
sahf
ret
push
inc
fs
mov
cmp
sbbl
je
clc
xchg
cltd
xor
adc
cld
loopne
mov
mov
jp
mov
push
bound
xchg
arpl
adc
int1
mov
pop
mov
(bad)
jl
pop
mov
repnz
mov
fiaddl
jge
inc
sbb
add
aaa
dec
jge
gs
dec
idivb
xorb
pop
jo
sbb
ret
sbbb
in
add
xrelease
or
movsb
loopne
ficoml
dec
pand
cmc
lret
sbb
(bad)
shl
shrb
int3
or
les
jge
mov
push
sub
lea
lea
xor
xor
cmp
fiadds
mov
jg
shrb
test
insb
mov
dec
adc
arpl
push
mov
inc
mov
lods
dec
add
out
cld
mov
int1
mov
subl
out
iret
xchg
jb
mov
cmp
js
dec
push
stos
int3
push
jg
bound
jns
in
lds
cmpl
or
or
(bad)
mov
sarl
push
push
inc
jg
aaa
mov
xchg
aas
aam
and
inc
into
lods
stos
or
sub
addr16
movsl
pushf
pop
pop
out
fwait
mov
es
out
ret
nop
sahf
mov
outsl
testl
ss
xor
(bad)
push
lods
xor
add
xor
shlb
or
xchg
push
add
out
adc
scas
jmp
nop
sbb
loopne
loop
or
fildll
jmp
(bad)
stos
sti
push
pop
(bad)
pminub
pop
mov
jl
sbbl
lcall
adc
mov
sbb
jne
add
ljmp
add
pop
push
gs
or
cmp
xor
sub
ficomps
and
jle
aaa
sub
lret
aas
das
ljmp
lret
inc
mov
mov
std
int3
sarl
test
mull
cmp
add
cmc
lds
mov
test
rcl
addl
sbb
aas
push
scas
pop
jb
push
push
jbe
sbb
loop
sbbl
pop
popa
push
jne
or
lods
es
mov
adc
(bad)
adc
into
das
and
(bad)
jl
fwait
or
and
dec
mov
push
and
ljmp
sbb
mov
fnstcw
aad
repz
enter
sbb
movsb
js
pop
jecxz
fwait
bound
mov
int3
(bad)
movsb
pop
mov
xchg
mov
jo
mov
rdtsc
fimuls
imul
sbb
push
and
lcall
pop
jnp
cmp
xchg
cmp
fcomp
int
mov
adc
aas
fidivrl
lret
jne
inc
xlat
jns
es
lahf
sub
int3
xchg
in
addb
mov
inc
lahf
xor
lea
and
out
enter
cmpsb
cltd
jg
cmp
loop
pop
(bad)
pop
scas
pop
pop
and
push
add
jae
cmp
imul
xchg
lcall
ljmp
shll
dec
dec
mov
and
jge
and
int
mov
jecxz
sbb
inc
jae
inc
sbb
in
pop
cltd
push
shlb
mov
