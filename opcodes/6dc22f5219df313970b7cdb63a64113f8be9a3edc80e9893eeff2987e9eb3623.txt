mov
nop
and
jg
sbb
lcall
mov
rex.r
rex.wx
pop
adc
mov
(bad)
imul
sbb
or
xor
adc
xchg
sarl
movabs
add
cmpsb
or
movsb
mov
fmuls
add
mov
xor
movabs
rex.w
(bad)
(bad)
rcl
rex.xb
mov
jle
push
rex.wxb
fistpll
xchg
ds
shrd
addr32
(bad)
adc
(bad)
(bad)
movsl
rex.w
push
gs
ljmp
mov
mov
test
or
fildl
(bad)
ret
xor
mov
mov
repnz
outsb
stos
rex.wrx
and
mov
cmc
insb
fcomi
std
insb
(bad)
mov
or
ret
stos
and
and
call
pop
lret
pop
cmp
sahf
xor
int3
xchg
adc
add
rex.wb
flds
rex.rxb
mov
jnp
hlt
rorl
loope
insl
(bad)
jo
int
int1
jp
cs
or
repnz
mulb
and
pop
addl
leave
xor
call
sbb
(bad)
jp
loop
pop
ds
jg
add
out
fistpll
ror
ret
ds
xchg
and
in
cmp
sar
mov
cmpsb
mov
(bad)
cld
in
cmc
sahf
rex.wrxb
fs
outsb
jbe
pop
sarb
add
jl
subl
(bad)
sub
(bad)
clc
outsw
sahf
xor
push
movsl
(bad)
ficoms
std
repz
addr32
(bad)
sarl
insb
out
sbb
(bad)
retw
xor
stos
fcmovb
std
fistl
jl
jmp
mov
mov
sar
xor
mov
(bad)
(bad)
pop
(bad)
and
fadds
or
jne
rex.b
hlt
mov
pushf
mov
data16
hlt
rex.w
fdivrl
sbb
rex.r
pop
push
sub
insl
sbb
mov
xor
int
lock
adc
jns
xchg
mov
rex.rb
mov
ret
ja
shll
mov
subl
mov
mull
std
out
clc
add
rex.b
sbb
rex.wx
mov
cmc
xchg
mov
fcomps
mov
jl
out
(bad)
sbb
add
xchg
jno
mov
jbe
mov
and
jp
ds
mov
mov
pop
(bad)
(bad)
(bad)
(bad)
movsb
lea
mov
sar
lret
xor
xchg
test
mov
xor
repnz
(bad)
in
lret
mov
mov
rcr
insb
pushf
sbb
(bad)
pop
int1
mov
js
rex.wr
(bad)
(bad)
add
fwait
movabs
decl
jmp
mov
rex.rxb
jg
add
sbb
jge
add
mov
jp
{rex2
iret
pop
fstp
fsubrl
ret
mov
pop
out
xor
rex.wxb
rex
(bad)
or
out
cmp
mov
push
sarl
mov
lret
shrb
pop
xor
jb
(bad)
movabs
cmp
push
(bad)
(bad)
pop
cmp
fcmovnbe
(bad)
imul
rex.rx
fwait
jmp
sti
rex.rx
adc
rex.xb
data16
jl,pt
jnp
call
sbb
clc
jns
out
sbb
je
(bad)
add
mov
or
rex.wr
mov
add
leave
adc
mov
(bad)
xor
loop
(bad)
lea
repz
shrl
mov
repz
(bad)
jno
mov
rex.wrb
gs
jmp
jnp
in
rorl
es
cmpps
in
testl
fstpt
pop
gs
out
xor
movabs
scas
lahf
rex.wrb
mov
pop
ret
ds
ficompl
push
and
out
insl
jg
cmpsb
jp
add
sbb
pop
rex.wxb
repz
push
add
nop
rex.wrxb
(bad)
jo
(bad)
(bad)
(bad)
xor
cmp
xor
add
test
sbb
sbb
jb
(bad)
(bad)
and
rex.wrb
sub
movabs
gs
ds
sbb
add
rex.rx
xchg
and
pop
stos
jae
xchg
loopne
movsb
in
out
or
movabs
leave
test
jo
mov
or
sbb
(bad)
sbb
cmp
cltd
movl
shll
(bad)
sar
rex.rb
jp
int
(bad)
lock
ret
loope
stos
int
in
mov
(bad)
out
ss
mov
lods
jp
cmp
push
sub
out
or
pop
stos
mov
out
xchg
(bad)
pop
(bad)
sbb
hlt
rex.wrb
ss
popf
(bad)
jb
imul
rex.rxb
(bad)
jno
jrcxz
iret
push
pop
outsb
jle
sub
mov
push
mov
fnstcw
pop
xchg
xchg
adc
(bad)
fildl
and
sub
or
ffreep
pop
(bad)
push
jae
mov
out
shll
rex.wrb
(bad)
scas
popf
(bad)
cmp
fnstcw
rex.wrxb
push
lret
cmp
sbb
rex.rxb
jp
mov
imul
(bad)
jae
fisttpll
ss
add
mov
pop
nop
scas
(bad)
in
(bad)
push
(bad)
movsb
xor
call
mov
rex.wx
mov
(bad)
lods
xor
popf
(bad)
in
mov
adc
(bad)
xchg
leave
jnp
xor
and
mov
sbb
(bad)
std
(bad)
rex.wr
mov
sbb
(bad)
rex.rx
sbb
rex.wrb
jg
adc
rorb
cmp
movabs
ret
cmp
je
(bad)
and
js
(bad)
call
shll
(bad)
rex.wrx
mov
(bad)
loopne
xor
jg
je
jo
jns
(bad)
cmp
loope
loop
xchg
rex.wx
in
mov
(bad)
filds
in
add
rcrb
add
jae
rcrb
movsb
enter
cmp
push
push
xchg
imul
add
xor
rex.x
hlt
add
rex.wrb
out
rex.wrb
(bad)
xcrypt-cbc
cmpsl
shl
rex.x
rex.xb
and
lret
(bad)
cmp
sti
(bad)
addr32
stos
sbb
(bad)
in
addl
sbb
mov
lods
insb
in
pop
jg
insb
push
sub
movsxd
(bad)
mov
jmp
lret
lret
stc
rex.xb
iret
mov
es
rex.b
(bad)
sahf
mov
jne
call
in
(bad)
js
sbb
jmp
xchg
(bad)
movabs
ret
movb
rorb
{rex2
adc
mov
adc
cmp
and
or
cmc
sbb
mov
out
xchg
and
mov
(bad)
(bad)
mov
pop
(bad)
cmp
fsts
pop
or
xor
lret
orl
rex.rb
fildl
(bad)
enter
mov
jnp
mov
imul
mov
js
mov
jbe
xor
mov
imul
(bad)
xor
cmp
jae
outsb
push
filds
movsb
jne
and
mov
push
cld
adc
outsb
movsb
mov
xor
fnstsw
outsl
movabs
jp
test
cmpb
jl
sbb
jnp
in
(bad)
bnd
mov
xor
subb
addr32
ja
or
add
rex.wr
cmpsb
(bad)
in
test
(bad)
push
(bad)
mov
(bad)
or
jb
in
outsb
add
add
jmp
out
xchg
mov
sbb
rex.wrxb
movsxd
(bad)
add
in
rex.wxb
adc
(bad)
vpaddsb
pop
(bad)
or
mov
mov
cs
(bad)
repz
xor
rolb
pop
(bad)
loopne
lea
int1
jmp
mov
int1
shl
and
(bad)
iret
mov
movabs
pop
fstpt
rex.rx
popf
fwait
mov
or
(bad)
orl
movsb
xchg
and
movabs
pop
(bad)
xor
and
push
mov
ret
mov
or
jg
cmp
loope
adc
and
insl
lods
ja
jg
mov
rex.wrb
and
movabs
call
movsxd
(bad)
movsl
adc
clc
js
cmp
push
or
call
mov
and
xchg
rex
jae
enter
push
movabs
orl
(bad)
cs
leave
(bad)
lret
imul
mov
mov
in
or
xor
(bad)
cs
jp
hlt
(bad)
rex.wr
ret
fnstsw
ljmp
jmp
rex.r
leave
pop
rex.r
rex.wx
insl
add
fists
cmpsb
lock
sub
movabs
(bad)
sbb
test
in
mov
repz
(bad)
insl
idivb
rex.rxb
fcompl
cs
add
fidivrs
and
rex.r
(bad)
adc
jmp
mov
rex.wrx
mov
cmp
(bad)
insl
and
adc
jge
xor
in
mov
lahf
lahf
hlt
or
(bad)
fsts
in
push
mov
(bad)
movabs
rolb
jl
shrb
leave
add
rex.wrxb
or
gs
(bad)
push
pop
jmp
jb
repz
jp
lea
in
push
xchg
push
(bad)
lret
es
call
xor
and
mov
(bad)
jbe
(bad)
