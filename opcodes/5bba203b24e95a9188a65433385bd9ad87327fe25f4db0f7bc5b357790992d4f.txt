sbb
dec
pusha
daa
cltd
cmpsl
inc
and
mov
popa
mov
inc
sbb
mov
cs
lods
dec
cli
fcomi
stos
lret
sub
mov
mov
cmpb
inc
xor
add
aaa
adc
push
bound
(bad)
ds
dec
es
idivb
fmulp
or
jns
sbb
dec
mov
dec
jp
push
fidivrl
xchg
mov
inc
adc
lcall
mov
push
int3
loope
movsl
add
or
and
es
aad
sub
mov
fidivl
cmp
inc
adc
lahf
fwait
cmp
scas
dec
or
arpl
xchg
fildl
lea
jmp
jge
shrl
roll
inc
cmp
fs
mov
cmp
mov
and
pop
sbb
popa
sub
gs
fsubs
push
push
popf
sub
shrb
jne
loope
fs
pop
je
inc
aas
pop
fs
pop
repnz
dec
cmp
sti
lret
pop
jbe
cmp
mov
mov
in
fisttpl
pop
add
lahf
cli
fucom
repz
mov
add
cmpsb
cmp
dec
adc
or
jmp
xchg
xorl
push
mov
testl
cmpsl
add
add
mov
or
into
or
sbb
sub
scas
push
mov
mov
lahf
pop
les
adc
lods
out
(bad)
mov
pop
addb
ret
xchg
js
sbb
test
and
mov
and
mov
inc
(bad)
mov
xor
sahf
(bad)
ficomps
ss
and
sub
insl
rcrl
ds
lahf
jns
pop
sbb
pop
add
cltd
xchg
std
mov
inc
das
add
mov
jae
mov
rep
les
jae
mov
adc
dec
sub
xchg
jno
adc
add
xor
dec
loopne
rorb
les
jle
pop
mov
inc
js
mov
jmp
clc
or
in
adc
or
or
mov
addr16
xor
jbe
and
dec
xchg
into
fiaddl
idivb
dec
imul
aas
mov
mov
cmp
or
int3
sahf
push
and
xchg
xchg
dec
or
cmc
sbb
jb
adc
sbb
pop
dec
pop
pop
dec
jnp
jb
mov
test
mov
je
dec
xor
ror
ret
sti
mov
ljmp
ljmp
aas
ret
(bad)
sbb
dec
jb
and
inc
sub
sub
lea
jecxz
lea
and
in
sahf
cli
das
sub
xor
insb
push
andl
mov
mov
pop
pop
xchg
(bad)
stc
daa
stc
rclb
iret
or
call
clc
add
cmp
(bad)
jb
(bad)
and
call
sbb
adc
(bad)
repz
ficoml
pop
lods
pop
(bad)
cmp
loop
stos
je
ja
test
sbb
fimuls
pop
dec
jmp
inc
dec
imul
dec
xor
pusha
jmp
stc
xchg
enter
pop
xchg
sbbl
sub
push
add
push
push
and
sbb
inc
add
adc
fsubs
lea
mov
xchg
push
or
or
push
sbb
xchg
mov
xchg
push
movsl
pusha
push
pop
add
cwtl
cli
jle
and
cltd
inc
mov
int
add
sbb
or
addr16
mov
dec
sub
clc
sbb
loope
cmp
lret
inc
popa
cltd
and
xor
outsb
pop
divb
pop
cmpsl
jle
cmp
lret
mov
mov
sbb
lret
cmc
in
mov
scas
ja
fcmovne
ljmp
inc
je
lahf
outsl
dec
loop
in
testb
into
aaa
mov
add
pop
xchg
aas
lods
cmp
mov
(bad)
mov
sahf
push
lahf
(bad)
or
into
xor
fstl
es
jno
into
jnp
push
inc
dec
lock
mov
jecxz
test
inc
and
aad
push
idivb
jo
outsb
sub
xchg
fcomps
sbb
inc
push
sbb
dec
jne
jl
and
xchg
dec
sub
inc
mov
clc
fadd
sti
push
or
pop
dec
xchg
sbb
xchg
popa
rcl
js
or
inc
xor
andb
shll
jge
ss
cli
xchg
incb
outsl
fistpll
inc
movsl
jecxz,pt
mov
fnsave
inc
and
push
xor
cwtl
push
ljmp
enter
arpl
mov
nop
xorl
fisttpl
dec
xchg
mov
stos
push
add
jns
les
mov
or
pusha
incl
shr
sbb
repz
mov
jmp
bound
push
pop
aas
scas
out
inc
cmp
pusha
adc
loopne
cltd
ss
ja
xchg
int3
and
xorl
push
das
ret
in
xor
popf
adc
inc
enter
mov
push
shl
xor
fnstenv
pop
add
or
pop
insb
pop
outsl
dec
(bad)
xor
push
push
out
fs
jbe
push
or
push
imul
or
add
add
jg
cmc
dec
add
push
xor
out
enter
(bad)
and
pop
int3
lret
lock
stc
push
pop
js
andb
out
fildl
cmpsb
inc
lret
push
lock
push
xchg
enter
int1
leave
adcb
les
cmp
sbbb
add
sbb
cwtl
adc
cmp
jl
push
or
push
outsl
or
adcb
or
xchg
inc
bound
test
or
movb
sub
mov
imul
mov
popf
(bad)
pop
imul
data16
mov
orb
scas
inc
push
fcmove
sbb
push
push
inc
adc
mov
enter
test
jnp
daa
jg
pop
aaa
mov
lods
insb
sbb
pop
leave
int3
lret
incb
dec
das
cmpsb
xchg
add
outsb
dec
pop
mov
lods
jbe
sbb
inc
sbb
mov
leave
adc
inc
jecxz
jmp
sbb
ret
stc
in
arpl
xor
dec
cmp
sahf
test
and
push
or
es
sub
imul
pop
cmp
test
ds
mov
fmull
sbbl
stos
xor
mov
push
mov
add
lahf
and
mov
and
rcrl
lea
add
iret
dec
orl
pusha
in
cld
mov
cli
cmp
stos
das
push
dec
sahf
lds
test
jmp
mov
in
mov
testl
push
push
lcall
mov
inc
scas
outsb
or
clc
dec
clc
xchg
out
roll
xchg
adc
lcall
das
mov
loop
aaa
lret
inc
lds
(bad)
xor
dec
fwait
outsb
imulb
inc
dec
(bad)
adc
je
mov
idiv
add
imulb
shlb
sbb
ljmp
nop
das
mov
mov
lods
dec
lods
inc
and
sbb
pop
aas
aad
cmpsl
mov
inc
jmp
sti
jmp
sbb
sti
cld
aad
sub
mov
sbbl
or
xor
xchg
ret
and
inc
xchg
arpl
popf
jb
jns
push
adc
dec
(bad)
ja
xor
xor
push
orl
sbb
scas
xchg
jl
ffreep
loope
ret
cltd
xchg
adc
mov
daa
push
pushf
imul
pop
and
ror
cmp
pop
in
insl
mov
repnz
orl
inc
and
fstpl
cmpsl
adc
jmp
pop
(bad)
or
jae
push
imul
ljmp
inc
fbld
lods
or
pop
sbb
cwtl
outsl
or
add
inc
daa
jle
adc
fwait
dec
sti
and
sub
or
xor
xlat
cwtl
sub
jae
shrl
and
push
xchg
push
pop
cmpsl
pop
fstl
sub
jle
pop
inc
cmp
rcr
cmp
lret
jbe
fcmovb
pop
jno
add
lcall
push
outsb
jae
loope
in
xor
lcall
adc
xchg
fldt
lds
mov
(bad)
hlt
jne
and
outsl
jl
fldt
in
mov
and
lahf
inc
jp
or
mov
xchg
mov
test
mov
jo
int3
sub
mov
pop
lret
push
ret
cmp
dec
mov
hlt
cmpb
xchg
loopne
push
dec
adc
sub
and
cmp
adcb
