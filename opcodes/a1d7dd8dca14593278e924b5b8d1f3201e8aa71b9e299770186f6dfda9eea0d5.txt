inc
jg
test
add
mov
pop
imul
jecxz
test
xor
mov
mov
pop
mov
xchg
add
lds
movups
pusha
into
xchg
dec
xlat
loope
loope
out
dec
inc
dec
xor
aas
inc
les
insl
iret
add
es
pop
sub
cmc
(bad)
push
or
mov
pop
out
mov
fmul
push
dec
out
aad
xor
pop
ja
loope
xor
out
jno
test
scas
fimuls
call
das
mov
(bad)
out
test
cmp
les
int3
sbb
mov
scas
xor
cmovns
data16
in
xchg
xchg
jmp
sbb
lods
cli
nop
sub
cld
aad
iret
cld
mov
jb
pop
popf
xor
sub
scas
adc
cltd
xchg
jae
add
iret
jbe
hlt
mov
in
sahf
sub
rorb
push
mov
mov
iret
cmpsl
ja
push
jnp
popa
xchg
xchg
aad
jns
push
out
clc
test
mov
pop
cmp
adc
adc
dec
dec
mov
jae
loopne
push
aad
add
mov
daa
nop
mov
mov
sbb
cmp
movsb
pusha
mov
or
sub
out
leave
cwtl
int1
ja
push
xchg
divl
sbbb
rcrb
and
pop
mov
mov
mov
test
arpl
aas
loopne
jo
cltd
adc
jne
dec
lcall
lcall
add
stc
shl
inc
std
(bad)
sub
into
bound
mov
inc
aas
or
test
xor
and
fstl
push
push
mov
test
push
ljmp
das
shl
jg
(bad)
dec
pushf
push
fs
jl
xchg
inc
bound
inc
mov
cmpsl
dec
mov
and
mov
divl
or
xchg
mov
fimuls
cmp
and
cmp
rolb
outsb
jle
jg
mov
xor
xchg
fldl
test
xor
sub
insb
in
insb
test
insl
add
fimull
mov
mov
xchg
cmp
mov
fwait
cmpsb
xchg
sbb
or
lret
(bad)
jmp
ss
adc
xchg
push
dec
lahf
mov
rcrb
sbb
mov
dec
bound
loop
insb
xor
js
test
push
mov
dec
lcall
mov
and
les
ss
mov
insb
js
out
(bad)
das
test
mov
gs
pop
jns
pop
fimuls
imul
push
aam
mov
lea
fcomi
mov
push
rorb
xchg
xlat
call
fdiv
ss
add
sahf
fcmovb
rol
loopne
pop
dec
lea
push
jl
mov
mov
pushf
mov
inc
jns
dec
fildl
scas
rclb
sbb
int1
mov
and
pop
movsb
xchg
rclb
xchg
inc
mov
or
push
out
ljmp
aaa
cmp
in
pop
fs
fcomps
not
push
xor
add
pop
into
or
xchg
nop
add
cs
fsub
jg
fcomip
add
jbe
lcall
imul
sbb
cli
mov
insl
adc
cmp
pop
cmpsl
dec
cmp
pop
(bad)
insb
add
mov
cld
scas
adcl
pushf
mov
mov
leave
inc
xchg
adc
scas
scas
pop
cltd
cmc
subb
jns
aad
or
xchg
add
sub
adc
mov
dec
bound
jno
jl
shr
and
mov
movsl
ljmp
daa
adc
cmpsl
andb
mov
ret
(bad)
pop
imul
cltd
xchg
ds
xor
mov
adc
(bad)
mov
pop
pop
aam
loop
addl
push
mov
xchg
in
xchg
pop
inc
and
xor
jp
mov
jg
mov
out
push
mov
dec
jne
ja
mov
pop
xchg
pop
sbb
push
mov
aad
cltd
imul
or
push
pop
xchg
add
pushf
xor
je
call
xchg
xchg
fsubrp
pusha
push
int1
xor
cmp
xchg
xchg
jecxz
sbb
mov
push
repnz
sbb
shlb
pop
lret
cmp
push
mov
or
mov
xor
sub
fcoms
test
xor
shlb
jle
push
sub
mov
arpl
push
xchg
sbb
dec
in
push
lea
(bad)
jae
xlat
into
inc
test
dec
aad
aaa
add
or
mov
mov
ficomps
int
sbb
dec
addr16
(bad)
nop
push
fwait
popa
divb
loope
mov
cmp
mov
rol
sbb
lcall
push
(bad)
cmp
dec
sub
test
and
jne
jmp
jo
sbb
das
ja
es
adc
sti
mov
or
dec
jo
cwtl
jg
imul
push
adc
cmp
in
pop
add
cs
mov
sahf
mov
ja
dec
xchg
xor
lea
cmp
jae
xchg
ss
mov
cwtl
aad
xchg
lcall
mov
fisubs
lds
shl
into
pop
andl
daa
cmp
outsb
jl
jne
test
dec
push
mov
inc
scas
test
or
jg
idivb
or
push
pop
xchg
iret
sbb
sub
ss
pop
or
pop
rcll
xor
push
test
cwtl
pop
or
jmp
push
inc
mov
arpl
daa
shlb
(bad)
out
(bad)
dec
jne
aaa
inc
push
arpl
pop
xchg
xchg
push
or
cmp
pop
mov
mov
mov
shrl
pop
fstl
sbb
pop
outsl
jl
(bad)
cmp
imulb
and
pop
enter
popf
jns
jae
inc
add
insl
shr
testb
push
or
sbb
mov
cmp
(bad)
in
clc
sti
sbb
add
cs
es
mov
lods
mov
mov
pop
and
dec
mov
fsubs
jp
push
mov
mov
dec
(bad)
ret
cwtl
cltd
xchg
out
jne
mov
mov
push
fsubs
fwait
into
add
sbb
cld
rclb
cld
imul
out
xchg
lods
or
gs
setb
mov
dec
scas
sti
clc
jb
movsl
jo
jbe
test
bound
cmc
fsubr
push
mov
cld
inc
jne
mov
in
or
pop
push
cltd
mov
or
sub
leave
sarl
(bad)
outsb
mov
lahf
fsubs
sub
int
shl
imul
popf
xor
add
ret
in
mov
scas
adc
mulb
bound
inc
push
insb
inc
divb
jne
test
arpl
jle
(bad)
mov
jo
imul
popa
sub
addr16
mov
xor
jne
std
fadds
aaa
adc
leave
sub
out
xor
lods
enter
pushf
cmpsb
popf
jecxz
jae
jl
scas
movzbl
push
fiadds
xchg
frstor
xchg
dec
ljmp
lret
test
aam
hlt
adc
push
mov
and
movsl
add
xchg
or
lds
push
inc
inc
add
inc
inc
ss
sub
pop
les
scas
push
adc
fnsave
push
daa
lahf
and
stos
or
inc
add
or
inc
int1
pop
dec
pushf
lcall
jp
ret
add
adc
and
adc
mov
lea
jns
lods
shll
aas
cmp
adc
rcrb
cmpsb
inc
fsubl
inc
add
jbe
jne,pn
sub
dec
lcall
aad
adcl
add
mov
in
flds
dec
mov
jae
in
inc
sarb
or
jbe
lds
lock
in
jp
inc
lret
sub
std
dec
or
mov
cs
cmpsb
or
push
push
xchg
nop
fmul
pop
mov
sub
(bad)
std
mov
daa
pop
push
dec
pushf
pop
fists
inc
xchg
cmp
addb
stos
rdpmc
je
in
inc
mov
jbe
loopne
pop
out
adc
mov
pop
inc
or
in
xchg
and
adc
in
repz
inc
arpl
adc
jae
ss
pop
int
ja
test
gs
std
dec
adc
fstp
lock
pusha
inc
frstor
xchg
pop
cmp
mov
stc
mov
and
imul
xlat
jmp
cmp
arpl
xor
mov
sbb
