mov
add
call
push
ss
add
repnz
jae
popa
pop
mov
pop
(bad)
nop
mov
inc
gs
cltd
sar
scas
jg
add
cmpsl
fidivs
mov
aas
jmp
out
adc
dec
imul
jns
imul
add
stos
sbb
in
jge
aam
sar
std
xchg
fcompl
inc
add
stc
mov
mov
mov
push
mov
jle
push
dec
jmp
inc
clc
or
bound
(bad)
scas
ficomps
ret
jmp
sti
mov
push
(bad)
jl
sti
xchg
sarl
imulb
inc
fs
inc
mov
and
aam
jo
clc
fisttps
sub
lahf
je
push
adcb
dec
cmpsl
inc
or
push
sbb
loop
movsb
push
imul
std
fildl
xor
out
adc
mov
in
jp
add
cmp
loop
mov
clc
mov
inc
pop
pop
mov
repz
dec
sbb
or
and
fndisi(8087
sub
incl
scas
in
pop
cmp
insl
testl
clc
mov
dec
faddl
stc
lret
sub
test
repnz
push
cmpsb
mov
repnz
mov
hlt
mov
out
mov
jo
je
or
sub
rol
lcall
or
add
in
outsl
movsb
mov
js
fimuls
sbb
subb
pop
(bad)
retw
lcall
lahf
push
inc
fstpt
repnz
dec
int
test
mov
rclb
xchg
push
fdivs
sarl
mov
(bad)
rcll
and
data16
test
sub
notb
lds
(bad)
jbe
fcmovb
std
stc
negb
xor
in
imul
(bad)
or
sub
adc
adcl
dec
cmp
loope
dec
outsl
insl
xor
xchg
stos
arpl
jmp
pop
and
mov
ds
adc
sbb
rclb
int1
int3
ja
mov
outsb
ss
popa
inc
cmp
inc
loop
sub
mov
add
adc
shlb
call
in
adc
iret
pop
and
mov
mov
pop
test
test
mov
adc
mov
cmpsb
mov
dec
(bad)
cmpsl
dec
mov
xchg
ret
xor
add
jecxz
xor
and
jns
pop
mov
mov
cli
inc
xchg
testl
sbb
fiadds
jns
cmp
ret
jge
out
and
mov
das
loopne
notl
ret
sub
xlat
or
mov
pop
in
mov
xor
xchg
pop
dec
call
dec
fimull
repz
pop
imul
inc
bound
mov
mov
pop
jge
mov
jecxz
inc
add
(bad)
fbld
divb
xchg
neg
int
test
push
cmp
cli
and
push
shlb
ds
fbstp
out
gs
popa
pop
inc
sbb
cmp
add
mov
dec
and
mov
test
repz
lahf
push
shll
mov
pop
xor
(bad)
mov
add
jle
push
pop
cwtl
mov
mov
bound
(bad)
roll
add
mov
inc
imul
clc
cli
(bad)
hlt
xchg
in
sahf
mov
sub
cld
fs
lcall
jne
das
pop
push
add
scas
cld
bound
add
mov
mov
lds
sbb
dec
pop
and
mov
repz
popf
mov
sti
decb
mul
push
fucom
push
repz
dec
addr16
cwtl
jbe
jp
out
pop
dec
iret
lods
pop
ljmp
stos
f2xm1
push
xchg
add
notb
pop
pop
mov
mov
in
xchg
push
add
or
dec
xorl
and
std
pop
in
sbb
cmp
aam
and
inc
roll
popf
and
sti
sbb
add
mov
addr16
sub
jbe
lret
popf
push
push
xchg
lss
cmp
xchg
xchg
pminsw
sbb
xor
jmp
dec
jne
(bad)
hlt
out
in
push
inc
mov
jle
dec
aam
dec
add
in
das
lods
push
loop
aas
test
jl
push
jbe
add
add
std
repnz
xor
jo
sub
pop
mov
test
sub
lock
fwait
mov
sub
mov
ret
mov
int3
adc
enter
lahf
jne
xchg
lcall
call
cmpsb
and
loopne
and
cmpsb
lcall
inc
and
xchg
and
mov
xchg
ret
xorl
movsl
mov
dec
mov
call
stos
hlt
aaa
iret
repz
out
xor
test
pop
(bad)
xchg
pusha
stc
sbb
xchg
mov
mov
push
pop
dec
fdivrl
aas
cmp
mov
pop
adc
jne
push
rolb
mov
sbb
mov
out
addb
fstpt
pop
xchg
inc
jge
pop
test
xchg
mov
push
pop
pop
(bad)
in
ja
rolb
inc
jge
pop
xchg
jbe
leave
xor
dec
push
push
adc
jle
mov
clc
packsswb
(bad)
aaa
ja
(bad)
pop
dec
mov
push
movsb
clc
mov
fisttps
jae
cld
cmp
pop
testl
sahf
dec
out
and
add
daa
sub
cli
int1
pop
in
add
pop
mov
sti
stc
(bad)
pop
xchg
imul
je
inc
out
adc
ljmp
inc
xchg
mov
jp
cmpsl
out
add
pop
dec
xchg
and
popf
sbb
jecxz
cld
jb
orb
jb
or
repnz
adc
fimull
test
mov
inc
sti
out
cmpsl
inc
clc
inc
push
cmp
loopne
push
test
les
sti
pop
iret
stos
insl
(bad)
call
jle
jb
dec
lcall
jne
nop
inc
daa
jno
mov
xor
pusha
outsb
arpl
or
ret
inc
mov
xorb
push
les
out
cwtl
xchg
ret
dec
sbb
test
adc
lret
jo
aaa
lds
ljmp
or
sub
jb
insl
add
dec
or
push
jl
or
loope
lret
arpl
mov
pusha
out
pushf
jecxz
sbb
dec
loop
lcall
push
push
fnsave
in
pop
mov
(bad)
into
mov
(bad)
int1
and
xchg
add
xchg
jmp
fcmovnbe
xorl
mov
mov
(bad)
sbb
arpl
adc
testl
lea
loop
ret
das
(bad)
and
push
dec
push
dec
(bad)
mov
sub
add
in
pop
cvtdq2ps
orl
pop
fimuls
test
in
into
aaa
mov
test
cmp
adc
pop
sub
push
xor
inc
or
mov
cmp
or
inc
mov
add
sub
jge
pop
fs
es
mov
mov
cmpsb
mov
cs
out
xor
fcmovnb
sub
mov
push
xchg
cmp
ljmp
aaa
imul
lods
stc
push
push
xor
pop
cmp
xchg
add
mov
ret
inc
mov
and
fdiv
mov
fs
push
lcall
jno
imul
and
mov
cmp
ret
pop
inc
or
push
cmpsb
cmp
xchg
jbe
adc
loop
scas
jp
aam
xchg
add
fcmovb
cltd
fs
aas
mov
ror
add
xor
(bad)
xor
aaa
ret
dec
in
sti
loope
adc
dec
inc
pusha
test
stos
mov
fadds
fwait
popf
loopne
shlb
and
sub
adc
hlt
call
ds
(bad)
sbb
inc
imul
loopne
cld
add
in
pop
sub
push
xchg
cmc
mov
in
add
pop
into
xor
orb
hlt
hlt
mov
sub
pop
mov
mov
outsl
mov
out
sbb
pusha
cld
cld
jnp
push
lret
or
popf
mov
test
pop
or
shrl
dec
fbld
add
pop
test
inc
pop
lret
clc
imul
mov
push
stos
test
jmp
or
in
inc
cwtl
xor
sub
jecxz
jmp
jle
dec
shlb
jns
jg
lcall
xchg
xor
mov
negl
xchg
cmpsb
loope
std
out
fnstcw
and
mov
or
cs
sbb
push
push
push
popa
(bad)
imul
cmpsb
test
push
sub
dec
