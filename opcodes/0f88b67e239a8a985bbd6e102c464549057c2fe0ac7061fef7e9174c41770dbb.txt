adc
sti
cltd
pop
mov
jbe
inc
aad
dec
fimull
pop
je
sub
inc
jg
xor
pop
mov
push
int1
push
jp
pop
sbb
out
in
cmp
(bad)
test
(bad)
xor
shll
dec
mov
int1
pop
sub
push
testb
int3
ret
lea
mov
adc
xchg
jo
add
cmp
cltd
push
push
cmp
sbb
ror
dec
sahf
cmp
pop
or
and
sub
ss
dec
pop
pop
or
inc
subb
js
pop
ret
mov
lea
in
fidivl
int1
sbb
pop
sarl
mov
ljmp
mov
aam
mov
scas
push
xchg
(bad)
sbb
pop
test
(bad)
jb
push
lea
stc
jo
rcrl
push
cmc
and
pop
leave
repnz
pop
scas
out
fsubrl
adc
push
sub
sbb
sub
push
add
cmp
daa
sub
inc
dec
adc
inc
ret
idiv
mov
les
repz
movl
fnstcw
push
xlat
test
or
or
imul
int
xchg
pop
pop
mov
mov
xlat
push
pop
ljmp
or
pop
rorb
ljmp
sbb
aaa
rorb
bound
sti
mov
sti
stos
loopne
lahf
bound
mov
(bad)
lret
fldt
movb
push
std
das
jp
mov
scas
imull
insl
cmp
push
mov
cmp
cld
les
push
inc
push
sub
inc
cmp
mov
push
push
test
mov
xor
fsub
sbb
dec
movsl
sbb
push
mov
pusha
xor
mov
push
push
testb
jmp
into
daa
and
cmc
jl
xchg
sbb
mov
pop
xor
movsl
inc
fsub
jb
lods
(bad)
sti
inc
pop
lock
add
ds
js
sbb
xor
sbb
ss
mov
adc
sbb
xorb
xchg
mov
push
dec
and
xor
mov
and
mov
lods
movl
jne
jle
sbb
jb
cmc
lahf
sbb
int3
push
das
push
jmp
jmp
jp
mov
mov
jg
cs
sbb
inc
lahf
pop
add
pandn
aas
sub
push
das
pop
insb
adc
sub
out
insl
int1
push
add
and
pop
js
test
sub
sarb
rcll
add
xor
push
dec
int
bound
aam
movsb
in
lret
bound
push
lret
pop
cmp
pop
(bad)
fs
loope
pop
jle
stos
iret
mov
cltd
jbe
lahf
xchg
scas
stc
mov
cld
rolb
int3
gs
cmp
fisttps
inc
int3
dec
movsb
int1
sbb
fnstsw
jnp
jle
int3
dec
sub
(bad)
adc
and
inc
jg
mov
xor
pop
or
cmp
mov
pop
fcmovnu
cmp
dec
and
stos
jae
daa
call
std
fistps
inc
cli
fsubs
bound
xchg
std
push
inc
es
push
les
rorl
(bad)
fnstcw
xlat
aas
gs
jmp
jns
adc
cmp
or
inc
pop
or
cmp
mov
adc
in
(bad)
ror
js
sub
push
and
decl
lret
mov
jp
jmp
push
dec
push
pop
push
xor
data16
lods
popf
lret
mov
xchg
int3
(bad)
mov
loopne
mov
insl
rorl
std
sbbb
(bad)
xchg
gs
lret
lret
subb
les
adcl
jae
scas
outsb
mov
mov
adc
ja
andl
scas
and
cmp
jle
imul
push
push
fiadds
addr16
jnp
or
cmp
aas
inc
jmp
jle
dec
mov
iret
pop
pop
int
test
jp
mov
dec
mov
adc
fucomp
cmp
sbb
inc
push
push
or
xchg
dec
mov
cs
xchg
into
nop
ret
add
repz
in
call
mov
mov
aaa
cwtl
xor
lock
insl
mov
pop
lfs
mov
jp
push
int1
mov
idivl
push
daa
push
xchg
and
xor
std
adc
sub
inc
add
pop
mov
cmp
push
out
inc
(bad)
enter
out
nop
data16
stc
inc
fistpl
imul
test
mov
jb
jle
jl
shll
add
mov
ret
jp
sbb
mov
xor
adc
push
rclb
scas
pop
pushf
ss
push
daa
in
ret
out
fdivr
jne
fmuls
jbe
pop
cmp
test
stos
pop
pop
or
fmulp
mov
(bad)
mov
jb
popf
mov
jmp
imul
js
pushf
jge
jle
fsubrl
imul
xor
sub
cmp
(bad)
rcrl
add
pop
mov
mov
hlt
repz
shrb
inc
push
idivl
inc
sub
inc
dec
pusha
daa
jle
ret
lcall
inc
dec
jle
sub
js
sub
adc
mov
cmpsl
xchg
pop
mov
addl
adc
lea
mov
xchg
(bad)
mov
cmp
xchg
dec
js
or
das
jb
xchg
mov
std
add
loopne
sahf
sub
fs
cmp
sbb
or
movsl
out
dec
(bad)
ss
or
jno
in
inc
push
scas
scas
mov
mov
je
aaa
imul
sub
in
inc
aad
scas
inc
fdivs
push
mov
(bad)
shll
cmpsb
xchg
fidivl
in
cs
je
push
ds
(bad)
sub
pusha
jae
push
xchg
lods
sbb
jg
lods
add
subb
xor
bound
inc
xchg
out
test
mov
std
scas
push
rorl
adc
dec
ret
push
or
add
dec
push
mov
push
(bad)
pop
out
cs
cltd
cmp
lods
push
cwtl
fwait
pop
jge
jp
and
sub
stos
fstpl
(bad)
add
mov
roll
lods
mov
dec
test
cmp
dec
cmp
push
rolb
mov
into
mov
mov
adc
mov
xor
shl
push
daa
jo
xchg
cmp
sbb
lods
cltd
cs
add
fwait
sbb
pop
xchg
sbb
pop
int3
jns
xorl
loope
out
mov
es
xchg
fwait
mov
mov
pop
inc
pop
ret
test
inc
or
aaa
lcall
out
cmp
push
std
lcall
push
loopne
lods
hlt
movsl
daa
or
dec
cmp
adc
cmpsb
mov
lds
mov
xchg
cmpsb
push
xchg
aaa
cmp
movsl
mov
in
lcall
into
cmp
sub
jne
test
pop
ficoms
mov
arpl
movsl
dec
xorb
lret
loopne
jp
inc
cld
inc
stos
fs
int
cmp
cltd
loopne
adc
push
lcall
jge
adc
iret
inc
adc
cli
pop
jge
enter
sub
ret
(bad)
jp
ficoms
fistpl
sub
in
les
push
dec
mov
jne
cmpsb
in
lds
xchg
fsubr
pop
test
mov
lods
xchg
addb
mov
mov
daa
dec
rcr
stc
jns
sub
sub
cmpsb
dec
xlat
imul
inc
cmp
cld
mov
mov
xor
int3
dec
cli
sbb
testb
xchg
xor
es
movsl
mov
imul
fcmovnbe
xlat
jg
lea
arpl
jo
imul
fsubrl
aaa
xor
xchg
or
fidivs
and
pop
scas
imul
sbb
add
call
mov
testl
cvtpi2ps
out
hlt
dec
jge
push
pop
or
jno
mov
std
xchg
(bad)
pop
out
fcmovne
daa
mov
dec
bswap
ficompl
jge
lods
mov
int3
popa
movsl
lcall
lock
push
aaa
jge
in
mov
js
dec
sub
je
fsubs
sbb
pop
enter
mov
mov
lcall
jbe
xlat
dec
std
(bad)
loopne
mov
scas
cmp
test
and
lods
in
roll
cltd
in
push
inc
ds
mov
xlat
mov
cmp
into
cmp
shr
sub
mov
fldl
sti
out
