and
push
adc
testb
and
jno
mov
ror
lret
inc
xchg
insb
sub
adc
mov
loopne
and
data16
test
arpl
mov
lods
cmpsb
mov
lret
pushf
and
adc
cmp
and
mov
stos
cmp
push
pop
push
and
cmpsl
and
lahf
mov
lea
add
cmp
movl
add
and
and
adc
push
mov
inc
int1
adc
inc
mov
js
xchg
fcoml
fs
(bad)
daa
jmp
xor
pusha
jno
mov
leave
stos
jmp
push
sbb
out
mulb
cmp
jnp
int3
inc
jo
mov
xchg
sbb
sti
call
jnp
add
pop
mov
sbb
gs
sub
out
daa
lea
mov
pop
sbb
fimuls
xor
push
xor
jg
call
insb
mov
notl
xor
or
movsl
call
mov
stc
mov
sbb
cmpsl
lods
mov
pop
xor
sub
push
negl
add
jnp
loopne
loopne
mov
jno
mov
cmp
scas
lahf
cmpb
scas
push
push
insb
lcall
xor
or
repz
pop
add
fcomi
mov
pop
ja
and
cmc
push
and
xchg
aas
outsl
jp
mov
sbbl
out
sbb
add
nop
sub
xor
repnz
notb
(bad)
lea
mov
sbb
and
inc
push
sbb
jne
ljmp
outsb
add
mov
sub
int3
and
push
fstpt
xchg
add
push
dec
adc
push
push
sbb
outsl
loopne
add
bswap
and
shrw
ss
push
cmp
pop
test
mov
nop
sbb
add
sub
movsb
or
jae
and
jno
and
scas
outsb
test
cltd
cmp
sbb
notl
data16
std
outsl
inc
sub
push
push
in
loop
sbb
sahf
xor
insl
mov
movsl
scas
in
pop
aas
pop
inc
aam
adc
add
cwtl
lret
in
mov
lods
call
std
shl
fmull
push
rorb
fisttps
movsb
imul
add
mov
ss
add
(bad)
imul
cmpsl
stos
push
mov
aad
mov
jb
aam
or
frstor
adc
loopne
xor
mov
(bad)
pushf
jp
mov
ja
push
push
loope
ds
inc
movsb
cwtl
jae
ss
negb
lods
xchg
ss
fnstcw
dec
or
and
lods
pop
sbb
adc
pushf
testl
ja
mov
or
mov
shlb
int3
push
rorb
pop
jae
(bad)
call
add
pop
adc
mov
cmp
movsb
inc
out
or
adc
push
sub
mov
xchg
jp
jo
lock
sbb
xchg
add
xor
(bad)
and
rolb
xor
add
ljmp
mov
add
movsb
incb
es
andl
lcall
stos
cmp
dec
push
sbb
mov
lock
int3
or
push
addr16
sbb
pop
or
mov
ja
in
test
sbb
and
in
mov
pop
and
xchg
(bad)
xchg
dec
and
jg
into
push
xchg
xchg
push
pop
dec
and
popf
adc
add
stos
sub
adc
cmp
xor
xchg
jecxz
dec
ror
mov
aam
sbb
dec
cli
jle
dec
and
sub
or
mov
jecxz
lock
notl
(bad)
lock
out
ret
add
xchg
loopne
sti
adc
jl
sti
shlb
je
and
sub
jns
es
and
test
sub
or
add
lds
pop
or
fwait
pop
sbb
xor
out
add
xor
push
in
and
jecxz
push
imul
fsubrl
stc
cld
lock
mov
adc
push
aas
and
test
fnstenv
rcrl
xor
pop
(bad)
in
sbb
adc
cmpb
outsl
sbb
sbb
push
adc
inc
mov
(bad)
scas
in
xchg
mov
xor
push
outsb
jmp
bound
add
mov
cmp
inc
pop
fs
jnp
xchg
cmpsb
sub
scas
cmp
sub
test
mov
mov
ss
and
dec
mov
aad
xchg
inc
xor
popa
xchg
clc
movb
addb
test
mov
or
jo
js
push
iret
js,pn
lods
cli
leave
mov
in
pop
cwtl
(bad)
jmp
enter
inc
int1
dec
sub
lret
test
lret
test
adc
jns
out
pushf
sbb
(bad)
and
jns
sub
mov
pop
ret
in
add
fs
or
and
int1
(bad)
jbe
arpl
sbb
push
jecxz
int1
pop
add
andl
and
mov
(bad)
mov
aaa
(bad)
sbb
ret
pop
jae
sub
sub
sbb
decb
pop
outsl
pop
es
test
xchg
push
ret
movsb
dec
stc
dec
int1
mov
rorl
sbbb
sarb
movsb
push
pop
xlat
lahf
mov
or
mov
sbb
(bad)
pop
(bad)
int3
jg
dec
sbb
ljmp
popa
test
adc
mov
orl
jl
call
ja
jp
ja
sub
pop
adc
inc
(bad)
ja
dec
and
outsl
stc
lahf
(bad)
imul
cmc
rcrb
or
arpl
push
cli
(bad)
nop
orl
cmpsl
push
mov
and
adc
sub
pop
add
jne
xor
xchg
jmp
sbb
(bad)
imul
sub
mov
aas
inc
das
add
in
repnz
or
and
adc
test
sub
add
loopne
repz
mov
fs
ljmp
(bad)
ljmp
dec
adcb
inc
test
xchg
pop
cwtl
dec
fwait
cmpps
jl
sub
push
cmp
adc
cmc
adc
dec
mov
xchg
pusha
mov
rcll
xchg
testl
or
js
cwtl
jae
inc
stc
addr16
int1
xchg
(bad)
lea
cltd
adcl
or
pop
adc
inc
or
push
xchg
dec
es
sti
sbb
cmpsb
inc
fs
adc
stos
jle
xchg
mov
dec
mov
lret
pop
jle
push
adc
inc
xor
push
sbb
xchg
rcrl
push
pop
pop
rcll
divb
and
outsl
ret
inc
adcl
push
mov
addr16
addb
test
add
shrl
out
cltd
jne
es
xlat
and
jp
or
aaa
mov
or
push
sbb
mov
inc
int
jp
xchg
sbb
xor
int3
cmp
and
scas
cmp
xchg
push
ret
cmp
sbb
es
outsb
or
jb
mov
ljmp
jecxz
or
leave
sbb
lahf
(bad)
out
xchg
jg
int
(bad)
imul
daa
(bad)
in
enter
jb
rcrl
mov
mov
int
adc
xchg
negl
mov
xchg
cmpsb
test
mov
xor
adc
xlat
xlat
into
popa
ljmp
sti
jle
mov
cmp
inc
pusha
pop
fsubrs
cwtl
mov
lods
inc
js
sbb
jg
insb
outsb
les
insb
imul
cltd
cmp
shlb
jmp
inc
inc
add
mov
scas
push
push
imul
xorb
stos
sub
mov
inc
sub
loopne
aam
pop
or
and
xor
xlat
out
sbb
mov
sbb
dec
mov
mov
pop
xchg
xor
pop
jp
outsl
cmpsl
das
xlat
inc
mov
mov
lods
dec
popa
jmp
lods
adc
or
outsl
and
mov
and
mov
(bad)
pop
inc
add
repz
push
cltd
xchg
bound
or
test
xor
inc
pop
and
sbb
inc
pop
xchg
call
cmpsb
sub
bswap
jecxz
in
and
jnp
fs
pop
jmp
int1
mov
lds
aas
sbb
lds
cli
(bad)
mov
es
in
xchg
test
sub
mov
(bad)
push
add
push
movsb
push
lods
adc
add
inc
mov
jp
jno
adcl
sbb
jno
out
push
mov
movb
mov
into
sbb
in
push
test
adc
inc
xor
mov
mov
