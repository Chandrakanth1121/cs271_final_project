cs
add
push
cmpsl
loopne
jp
xor
subb
add
out
stos
or
hlt
pop
test
sub
lock
mov
xchg
mov
repz
lds
cmc
jns
xchg
lea
jl
add
and
add
inc
mov
and
mov
sahf
bound
sub
xchg
sub
test
fsubrs
pusha
lahf
cmp
pop
and
inc
hlt
sub
dec
adc
lahf
test
dec
mov
lcall
jle
cmp
mov
inc
cmp
or
push
call
ret
dec
xchg
jg
ds
sub
mov
nop
xor
xchg
fildl
pop
push
pop
jp
pusha
leave
cmc
pop
jno
add
out
cld
sbb
jbe
xchg
fsubl
sahf
mov
mov
jp
clc
js
sbb
inc
pusha
cld
ret
pop
xor
(bad)
movsl
and
xor
jp
test
je
push
movsl
push
adc
ja,pn
mov
std
hlt
xchg
andb
(bad)
mov
shll
add
ret
shlb
push
lea
fsubs
add
inc
aad
add
jne
jne
pop
div
cmp
cli
xchg
pop
adc
push
mov
mov
jmp
push
movsb
xchg
mov
mov
push
pop
fadd
cmc
(bad)
xchg
out
sbb
(bad)
test
pop
pop
inc
push
and
aad
movl
sbb
out
jg
or
daa
divl
or
jl
rol
cmp
cmp
pop
sahf
fsubrs
inc
jmp
mov
mov
inc
jp
nop
js
iret
xor
scas
mov
lcall
jmp
insl
sbb
and
shlb
push
inc
jbe
repz
(bad)
jo
xchg
cmc
mov
lea
clc
aam
roll
or
push
and
insb
dec
(bad)
jbe
imul
mov
mov
int
push
mov
cmpb
pushf
in
aad
sub
in
js
cmpsb
lds
incl
outsl
nop
fcomps
xchg
int
fwait
inc
roll
incl
les
in
and
xchg
sub
jne
xor
jns
push
fisubl
add
repnz
mov
xor
js
mov
pop
mov
subb
push
popa
dec
loope
xlat
pop
lahf
cmp
cmp
sti
sbb
lcall
inc
sbb
push
inc
inc
xchg
addr16
jl
jecxz
mov
and
outsb
lea
jmp
jp
and
(bad)
movsl
or
outsb
mov
(bad)
mov
outsl
pop
jmp
xchg
mov
and
pop
je
inc
mov
daa
loop
es
pop
jbe
(bad)
mov
push
out
mov
roll
mov
paddq
mov
fnstcw
test
out
mulb
xor
pop
call
sub
jbe
add
and
imul
mov
mov
jmp
addb
inc
or
or
push
jecxz
in
lods
or
leave
sub
pop
scas
sbb
sahf
insl
testl
movsb
loop
and
scas
fnstsw
aas
sbb
mov
sub
add
or
das
mov
jp
aam
cmp
mov
jg
scas
pop
fisttps
das
dec
es
pop
push
bound
pushf
push
xchg
xchg
push
pop
dec
cld
jg
jl
inc
es
sbb
push
pushf
xchg
jns
and
clc
int1
xchg
pop
xor
daa
mov
insl
fidivs
inc
xchg
sub
fsubrl
xchg
mov
addl
mov
into
ljmp
decl
insl
adc
cmp
or
test
loopne
pop
dec
mov
call
and
or
ja
push
xor
cmp
pop
inc
clc
xchg
es
dec
push
jecxz
fwait
pop
arpl
ret
add
mov
xor
jp
jo
sar
int
mov
push
dec
sarb
jecxz
pop
xchg
stos
imul
mov
out
mov
mov
dec
(bad)
cmp
pop
sbb
sbb
ret
jne
sbb
lret
mov
jae
xor
pop
imull
xchg
pushf
sarb
aam
xor
int1
xchg
and
mov
in
jae
stos
mov
clc
or
nop
mov
jle
push
fwait
sub
pop
xor
add
stos
clc
out
das
and
jns
add
xchg
pop
pop
das
mov
fdivrs
mov
bound
addr16
pop
rclb
xor
xchg
push
test
std
inc
mov
and
and
jmp
or
cmpsb
lret
popa
push
mov
sbbl
insl
push
shl
ret
xor
pop
test
bound
jle
add
mov
(bad)
sbb
cli
jbe
jbe,pt
jo
dec
pop
mov
jnp
stos
out
add
lcall
push
fbstp
arpl
pop
and
test
lea
clc
jo
cmpsb
pop
cltd
xor
adc
gs
push
jbe
push
lds
aaa
jmp
jp
sahf
add
and
int
dec
aam
gs
mov
mov
xchg
pop
enter
jle
adcl
sub
jp
xor
inc
cmc
adc
cmp
cs
mov
out
(bad)
cmp
lea
rorl
push
stc
mov
pop
imul
fstps
dec
out
xchg
cmpl
aaa
jns
and
divb
and
rcll
mov
gs
rcrl
ja
pop
jbe,pn
gs
aaa
mov
xor
push
loope
insl
ljmp
lock
xlat
mov
std
in
push
ret
jbe
orl
add
ret
int3
sbb
loop
dec
fdivrs
decb
mov
adc
pop
enter
push
and
mov
int
out
xchg
sbbl
int
cmp
daa
pop
pop
sbb
push
test
jl
negb
mov
xchg
cli
xor
int1
jl
jge
mov
or
mov
ss
cmpsl
sti
(bad)
and
mov
cld
mov
popa
and
pop
jmp
addr16
in
addb
mov
add
cmp
xchg
add
andl
or
lock
mov
lcall
mov
addb
jp
int
xchg
mov
pop
sbb
out
loopne
or
pop
sbb
sbb
jecxz
es
dec
inc
ds
xchg
loopne
ret
iret
mov
into
jg
sbb
or
xchg
xchg
popf
jno
loopne
and
int
mov
push
cmc
pushf
ret
fistps
repz
dec
mov
ja
mov
in
stos
out
leave
or
gs
in
mov
dec
or
mov
xchg
cmc
lock
test
or
push
hlt
(bad)
loop
inc
dec
mov
inc
test
push
dec
cwtl
xchg
add
das
cmp
add
jg
loop
xchg
dec
pop
mov
sbb
xlat
cltd
sub
idivb
jb
adc
rorl
ja
jp
lahf
stos
in
xchg
int1
int1
fcmovb
mov
jmp
leave
sub
insb
inc
pop
(bad)
sub
insb
jge
aad
loope
mov
xor
rclb
jne
xor
or
jp
inc
orl
and
add
pop
ljmp
inc
xor
idiv
sbb
sbb
out
pop
sub
dec
jle
mov
insl
adc
sub
enter
pop
jae
xchg
mov
push
mov
or
xchg
nop
or
mov
lds
add
dec
cmp
cltd
cwtl
in
cmp
addl
sbb
lea
pop
in
push
add
popa
int1
pop
jne
test
fxch
pop
lcall
push
out
push
xlat
mov
movsb
test
in
out
push
push
loop
mov
inc
rcll
lock
push
pushf
mov
xchg
test
pop
insl
sarl
out
cmp
and
pop
(bad)
sbb
negl
mov
mov
(bad)
mov
daa
mov
leave
jp
jge
test
out
ficompl
sti
cmp
paddsw
push
out
mov
push
cmp
add
fcoms
test
jge
push
aas
mov
std
int1
adc
std
push
lret
inc
test
inc
lea
repz
fimull
and
pop
int3
mov
mov
shlb
xor
imul
xor
in
xlat
mov
clc
(bad)
and
xchg
fisttpl
pushf
or
mov
ret
andl
cmp
int1
adc
(bad)
imul
push
fisttpll
in
test
imul
