dec
dec
jge
add
ds
or
imul
pop
mov
jl
repnz
push
sahf
jo
dec
cmp
sbb
stc
insl
xchg
sbb
mov
mov
pop
shll
dec
andb
mov
addr16
std
dec
jle
insl
push
dec
xchg
dec
rcrb
jne
mov
std
mov
rcr
repnz
mov
or
sbb
sub
(bad)
outsb
ret
adc
add
repnz
sti
ja
out
(bad)
sub
aas
mov
jnp
mov
int3
push
and
fcoms
or
push
xchg
jmp
mov
fisttps
dec
mov
mov
cli
or
out
lret
mov
in
lea
sbb
in
mov
out
xchg
rorb
(bad)
xchg
lcall
pushf
movsl
and
mov
cmp
add
pop
cmpsb
sti
rolb
out
xor
rsm
dec
push
adc
cmp
enter
xchg
cld
adc
cmp
daa
bound
jne
sar
leave
repz
or
inc
mov
add
and
adc
or
sbb
sbb
jmp
sahf
sbb
or
(bad)
out
(bad)
or
aam
adc
add
cld
adc
push
push
dec
jecxz
subl
fisttps
cld
or
jg
fwait
inc
jbe
and
push
lret
subb
push
add
xchg
clc
mov
pop
dec
out
ja
xorl
rol
daa
cld
add
cli
xchg
rorb
scas
cld
inc
imul
sub
jecxz
sub
push
mov
repnz
ds
sbb
or
in
std
and
mov
adc
push
xor
scas
sarl
xchg
adc
cmp
scas
in
scas
mull
movsb
loop
lahf
jae
test
pop
pop
ljmp
stos
or
lret
int1
mov
stc
mov
pop
ljmp
push
mov
or
jl
mov
jmp
lea
ds
dec
pop
in
cmp
loop
fistps
dec
push
imul
or
xchg
bound
pop
cmc
aam
je
repz
test
hlt
imul
jecxz,pt
push
sbb
push
test
inc
jae
rcr
add
push
inc
fstpl
push
push
sarl
dec
test
mov
xor
ljmp
cmp
flds
sub
inc
test
push
push
mov
mov
fistl
or
lds
out
mov
or
inc
shll
gs
and
insl
imul
inc
push
out
mov
pop
mov
repnz
popa
lea
loope
inc
cmp
(bad)
mov
mov
mov
pop
mov
push
or
xor
cmc
mov
jle
imul
in
and
push
into
add
mov
dec
inc
sbb
jl
jnp
(bad)
cmpsl
mov
mov
add
test
sbb
push
xchg
fisubrl
inc
inc
test
scas
add
repnz
or
aaa
inc
cld
mov
adc
or
shrb
pop
jmp
call
cmp
hlt
pop
imul
(bad)
fsubl
or
lods
leave
fwait
or
sbb
call
adc
(bad)
adc
cmc
dec
(bad)
cmp
sbb
mov
ljmp
push
xchg
cmp
cmp
mov
ljmp
in
test
jns
fcmovb
stos
cmp
movsb
andb
cmc
movsb
lcall
xor
xchg
fmull
fwait
jge
stos
mov
in
inc
mov
inc
ret
adc
test
out
dec
xor
cmp
loope
mov
inc
test
and
mov
fcomps
push
in
cli
sub
shrl
xchg
lea
daa
inc
sub
push
shlb
stc
dec
and
in
rorl
in
inc
out
sbb
xchg
jl
cmp
inc
add
cld
cli
cmp
push
adc
push
dec
jbe
push
push
idiv
pop
sbb
popf
xor
rcr
jl
sbb
push
subb
jmp
or
or
lods
jne
cs
mov
adc
inc
outsl
insl
aaa
cwtl
mov
dec
ret
pop
dec
mov
cmp
mov
mov
pop
ffree
lret
push
jge
lret
xchg
out
pop
pop
or
push
stos
jp
add
add
sub
test
hlt
lahf
sbb
stc
add
stc
and
push
adc
loope
or
stos
ret
movsl
imul
add
inc
add
mov
xchg
and
jne
xor
jmp
(bad)
data16
fisttpll
sbb
pop
push
inc
scas
fstl
scas
xchg
sbb
les
mov
rorl
xchg
xor
sbb
push
dec
test
lock
aad
mov
pop
push
and
pop
adcl
lret
or
cmpsl
xchg
push
ret
fimull
jo
pop
or
sbb
imul
push
loopne
inc
adc
jb
cs
adc
inc
movsl
sub
sbb
aam
imul
ljmp
leave
aam
notb
push
jecxz
fnstsw
mov
cmp
xor
int3
inc
pop
mov
cmc
push
ss
inc
sbb
mov
rclb
add
mov
xor
adc
mov
fwait
ljmp
sbb
clc
fidivs
imul
sbb
push
mov
lock
push
sub
out
pop
sbb
and
dec
add
jmp
xor
mov
mov
es
adcl
dec
mov
cmp
mov
out
out
push
dec
jecxz
push
jnp
add
push
cltd
xchg
pop
xor
mov
adcl
lea
int
mov
pusha
scas
jmp
mov
push
push
cmpsl
or
pop
add
out
cmp
scas
dec
jmp
je
jp
cmp
adc
pop
sub
sbb
(bad)
and
paddw
xchg
in
mov
fisttpll
mov
sahf
jns
subl
jecxz
jp
pop
std
roll
pop
fidivrl
mov
(bad)
adc
mov
mov
rorl
loope
xchg
mov
fsubrs
mov
mov
(bad)
mov
or
xchg
(bad)
std
mov
xchg
(bad)
mov
mov
pop
jle
mov
aas
and
lret
sub
cwtl
cld
or
(bad)
jno
(bad)
fwait
data16
std
xlat
enter
repnz
int
fucomip
lock
push
in
xor
pop
cmp
xchg
dec
sbb
test
adc
insl
mov
call
iret
cmpb
pop
rcr
sti
ret
jae
outsb
dec
inc
mov
(bad)
xor
adc
aas
push
jl
dec
fbld
sbbl
sub
cld
pop
cmp
test
pop
mov
(bad)
cmp
push
jbe
lea
lds
cli
lahf
sub
mov
in
lahf
pop
mov
cmpsb
rcrl
push
imul
pop
adc
cmpb
add
xor
lret
and
cltd
out
aaa
iret
jl
cmc
and
push
push
pop
mov
(bad)
int3
mov
push
push
mov
add
testb
cli
imul
sbb
jns
loopne
push
dec
cmpsl
xlat
sbb
cli
xor
scas
(bad)
and
ljmp
and
pop
and
addr16
or
mov
lds
dec
mov
jmp
or
inc
mov
leave
mov
out
adc
into
sub
add
cmp
insl
ss
inc
cmp
test
movl
and
adc
(bad)
jo
jge
mov
lea
int1
sahf
fcomps
ljmp
sti
pop
aas
mov
xchg
or
mov
out
jp
test
inc
push
iret
sub
mov
enter
cld
pop
sti
stos
xor
adc
into
in
xchg
push
inc
pop
bound
stos
jbe
or
jbe
xor
and
bound
sub
or
stos
dec
addr16
sub
inc
fcompl
scas
push
arpl
sahf
jbe
mov
hlt
cmpsl
mov
out
cmc
(bad)
outsl
repnz
xchg
jle
mov
pusha
hlt
jo
mov
(bad)
(bad)
lds
shl
popa
popf
adc
sahf
push
pusha
xor
or
cmp
scas
lods
push
jecxz
mov
jnp
outsb
jb
add
aam
test
add
or
outsb
add
out
push
push
jge
sub
xor
adc
xor
jb
cmpl
pusha
jl
ret
cli
xchg
imul
xchg
cli
inc
mov
jns
ret
loop
sti
mov
pop
incb
mov
adc
mov
