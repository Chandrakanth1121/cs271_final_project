notb
add
cmpsl
adc
and
mov
mov
or
xchg
add
orb
mulb
jl
pop
loopne
popa
lds
shrb
shlb
xchg
dec
adc
push
xchg
inc
data16
adc
cwtl
adc
pop
test
arpl
xchg
cmc
sbb
out
ljmp
xchg
arpl
pop
rcrl
xor
xchg
sub
mov
lock
xchg
mov
sarb
jle
lds
sbb
and
std
shlb
sub
sbb
aam
xchg
push
sub
ficoml
dec
xor
int1
aaa
xchg
xchg
cld
insb
loope
mov
adc
orl
andl
sbb
push
xor
add
imul
or
cmp
lods
xor
add
mov
mov
pop
inc
call
popf
fdivrs
mov
lret
loopne
fcomps
and
test
enter
int1
scas
sbb
xchg
testb
lods
hlt
sub
mov
data16
mov
lahf
push
cltd
in
mov
in
xor
xchg
out
sub
outsb
xor
xchg
xor
jae
lret
sbb
adc
(bad)
adc
xchg
sub
(bad)
lret
int3
popf
inc
pop
movsb
sbb
loopne
test
and
lahf
lret
adc
xor
add
cltd
dec
daa
inc
or
lods
in
xchg
setae
ss
jnp
mov
sahf
ret
and
cmp
repz
mov
rcl
test
(bad)
xchg
inc
outsb
fstpl
pop
les
fiaddl
lds
add
xor
in
pop
(bad)
add
test
test
leave
pop
lret
mov
add
outsl
pop
shrl
cwtl
mov
(bad)
jle
pop
or
call
popa
jp
jo
aad
and
push
enter
inc
loopne
scas
fdivs
fdiv
nop
arpl
mov
(bad)
test
xor
mov
mov
cli
jmp
fildl
add
gs
add
xchg
dec
and
call
pushf
repnz
jmp
dec
mov
popf
adc
aad
(bad)
adc
mov
xchg
mov
cmpsb
inc
push
add
ss
repnz
adc
call
or
xor
and
repnz
leave
jnp
(bad)
repnz
mov
sbb
idivl
inc
mov
xor
out
aas
cmc
clc
push
jnp
in
loope
and
adc
out
mov
add
mov
sahf
mov
or
repnz
ds
lahf
arpl
xchg
cwtl
lods
stc
scas
out
lods
inc
xchg
repnz
(bad)
push
dec
sbb
jge
(bad)
adc
out
test
outsl
cmpsl
mov
push
xchg
add
lock
lcall
movsb
inc
lfs
(bad)
push
bound
movsl
int1
andl
push
pop
sahf
in
jl
and
pop
mov
rcll
jo
daa
shll
xchg
jns
mov
(bad)
loopne
mov
mov
pop
adc
fildll
movsb
add
jecxz
sbb
test
jl
fdivr
mov
leave
xchg
ds
pop
sbb
push
mov
add
xchg
int1
mov
loopne
outsl
or
mul
stos
arpl
xchg
pop
ljmp
cmp
adc
cmp
daa
sbb
dec
rorl
mov
and
add
jecxz
lods
sbb
ror
jg
push
repnz
shl
(bad)
mov
jl
sub
fnstenv
xor
cmpsb
aam
int
jnp
sub
and
out
pop
mov
push
les
int1
xchg
add
les
sbb
repz
sub
incb
addr16
popf
mov
lods
push
js
xchg
std
movsl
movsb
ret
mov
popf
mov
adc
xlat
pushf
mov
sbb
cmp
sub
outsl
ljmp
lods
add
add
push
xor
or
std
loope
push
int
(bad)
xor
cwtl
jge
xchg
xchg
test
lahf
cmpsl
repz
xchg
mov
cmovns
mov
inc
rol
mov
lods
sub
jl
sub
mov
test
ss
popf
les
int3
and
sbb
in
xor
test
jnp
jg
mov
and
insb
jg
mov
inc
pusha
xchg
mov
pushw
sub
pusha
fcoml
inc
loopne
push
xor
or
into
sub
jmp
and
push
lret
jle
lods
out
scas
lret
adc
std
hlt
push
sub
fistpll
xchg
(bad)
arpl
jp
(bad)
mov
cmpsl
xchg
inc
sub
lods
adc
fs
add
ret
sbb
cwtl
pop
cmp
pop
scas
cltd
test
xor
mov
loopne
ds
sbb
or
fwait
mov
into
fwait
aam
dec
and
int3
adcl
fwait
and
inc
sbb
sbb
fwait
(bad)
mov
sbb
mov
and
ret
jge
ret
xchg
popa
lcall
movsl
lcall
clc
or
loop
jne
addb
push
lahf
mov
lds
les
into
push
mov
inc
mov
(bad)
mov
lods
jbe
mov
pop
xorb
fisttps
cltd
mov
insb
push
sbb
lcall
out
mov
or
stos
cld
mov
imul
mov
dec
xchg
fsubrs
push
cmp
into
pop
xor
fcoms
xchg
sub
rcrb
mov
mov
stos
test
sbb
popf
sbb
mov
jge
jbe
mov
pop
push
mov
jmp
js
daa
aam
jge
fistpll
ret
test
lret
mov
shrb
loop
stc
ja
repz
mov
rcrl
leave
xor
in
aas
xchg
cmpb
push
(bad)
sub
pop
xchg
call
xor
popf
pop
xchg
cmc
lock
or
xchg
leave
adc
ja
jns
xor
mov
test
xor
push
sub
insb
xchg
jne
das
pop
ret
outsb
inc
int3
int
push
push
sub
mov
xlat
fwait
les
xchg
out
loopne
arpl
test
adc
mov
mov
cmc
les
mov
sbb
sbb
repnz
push
mov
bound
scas
xchg
inc
inc
imul
pop
mov
fistpl
cli
lods
or
jmp
add
fcmovnu
cmpsb
sub
sub
and
out
rorl
jle
jae
jno
hlt
lret
popa
xchg
lret
sbb
push
cmpb
lahf
pop
mov
push
cmpsb
mov
fdivs
add
repnz
enter
jg
repnz
push
or
sahf
push
mov
ret
pop
(bad)
in
aam
mov
in
or
ret
push
lock
ds
mov
shll
or
pop
pusha
outsb
popa
repz
sahf
out
into
out
lds
push
scas
out
sbb
cmp
xor
das
shll
mov
push
xchg
dec
imul
or
iret
arpl
push
or
xchg
int
add
cmp
push
mov
mov
xor
(bad)
pop
cwtl
inc
data16
lret
push
mov
cmpsl
aam
sbbl
sbb
jno
rolb
mov
test
shlb
or
xor
xor
or
dec
sbb
add
nop
sbb
ret
xor
into
xor
or
cmpl
ficoml
add
imul
vmaxps
aaa
xchg
mov
call
in
push
mov
pop
mov
sbb
(bad)
lahf
mov
fildll
jle
hlt
jne
xchg
mov
push
ds
dec
shlb
loopne
rcl
mov
loop
test
and
and
cltd
inc
aas
lods
mov
mov
mulb
cs
lahf
mov
and
test
movsl
push
lods
out
xchg
or
mov
sbb
enter
xorb
sub
pop
mov
scas
mov
xchg
cmpsl
hlt
mov
call
out
stos
push
mov
rclb
decl
and
mov
gs
push
sbbb
gs
cmpsb
or
call
mov
rcl
mov
aad
lcall
jb
sub
cld
sti
pop
push
push
xor
push
xchg
mov
dec
mov
les
mov
sarb
mov
add
adc
fwait
mov
pop
mov
and
enter
sbb
adc
test
inc
rcl
mov
push
ss
gs
out
mov
mov
rcr
adc
adc
test
adc
insb
pop
loop
out
lock
les
shlb
mov
push
mov
jl
scas
and
repz
push
(bad)
jnp
push
cld
js
push
(bad)
push
