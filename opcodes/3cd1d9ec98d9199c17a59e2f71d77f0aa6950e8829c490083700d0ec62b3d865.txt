cld
fsubl
scas
addr16
adc
pop
inc
nop
test
xchg
fsubrs
lahf
fsub
mov
pushf
test
sbb
and
mov
push
lret
lea
cli
mov
pusha
add
outsl
push
adc
xor
(bad)
xor
std
outsb
into
dec
mov
sbb
xor
(bad)
andb
movsl
ljmp
jecxz
pop
imul
data16
aam
xor
push
and
fs
xor
push
pop
and
aad
(bad)
shll
out
in
test
cld
loope
sbb
xor
add
out
inc
mov
jo
imul
out
mov
xorb
cmp
mov
lcall
clc
enter
pop
sub
xor
sub
call
sub
mov
mov
shll
and
test
insb
adcb
imul
fs
or
out
es
scas
pop
ret
xchg
test
xor
mov
leave
aam
or
pop
ficompl
popa
cs
mov
arpl
mov
(bad)
mov
scas
or
shrl
outsb
call
filds
(bad)
int1
pop
aaa
jge
add
in
nop
and
lods
cmp
in
add
adc
add
lds
xor
sbb
mov
fcoml
fsts
stos
bound
sub
popf
dec
popa
daa
call
push
mull
(bad)
sub
loop
xchg
inc
push
test
inc
jp
sbb
frstor
ss
dec
fwait
inc
test
jno
dec
out
(bad)
xor
dec
sub
stc
daa
test
and
(bad)
pop
mov
and
lock
mov
movb
ficoms
nop
adc
dec
push
sbb
and
jmp
repnz
iret
movsb
ljmp
cltd
and
call
push
int1
adc
pop
fs
sahf
jmp
scas
ljmp
in
rep
lcall
cmp
add
sahf
call
dec
jmp
cmp
mov
adc
push
scas
mov
sub
inc
(bad)
test
add
mov
shrl
cld
xor
ja
mov
cwtl
inc
inc
out
add
push
mov
adc
int1
add
or
iret
and
(bad)
scas
jl
xor
add
lods
and
out
gs
loop
rcrb
lret
push
aas
(bad)
cmp
addl
jle
add
pop
inc
insl
clc
in
out
fcoms
fs
lahf
adc
test
or
arpl
inc
jle
adc
ds
xorl
inc
jge
dec
pop
imul
xor
movsb
std
mov
push
clc
repz
jae
lods
ljmp
loope
sbb
clc
push
sub
push
hlt
add
cmp
int3
lahf
insb
test
push
cld
sbb
push
movsl
mov
adc
inc
adc
and
sbb
and
out
push
cmp
ljmp
enter
nop
cmpsb
mov
(bad)
sbb
enter
inc
cmp
or
call
dec
lahf
shl
pop
in
popa
add
inc
add
mov
dec
jmp
xor
or
iret
pop
into
lds
(bad)
aam
xor
add
and
arpl
data16
out
in
repnz
in
out
or
fbstp
push
(bad)
and
mov
xor
jmp
cmc
test
lret
movsb
out
cmp
push
sbb
aam
push
inc
jmp
movsb
mulb
jmp
testb
and
mov
jmp
adcl
mov
dec
cltd
cmp
(bad)
cmp
das
lret
push
pop
das
jecxz
mov
leave
mov
out
jno
data16
outsb
cmp
jp
adc
int3
les
in
ljmp
rorb
inc
repz
add
or
ljmp
or
xor
enter
adc
sbb
xor
jl
pop
push
add
mov
add
div
jge
or
clc
loope
mov
adc
cmp
xor
es
inc
jne
and
test
mov
and
dec
push
int1
push
mov
add
sbb
ljmp
inc
hlt
pop
xchg
pop
adc
jmp
push
inc
out
arpl
jge
movsl
adc
hlt
call
lods
in
and
ret
lds
in
or
lods
pushf
sub
xchg
cmp
rcrl
sub
inc
xchg
sub
scas
and
xor
cmpsb
lret
jae
mov
sbb
mov
in
in
mov
dec
or
fisttpll
lret
gs
mov
scas
jns
cmpsl
jmp
(bad)
out
add
mov
ljmp
testl
in
(bad)
cld
ffree
jmp
mov
add
das
pop
and
mov
shl
add
jne
pop
sbb
stos
stos
stos
shr
or
stc
jo
mov
cld
(bad)
scas
add
dec
or
jmp
inc
in
and
jne
xor
add
push
xor
popa
int1
adc
mov
inc
fs
adc
repnz
je
(bad)
mov
xor
and
insb
bound
lcall
cmp
imul
iret
inc
test
fdivr
fldenv
pusha
loope
mov
in
sbb
xor
mov
outsl
aas
es
in
and
add
nop
ljmp
and
sub
insb
or
push
mul
subb
and
push
mov
ret
cmp
pop
in
js
mov
sbb
pop
negl
mov
mov
push
scas
cld
jge
test
xor
push
shlb
mov
and
(bad)
clc
sub
setbe
pop
add
(bad)
jmp
jo
jae
mov
insl
fs
fadd
je
push
sub
ret
shll
scas
mov
add
cltd
add
inc
imul
pop
jecxz
in
lods
jbe
inc
frstor
add
inc
aaa
iret
adc
jae
jl
mov
jno
imul
stc
daa
xor
add
movsb
pusha
mov
fisttpll
xor
imul
xor
in
subl
mov
mov
enter
or
movsb
ud0
or
stos
lock
sbb
xor
push
sti
fildl
or
fisubrl
roll
sbb
gs
mov
out
cmp
and
or
ret
add
and
mov
sbb
clc
push
xor
lret
add
out
call
jp
sarb
inc
in
jne
movsb
dec
mov
gs
xchg
outsl
shll
inc
addr16
enter
test
stos
fistps
rorb
and
mov
mov
or
in
and
xor
sti
add
mov
dec
(bad)
xor
adc
push
pop
add
cmpsb
inc
mov
xchg
or
fbstp
mull
std
or
and
cmp
jns
jo
ret
negb
loope
xchg
cmp
sbb
mov
cltd
push
jge
ret
add
fisubrs
and
inc
push
add
pop
leave
adc
dec
out
mov
xorb
data16
xchg
mov
add
gs
push
add
mov
shl
add
mov
repnz
int3
int3
dec
cli
or
ret
xor
lea
out
fnstcw
adc
pop
addr16
cli
xchg
outsb
jmp
imul
adc
pop
adc
fdivs
int3
pop
cwtl
mov
insl
mov
dec
pop
cmpl
lahf
and
ljmp
adc
push
negb
adc
and
or
hlt
inc
stos
fs
lods
hlt
pop
repnz
mov
scas
pop
jnp
jb
insb
push
sbb
mov
mov
mov
rorl
dec
sahf
jne
in
out
push
sub
(bad)
mov
fcomps
loop
test
sub
jle
aam
sarb
sub
xchg
fbld
dec
mov
sub
xor
sub
lcall
xorl
dec
sarb
rcr
lahf
out
je
(bad)
xchg
and
add
add
pop
sbb
add
add
push
mov
in
adc
out
es
shlb
mov
inc
js
xor
imul
sub
rcrb
int3
lret
nopl
out
xchg
rorl
lods
out
(bad)
ficompl
notl
inc
lret
inc
cmp
and
fldenv
ret
hlt
fldlg2
ret
cmp
inc
arpl
mov
cmpsl
es
ss
repnz
xchg
mov
mov
jo
scas
push
push
ljmp
shl
adc
clc
pop
rorb
dec
add
sub
test
aaa
shld
push
push
sub
clc
rclb
out
adc
aam
push
push
pop
jo
and
cld
push
adc
out
test
add
or
xchg
cli
