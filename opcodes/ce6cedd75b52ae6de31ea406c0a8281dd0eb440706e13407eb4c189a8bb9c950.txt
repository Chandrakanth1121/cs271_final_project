xchg
mov
inc
pop
xor
inc
pop
cmp
mov
or
inc
dec
nop
clc
scas
(bad)
sub
dec
jns
sub
int
nop
cmp
mov
or
std
mov
and
push
pop
jne
je
leave
(bad)
cld
and
jle
out
mov
mov
cmp
pop
xchg
les
mov
pop
insl
sub
jecxz
or
sub
insl
sbb
push
adc
es
aam
stos
xor
mov
dec
insb
jno
adc
(bad)
adc
stc
stos
ret
sbb
xchg
pop
lods
in
push
mov
lds
mov
mov
dec
nop
jl
call
aas
(bad)
cmp
mov
xor
je
stos
mov
insl
daa
jb
pop
pop
add
lock
aam
jl
push
leave
fsub
ud1
pusha
ss
ficoms
shlb
das
call
fisubl
js
cmpsb
cwtl
jne
push
ja
aam
adc
xor
imul
out
jl
add
inc
push
sbb
dec
xchg
aad
mov
or
test
cmp
xchg
cmp
mov
push
mov
fs
out
push
xchg
lahf
nop
jle
pop
or
fisubrs
mov
jge
addl
or
mov
mov
lods
mov
stos
mov
ret
lahf
sub
cmp
mov
sub
inc
mov
jb
in
push
adc
push
sbb
jne
daa
dec
pop
mov
int3
pop
push
cmp
imulb
mov
xchg
jne
fldl
mov
fisubrl
and
lea
pop
stos
mov
leave
jl
cmpsb
push
sarb
xchg
out
mov
xor
testl
scas
push
pop
(bad)
push
sub
loopne
or
sbb
lock
jmp
pop
loope
xor
into
iret
adc
sti
into
adc
xchg
push
push
out
insl
gs
test
mov
xchg
dec
cs
jle
add
or
std
cmp
cltd
repnz
cmp
test
lock
adc
jg
call
hlt
cmpsb
push
mov
jae
test
xabort
jmp
xor
xor
push
jp
cmp
mov
mov
add
jne
xchg
in
outsb
sbb
lds
std
inc
clc
inc
outsl
xor
and
xchg
fisttpl
push
insb
test
push
das
xchg
int
or
loop
stos
mov
imul
sub
jno
sahf
xchg
in
stc
scas
jp
pop
jmp
test
loope
dec
in
inc
xor
sub
xchg
mov
mov
dec
and
pushf
sbb
adc
sbb
xor
adc
pop
out
aaa
jge
dec
movsb
mov
adc
pop
(bad)
cmp
push
lods
scas
mov
mov
negb
and
xchg
xchg
test
push
dec
ds
adc
push
sbb
dec
js
ret
and
adc
and
lock
sub
jle
mov
inc
cmp
scas
repz
inc
ljmp
cmpb
out
daa
nop
xor
mov
aam
in
es
fs
mov
mov
bnd
cmp
jp
insl
sub
dec
cmp
hlt
jbe
adc
pop
scas
mov
fildl
xchg
test
xor
outsl
int1
xchg
pop
inc
dec
push
mov
inc
cld
mov
push
lea
ud2
add
mov
(bad)
cmc
lahf
mov
pop
sar
loopne
pcmpgtd
movb
adc
jmp
lret
jl
inc
rol
mov
ja
sub
push
adc
cmpsb
scas
jb
xlat
cli
adc
dec
xorps
xchg
in
pop
(bad)
aaa
xorl
push
ror
jne
iret
push
lods
dec
dec
cmp
push
popa
add
jns
lods
jae
imul
xor
in
cmp
and
xchg
cmpsb
cmp
mov
int1
xlat
jmp
fwait
jbe
or
mov
inc
pop
cmp
push
xchg
pushf
mov
dec
sbb
mov
movsl
das
add
push
fcoms
adc
jno
cmp
leave
xor
xchg
dec
rcr
mov
stc
jno
dec
mov
loopne
mov
sbb
jle
in
out
push
jns
ret
rorl
ret
lcall
frstor
inc
dec
mov
jns
push
xchg
loope
inc
jno
mov
pop
sub
jne
ret
int
hlt
cmp
xor
cmp
(bad)
sub
sbb
fistps
pop
imul
dec
int3
stos
sbb
adc
xchg
fimull
clc
cs
adc
clc
xor
lock
adc
push
push
inc
dec
dec
jge
adc
xor
add
jmp
sub
call
cmpsb
inc
(bad)
mov
int
and
stos
mov
mov
fldcw
dec
outsb
xchg
sbb
cmp
add
inc
pop
pop
mov
inc
pop
xchg
sub
adc
push
leave
adc
insl
cmp
pop
or
jmp
xchg
lea
int
inc
jge
mov
push
cld
je
mov
push
hlt
shr
(bad)
addl
jb
mov
out
and
cmp
popa
test
or
mov
add
adc
pushf
test
cs
(bad)
cmp
mull
sbb
and
adc
inc
mov
lea
dec
in
dec
push
outsb
(bad)
cld
dec
add
stos
add
xlat
push
bound
jge
lods
jle
shrb
in
xchg
into
sbb
notb
and
push
popf
sub
div
mov
pop
dec
dec
insb
xchg
sub
mov
mov
mov
cmpb
mov
mov
or
xor
pop
movsb
movsl
out
cmpsl
aas
xchg
rclb
adc
sub
pop
pusha
jg
jmp
hlt
pushf
test
push
pop
push
add
int
movsl
sbbb
out
lods
lods
ljmp
mov
pop
leave
fisubl
mov
xchg
and
in
mov
leave
lds
out
jg
fildll
push
out
stos
jns
dec
inc
inc
sarl
push
adc
mov
pop
jno
or
sub
int1
dec
nop
ljmp
test
int1
jmp
fisubs
push
aam
jbe
jo
cmc
(bad)
dec
pop
gs
cmc
lcall
jnp
jge
add
sub
mov
add
lea
rorb
pop
repnz
inc
jp
call
test
adc
decl
dec
pop
xchg
scas
inc
fidivrl
jne
xor
sbb
push
xchg
pop
sbb
sbb
or
mov
xor
in
stos
out
or
or
pop
push
test
push
push
lock
inc
ds
adcb
inc
cmp
lahf
push
sub
adc
xchg
cld
mov
pop
sbb
xlat
sub
scas
enter
hlt
mov
push
jo
cmpsl
jl
out
fcoml
in
mov
int1
mov
fistl
int1
or
push
mov
aas
pop
jbe
mov
xchg
jns
push
sbb
adcl
mov
out
adc
pop
dec
enter
stos
or
jle
adc
test
sbb
popa
lods
jp
add
sub
popf
mov
dec
(bad)
lahf
xor
ja
mov
gs
xchg
adc
(bad)
aam
arpl
incl
int
push
mov
dec
dec
movsl
(bad)
lea
add
gs
sub
cmp
inc
push
bnd
cltd
lds
cmpsb
and
popa
pop
cmpsl
dec
pop
pop
dec
fs
jno
lret
stos
push
mov
out
jmp
mov
xchg
xchg
lcall
sub
scas
xlat
push
aam
sbb
fdivs
loope
lods
mov
addr16
lea
loope
lds
hlt
fdivrl
std
stos
push
mov
(bad)
jge
int
or
mov
inc
mov
dec
mulb
jo
add
push
je
mov
mull
push
outsl
in
imul
adcb
cmp
add
rorl
add
adc
ja
movsb
push
sbb
inc
ja
sub
dec
fs
(bad)
lods
rcrl
lds
insl
lock
jge
pusha
push
xor
xor
mov
and
or
pusha
adc
loopne
data16
push
pusha
shr
stos
sub
xor
(bad)
xchg
(bad)
push
lods
push
call
and
cmp
jge
