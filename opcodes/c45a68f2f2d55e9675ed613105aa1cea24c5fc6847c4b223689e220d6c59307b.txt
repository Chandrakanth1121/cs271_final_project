xor
add
add
add
add
add
add
add
movsb
add
add
add
lea
add
mov
add
jge
add
xor
xor
xor
aas
add
add
add
sarb
lcall
aas
xor
xor
xor
ret
aas
lcall
aas
lcall
aas
xor
xor
xor
ret
aas
lcall
aas
xor
xor
xor
sarl
xor
xor
xor
jecxz
lcall
aas
lcall
aas
xor
xor
xor
sarl
add
add
add
loopne
add
add
add
loopne
xor
xor
xor
sarl
xor
xor
xor
ret
aas
lcall
aas
add
add
add
add
or
add
adc
add
xor
fwait
int1
pop
push
adc
pop
shll
sub
enter
pop
sbb
fwait
ret
imul
xchg
cmc
cmp
push
ja
push
rcrb
ret
fwait
or
xor
dec
pop
pop
push
out
xor
lcall
sbb
mov
fstps
clc
sub
and
mov
fwait
push
sub
jns
add
and
test
mov
sub
pop
stos
push
lods
shll
push
inc
jl
bound
pop
hlt
test
add
xchg
test
lret
pop
enter
sub
xor
xchg
(bad)
cwtl
int3
lcall
(bad)
movsb
fcoms
xchg
cmovb
(bad)
into
or
cli
xor
mov
sub
rcr
add
jns
loope
popf
dec
test
fistps
loopne
and
sub
adc
sbb
hlt
sti
sahf
add
scas
cmp
xchg
movsl
nop
xchg
pop
fisubrl
insb
test
std
outsb
int
xor
outsb
je
cmp
sarl
mov
inc
movsl
xor
xor
lcall
ja,pt
movsl
xchg
pop
xchg
inc
inc
adc
and
mov
(bad)
fldenv
add
xor
mov
xor
aas
je
daa
jo
popa
dec
aad
stos
xor
sbb
pop
inc
dec
sbb
out
adc
inc
mov
popa
daa
aad
stos
jmp
cmp
add
bound
cmp
mov
incl
sub
add
add
rcrl
es
filds
popf
or
inc
pusha
fistl
and
adc
mov
aad
fistpl
and
outsb
xchg
xchg
lret
fstpl
test
loop
movsl
popa
sub
inc
push
addr16
ljmp
cmp
out
xchg
daa
lahf
clc
insl
jnp
inc
inc
in
mov
(bad)
xor
sbb
push
lock
into
add
mov
pop
movsl
inc
sahf
lret
rclb
testb
inc
xchg
aam
jl
jnp
mov
repnz
xor
jl
addl
adcl
rorb
repnz
jmp
aam
inc
mov
bound
std
mov
gs
xor
into
loopne
std
rcrl
and
sahf
jmp
and
pop
sbb
cmpsb
pop
push
andl
add
pop
scas
mov
inc
add
jle
pop
dec
pop
lret
push
lods
dec
fcoml
outsl
sbb
stos
jle
pop
inc
pop
(bad)
push
lods
dec
rclb
outsl
adc
jle
pop
push
pop
rclb
dec
sub
mov
sub
lock
ljmp
scas
aaa
mov
mov
ljmp
xor
out
and
cmp
add
or
lods
and
cmp
add
or
loope
les
mov
add
or
js
imul
shrl
loop
out
push
lret
mov
lret
shll
adc
daa
int3
mov
int3
fdivrs
loop
outsb
mov
inc
mov
and
shll
jno
jp
gs
xor
pop
and
ja
jno
jp
gs
cmp
push
jmp
jp
gs
jl
inc
stos
pop
sub
loope
jb
push
ja
call
fnsave
repnz
(bad)
cmp
movsb
fcmovnu
les
(bad)
test
shlb
(bad)
jecxz
(bad)
in
adc
or
repz
sbb
sbb
sub
addr16
mov
mov
and
addr16
lahf
add
or
test
add
adc
sub
inc
mov
dec
xor
mov
pop
lock
jb
add
push
daa
push
ja
jnp
pop
jmp
push
push
push
dec
jl
and
jnp
pop
negb
push
add
push
daa
push
ja
jnp
test
test
test
mov
mov
in
xchg
mov
xchg
mov
and
lcall
stos
test
lcall
aad
enter
loopne
out
in
and
jo
push
aad
enter
loopne
out
in
adc
jns
inc
push
insl
mov
push
or
lds
insl
lds
repnz
and
aas
fisubrl
add
add
sbb
xor
pop
rorb
adc
das
inc
xor
sbb
pop
fmull
cmpsb
adc
das
sub
in
sbb
jle
mov
les
lods
adc
das
sub
out
sbb
cmp
or
xor
ds
sub
cltd
pop
push
insb
pop
addr16
in
or
and
mov
adc
inc
fcoms
lret
pop
jmp
adc
test
(bad)
jg
and
jo
jl
mov
and
pop
fs
push
adc
jb
mov
and
pop
data16
push
sbb
xor
mov
and
pop
jo
jmp
pop
sub
sub
daa
sarl
out
and
pop
mov
stc
push
inc
sub
sub
daa
lret
cmp
add
push
add
xor
daa
aam
mov
add
push
add
es
daa
(bad)
cmp
add
push
add
jb
mov
sarl
and
pop
push
add
mov
pop
xchg
iret
lcall
add
inc
aam
aam
filds
(bad)
pushf
clc
dec
in
jmp
faddp
test
(bad)
(bad)
xchg
clc
sbb
mov
insb
int
lret
(bad)
sarb
push
in
jmp
(bad)
sar
int3
(bad)
sar
add
fucompp
xor
dec
lret
(bad)
shlb
es
jne
jle
addr16
pop
outsl
inc
in
sbb
test
(bad)
jle
addr16
pop
and
push
insb
and
popa
sarb
negb
inc
mov
push
popa
xlat
jle
lcall
inc
jmp
push
popa
sarl
cld
pop
outsl
inc
jmp
push
popa
ret
jle
addr16
pop
ja
jmp
push
popa
int3
jle
addr16
pop
jae
mov
push
popa
into
jle
addr16
pop
gs
rorl
lcall
cld
adc
nop
fists
rcll
push
lods
inc
lods
xchg
mov
fiadds
in
fucomip
(bad)
fistps
inc
aam
int
repz
aad
rorb
movsb
push
xchg
push
push
pop
outsl
inc
pop
pop
sbb
lea
or
pop
(bad)
sbb
push
cmp
xor
or
pop
(bad)
sbb
pop
cmp
xor
or
pop
mov
jo
push
cmp
xor
xchg
mov
cmc
mov
mov
cmp
dec
adcl
xchg
sahf
mov
sub
mov
in
mov
lcall
push
lods
into
mov
push
or
adc
dec
aam
inc
inc
and
adc
inc
push
dec
xlat
dec
push
inc
and
pop
jnp
data16
dec
fisttpl
inc
and
jnp
add
dec
fmull
inc
daa
pop
cmovne
jnp
data16
dec
les
inc
or
int
int
lock
pop
sub
inc
std
dec
xchg
push
stc
dec
scas
jae
outsb
mov
inc
in
dec
mov
jns
pusha
xchg
mov
mov
mov
xchg
cli
stos
outsl
mov
mov
mov
xchg
clc
stos
and
xor
lea
stos
dec
mov
xchg
push
ret
push
stos
es
es
xor
jl
push
sub
cs
and
hlt
insb
loop
aam
stc
jae
js
sub
inc
out
imul
stos
jae
js
and
inc
sti
pop
jnp
popf
jne
jae
js
sub
inc
ficompl
mov
bound
loop
scas
xchg
inc
bound
(bad)
inc
jo
dec
cmp
mov
add
