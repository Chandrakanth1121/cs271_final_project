insb
nop
dec
aam
bound
push
add
pop
mov
addr16
adc
in
aaa
clc
fwait
call
xchg
push
mulb
and
xchg
fdivrl
shll
and
aam
mov
movsb
mov
lock
pushf
rorl
mov
add
les
jae
fs
mov
dec
jg
sub
lods
dec
xor
data16
adc
adc
iret
je
fadd
pusha
inc
adc
add
mov
xchg
inc
push
ss
jne
xor
rorl
sub
fbstp
push
pusha
and
cmp
mov
dec
add
arpl
sbb
mov
fisubl
sbbl
loop
lret
aad
mov
or
test
xlat
ljmp
add
sbb
rorl
aad
xlat
or
dec
repnz
insb
cmp
(bad)
dec
ficomps
sbb
and
or
jmp
pop
ret
pop
xchg
dec
in
mov
xchg
inc
ds
fidivl
and
jmp
es
dec
xchg
pop
aam
or
and
mov
mov
xchg
xor
mov
adc
xor
mov
test
fwait
shlb
movsl
mov
jp
mov
(bad)
popf
xchg
in
stc
pop
in
decb
mov
jmp
outsl
stos
test
sti
into
andl
jl
fnstcw
(bad)
mov
sub
mov
push
insb
fsts
repz
dec
ss
mov
enter
lahf
mov
sub
xor
ret
sub
dec
outsb
pushf
push
inc
xchg
dec
insb
and
or
inc
repnz
sbb
add
sub
add
lea
ret
imul
cmp
insl
ret
nop
sbb
mov
test
int
(bad)
jb
sbb
fmull
xor
iret
lahf
ret
lahf
xchg
ror
stc
xchg
aaa
mov
pop
stos
or
mov
and
aaa
sbb
bnd
jp
(bad)
lea
stc
sub
nop
mov
movsl
sub
push
mov
or
xchg
ljmp
mov
addl
fistps
xlat
out
scas
xchg
fucomp
push
jp
xchg
pop
jg
push
dec
hlt
stos
dec
scas
xor
jge
pop
pushf
cmpb
jne
lds
shr
int
dec
ss
xchg
bound
cld
inc
sahf
push
aad
pop
push
orb
fsts
cwtl
add
lock
dec
(bad)
mov
repnz
pop
push
out
dec
movsb
inc
push
or
lods
xchg
ds
adcb
aas
or
lods
sbb
popa
outsl
(bad)
sub
add
sub
inc
mov
mov
repnz
sbb
(bad)
outsl
lock
mov
je,pt
sub
cli
fs
in
cmp
popa
mov
cli
pop
cwtl
sbb
add
pushf
in
addr16
jg
or
roll
jl
mov
jge
push
dec
pop
dec
dec
xor
(bad)
push
aaa
mov
enter
push
scas
test
std
push
dec
rorl
mov
cmp
rcl
xchg
and
pop
int1
bound
nop
and
mov
outsb
(bad)
sbb
stos
mov
fs
sub
sub
andb
adc
pop
and
dec
int1
sub
movsb
out
mov
popa
push
mov
adc
ficoms
test
adc
lds
adc
out
sub
xor
adc
mov
mov
loopne
iret
xchg
push
sub
push
inc
adc
arpl
add
jle
push
sub
or
cmc
roll
pop
jg
mov
in
shll
add
dec
outsb
add
loopne
mov
test
push
xor
aam
pushf
fimull
and
pop
and
ss
push
std
lret
popf
bts
push
shl
fisttpl
in
sti
(bad)
xor
dec
cmpl
scas
and
or
add
cli
(bad)
scas
loop
hlt
jmp
aaa
inc
mov
mov
mov
repz
push
outsb
(bad)
or
mov
push
push
mov
sub
or
lret
nop
out
enter
push
jnp
and
cmp
sub
outsb
add
rorb
mov
addr16
xchg
rorl
and
sub
mov
sub
adc
addr16
fildll
adc
cwtl
cmp
jge
inc
push
mov
add
mov
cli
push
mov
mov
popf
sub
std
mov
dec
push
fcomps
jge
inc
mov
xor
xchg
push
sbb
clc
sbb
dec
or
pop
(bad)
std
movd
loop
push
divl
xor
push
add
lock
jle
dec
mov
cld
enter
js
add
pop
push
pop
lods
sbb
cmp
adc
cmpsb
stos
pop
pop
xchg
inc
or
xor
push
in
add
loop
add
xchg
push
adc
movsb
add
stos
fisubs
mov
xchg
jae
mov
rcrb
lock
shrb
aas
int1
out
(bad)
sbb
out
jmp
push
mov
jl
jbe
jecxz
std
nop
pop
cmpb
jb
mov
sti
enter
cmp
push
lcall
jno
sbb
shl
pop
in
test
jb
cld
and
jae
(bad)
jne
pop
jnp
ds
pop
dec
xor
(bad)
sti
ljmp
push
dec
pop
fst
xchg
dec
xor
jae
add
negb
imul
dec
push
ja
pop
rorb
pop
mov
inc
jg
push
add
test
push
sbb
cmpsl
sbb
or
jge
stos
mov
movsl
cld
pop
les
lret
jno
(bad)
movsl
out
ret
popf
adc
cmp
dec
jg
fstp
movsl
adc
pop
mov
imul
inc
in
dec
xchg
mov
xchg
push
out
cmp
mov
jecxz
daa
lfs
mov
adc
xor
dec
loope
(bad)
fsts
das
or
fcomps
divl
cmc
leave
stc
out
sub
std
mov
sub
inc
div
jns
or
mov
(bad)
adc
imul
lcall
add
ja
and
(bad)
sahf
adc
jbe
fimull
aaa
xchg
cmpsl
mov
xchg
xchg
rcl
(bad)
lock
fwait
push
test
scas
mov
xchg
push
gs
xchg
ret
das
ret
das
repz
loopne
sbb
(bad)
ss
push
xor
inc
sub
jo
lcall
fwait
bound
ds
jo
add
mov
ja
xor
jmp
push
jp
dec
outsb
jp
adc
mov
in
rcrb
mov
pusha
mov
jne
rcrb
or
pop
sub
fs
xchg
cli
pushf
xchg
jbe
dec
push
mov
push
in
shlb
int3
ds
mov
add
mov
jb
loop
jg
mov
dec
movsb
mov
adc
fisubrs
rol
xor
pop
(bad)
adc
mov
xchg
push
lods
pop
lcall
ds
sbb
dec
popf
sub
xor
subl
shlb
mov
enter
pop
and
aas
jb
leave
add
ffree
push
dec
inc
xor
mov
dec
daa
mov
push
popf
lret
mov
sub
xchg
data16
subl
adc
adc
push
mov
lret
jle
push
fwait
dec
jnp
push
xor
or
mov
push
cmpsl
pop
jb
mov
push
(bad)
ljmp
popa
stos
xor
cli
add
inc
daa
mov
loopne
nop
jp
into
dec
xor
add
mull
xlat
mov
cli
mov
pop
fcomi
xchg
dec
or
mov
mov
add
mov
jge
mov
and
xchg
ret
dec
cmp
fdivl
sub
dec
lret
adcl
xor
inc
imul
jae
mov
jmp
data16
sbb
inc
shll
sub
inc
jae
inc
cmp
jnp
add
xlat
movsb
iret
shl
ret
xchg
inc
int3
hlt
mov
push
push
dec
iret
push
xchg
das
cld
std
test
push
int3
rcl
out
std
movsl
mov
out
xchg
mov
add
ret
inc
push
adc
les
sti
js
out
mov
mov
cmp
aam
mov
push
(bad)
aaa
(bad)
dec
sbb
lcall
mov
sar
push
pop
mov
push
fldcw
add
mov
jmp
mov
imul
pushf
mov
