push
int1
mov
pop
or
sbb
jnp
mov
pop
adcl
inc
fnsave
fidivs
adcb
inc
adc
mov
je
fstpl
dec
sarl
jp
pop
nop
jnp
xchg
fstl
shl
mov
pop
cmp
pop
xor
inc
shl
ja
jne
push
mov
xor
xchg
shll
ja
cmp
adc
sub
int1
xchg
bound
hlt
mov
fs
stos
movsl
xchg
jnp
ljmp
aad
mov
mov
and
jmp
outsb
je
lock
add
mov
in
dec
fs
dec
or
push
sub
inc
cmpb
test
cmpsb
jg
xor
stos
data16
mov
pop
lods
mov
adc
fsubl
xchg
sbb
std
stos
inc
fisttpll
cmpsl
sbb
gs
sub
aad
mov
lea
movsl
(bad)
es
insb
sub
sbb
sbb
cmp
(bad)
lahf
push
mov
or
int3
adc
xor
(bad)
cmpl
lods
cmpb
xorl
mov
and
jg
jbe
and
ret
jae
adc
rcr
inc
bound
mov
in
or
gs
fbld
xor
cmp
and
std
adc
nop
jne
cmp
mov
int3
stos
fidivrs
xchg
ss
movsb
add
sbb
xor
das
int3
xor
ret
mov
int3
cli
lods
sbb
xor
aas
mov
int3
daa
fmul
les
(bad)
cmpb
or
inc
insl
push
test
mov
xchg
into
and
jae
ds
inc
mov
daa
inc
mov
pop
sbb
add
insb
mov
lods
outsb
xchg
jge
xlat
sbb
jmp
gs
lods
adc
xor
arpl
jmp
or
pop
sbb
xchg
rcrl
push
xor
cs
push
and
les
xchg
cmp
xchg
andb
inc
ljmp
push
inc
scas
gs
shrl
enter
mov
cmp
push
cmp
adc
push
clc
mov
shlb
in
pop
jecxz
jle
ljmp
negb
cmp
fwait
or
and
cmpxchg
push
xchg
sar
pop
add
push
ret
dec
bound
push
sbb
incb
cmp
and
dec
mov
or
or
cli
je
mov
dec
push
or
shrl
fnstcw
push
push
inc
flds
push
movsb
ret
ret
out
xchg
cmp
lods
mov
cwtl
push
cwtl
call
sbb
jmp
jb
cmp
adc
outsl
or
daa
sub
push
or
test
jp
pop
and
jge
mov
rcrl
aam
aam
xchg
in
cmp
lahf
lea
out
std
clc
mov
xor
and
ljmp
inc
jp
into
and
xor
movsl
rorl
dec
and
sbb
xor
pop
imul
pushf
adc
mov
sbbl
fldcw
adc
or
dec
or
cmpsb
mov
adc
(bad)
fmull
mov
insb
fwait
hlt
xor
xchg
pushf
out
ss
fs
mov
mulb
popf
sub
cmc
jecxz
cmpsb
xchg
mov
xchg
out
iret
cli
xor
push
sbb
shrl
adc
shll
cmp
add
and
xchg
sbb
add
pop
xchg
jecxz
pushf
mov
and
push
data16
lods
add
pushf
pop
xlat
mov
inc
and
(bad)
fs
xor
lcall
fdivrs
sbb
jge,pn
cltd
in
xor
xchg
(bad)
xchg
mov
setne
mov
jl
xorb
mov
ss
pop
cwtl
cs
sbb
and
mov
leave
das
cwtl
push
sub
mov
push
sub
push
mov
(bad)
pop
lods
mov
lods
or
popf
sub
cld
cmp
xlat
sub
outsl
shlb
dec
(bad)
push
jle
movsl
pop
test
fsub
pop
sub
loope
jmp
cltd
push
mov
scas
(bad)
out
outsl
movsl
sbb
cmp
xor
int
lea
in
jb
mov
incb
movsl
int
sub
jae
fcomps
int3
and
push
pop
(bad)
popf
clc
(bad)
mov
mov
mov
mov
scas
and
xor
ss
or
fwait
adc
cld
sub
imul
mov
or
pusha
mov
test
sbb
xor
sbb
jle
lea
loopne
jb
sub
(bad)
fiaddl
(bad)
push
or
xor
cwtl
pusha
or
xchg
push
in
mov
rorb
stos
jns
int
nop
pop
xchg
cmc
shlb
push
mov
dec
mov
mov
xchg
or
in
sub
sub
and
sbb
add
imul
add
sbb
gs
jb
mov
fs
sub
jecxz
jecxz
dec
pop
cwtl
sti
or
and
sbb
aaa
push
add
or
pusha
cmp
cmpsb
adc
ret
mov
adc
mov
andb
mov
lret
mov
sub
xchg
fcomip
lea
cmp
les
lret
xor
or
sub
cmpsl
outsl
sbb
mul
pop
cmp
xor
inc
inc
aas
fimull
or
push
dec
xchg
and
jp
repnz
xchg
(bad)
dec
cld
inc
adc
xor
cmp
jp
inc
repnz
rcrl
int
pop
dec
fstpt
and
int
mov
cs
inc
movsl
xor
jns
cmp
movsl
sbb
idiv
xchg
iret
sub
mov
int1
dec
js
loope
daa
(bad)
popf
xchg
ret
aam
ss
orl
add
dec
mov
fstps
cmp
fs
and
jne
sarb
mov
pop
add
cltd
aam
pop
aam
shlb
jb
pop
jge
sbb
lahf
mov
push
mov
mov
lahf
int
xchg
sbb
ret
rolb
negl
das
outsl
jge
outsl
pop
lods
xchg
pop
and
mov
pop
js
rolb
mov
mov
sub
push
fidivs
pop
lds
xor
sbb
and
les
shlb
into
cmp
nop
pop
sub
and
sbb
subb
jg
push
popf
(bad)
cmp
adc
sti
gs
mov
das
ret
fstpt
popa
sbb
shrl
dec
inc
lods
xor
jp
in
mov
lret
mov
pop
xchg
int
lock
bswap
lds
push
sbb
cmc
push
xchg
outsb
neg
(bad)
jp
and
iret
lea
xchg
mov
xor
mov
addr16
fdivrl
and
mov
mov
adc
sub
jecxz
data16
sti
xchg
dec
inc
push
xor
jbe
mov
(bad)
rcrb
inc
mov
xor
mov
sub
sub
mov
lret
add
sub
addl
cmp
mov
in
sbb
cmp
sbb
ss
fcmovu
cld
cmp
sub
mov
lds
inc
rolb
sbb
scas
scas
loop
fidivl
mov
jg
mov
adc
and
mov
adc
and
inc
insb
ss
jb
rol
adc
rolb
je
mov
xchg
bound
rol
xor
imul
push
inc
push
inc
sub
mov
jnp
in
shlb
lock
in
fs
dec
cwtl
fdivs
sub
jbe
scas
aad
push
sbb
xchg
cmc
push
sbb
mov
add
ror
int1
loopne
mov
lcall
(bad)
je
and
mov
fsubrl
scas
(bad)
loop
sbb
jne
or
jo
(bad)
lds
cs
lahf
mov
push
or
imul
aad
fbstp
out
pop
dec
outsl
inc
or
js
ja
mov
sub
jns
aaa
std
repz
pop
ja
mov
or
out
fwait
dec
lret
sub
fimull
xchg
shlb
les
test
dec
mov
pop
push
and
cmp
test
sbb
xchg
inc
mov
mov
fidivrl
jle
xor
mov
sbb
fstpl
mov
jecxz
enter
loope
in
hlt
cmc
pushf
mov
inc
jmp
sbb
pop
push
pop
push
cltd
test
mov
out
and
cmp
shl
push
ljmp
push
push
int
sbb
dec
mull
rol
add
in
fidivs
loop
cmc
sub
xor
jg
in
sbb
inc
aas
das
or
mov
clc
popa
divl
mov
dec
add
