jbe,pt
or
imul
pop
inc
stos
lret
jmp
imul
daa
sbb
scas
push
mov
xchg
mov
mov
fcompp
jecxz
loopew
cmp
out
dec
xor
inc
jecxz
repz
ficomps
inc
lcall
add
ret
cltd
and
enter
cmp
sbb
and
lahf
adc
test
mov
enter
jb
pop
dec
ss
test
scas
sub
mov
cld
and
pop
push
mov
imull
cli
imul
cmp
add
mov
and
imul
and
es
xor
loope
mov
cwtl
fmull
lcall
loopne
imul
imul
fucom
ds
or
sub
mov
pop
sbb
pop
mov
jbe
or
or
(bad)
sbb
clc
cltd
mov
mov
(bad)
push
xchg
scas
pop
xchg
push
jbe
xchg
xor
mov
sti
cld
mov
cmp
mov
dec
(bad)
repnz
les
aam
add
lods
cltd
fidivrs
cmp
fisttpl
jecxz
ror
adc
es
dec
int3
push
rcr
in
and
je
dec
je
push
cmp
ror
push
lcall
imul
fsubp
(bad)
inc
cmp
inc
clc
imul
sub
aaa
push
and
xor
shrl
jnp
rep
clc
int
jp
dec
repz
inc
adc
sub
data16
bound
sub
fmul
cs
es
insb
xor
movsb
mov
jl
insl
mov
pop
int
scas
mov
inc
push
gs
(bad)
mov
imul
fisubrs
mov
ja
cmp
cmp
pop
cmpl
int
sub
(bad)
decl
(bad)
sub
cmpsb
jno
ret
in
mov
fst
sbb
mov
adc
sti
arpl
mov
xor
xor
je
fisttpl
aad
lcall
loopne
rcrb
stos
sub
jo
mov
negb
inc
sahf
jmp
push
ss
xchg
out
shl
adc
adc
adc
in
outsl
aas
in
fs
and
mov
(bad)
cmp
inc
sahf
(bad)
nop
mov
popa
out
pop
outsl
outsl
xchg
or
xchg
repz
or
scas
jecxz
or
rclb
cmp
lcall
cld
cmp
push
insl
ret
fcoml
nop
gs
and
mov
fwait
int1
sahf
test
andl
aaa
jecxz
cli
rclb
jmp
jae
imul
push
cltd
leave
pop
lcall
mov
dec
mov
adc
adc
incl
cmp
push
pop
jae
inc
movsb
jbe
mov
xor
or
ss
dec
shrl
jno
xor
add
mov
inc
sbb
into
ja
inc
fmul
mov
pop
jp
sbb
lea
and
sub
nop
cmp
xor
jmp
mov
cltd
stos
jecxz
fwait
pushf
jno
mov
repz
pop
push
sub
stos
inc
mov
cli
push
test
sbb
lea
xlat
loope
xchg
fiadds
xchg
data16
sbb
fstl
addr16
repnz
push
clc
or
xchg
nop
movsb
inc
pop
(bad)
nop
jns
sub
mov
cmpsb
int
jmp
sbb
lret
push
pop
ret
push
mov
jns
fsts
repnz
in
pop
(bad)
mov
imul
mov
mov
faddl
dec
dec
xchg
xlat
insb
and
cmp
aaa
loopne
cli
pop
movsl
fcoms
mov
push
jle
test
and
vcvtsi2sd
shlb
mov
cli
inc
cld
adc
stc
dec
(bad)
in
push
sti
scas
jb
mov
dec
aad
pop
jae
mov
call
mov
jnp
scas
cli
int
and
rcl
sub
fmuls
movsl
inc
sti
(bad)
sub
imulb
pop
iret
push
aam
addr16
cmpsb
movsl
enter
rep
inc
imul
lds
sub
pusha
pop
test
dec
movsb
push
cmp
mov
push
ret
in
xchg
outsb
xchg
sahf
arpl
out
pop
sahf
sbb
mov
mov
nop
fisttpll
bound
lcall
inc
dec
std
mov
mov
out
add
dec
lcall
cmp
mov
dec
outsl
out
(bad)
popa
ret
test
mov
jno
xchg
jb
xchg
scas
sbb
push
cmpb
gs
sbb
xor
sbb
dec
lea
ja
rcrl
jmp
or
mov
outsl
jo
adc
jge
jecxz
je
mov
lcall
xchg
adcb
clc
mov
rcll
in
add
mov
jbe
test
addr16
mov
sbb
push
int3
(bad)
int
dec
xor
mov
sub
sbb
jne
or
jge
mov
in
jae
pop
lds
fdivrs
js
xor
popa
mov
mul
adc
ljmp
sub
scas
pop
dec
into
push
fcmove
cmp
movsl
sbb
push
or
xchg
adc
ret
xlat
sbb
cmp
cmp
adc
aad
mov
out
fisubrs
mov
jge
test
push
sub
sbb
leave
mov
xor
pop
jo
mov
jae
mov
out
lea
xor
inc
mov
call
push
sub
addr16
bound
dec
lds
cmc
push
mov
(bad)
cmpsb
mov
js
pop
in
cmp
ljmp
scas
daa
cmp
(bad)
daa
mov
xor
das
jb
mov
mov
xor
or
out
xchg
iret
pushf
mov
loopne
xchg
dec
push
jno
and
nop
insl
dec
incb
lods
ret
lods
mov
les
cmp
int
bound
sub
xchg
in
xchg
pop
rol
sbb
aaa
jne
add
cmp
insl
and
xor
fdivrl
cmc
mov
inc
(bad)
fmuls
movsl
xchg
fbstp
mov
enter
inc
ljmp
pop
or
mov
sub
mov
les
lock
jg
(bad)
or
pop
loopne
es
mov
popa
loop
pop
int
les
scas
adc
int
pop
addl
jnp
cltd
clc
mov
xor
cmp
xor
jle
lcall
cmp
mov
in
int3
cmpsl
pop
jno
jae
addr16
int
fs
rolb
push
cwtl
pop
dec
pop
aad
pop
ja
daa
enter
sub
jbe
sahf
cmpsl
out
stos
and
ljmp
cli
pop
mov
dec
inc
into
mov
stc
(bad)
popf
add
hlt
xor
xchg
inc
pop
call
add
jnp
push
mov
movsl
sub
mov
aas
call
inc
rorw
cltd
jle
sti
dec
mov
(bad)
cmpsb
pop
cmpsl
mov
loope
push
ljmp
lret
fsubp
sub
(bad)
mov
enter
mov
cli
sti
aaa
test
mov
mov
ja
mov
clc
pop
xor
pop
in
mov
mov
mov
iret
sub
mov
or
dec
adc
fcomip
das
jbe
inc
popa
mov
mov
pop
push
test
dec
inc
in
imul
gs
lahf
out
inc
iret
cmp
cs
mov
pop
jp
loop,pt
leave
sbb
nop
push
cmpsl
fadd
lcall
mov
jne
aas
push
mov
mov
mov
imul
stos
popa
xchg
in
inc
sub
out
mov
call
xorl
imul
jo
pop
mov
and
cmp
pop
jle
sbb
test
rol
shlb
mov
xlat
mov
test
lret
les
mov
popf
or
mov
push
imul
inc
lret
sub
int
dec
shl
int1
mov
inc
cmpsb
inc
sbbb
imul
aam
inc
cwtl
hlt
fsts
js
mov
dec
repz
mov
data16
sbb
xchg
sbbl
es
xor
daa
pop
and
sbb
xchg
fwait
mov
mov
test
and
lods
sub
scas
outsl
rcrb
dec
pop
movsl
and
xor
in
bound
xor
mov
outsb
pop
jb
mov
add
sub
sub
jle
sbbl
shr
mov
out
movsl
outsb
and
mov
(bad)
adc
pop
call
js
(bad)
int
mov
or
jge
cmp
add
and
shll
pop
(bad)
add
or
gs
xchg
ret
push
mov
xor
les
jmp
int1
