adc
add
add
add
dec
add
add
add
add
add
add
add
push
sbb
add
add
add
add
adc
jo
add
sub
add
and
add
add
sub
add
push
jle
add
add
add
add
or
add
jo
sub
add
fimuls
fiadds
push
sub
sub
add
sbb
add
add
add
xor
add
add
add
add
add
add
add
add
push
add
push
add
or
sbb
add
inc
add
add
add
adc
pop
add
or
push
jle
add
add
or
add
push
jle
add
add
or
add
push
outsl
or
add
or
add
add
add
or
adc
sub
pop
outsl
or
add
faddl
sub
push
outsl
or
add
fmull
sub
add
add
add
add
xor
or
add
add
add
add
add
add
fisttps
sar
xchg
mov
ss
ja
mov
mov
jp
mov
lds
jl
push
movsb
jg
cs
out
and
and
and
add
push
add
or
pop
adc
and
add
push
add
or
sub
add
push
add
or
in
push
lret
jne
jbe
lock
xor
xchg
xor
(bad)
sbb
ror
pop
test
sar
fcoms
sbb
xor
out
mov
mov
popf
out
push
inc
cmpsl
or
cmp
mov
adc
and
inc
mov
fwait
ret
jne
repnz
jne
int1
and
out
dec
fisubl
pop
scas
es
ja
xchg
push
and
call
cmp
stos
cld
cli
jmp
push
pop
es
jle
in
out
mov
adc
push
sub
jge
mov
(bad)
and
jle
test
xor
ret
outsl
into
iret
xor
adc
ds
fld
cs
ds
mov
test
cmp
cmpsb
jle
int3
(bad)
mov
inc
xchg
int1
imul
adc
jns
fsubl
cmc
xor
mov
neg
xchg
pushf
mov
jl
bound
jns
rcl
loopnew
cmp
jge
pop
fs
or
lcall
lret
lods
xchg
lret
fistps
fisubl
adcl
and
dec
cs
lds
test
das
fsubs
or
and
ret
xor
dec
je
inc
mov
push
mov
or
xchg
mov
test
inc
sti
push
loopne
sbb
lods
lods
hlt
or
pop
adc
mov
ss
ljmp
daa
(bad)
cli
sbb
mov
aam
ljmp
pop
aas
sbb
jp
jno
sbb
in
fstpl
dec
fcomip
lds
out
cwtl
in
or
dec
jmp
cmp
cwtl
arpl
in
mov
stc
xchg
jg
and
push
fstpl
mov
imulb
xlat
inc
mov
push
cmp
clc
movsb
xor
mov
inc
add
push
add
push
jb
aas
xchg
sarl
fwait
cmp
push
imul
dec
inc
push
and
lds
stc
jbe
call
out
pop
push
inc
addl
push
test
mov
data16
sub
add
in
fstpt
aaa
mov
loop
push
jbe
adc
mov
cmp
push
cltd
and
mov
mov
lahf
out
mov
mov
inc
mov
jns
mov
fisttpll
xor
lret
stos
xlat
sub
adc
mov
stos
test
xchg
imul
fbld
cltd
test
fnsave
popa
pop
dec
or
inc
add
dec
pop
in
scas
xchg
xlat
and
jle
dec
pop
in
pop
cwtl
push
fisubs
cmc
inc
shll
push
leave
mov
bound
leave
jle
mov
insl
xchg
aas
leave
inc
push
shrl
in
pop
js
(bad)
and
test
jns
sub
add
inc
xchg
hlt
jp
ds
mov
aam
and
sub
arpl
das
mov
repz
gs
ds
push
sbb
inc
xchg
andl
and
cmp
cmp
cwtl
outsb
push
and
push
fdivr
jae
lds
stos
clc
ret
mov
xchg
in
mov
xlat
subb
(bad)
push
dec
jle
mov
in
nop
fs
in
xor
aad
mov
or
movb
mov
add
shll
dec
add
pop
int3
push
movsl
outsl
adc
dec
mov
and
das
xlat
sub
cs
pop
mov
mov
sub
clc
sub
jbe
push
(bad)
mov
inc
jns
push
mov
ss
xchg
mov
(bad)
cmp
xchg
mov
sub
xchg
mov
(bad)
fstpt
ret
test
sbb
jmp
xchg
cmp
outsl
dec
dec
testb
insl
adc
fisttps
jnp
repz
out
mov
orb
stos
sbb
sbb
out
fistps
mov
lods
test
pop
and
fnclex
dec
scas
(bad)
inc
(bad)
push
inc
mov
js
pop
jo
gs
or
jecxz
sub
or
push
mov
pmullw
jbe
inc
cli
dec
sbb
add
xchg
hlt
mov
cmp
pop
push
fildl
push
push
ret
pop
xor
sub
adc
jne
and
lock
and
mov
lds
sub
sbb
out
push
js
mov
repnz
or
loope
in
and
mov
adc
push
test
xor
fdivrs
lea
fs
addr16
mov
stos
clc
aas
aam
or
push
les
sub
les
popa
andb
add
push
cld
cmc
sbb
or
jb
mov
jg
insb
loope
insb
xor
mov
mov
pop
aas
pop
ja
int1
out
adcl
sti
cmp
mov
mov
jae
sbb
mov
fucomip
repz
mov
xchg
fwait
inc
jns
fbld
stos
jnp
sub
mov
add
pop
mov
leave
bound
data16
fstpt
aas
rorl
cli
jp
pop
sbb
rol
gs
dec
xchg
or
scas
jns
enter
jp
sbb
fsubp
or
xchg
add
lahf
mov
lahf
mov
dec
mov
lahf
inc
lcall
movsb
test
lock
je
push
mov
pop
daa
xor
pusha
sbb
rcrl
jl
mov
stos
fldenv
std
mov
mov
out
pop
mov
test
int1
cs
fcoms
sbb
and
jo
fstpl
pop
cmp
stos
inc
xor
loop
rorb
loopne
andb
pop
test
mov
in
inc
in
and
push
mov
mov
mov
mov
in
xor
and
xchg
cmpsb
cmp
pushf
outsl
pop
cmp
push
fs
adc
inc
(bad)
lahf
aas
popf
xor
test
insb
shll
negl
fs
ds
xchg
jl
lock
xchg
jle
xchg
or
ret
cmpsb
push
sbb
sbb
push
mov
rcll
mulb
xchg
push
pusha
xchg
mov
push
and
pushf
mov
add
shl
or
or
movsl
jno
test
sbb
mov
and
add
mov
dec
cmp
mov
sub
mov
and
push
xor
adc
push
fwait
insl
push
push
push
mov
repnz
jnp
and
sbb
xchg
mov
sbb
xor
jl
push
pusha
test
fdivrs
adc
cli
fdivl
sti
int1
xchg
adc
push
cwtl
rol
dec
cwtl
(bad)
push
push
pop
pop
xor
lods
in
outsl
ret
inc
stos
push
adc
mov
mov
inc
shll
(bad)
das
dec
sbb
pop
ljmp
mov
pop
inc
mov
loope
addr16
repnz
into
dec
sub
aam
pop
in
ja
sbb
rorl
cmc
cmpb
sahf
ds
insl
jmp
popa
pop
sbbl
loopne
jo
sahf
xchg
add
xchg
mov
sti
xchg
jle
cmpsb
out
scas
and
je
sub
idivl
add
pop
pop
pop
inc
sbbl
aaa
xchg
add
pop
xchg
fwait
mov
and
movsl
ret
push
mov
in
mov
mov
