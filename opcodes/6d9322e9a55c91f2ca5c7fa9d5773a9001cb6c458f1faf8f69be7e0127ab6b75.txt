jnp
repz
sub
inc
add
mov
imul
dec
adc
or
outsl
sbb
fsubrs
dec
cmc
xor
pop
cmp
push
jns
jne
insl
daa
repz
gs
xor
sub
shll
jp
fstps
int3
cmp
xor
ds
push
into
test
inc
movl
inc
mov
push
loope
sbb
sub
cmp
push
ja
idivl
nop
ljmp
cwtl
pop
fsubl
dec
cmp
sbb
jns
insb
pushf
sbb
cmp
(bad)
mov
sbb
jne
imul
jmp
shrl
dec
daa
aas
aas
push
and
and
or
jecxz,pt
mov
cmp
and
and
cltd
push
iret
inc
xchg
inc
js
dec
inc
call
add
mov
jg
inc
xchg
jmp
mov
loope
lahf
inc
inc
or
cmp
jl
or
push
jl
jo
sbb
test
adc
(bad)
cmp
out
dec
mov
push
or
push
outsl
cli
data16
pushf
mov
pop
pop
push
stos
fsubl
hlt
add
sub
jmp
test
lock
ret
adc
fwait
js
mov
popf
test
jo
loop
sub
pushf
lcall
dec
sub
sbb
arpl
mov
das
nop
xchg
sub
in
incb
fbld
lods
sbb
or
imul
sub
bswap
push
jo
in
arpl
cld
inc
(bad)
xor
and
pushf
add
mov
(bad)
lret
in
mov
jo
pop
sub
aaa
cmp
iret
inc
mov
sub
dec
and
les
mov
test
lcall
jmp
mov
(bad)
xchg
lods
mov
imul
sub
ja
emms
pop
pop
inc
jmp
add
xchg
push
lcall
inc
add
mov
pop
stos
jecxz
pop
xor
cmp
shll
loop
dec
lea
inc
mov
mov
mov
(bad)
out
mov
jmp
int
test
mov
daa
cmc
and
and
inc
fmull
(bad)
xchg
daa
out
aam
cmp
inc
mov
outsb
inc
lahf
cwtl
pop
jo
cld
fcomps
and
(bad)
out
inc
hlt
push
(bad)
into
inc
mov
psrad
mov
cli
mov
inc
testl
inc
xchg
lea
(bad)
inc
sbb
fsubrp
(bad)
inc
out
ja
out
push
call
(bad)
maxps
dec
test
xor
stc
adc
hlt
or
pop
daa
or
mov
(bad)
adc
and
cmpsb
movsb
mov
xor
(bad)
lahf
mov
inc
lcall
scas
fsts
adc
xor
addr16
dec
insl
xchg
stc
cmpsl
(bad)
pushf
xor
xchg
ret
fld
daa
lock
fwait
cmc
(bad)
loop
inc
mov
mov
push
xor
shl
xlat
add
jg
(bad)
jg
add
repz
dec
push
xor
sub
mov
xorb
fisubrs
(bad)
pop
int1
adc
imul
div
cmp
ja
sub
int3
push
or
or
aaa
cld
pop
addl
(bad)
pop
xor
ja
addr16
adc
dec
jb
xor
push
movsl
mov
cs
jl
pop
das
jo
insb
flds
add
mov
fwait
xchg
lret
sub
in
jns
lea
pop
add
pop
adc
xchg
jecxz
pop
shrl
mov
mov
xor
aaa
jbe
xorl
mov
pop
add
sbb
jmp
sub
rolb
daa
addr16
jo
pop
sarb
inc
or
in
sub
pop
xchg
adcb
jae
sub
nop
lahf
pop
cmpsl
pop
sbb
xchg
xchg
das
pop
mov
ret
out
jns
inc
sbb
cmp
int3
cmp
ss
mov
xbegin
xchg
sub
or
sbb
jp
dec
lods
xor
jns
and
mov
pop
xor
push
data16
sub
movsb
loope
das
push
out
push
mov
pop
jb
out
add
je
(bad)
pushf
xchg
cmp
into
xor
cld
rorl
add
cld
arpl
(bad)
mov
pop
mov
cmp
mov
fwait
fs
in
xor
(bad)
xchg
cmp
hlt
rorl
dec
cld
pop
mov
push
(bad)
mov
pop
push
les
cs
push
fcmove
insl
adcb
stos
loop
pop
movsb
mov
inc
cmp
sub
lds
mov
dec
push
stc
or
jge
xlat
fs
(bad)
xor
inc
(bad)
int1
fisubs
mov
sti
divl
adc
fildll
aad
adc
xlat
push
mov
and
push
xor
xor
sbb
inc
popf
aas
lods
inc
iret
sbb
jmp
fsubs
sbb
cld
ds
push
jge
and
xor
fs
lcall
or
stos
xor
fcomi
int1
cmp
push
xor
test
mov
(bad)
inc
push
xor
dec
std
xchg
roll
int
dec
stc
and
xchg
jmp
sbb
das
and
add
push
dec
pushfw
pop
xor
in
or
push
in
movsl
sbb
mov
sti
cmc
test
xchg
daa
xchg
pop
xchg
cmp
inc
stos
jle
push
enter
jecxz
sub
mov
adcl
leave
test
xlat
push
cltd
aaa
sub
daa
testb
or
mov
sbb
into
aam
stc
cmp
jmp
fs
jge
xchg
pop
loope
mov
adc
xchg
outsb
or
add
aad
xor
and
sub
lods
lea
shl
jle
and
dec
sub
lock
inc
mov
adc
push
dec
test
add
cmpl
lea
movsl
inc
lods
clc
inc
lds
xchg
mov
in
pop
arpl
adc
jg
lret
(bad)
daa
mov
cltd
(bad)
cld
fdivl
(bad)
and
dec
push
scas
aaa
sub
mov
xchg
fcmovu
xor
repnz
pop
divl
or
scas
inc
mov
(bad)
lahf
cmp
jl
push
push
mov
mov
add
push
popf
sbb
add
or
(bad)
xor
cmc
fsubrs
aaa
push
mov
jo
dec
sti
sbb
imul
out
mov
adc
cmc
cs
cmpsb
sub
cs
repnz
pop
add
mov
std
hlt
inc
shlb
sub
mov
jge
dec
int1
dec
(bad)
imul
jb
push
gs
pop
xchg
lds
aad
mov
sti
test
roll
jb
addr16
add
inc
add
cmpsl
pop
nop
xchg
fmull
or
push
or
dec
stc
cmp
sub
mov
lds
std
pop
cmc
jo
mov
in
and
mov
das
pop
sahf
jno
bound
nop
xchg
cmp
insl
mov
push
sbb
decb
pop
pop
nop
jle
gs
or
sub
push
out
sbb
shll
fistpll
inc
into
aaa
pop
mov
out
and
mov
ffreep
jbe
out
insl
iret
pop
addr16
pop
nop
(bad)
je,pt
fsubr
mov
inc
lcall
adc
fyl2xp1
cmp
scas
in
js
xor
(bad)
nop
fildll
(bad)
pop
outsl
cmp
imul
jg
(bad)
jbe
inc
leave
je
imul
inc
mov
inc
sbb
xor
in
(bad)
push
movsb
cmp
inc
push
fsub
(bad)
add
movnti
adc
aaa
(bad)
pop
dec
and
es
std
mov
inc
das
cmp
or
add
mov
adc
mov
leave
push
push
mov
adc
lret
or
inc
rcrb
pop
sbb
adc
and
xchg
adc
movsl
push
repz
and
pop
rorl
in
iret
int1
rol
inc
stc
scas
std
inc
inc
clc
or
cmp
mov
stos
push
push
aas
jg
repnz
mov
(bad)
loop
dec
mov
inc
jae
mov
out
bound
cmp
adc
rorl
push
pusha
sub
shrl
pop
hlt
mov
dec
mov
jmp
and
int1
or
ret
add
cli
mov
inc
daa
jne
jne
cmpsl
clc
