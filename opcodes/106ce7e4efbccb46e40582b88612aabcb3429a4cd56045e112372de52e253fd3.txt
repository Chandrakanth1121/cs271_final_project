repnz
mov
mov
and
xlat
and
dec
fwait
mov
iret
scas
aas
jno
movsb
fmull
dec
subb
ljmp
sub
adc
push
mov
and
push
xor
push
xor
push
xor
xchg
dec
lahf
mov
iret
scas
aas
xchg
cmp
ret
lret
adc
lock
xchg
movsb
dec
movsb
std
mov
insb
xchg
insl
int1
sub
xchg
and
shlb
push
int
in
dec
lcall
out
test
lahf
dec
jno
jp
cmc
shrb
roll
scas
push
cmp
dec
popa
adc
(bad)
mov
push
mov
and
push
xor
push
xor
push
xor
xchg
dec
fwait
mov
dec
dec
pushf
lahf
(bad)
scas
aas
jo
and
mov
lods
and
ret
and
jb
mov
shlb
sub
xchg
pushf
and
adc
and
shlb
test
mov
arpl
(bad)
mov
call
mov
out
jo
ja
jb
mov
shlb
sub
xchg
pushf
and
adc
jns
ljmp
push
mov
and
test
loopne
mov
loopne
sarb
mov
cmpsl
daa
in
mov
lahf
lahf
(bad)
sub
ret
inc
lcall
(bad)
out
in
lods
and
or
in
test
lahf
(bad)
mov
adc
scas
push
cmp
dec
popa
adc
(bad)
mov
movsb
in
mov
pop
(bad)
xor
push
xor
push
xor
push
xor
xchg
dec
fwait
mov
iret
scas
aas
jo
movsb
loop
mov
rol
inc
lcall
(bad)
out
jnp
cmpsl
daa
in
test
mov
scas
in
lahf
lahf
(bad)
and
mov
leave
mov
or
(bad)
and
mov
leave
mov
and
jae
shlb
and
mov
mov
sbb
enter
shlb
sahf
or
and
sbb
lret
and
mov
mov
mov
int3
and
outsl
or
or
lahf
dec
movsb
and
adc
popf
lahf
(bad)
mov
test
(bad)
mov
push
scas
dec
pop
sahf
lahf
(bad)
and
mov
leave
mov
add
(bad)
and
dec
jae
and
mov
push
shlb
test
bound
and
test
loopne
mov
fdivl
(bad)
mov
daa
in
lods
and
movsb
push
cmc
sarb
test
pinsrw
ror
mov
and
mov
and
push
xor
push
xor
mov
popa
stos
and
mov
shrb
xor
push
xor
push
xor
xchg
dec
lcall
cmp
sub
push
xor
push
xor
push
xor
sbb
lods
pushf
adc
sub
ret
loop
mov
adc
fsubl
push
in
mov
and
adc
and
jecxz
scas
push
cmpsb
add
stos
and
sub
ret
add
stos
and
mov
shlb
xor
xchg
dec
cltd
mov
dec
add
addr16
and
sahf
(bad)
mov
je
and
test
mov
lds
ret
out
pop
mov
pushf
lahf
dec
popa
stos
and
mov
shrb
popa
adc
dec
in
mov
in
cmpsl
dec
popa
mov
or
rcrb
sbb
mov
sub
push
xor
push
xor
push
xor
mov
popa
stos
and
mov
shrb
xor
push
xor
push
xor
scas
jl
fwait
sub
ficoms
mov
mov
rcrb
fldt
lahf
push
xor
xchg
dec
lcall
cmp
sub
push
xor
push
xor
push
xor
sub
lds
lahf
dec
popa
stos
and
pushf
lahf
push
aad
das
push
xor
push
xor
xchg
dec
lcall
cmp
sub
push
xor
push
xor
push
xor
sbb
lods
pushf
adc
sub
ret
out
sub
ret
loop
in
push
cmc
shlb
sub
mov
(bad)
mov
daa
hlt
ljmp
popa
iret
sub
leave
sub
ret
into
sub
mov
inc
adc
rcr
adc
mov
xor
sub
push
xor
push
xor
xchg
dec
cltd
mov
dec
xchg
lcall
and
lods
hlt
xchg
(bad)
adc
sahf
cmp
mov
lahf
dec
mov
xchg
mov
mov
sub
and
pop
sub
mov
lahf
push
std
shrb
insl
push
sub
lds
int
pop
adc
sub
mov
cltd
adc
xchg
fisubrs
cmpsb
sub
test
popa
lret
sub
and
mov
push
rorl
pop
fs
loopw
(bad)
mov
movsb
lahf
(bad)
mov
pushf
lahf
(bad)
mov
pushf
lahf
push
out
sub
popf
pop
cltd
leave
adc
pusha
cmp
test
(bad)
mov
and
mov
mov
xchg
lahf
cmp
mov
cli
mov
cmp
ljmp
scas
push
repnz
and
adc
pop
insb
xchg
insl
push
cmc
push
in
shrb
rcrb
sbb
movsl
adc
push
adc
inc
lds
cmp
mov
and
lods
daa
push
iret
and
pop
mov
sub
sbb
sub
pop
add
movsl
pushf
lahf
dec
in
rol
sub
ret
fisubs
lods
xchg
cmp
mov
arpl
mov
adc
dec
sahf
pop
mov
mov
popf
sahf
dec
mov
xchg
and
outsb
xor
(bad)
and
dec
popa
adc
mov
sub
ljmp
movsb
mull
(bad)
push
in
scas
aad
mov
sub
loopne
fisubs
loope
(bad)
sub
ret
(bad)
sub
ljmp
jnp
mov
mov
das
push
xor
push
xor
(bad)
push
aad
scas
jl
and
pop
push
out
popf
sub
(bad)
fdivr
cmp
sub
enter
aad
loop
push
jmp
stos
es
movsb
pushf
lahf
(bad)
dec
lods
in
daa
lret
das
push
xor
mov
(bad)
mov
lea
dec
popa
stos
and
pushf
lahf
push
lods
shrb
and
test
enter
dec
jle
sbb
mov
adc
out
mov
scas
sub
and
shrb
in
das
push
xor
push
xor
push
xor
push
xor
lcall
in
xchg
movsb
and
adc
loopne
(bad)
mov
mov
sahf
(bad)
mov
daa
lods
ljmp
scas
jl
and
(bad)
and
leave
mov
sub
les
int1
(bad)
sub
daa
adc
mov
mov
addr16
lods
lahf
(bad)
mov
mov
ljmp
scas
jl
and
leave
and
scas
in
lahf
(bad)
addr16
cmpsl
scas
fistpl
stos
scas
rcrl
out
sub
xchg
pop
arpl
ljmp
ret
shlb
(bad)
adc
push
mov
shrb
mov
mov
aas
add
lds
scas
dec
loope
lahf
(bad)
scas
push
out
sub
ret
fisubl
sub
lds
in
stos
gs
add
shlb
lds
scas
dec
lods
sahf
lahf
(bad)
scas
push
out
sub
mov
addr16
mov
in
test
lahf
inc
lcall
mov
addr16
movsb
push
cmp
cmp
mov
shlb
scas
and
mov
mov
jo
fwait
cmpsb
adc
sub
mov
addr16
mov
cmpsb
cmp
cmp
mov
shlb
scas
and
enter
jge
stos
pop
xor
test
fwait
mov
hlt
ljmp
popa
(bad)
pop
loopne
shlb
pop
or
pop
mov
mov
jno
pop
loopne
into
mov
push
in
ljmp
mov
(bad)
bound
out
sub
lahf
mov
js
lahf
aad
imul
inc
pop
mov
mov
into
sub
adc
and
and
hlt
ljmp
and
mov
mov
(bad)
jl
lahf
add
and
jge
sarb
pushf
pushf
lahf
aad
gs
mov
and
mov
lahf
lahf
(bad)
popa
jle
dec
bound
lahf
(bad)
jno
popa
(bad)
mov
pop
mov
and
dec
mov
push
mov
