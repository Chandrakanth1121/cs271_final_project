jp
scas
push
movsb
aas
jne
mov
ss
push
scas
mov
and
lret
inc
mov
test
pop
mov
dec
mov
push
adc
sbb
fs
movsb
lock
daa
lcall
and
ds
pushf
jg
mov
adc
orb
gs
aaa
cmc
aas
cs
sahf
out
stc
mov
jns
push
xchg
jl
mov
jl
mov
imul
xor
and
arpl
xchg
mov
or
cld
movsb
pop
dec
insl
cmp
lret
xor
or
xor
loop
mov
rcrb
jl
cmp
adc
xor
pop
fdivl
fdiv
aas
cmpsb
(bad)
shl
cmp
popa
lcall
out
cmc
and
dec
push
mov
stos
sub
lahf
out
dec
mov
imul
cmp
and
xor
je
scas
cmp
mov
xchg
fs
jge
dec
pop
insl
or
mov
scas
mov
dec
insl
stos
dec
pop
and
lahf
cmpsl
clc
lods
sub
jp
(bad)
push
xchg
insl
mov
xchg
daa
mov
(bad)
outsb
pop
push
dec
mov
outsb
leave
in
shr
and
stos
mov
push
add
push
cwtl
push
push
xchg
cld
sti
mov
mov
(bad)
xchg
jl
nop
ss
repnz
stos
jo
cmpsb
mov
sub
shrb
insb
inc
sbb
int1
dec
mov
lds
jbe
aaa
shll
dec
mov
mov
insl
xor
(bad)
repnz
mov
sbb
inc
jmp
subl
scas
jb
je
shrb
and
addr16
js
jg
clc
xchg
pop
xor
lods
jb
jb
xor
cld
insl
call
int3
std
das
in
les
xchg
xchg
and
or
jo
ja,pt
fcoms
js
dec
mov
xlat
adc
(bad)
cmp
xchg
loop
sub
outsb
push
inc
in
inc
flds
mov
aam
xor
mov
ja
test
popa
cld
jmp
pushf
sub
xor
scas
mov
lret
nop
mov
xor
popf
pop
dec
inc
inc
dec
xchg
movsb
sbb
add
idivb
int3
lahf
xchg
sbb
(bad)
push
aas
lods
int3
cmp
dec
cltd
test
mov
dec
xlat
js
sub
cltd
lret
in
addr16
mov
xchg
imul
lods
test
test
lret
push
call
cmp
mov
adc
movsl
decl
adc
sbb
jns
mov
clc
call
jle
cmp
popa
enter
xchg
dec
inc
clc
mov
lret
aaa
adc
push
lret
xor
and
mov
pop
xchg
rcrl
lret
mov
je
mov
jns
and
les
mov
mov
cli
cmp
les
push
sub
lret
mov
cmp
mov
sub
push
inc
pop
out
mov
xor
sarl
pusha
(bad)
mov
pop
push
jnp
xchg
test
jnp
in
xchg
xor
and
out
jno
aaa
(bad)
ljmp
repnz
mov
push
lods
cmovno
pop
mov
xchg
add
jae
dec
dec
mov
xor
xchg
ljmp
mov
mov
xchg
les
add
pop
cmpsb
mov
lahf
test
mov
stc
fstps
scas
sub
xchg
subb
add
repz
call
ds
jmp
dec
jecxz
das
enter
cs
mov
cmp
cmp
stos
in
es
scas
dec
pop
into
aad
mov
test
add
(bad)
dec
dec
fildll
xchg
ror
out
stos
jns
cmp
aas
bound
dec
clc
mov
push
inc
cmpsb
cmp
test
fcompp
pop
cmp
repz
mov
popa
pusha
cmp
sub
hlt
jae
sub
aad
movsb
cmp
(bad)
xor
pop
dec
pusha
scas
jecxz
fwait
xchg
dec
rcrl
sbb
ret
pop
adc
add
daa
and
(bad)
cmp
loop
cmp
adc
sbb
inc
fdivrl
sbb
dec
es
inc
jle
ja
sbb
mov
scas
lods
sub
mov
int1
cmpsb
(bad)
in
popa
or
jg
pop
imul
outsl
mov
add
sbb
pop
push
mov
das
(bad)
es
jns
cmp
scas
in
mov
cmp
cmpsb
ret
outsl
adc
cmp
test
daa
mov
xor
ficomps
dec
out
cmpsl
das
mov
out
cli
inc
sbb
and
ljmp
xchg
in
jge
out
(bad)
es
jmp
jbe
lds
mov
out
xchg
movsl
and
mov
pop
xchg
lds
jmp
iret
push
xchg
(bad)
xor
adc
adc
rorl
scas
jp
dec
rol
adc
pop
sbb
nop
xor
or
aaa
iret
fdivs
cs
cmp
cmp
mov
dec
stc
lea
sbb
notb
jns
or
mov
ds
cwtl
mov
int1
fs
xor
mov
dec
insl
insl
mov
inc
add
sub
xor
(bad)
loopne
pmullw
add
(bad)
jae
fldenv
(bad)
push
add
inc
fcmove
inc
inc
push
ja
shr
rorb
sub
out
fldenv
outsb
xor
(bad)
in
test
sbb
or
add
(bad)
int
xchg
mov
stos
out
add
inc
xchg
clc
popa
mov
fwait
xchg
adc
mov
lea
sbb
xor
stos
pop
cwtl
pusha
out
ss
out
xchg
push
mov
stos
popa
inc
xlat
jo
push
push
sub
popf
fbld
xchg
mov
and
jecxz
arpl
xor
ds
xchg
or
ljmp
mov
popf
int1
ds
dec
mov
ds
ljmp
sub
stos
xlat
adc
push
xchg
(bad)
hlt
addr16
push
sub
dec
xchg
jp
jecxz
mov
aaa
aam
sti
cmp
mov
iret
push
jecxz
jg
mov
in
cmp
mov
in
push
repnz
stos
mov
pushf
fcoms
pop
push
inc
loop
fistl
popa
insl
inc
in
cmp
jl
movsl
jecxz
cmc
jb
lea
mov
fsub
mov
push
and
xor
lods
cmpxchg
cmpl
lret
mov
scas
enter
fisttps
out
add
pop
pop
pop
imul
mov
mov
(bad)
mov
mov
andb
mov
je
xchg
jle
pusha
and
mov
or
pop
cmpsl
iret
fcmove
rcrl
lidtl
movsl
adc
mov
jbe
jbe
addr16
sarl
push
test
(bad)
xchg
in
cmp
jno
leave
in
xchg
push
int1
imul
sub
scas
(bad)
jne
pop
push
fsubl
mov
in
or
mov
pushf
out
enter
sti
das
test
test
mov
jl
pop
ja
(bad)
mov
xor
dec
bound
int
xchg
add
mov
mov
mov
push
mov
xchg
push
pop
mov
push
jg
(bad)
lods
cmp
inc
(bad)
test
psrlw
push
ds
sub
lds
pop
int
aaa
xor
das
mov
jl
cmpsb
jmp
and
daa
test
es
fisubs
cmp
cmc
jl
test
inc
aas
adc
jbe
jnp
xchg
shll
inc
repz
mov
adc
iret
nop
es
out
addr16
repz
int
int
aad
jge
push
loope
(bad)
pushf
(bad)
leavew
fdivrs
and
pop
test
push
lahf
fsubr
ficoms
fsubs
jp
xor
fdivl
jno
cmp
sahf
test
popf
cmp
arpl
test
dec
sbbl
cmp
jo
mov
dec
hlt
loope
les
mov
xor
lods
jge
clc
stc
xchg
ret
mov
in
in
add
mov
dec
bound
clc
lods
in
ljmp
mov
int
lahf
fmuls
pop
push
mov
and
and
jp
out
add
mov
aaa
int
and
pop
(bad)
test
mov
in
sbbb
jb
cmp
jnp
ss
or
add
test
pop
mov
in
mov
mov
ret
adc
xchg
sbb
mov
