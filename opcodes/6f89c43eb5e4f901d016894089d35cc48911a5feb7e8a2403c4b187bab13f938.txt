(bad)
lock
add
inc
adc
add
add
sbb
add
cld
sbb
jae
testb
std
idiv
inc
imul
in
or
dec
popf
insb
push
sbb
loopne
and
cmp
fadd
imul
adc
fisttps
add
cs
jge
iret
lock
jp
add
mov
xchg
(bad)
rcr
or
pop
cmc
xchg
stos
iret
jo
out
ret
iret
sub
(bad)
xchg
repnz
lahf
not
lods
adc
or
mov
in
cmp
adcb
jno
lods
jbe
and
push
push
notb
dec
cmp
syscall
sub
scas
gs
int
jmp
mov
fcomps
enter
shl
leave
or
push
sbb
pop
or
xchg
mov
sbb
addr16
and
xchg
and
imul
pop
mov
xchg
pop
and
in
les
fiaddl
iret
dec
adcb
rol
pop
int
inc
aad
(bad)
movsl
movsb
inc
ljmp
adc
shll
popa
popf
out
cmp
je
dec
(bad)
xor
xor
lea
mov
call
adc
mov
xchg
xchg
cmc
cmpsb
jae
xor
jne
addr16
or
(bad)
out
add
int1
cmpsl
xchg
xchg
loop
cld
sub
mov
notb
add
shlb
inc
rcrb
cltd
mov
addr16
xchg
popa
mov
repz
jns
adc
mov
and
sub
(bad)
cltd
pop
test
mov
fwait
cmpsl
arpl
mov
mov
mov
dec
(bad)
xchg
jnp
cld
fdivs
shl
into
mov
dec
add
sbbl
push
pop
push
jae
inc
xchg
in
adc
cltd
add
mov
cmp
xchg
push
pop
inc
push
jbe
jo
xchg
insb
and
sbb
xchg
lret
insb
mov
pop
pusha
sub
dec
imul
mov
pop
xor
add
push
cmp
add
sbb
pop
rcrb
pcmpgtb
xor
push
bound
cwtl
fisubrs
jns
arpl
sub
repnz
jmp
jno
push
arpl
cmc
scas
mov
jp
call
inc
out
rcrb
cli
mov
and
adc
dec
dec
mov
lahf
scas
adc
popf
lret
sbb
inc
push
stos
orb
int
pop
insl
pop
iret
das
cmp
inc
in
mov
into
fisttps
fcmovnb
sub
and
jmp
dec
sahf
sahf
pop
popa
mov
int3
mov
jle
in
jmp
call
or
sub
push
loope
ret
inc
hlt
mov
push
(bad)
(bad)
lcall
insl
cmp
dec
adc
push
ljmp
mov
mov
pusha
sbb
aam
push
mov
mov
inc
imul
xor
mov
sbb
clc
stos
sub
push
or
test
adc
inc
sbb
jmp
mov
pop
sbb
mov
and
inc
lods
mov
lods
push
cmp
adc
or
mov
pop
jg
add
xchg
repz
or
dec
xor
dec
mov
xchg
inc
cmp
jmp
loop
mov
sub
jg
pushf
jnp
ds
outsl
ds
addr16
out
ljmp
xchg
mov
cmp
out
outsb
mov
je
insb
or
xchg
pop
(bad)
loop
pop
outsb
cltd
lods
mov
sahf
scas
xchg
xor
inc
lea
inc
cmp
mov
repnz
jb
mov
aam
xchg
ret
jbe
dec
mov
sbb
or
fmuls
int
and
and
aam
insl
rol
popa
stos
adc
clc
(bad)
test
inc
xchg
jbe
sbbl
iret
sub
jbe
loopne
popf
dec
test
enter
repz
es
std
inc
and
cld
push
xchg
loop
push
scas
(bad)
lea
fsub
adc
das
ror
xchg
sbb
jb
andb
mov
inc
aam
adc
idivb
int1
pushaw
(bad)
je
jg
and
sub
add
ret
out
outsl
lock
sbb
addr16
mov
and
mull
jae
ret
ljmp
pusha
and
or
enter
stos
mov
jno
aad
mov
sub
js
mov
sub
inc
imul
pop
xor
push
dec
out
mov
xchg
imul
repnz
add
lahf
and
add
dec
mov
cs
push
hlt
inc
addr16
int3
testb
pop
pop
jns
mov
ljmp
(bad)
jnp
int3
imull
stc
pusha
inc
xor
ja
fsub
lret
call
or
imulb
xor
jmp
mov
pop
test
loope
add
imul
aas
cli
cmc
add
and
xchg
pusha
(bad)
ficomps
jge
and
test
stc
loop
pushf
jge
sub
js
add
fxrstor
out
sub
cmp
daa
and
pop
mov
mov
sub
adc
js
dec
push
jle
and
inc
das
movsl
ds
pop
mov
mov
mov
aad
push
mov
jecxz
adc
push
movb
addl
mov
test
mov
lahf
mov
test
mov
aas
inc
pop
daa
lcall
in
push
rclb
xchg
mov
dec
shlb
sbb
sbb
dec
int1
ljmp
pop
loopne
xor
ljmp
movsb
jo
cmp
flds
mov
shl
cld
jge
pop
dec
dec
aad
fdivrl
and
add
cmp
mov
dec
fstpt
pop
shrb
mov
dec
in
pop
jno
mov
push
leave
imul
xchg
insb
mov
fdiv
pushf
add
ret
(bad)
je
jne
fistps
cmp
sub
add
jecxz
fbstp
mov
adc
in
mov
mov
js
push
jno
push
jg
mov
jnp
add
inc
dec
and
fildll
inc
repnz
push
xchg
mov
gs
aaa
jmp
cmp
cs
inc
sahf
pop
and
int1
mov
repnz
cli
rol
pop
inc
mov
mov
or
(bad)
dec
xlat
push
aad
xchg
jg
imul
enter
repnz
push
mov
imul
lahf
pop
loop
shl
pop
inc
rcrb
jp
lods
pop
dec
mov
xchg
repz
out
test
pop
mov
ret
mov
xchg
test
sbb
inc
data16
cld
pop
jmp
shl
push
cli
push
inc
inc
adc
add
sbb
fildl
cmp
add
es
imul
test
xchg
test
scas
cmp
jge
mov
imul
xorl
mov
add
out
in
sti
mov
jge
mov
sub
loope
cwtl
or
or
xchg
in
cmp
sbb
js
cmp
fnstenv
xchg
or
mov
pop
add
mov
pop
cmp
and
sub
outsl
dec
jmp
push
int3
pop
xor
or
push
push
inc
sub
mov
arpl
mov
pop
clc
mov
test
sti
(bad)
sbb
mov
cmp
ljmp
mov
(bad)
fcmovu
adc
sti
cmp
cmc
cltd
jl
std
adc
mov
push
push
ret
mov
in
xchg
xor
mov
push
pop
cmp
lcall
sbb
mov
(bad)
add
loop
adc
test
jp
outsl
dec
lods
xchg
cmc
xorl
shl
push
fisubs
push
sarb
sub
into
mulb
imul
inc
xor
subb
mov
push
cld
stc
mov
dec
pop
mov
aas
int1
fs
repz
iret
inc
shll
mov
adc
sbb
(bad)
pop
cmp
iret
insb
(bad)
xchg
mov
gs
adc
movsb
adc
mov
and
jge
or
mov
pop
cli
dec
add
xchg
mov
and
jle
mov
xchg
and
sub
sarb
add
pop
push
out
or
inc
jbe
and
jmp
enter
add
dec
das
lods
adc
stos
mov
cmp
faddp
outsb
mov
xor
int
or
repz
sub
pop
(bad)
push
decb
push
stos
add
xchg
mov
mov
lods
or
mov
ja
pop
inc
lret
mov
dec
cmp
or
jnp
shrb
test
in
lahf
jl
pop
iret
(bad)
scas
add
in
