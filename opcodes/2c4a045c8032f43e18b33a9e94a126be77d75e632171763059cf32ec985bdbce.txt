xor
out
jle
test
jbe
or
push
push
pop
push
test
xor
add
jae
mov
shll
adc
adc
sarl
bound
idivl
lds
cmp
movsl
sti
stc
or
stc
mov
adc
adc
adc
fldcw
or
filds
fs
ret
sbb
loope
pop
orl
dec
in
nop
and
push
push
pop
clc
jl
pop
(bad)
popf
inc
pop
lea
cmc
repz
or
jno
push
xor
mov
jmp
cmp
gs
je
or
push
cmp
adc
and
ret
fwait
pop
sub
test
xor
mov
sub
xchg
adc
sahf
fwait
xor
rorl
rcrb
xchg
cltd
js
or
pop
lcall
dec
pop
nop
rorl
sahf
pop
cmpsb
and
repnz
loope
xlat
test
pusha
sbb
in
cwtl
outsb
aaa
mov
fnstenv
sub
inc
push
jmp
pop
inc
scas
aam
andb
jp
lea
int3
or
ljmp
push
test
cmp
push
pop
insl
sub
sbb
aaa
cmp
mov
mov
cmpl
ds
dec
cmc
jne
loop
fiadds
or
xor
add
in
fcomi
or
loope
cmp
cli
jb
or
fstl
jne
pop
fsubp
push
adcb
inc
data16
imul
inc
add
xchg
mul
xchg
mov
in
or
lret
and
imul
scas
pop
aad
add
ds
test
addr16
idivl
pop
ss
and
adc
jl
lock
xchg
lods
mov
push
mov
pop
cmpsb
sbb
jns
dec
or
loope
cmpsl
mov
nop
enter
cmpsb
mov
loop
jne
scas
test
sti
int1
xor
mov
loope
shrb
out
mov
bound
shrl
mov
cmpsl
push
xorl
insl
faddl
pop
arpl
(bad)
out
inc
ljmp
test
es
std
shrb
jle
or
add
test
les
scas
xlat
cwtl
cmpsb
pop
xchg
mov
jle
test
jp
pop
jmp
addr16
sub
mov
sahf
repnz
mov
cmp
jmp
decb
hlt
sub
inc
pushf
inc
cmc
enter
mov
xor
adc
int1
lahf
data16
popa
cmpsb
mov
movsb
and
das
faddl
pop
ss
insl
mov
dec
mov
fimuls
mov
clc
dec
pop
les
jmp
stos
rclb
mov
sbb
lds
xor
test
data16
lods
sub
mov
daa
imul
and
jmp
(bad)
pop
push
add
ljmp
scas
pop
add
sub
out
pop
add
shl
inc
sar
push
dec
mov
adc
and
fistl
or
stos
add
arpl
test
fldl
push
pop
fiaddl
inc
xlat
add
test
xchg
insb
out
fiaddl
mov
in
inc
sub
xchg
lea
jg
dec
cld
loop
mov
repz
pop
xchg
jno
push
out
mov
ret
pop
cmp
add
or
sbbl
add
(bad)
and
xor
rcr
mov
inc
out
inc
push
and
adc
xchg
jo
out
push
std
frndint
ret
adc
mov
cld
inc
bound
cli
add
out
int3
cwtl
ret
and
(bad)
xchg
xor
mov
pusha
or
lods
jno
inc
cmpsl
std
jne
sahf
lock
add
cmp
or
arpl
sbb
sbb
and
int3
in
mov
stos
daa
sarb
cmc
push
call
xor
sub
and
add
(bad)
and
xchg
mov
xlat
adcb
jg
je
(bad)
pop
jge
imul
jno
xorl
insb
dec
sub
xor
mov
xchg
in
mov
push
insb
int
rclb
stos
int1
push
pushf
cwtl
fsubrl
rcrl
add
xchg
sbb
in
fwait
add
shll
mov
xchg
cmp
jnp
xchg
stos
addr16
cld
insl
movsb
adc
loope
fldenv
outsl
dec
dec
pop
int1
cmp
enter
hlt
mov
pop
cmp
mov
jmp
push
popa
dec
mov
inc
sub
rcl
mov
(bad)
(bad)
jb
sarb
xchg
(bad)
popf
push
iret
jecxz
jle
repz
aaa
push
ror
scas
lds
add
imul
int1
int1
sbb
loope
inc
rorb
dec
popf
mov
inc
push
inc
cmp
jp
(bad)
add
cmp
push
adc
add
inc
mov
jne
lods
add
push
ss
(bad)
aam
or
fs
test
(bad)
jno
sbb
test
pop
mov
stc
imul
(bad)
dec
jb
(bad)
stc
jne
imul
push
mov
xor
bound
fiadds
pop
inc
fisubs
mov
aad
out
dec
inc
add
sarb
cmp
adc
std
add
mov
lds
dec
cmp
insb
lds
mov
cmp
mov
pop
call
out
pop
loope
or
in
das
rcrl
cmc
xchg
mov
sahf
in
xor
insl
push
and
xchg
pushf
add
popa
shlb
or
leave
rcll
xchg
adc
int3
xlat
jp
cli
fisubrs
test
test
fs
jg
aad
sub
into
add
std
aaa
add
jne
push
les
mov
mov
push
test
pop
imul
dec
and
and
outsb
iret
data16
(bad)
mov
or
hlt
aad
mov
pop
pop
xlat
fimull
mov
inc
call
daa
mov
outsb
sbb
xchg
jo
fdivl
call
jns
neg
outsb
outsl
jle
outsb
iret
pop
and
bound
xchg
mov
push
repz
jb
xor
push
pop
fs
cmpsb
repz
and
adc
dec
popf
adc
cmpsb
dec
insb
lcall
inc
mov
add
iret
shl
pop
push
data16
addl
stc
jbe
test
repnz
pop
movsl
pop
mov
pop
gs
daa
cld
test
jecxz
sbb
test
(bad)
ljmp
xlat
and
loop
cmp
rol
push
xchg
pop
rcll
outsl
pop
fwait
pusha
mov
inc
loope
pop
ret
iret
shlb
out
or
sbb
and
out
and
lahf
xor
int1
jecxz
iret
jmp
jo
ficomps
out
scas
jo
xchg
mov
xchg
inc
loope
loop
pop
sub
cld
into
movsl
or
test
mov
mov
xor
lds
mov
xchg
sbb
lret
cmp
mov
and
jmp
jns
mov
addr16
jne
sbb
or
imul
add
mov
lock
jbe
sbb
inc
out
repnz
movsb
ljmp
into
pop
ss
stc
jecxz
in
and
lret
sbb
(bad)
daa
pop
aas
xor
mov
xchg
add
(bad)
and
sbb
push
cmc
(bad)
insb
push
outsb
inc
mov
jl
leave
and
or
mov
enter
jg
pcmpgtb
aad
pop
xor
mov
mov
mov
in
aad
int3
shr
adc
shl
das
dec
xchg
les
or
adc
test
cmpsb
push
inc
repz
lock
add
rolb
lret
jne
mov
cmp
mov
or
push
mov
add
int
cmpsl
mov
pusha
lods
dec
inc
mov
arpl
int1
jg
inc
fcomi
filds
pop
addr16
cmpsl
and
push
subl
fisubl
mov
xor
out
push
(bad)
(bad)
loopne
stc
fld
adc
mov
movsl
mov
rclb
aaa
fdivl
test
mov
jb
xor
ds
fldl
or
fnstenv
push
out
outsl
cmp
test
mov
gs
adcl
scas
fstps
mov
push
(bad)
pop
je
adc
mov
imul
or
pop
sbb
ja
outsl
jmp
loopne
jl
mov
ret
dec
je
(bad)
jae
movsb
adc
jmp
add
es
and
and
loopne
mov
ds
das
xchg
repnz
mov
cld
push
fidivrs
sub
jmp
or
idiv
test
pop
int1
lods
xchg
xchg
iret
