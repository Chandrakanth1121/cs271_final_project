int3
arpl
lcall
xlat
repnz
dec
mov
or
shlb
lcall
scas
xchg
jo
cmpsl
mov
xor
test
iret
or
daa
pop
(bad)
loopne
mov
clc
stos
dec
gs
fstp
mov
sahf
arpl
out
push
sbb
sbb
into
test
and
add
insb
pushf
iret
aam
push
sarb
xchg
pop
fs
adc
enter
fwait
pop
mov
add
bound
xchg
roll
rorl
push
ret
sbb
xchg
push
sbb
lods
popf
out
push
mov
push
popa
mov
je
xor
push
shrl
pushf
lods
sbb
inc
popf
and
fldl2t
jns
lods
mov
fdivrs
in
xchg
xchg
jo
jae
jmp
xchg
mov
in
and
lret
add
sub
inc
jp
es
xchg
sub
sub
clc
push
fs
jbe
jno
lret
mov
ret
inc
dec
stc
push
lret
mov
jnp
and
xchg
sti
rclb
pop
clc
scas
and
xchg
enter
xor
iret
push
in
ds
mov
nop
loopne
ret
jge
into
rclb
lea
out
rcll
(bad)
pushf
mov
out
push
sub
jns
jnp
test
and
mov
cmpsb
sbb
int3
lods
add
out
into
(bad)
imul
sub
and
sahf
push
add
addr16
fbld
in
add
leave
movsl
(bad)
hlt
ret
jge
mov
mov
inc
lock
scas
popf
xchg
cmp
out
loope
and
loope
and
rcll
pushf
(bad)
xchg
lods
jo
ret
addr16
test
adc
jp
jmp
ficompl
negb
shrb
aam
mov
pop
adc
xor
imul
mov
scas
dec
xchg
(bad)
mov
lcall
sbb
push
imul
mov
pushf
and
lods
adc
and
fsubrs
add
insb
mov
loope
mov
add
and
nopl
pop
lcall
testl
jnp
movb
sbb
subl
ja
mov
fimull
mov
dec
in
fldcw
andb
pushf
fwait
jo
(bad)
out
dec
jmp
fcoms
enter
dec
call
fisubl
subb
adcb
mov
loop
pop
xor
dec
(bad)
dec
arpl
dec
xchg
jns
mov
dec
push
inc
ficoml
dec
xchg
mov
out
leave
lret
(bad)
adc
push
cs
call
sbb
repnz
mov
jl
push
xchg
lea
cmpl
dec
lret
repz
or
mov
popa
(bad)
mov
mov
out
pop
push
dec
or
fnstenv
adc
pusha
dec
and
aad
adc
mov
and
test
rclb
movsl
mov
mov
xchg
(bad)
jns
fisttpll
arpl
lcall
inc
arpl
pop
pop
mov
push
in
sahf
call
fistpl
int1
inc
push
(bad)
dec
push
or
xchg
testl
jo
mov
jecxz
into
inc
mov
fnstcw
out
loopne
mov
mov
pusha
ficompl
push
data16
lods
les
fdivrs
repz
mov
push
push
inc
and
cmp
out
mov
popf
sbb
jp
inc
pop
xchg
loop
fdivrs
mov
cs
shll
dec
pop
pop
scas
fsubp
cmpsb
sbb
xchg
ret
ds
popf
arpl
inc
cmp
das
and
xchg
push
jge
popf
test
jmp
lods
xchg
push
sub
pop
mov
mov
pop
pop
sbb
int3
imul
pop
out
push
scas
addr16
jbe
lret
cltd
cmp
sarb
and
orb
out
scas
jb
pop
xchg
add
adc
cmpsb
js
out
inc
ret
dec
mov
mov
pop
out
mov
shl
cmp
pushf
adc
lock
data16
(bad)
dec
add
outsl
lret
mov
sbb
mov
jle
stc
adc
sbbb
fucompp
scas
je
cltd
dec
sub
xor
push
xor
cli
dec
sub
daa
sub
rcr
xchg
negb
jg
adc
(bad)
cmp
ds
pop
ds
shll
cli
cmp
pop
cmp
or
iret
aas
mov
insb
imul
jne
push
or
adc
gs
loope
out
add
mov
push
movsb
(bad)
pushf
frstor
fld
ret
mov
out
pop
cmp
sub
and
cltd
dec
fistpl
rep
in
aad
xchg
ret
test
pusha
out
push
andl
dec
push
movsb
ret
int3
ret
dec
test
loope
imul
push
xchg
imul
arpl
ret
lret
hlt
fisubs
and
jne
sub
leave
fisubs
push
or
mov
in
sbb
lds
(bad)
add
mov
mov
popa
push
dec
int3
(bad)
jnp
(bad)
jge
repnz
popf
mov
push
mov
dec
cmp
pop
cmpsl
adc
cmp
mov
mov
repz
xlat
mov
push
(bad)
mov
xor
inc
lahf
sbb
aas
int1
shll
or
(bad)
(bad)
lcall
(bad)
cmp
inc
pop
xchg
mov
(bad)
sbb
roll
addl
dec
popf
xchg
jne
dec
cmpb
sbb
dec
mov
pop
cmp
je
mov
fwait
or
xchg
fistps
xchg
sahf
pop
fwait
cmp
or
mov
add
xchg
les
push
xchg
fbld
imul
cmp
das
dec
xor
adc
or
(bad)
mov
jbe
insb
pop
and
ret
and
mov
sahf
je
lahf
movsb
imul
out
sti
add
repnz
rorl
and
in
sbbb
pop
(bad)
mov
jne
lret
pop
scas
pop
lahf
loope
pop
lods
pop
dec
mov
mov
cmp
cmc
xor
jbe
out
repnz
adc
insl
dec
jnp
aas
jbe
add
inc
rcrl
pop
fcoms
call
fmul
jno
call
xchg
and
fnclex
insb
push
dec
xor
mov
dec
stos
int1
sub
cli
ret
bound
xor
hlt
push
fucomp
and
mov
mov
shrl
or
ss
mov
mov
(bad)
push
dec
ss
jnp
fsubs
adc
push
(bad)
fmuls
mov
push
jl
cmp
pop
jg
out
lcall
js
(bad)
mov
jle
add
xchg
imul
fwait
or
push
scas
or
mov
out
lock
inc
lea
mov
pop
fwait
mov
pop
mov
insb
bound
fdiv
out
mov
fnstsw
or
mov
in
imul
inc
cmp
mov
inc
int
ret
mov
push
or
sub
insl
adc
sti
ret
ds
jl
mov
mov
aad
push
cwtl
jp
adc
mov
add
rcrl
adc
lcall
lods
aaa
out
and
clc
and
sub
cmp
xor
mov
dec
aaa
adc
or
cmc
mov
add
outsb
fmulp
daa
mov
inc
and
fisubrs
mov
xchg
cmp
mov
xchg
fimull
test
lods
movsb
popf
pop
cmp
sahf
sbb
xor
and
lahf
cmp
mov
loop
cmpsb
int
sub
inc
jl
ja
or
shrb
ret
jge
pop
xchg
pop
cwtl
bound
dec
dec
mov
mov
cmpsb
adc
movsl
arpl
lock
mov
inc
cwtl
fists
push
out
aam
mov
adc
ss
push
lahf
pop
mov
xchg
inc
sbb
leave
push
push
inc
in
rcl
stos
sahf
mov
jno
and
jne
xor
add
add
out
sti
or
mov
insl
inc
xchg
test
mov
push
push
stos
bound
sub
fucom
in
insl
insl
adc
mov
push
(bad)
fsubs
aas
std
cmp
pop
fs
cld
fwait
nop
sub
adc
pop
or
lock
sbb
mov
lret
sbb
sbb
add
cmpsb
mov
lret
push
xchg
xchg
fldenv
or
imul
out
fwait
rcll
fadds
fs
(bad)
sub
push
fistps
fucom
movsb
or
call
mov
shlb
shl
daa
mov
