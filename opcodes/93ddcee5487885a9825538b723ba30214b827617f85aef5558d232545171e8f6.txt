fcmove
arpl
les
cmpsb
out
out
dec
lea
int
insl
adc
cmp
(bad)
pop
dec
ds
jae
inc
pop
push
pop
dec
and
stc
sub
(bad)
jmp
xor
sbb
inc
sub
add
arpl
idivl
pop
sbb
pop
inc
and
test
and
dec
inc
xor
push
fimull
(bad)
and
(bad)
jno
fnstsw
lea
shr
iret
xchg
lock
fcompl
mul
jp
xchg
dec
sub
inc
sbb
mov
addb
mov
xchg
fcom
push
or
add
xchg
inc
(bad)
cmc
lds
leave
ja
hlt
pusha
shll
in
sbb
xchg
xor
call
test
pop
add
stc
sti
enter
add
sti
cs
add
aas
push
sub
jo
out
dec
push
inc
adc
lds
int
xor
cmp
call
pcmpeqd
aas
sbb
adc
aaa
out
sub
andl
and
and
dec
je
jb
dec
jl
cmp
les
ficoml
mov
mov
xorb
adc
ljmpw
add
fldcw
dec
ror
pop
add
das
inc
dec
orb
stc
mov
lret
popf
sbb
fistpll
jne
lret
cmpsb
xchg
loope
jecxz
stos
fcomip
pushf
negb
int3
bound
push
stos
mov
sti
imul
mov
xorl
xlat
stc
push
lods
into
insb
inc
push
sti
fprem1
mov
adc
mov
xor
fstp
pop
lcall
and
or
cmpsl
pop
push
fsubs
cmp
fidivl
addb
fisubrl
hlt
test
fidivl
andb
sbb
or
push
mov
mov
push
dec
ret
pop
out
mov
ljmp
add
mov
mov
and
cmp
inc
mov
test
out
ret
outsl
push
adc
dec
movsl
xor
sbb
shrl
cmpsl
push
movsb
in
push
in
add
out
sub
mov
sub
ret
lret
iret
cmpsb
sti
les
aas
mov
add
xchg
xor
mov
in
rep
adc
push
int3
sti
lret
add
mov
aam
mov
and
imul
inc
lods
lret
repz
mov
push
jo
arpl
pop
sbb
stc
add
add
and
ffreep
aas
ret
adc
andb
cmp
test
fadds
(bad)
int3
xchg
shl
imul
fsqrt
sahf
(bad)
push
pop
das
enter
sahf
push
lds
imul
es
or
out
push
adc
call
cmp
sbb
rep
mov
push
fwait
sub
ret
adc
mov
xchg
xchg
mov
(bad)
xchg
xchg
pop
scas
leave
out
test
push
mov
int1
(bad)
in
pusha
adc
push
test
jg
outsl
mov
cmp
mov
cmpsb
in
mov
ja
incl
and
jl
in
bound
pop
push
lea
inc
cli
cmp
call
std
bound
or
faddl
jecxz
lds
mov
in
pop
shlb
pop
popf
mov
imul
add
inc
inc
popf
fimuls
sbb
xor
pushf
xchg
mov
out
or
and
inc
fists
ret
mov
mov
enter
xchg
scas
mov
int
(bad)
aaa
add
and
and
lock
inc
mov
sbb
les
jl
out
pushf
push
and
jecxz
mov
jmp
sbb
inc
lahf
jp,pn
lret
stc
fcmovnu
push
div
into
push
push
jb
js
dec
sub
imul
xlat
je
push
jecxz
sub
fidivs
or
fisubl
mov
in
mov
mov
xchg
jbe
flds
outsl
add
neg
mov
jns
test
test
fcomp
call
imul
mov
or
dec
mov
scas
call
(bad)
adc
loope
sub
xor
jle,pt
mov
cld
pop
mov
(bad)
xchg
and
int1
lea
(bad)
das
xchg
and
dec
enter
insl
sar
xchg
cmp
cmp
ss
shl
xchg
dec
insb
pushf
fcos
movsb
daa
xor
and
outsl
mov
lock
movb
lret
or
iret
sbb
cmp
jnp
adc
scas
jno
fisubs
(bad)
jp
nop
and
cmpsl
ja
test
xor
mov
sub
sbb
aad
es
mov
roll
pop
mov
mov
xor
xor
loopne
hlt
sub
pop
bound
jmp
and
(bad)
iret
add
sub
shl
inc
insl
or
addl
cmp
add
mov
sub
aad
cmp
aas
add
out
dec
sbb
imul
imul
add
stc
push
rorb
or
pushf
(bad)
pusha
jbe
mov
mov
mov
into
pop
lret
shll
add
in
xchg
in
cs
out
push
push
gs
into
cmp
stc
aas
rcrb
aas
lods
or
(bad)
jle
into
sbb
push
jae
shl
mov
rcrb
mov
pop
adc
fs
(bad)
(bad)
sbb
loope
adc
sbb
xchg
inc
inc
adc
int
jp
out
jo
lret
jg
mov
mov
test
outsb
in
lea
(bad)
dec
adc
adc
data16
mov
xchg
pop
pop
push
pop
and
cmp
mov
scas
inc
pop
add
cmpsl
in
adc
inc
idivb
in
out
push
xor
(bad)
push
mov
or
hlt
repnz
test
jns
stc
(bad)
lds
int1
das
aad
jb
inc
(bad)
es
jp
pop
data16
in
dec
loopne
outsb
cmpb
jmp
push
jns
(bad)
push
xchg
sbb
pop
and
cltd
cmp
cld
add
inc
sbb
pop
sbb
insl
out
ret
mov
xchg
ds
test
aaa
fsubs
iret
or
loope,pt
out
dec
sub
imul
dec
jecxz
nop
(bad)
out
jne
add
cmp
cmp
xchg
jmp
cmp
pop
shrl
mov
cltd
cmc
push
jb
sbb
rolb
adc
add
or
ds
lahf
mov
push
mov
push
lock
push
adc
and
push
mov
test
imull
mov
ja
data16
addr16
pop
pop
popf
pop
jnp
inc
test
cmpsb
add
out
lds
fmul
and
call
inc
or
pop
cld
popf
lea
jne
(bad)
stos
mov
mov
pop
fwait
cmp
cltd
xchg
fwait
pop
sar
sbb
fidivrl
sub
mov
cmp
scas
js
cltd
clc
or
jl
cwtl
in
into
jns
aaa
mov
sar
(bad)
sub
pop
inc
stos
and
pop
pusha
add
repnz
sarb
pop
filds
jb
bound
hlt
int3
int3
jno
xchg
sub
leave
push
inc
dec
stos
lret
ljmp
push
xchg
push
lods
push
xor
mov
fs
dec
gs
repz
movsl
dec
mov
or
stos
lahf
test
pop
out
and
sub
sti
and
xlat
fnstenv
sti
popa
scas
out
pusha
andl
jge
shrl
mov
xchg
push
dec
imull
mov
pusha
and
xchg
aas
lock
rorl
in
stos
cld
aam
fidivrl
pop
in
inc
xchg
adc
stos
mov
jb
xchg
adc
and
(bad)
fcompl
xchg
(bad)
add
cmp
mov
inc
jne
mov
sbb
dec
(bad)
fildll
jge
adc
cmp
inc
xor
ja
pusha
mov
aam
xchg
jns
movsl
faddl
pop
xor
xor
push
mov
cmp
movsl
pop
adc
loope
(bad)
popf
imul
mov
jo
mov
loopne
push
out
(bad)
mov
in
popa
jnp
xor
(bad)
ja
sub
int1
mov
jg
pushf
push
xor
or
push
aad
jbe
les
cld
inc
aas
cli
push
mov
inc
imul
adc
loop
push
xchg
cmp
lods
outsb
fisttpl
(bad)
fmuls
data16
pop
inc
inc
jne
add
rcr
add
rolb
or
inc
push
std
aad
push
