jns
jmp
scas
imul
sub
mov
cmp
fisttpl
das
in
andl
divb
arpl
in
xor
mov
and
and
enter
add
fdivrl
ljmp
and
(bad)
cmp
mov
cmp
mov
cmp
fisttpl
cmp
pushf
pop
mov
arpl
in
aaa
addr16
add
cmc
cltd
or
or
lods
and
das
out
xorb
ret
int1
lret
js
scas
in
jp
adcb
hlt
mov
lods
cltd
and
xor
add
movsl
inc
pushf
pop
stos
inc
mov
xchg
addr16
mov
inc
xor
lea
out
shll
insb
xchg
cs
in
xor
ljmp
fstpt
ljmp
and
(bad)
cmp
mov
cmp
mov
cmp
fisttpl
cmpsb
cmp
pop
and
push
das
(bad)
and
in
sbb
hlt
lods
cmc
mov
lods
pop
lea
clc
inc
cmp
push
test
add
mov
shrb
imul
test
jae
ljmp
outsl
dec
or
lods
cmc
mov
lods
pop
lea
clc
inc
cmp
push
test
add
add
add
imul
test
jae
ljmp
mov
or
scas
imul
andb
push
dec
jg
xorb
and
push
scas
imul
push
lods
cmp
and
clc
test
inc
imul
shlb
insb
xchg
xor
in
xor
ljmp
sub
mov
mov
(bad)
cmp
mov
cmp
mov
cmp
fisttpl
cmpsb
cmp
scas
imul
jg
mov
and
je
scas
imul
jecxz
es
sub
add
xor
loop
and
imul
test
mov
divl
lea
lods
lods
clc
out
mov
sub
add
and
push
xor
ljmp
xor
jg
daa
mov
xor
sub
stos
cmpsb
jmp
xor
cltd
xchg
xor
and
sahf
dec
and
mov
mov
jmp
xchg
(bad)
stos
and
test
and
je
test
add
xor
push
and
sub
and
imul
test
jae
ljmp
jno
cmp
ljmp
scas
imul
insb
xchg
sub
lods
jns
mov
xchg
cld
stos
and
add
imul
sub
adc
cmp
mov
cmp
mov
cmp
pop
and
and
or
inc
mov
cmp
mov
cmp
mov
cmp
fildl
movsl
cmp
mov
mov
(bad)
cmp
mov
cmp
mov
cmp
mov
sub
addr16
sbb
lods
insl
add
sub
mov
aas
mov
shlb
stos
enter
shlb
sbb
xor
inc
xor
xor
mov
inc
sub
(bad)
cmp
fildl
movsb
cmp
or
(bad)
in
push
das
jnp
ljmp
sti
scas
pop
shrb
stos
fisubl
daa
mov
sarb
scas
loopne
addr16
pop
xor
and
bound
inc
xor
insb
xchg
sub
mov
inc
cmp
insb
cmp
adc
mov
cmp
mov
cmp
mov
cmp
pop
and
and
push
lods
and
(bad)
cmp
mov
cmp
mov
cmp
xor
hlt
and
pop
and
xor
jg
adc
out
stos
fildll
fildl
das
in
andl
lock
arpl
in
cmp
mov
cmp
mov
cmp
mov
cmp
sub
xor
aaa
or
test
cmpsl
lods
and
(bad)
cmp
mov
cmp
fildl
movsl
cmp
mov
mov
(bad)
cmp
mov
cmp
mov
cmp
mov
cmp
addr16
daa
aaa
outsl
dec
sbb
inc
sub
sbb
sub
dec
enter
shrb
out
xor
outsl
dec
pop
xor
sub
and
popa
sub
addr16
rolb
(bad)
cmp
mov
cmp
mov
cmp
mov
cmp
fildl
movsb
cmp
popf
and
push
das
or
stos
imul
subb
xor
pop
das
and
sarb
or
xorb
je
sub
xorb
fidivl
addl
test
and
call
js
int1
lret
js
mov
shrb
stos
cmc
and
mov
xor
cltd
dec
aaa
jns
mov
sub
shll
pop
xor
test
jae
cmpsb
out
xor
jecxz
mov
mov
add
xor
stos
and
ljmp
and
ljmp
xor
add
inc
mov
les
xchg
pop
cld
or
ret
mov
adc
pop
xchg
stos
mov
add
sbb
cwtl
lods
and
jb
and
and
xchg
xor
stos
cmpsb
pop
add
es
(bad)
out
lret
js
int1
lret
js
jnp
clc
inc
xor
insb
test
jae
cmpsb
sahf
cmpxchg
stos
cmc
and
jnp
xor
jbe
or
lods
and
jae
scas
fwait
pop
xor
fwait
call
xor
js
push
add
movsl
cmp
mov
and
inc
xor
cmc
cltd
inc
push
xor
push
and
ret
test
mov
cwtl
push
mov
and
subl
test
out
mov
sub
add
call
and
push
mov
adc
lock
xor
and
dec
scas
fdiv
lods
pop
and
addr16
pop
xor
cltd
or
push
dec
sysexit
sub
and
lods
push
scas
lods
or
add
scas
ficoms
mov
(bad)
cmp
and
loopne
xor
mov
adc
into
xchg
fimuls
pop
xorl
dec
push
bound
mov
add
test
mov
in
and
(bad)
cmp
inc
push
cs
sub
stos
lods
pop
and
and
pop
scas
and
push
lods
lods
cmp
mov
cmpsb
sbb
mov
and
pop
xor
push
test
mov
inc
xor
mov
daa
mov
cmp
mov
cmp
mov
cmp
mov
cmp
sbb
jb
pop
mov
or
xorb
mov
xor
jmp
scas
fcoml
mov
(bad)
cmp
xor
cmp
rolb
mov
jo
das
sbb
je
cmpsb
call
or
mov
add
sub
dec
scas
cmpsb
sbb
ret
(bad)
(bad)
stos
and
inc
shlb
and
ljmp
sub
cmp
mov
stos
push
call
jb
sub
push
xor
fisubs
and
add
ljmp
jae
dec
or
or
inc
scas
out
loop
(bad)
lock
xor
stos
pop
sub
lods
or
inc
shrb
into
(bad)
call
and
imul
addr16
adc
dec
mov
shlb
sub
mov
and
mov
cmp
dec
mov
inc
shrb
xor
mov
fldcw
xor
mov
inc
shrb
cmc
(bad)
adc
imul
movsl
sub
movsl
shrb
inc
shrb
out
(bad)
sub
sub
shrl
lock
sub
add
lods
and
sub
cmc
jg
sub
movsl
shrl
inc
shrb
out
(bad)
sub
sub
shrl
lock
sub
mov
and
xorl
es
fidivrl
shrb
imul
lods
repz
and
or
aam
(bad)
push
imul
lods
repz
fidivl
mov
sub
leave
insl
add
add
imul
dec
and
incl
lock
push
xor
sub
ljmp
daa
dec
jg
sub
ljmp
mov
and
or
add
daa
add
dec
incl
sti
and
add
inc
mov
push
add
in
cmpsb
clc
lods
jmp
ljmp
es
mov
push
ljmp
movsb
out
stos
and
mov
movlps
out
rclb
out
jg
jbe
rclb
out
jg
outsb
daa
and
das
movsl
xchg
fldl
lods
and
cld
stos
and
add
and
add
and
add
and
das
sbb
cmp
lods
out
or
in
push
lods
cmc
rclb
loope
mov
es
and
loopne
and
or
in
add
push
shlb
jg
data16
bound
add
ljmp
pop
and
pop
lods
xchg
xor
and
out
mov
ljmp
out
xor
sub
addb
js
int1
lret
js
int1
lret
js
jl
aaa
and
fisubrl
push
push
inc
out
xor
xor
sbb
mov
