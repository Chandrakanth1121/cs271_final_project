stc
add
cltd
stos
pop
shll
test
cmp
es
mov
popf
and
and
or
xchg
mov
inc
mov
addr16
cmp
mov
xchg
repnz
sub
ss
insb
jns
jmp
faddl
into
stos
imul
insb
cmpsl
add
jg
adc
xchg
ret
sub
and
sarl
scas
clc
lea
xchg
repz
inc
fstpl
nop
xor
mov
dec
arpl
pushf
and
mov
sar
add
in
lret
xchg
xlat
push
ret
and
xchg
call
mov
pop
push
test
mov
dec
inc
dec
adc
mov
cmp
test
lahf
sub
cli
aaa
and
repnz
jle
lds
cmc
push
push
xchg
pop
movsl
hlt
mov
xchg
and
pop
mull
lds
mov
cltd
jns
push
mov
xor
inc
sbb
mov
lea
or
out
add
jmp
xorl
or
or
loope
je
pop
(bad)
xor
scas
or
cwtl
and
ret
or
mov
mov
jnp
and
mov
xlat
mov
mov
lsl
mov
into
push
inc
dec
mov
and
inc
cltd
jle
xor
mov
inc
mov
cmp
mov
xor
insl
inc
(bad)
mov
pop
sub
iret
xchg
jb
mov
pop
inc
stos
inc
fisttps
por
mov
or
in
sbb
xlat
jge
pop
test
test
dec
adc
push
dec
pop
dec
xadd
out
add
out
push
lock
jne
(bad)
shll
pop
push
jo
sub
mov
cwtl
fcmove
andl
out
mov
add
jmp
shrb
inc
(bad)
xchg
mov
in
adc
int3
es
push
sub
xchg
shlb
jb
into
add
mov
fldenv
into
add
xchg
mov
or
dec
(bad)
fsts
add
shlb
(bad)
ds
insl
stos
or
add
or
fwait
xor
cmp
xor
mov
andl
fucomip
test
orl
jle
add
and
mov
pop
dec
and
jmp
dec
xchg
testl
jecxz
shll
idivb
rcr
lods
xchg
pop
push
int1
ret
aas
mov
mov
packssdw
ret
jg
repz
in
and
push
mov
iret
ret
mov
sbb
or
roll
or
mov
sub
ds
and
xchg
mov
and
into
in
xor
inc
sub
jb
sbb
push
clc
ret
into
push
adcl
(bad)
aas
xchg
mov
adc
dec
cmp
mov
push
pop
cs
je
push
scas
int3
addl
sbb
xchg
pop
xor
rcll
cmp
adc
add
out
shll
inc
repnz
adc
xchg
push
xchg
int
lds
lds
add
cmpl
rclb
jp
mov
les
into
cmp
add
cmpsb
dec
inc
lods
and
jmp
adc
xor
imul
loope,pn
shrb
(bad)
rorb
xor
movhps
lods
or
and
out
pop
lock
sub
xlat
int3
test
sub
mov
or
movsl
ss
push
es
aaa
sbb
mov
(bad)
hlt
mov
push
push
pop
pop
push
nop
mov
psubusb
shrb
adc
sub
or
insl
fdivs
scas
sub
pusha
push
call
add
push
mov
testl
inc
test
stos
sub
fdivl
jle
jo
mov
push
pushf
mov
mov
in
pop
dec
or
imul
aad
or
stos
mov
rorl
cli
test
iret
sbb
je
addr16
ljmp
or
mov
push
mov
pop
lret
enter
dec
and
and
mov
lds
dec
xchg
push
mov
out
jno
dec
lahf
mov
in
cwtl
mov
and
mov
fcmovb
movsb
or
mov
pushf
mov
insl
jns
int3
repnz
mov
ret
adc
inc
je
push
pop
mov
stos
call
cmpsl
pop
adc
scas
mov
jno
aam
sbb
dec
ljmp
xor
mov
pop
mov
add
aas
jae
or
fwait
clc
push
jne
popf
stos
sarb
mov
std
jp
cld
mov
mov
add
xchg
test
mov
mov
push
leave
stos
shlb
in
negb
xchg
addr16
mov
lret
mov
cmpsl
adc
sub
or
mov
dec
add
mov
mov
enter
dec
je
mov
test
and
insl
enter
cwtl
cld
bound
adc
mov
jg
mov
inc
push
mov
mov
(bad)
mov
scas
int
mov
or
jle
adc
xlat
stos
or
leave
or
ja
inc
push
addb
lahf
lea
inc
xchg
sbb
dec
mov
movsl
adc
mov
or
jmp
roll
or
sub
mul
cltd
jo
pusha
loopne
inc
lcall
and
mov
(bad)
in
popa
push
mov
mov
and
mov
jge
outsl
mov
xchg
lods
lock
cmc
inc
lret
inc
bswap
xchg
xchg
mov
out
les
test
mov
imul
mov
pop
ja
int
fstpt
cmp
lret
fisttpl
scas
leave
sbb
xor
lods
pop
xor
cmp
scas
mov
xor
aad
mov
adc
loopne
jbe
inc
(bad)
das
sahf
test
and
sbb
dec
cmp
push
aas
sahf
loop
cmp
fadd
ret
shll
test
inc
jb
mov
jmp
xor
jle
jl
or
and
imul
xor
cmpsw
mov
insl
cmp
lds
pop
cmp
cwtl
mov
lods
or
xor
out
adc
adc
fisubl
lcall
adc
push
aas
mov
fsubrs
shrl
rcl
(bad)
rcll
mov
out
jecxz
out
jl
mov
cmp
mov
je
xchg
or
iret
mov
in
ja
ss
inc
inc
jbe
push
push
xchg
xchg
pushf
mov
jae
int3
out
pop
xchg
out
pop
adcl
mov
cltd
shr
popf
shlb
ret
stos
add
jg
mov
shlb
fsts
test
rolb
xchg
xor
jp
mov
sbb
xlat
stos
push
ja
addr16
push
popa
push
bound
mov
stos
ljmp
push
mov
and
or
xlat
lds
jne
lcall
fcompl
jb
mov
imul
or
aad
sub
je,pt
add
xor
sbb
shr
lret
or
push
cmc
sarl
lret
lea
int
and
(bad)
xchg
fmuls
xor
cli
das
movsb
mov
dec
rolb
not
dec
(bad)
stc
lcall
lea
repz
and
pop
data16
loop
(bad)
aam
enter
loopne
aaa
gs
sub
add
sbb
int3
test
jns
mov
shl
bound
push
sbb
mov
in
mov
lret
aad
out
xchg
js
xor
sbb
jp
enter
xorb
xchg
add
cs
cmp
in
xchg
sub
xor
dec
cmc
cs
scas
aas
popf
cmp
pop
lea
mov
and
cltd
stc
xchg
outsl
lods
add
cmp
loop
xor
mov
pop
inc
fidivl
and
add
imul
addl
sub
xchg
out
push
sub
mov
jae
sub
lds
jg
mov
outsb
pop
aas
(bad)
push
scas
sub
pop
add
mov
or
outsb
ret
cmpsl
(bad)
adc
xorb
add
movsb
(bad)
dec
pushf
arpl
js
and
ficomps
cmc
mov
ret
cli
add
aad
je
(bad)
mov
movsl
adc
push
mov
cmpsb
add
cs
fisttpll
dec
out
cmp
or
int1
shrl
push
shll
xabort
jae
ss
and
rorb
std
push
movsb
jmp
(bad)
aas
jno
dec
sub
addb
sub
fistpll
xchg
cli
mov
xchg
int
jecxz
sub
mov
lea
xchg
ss
lock
daa
pop
push
mov
cmc
imul
stos
xchg
jl
popf
popf
pop
cs
inc
aaa
mov
xchg
