nop
dec
or
add
add
dec
add
add
add
add
test
add
add
add
push
mov
add
shrb
add
push
xchg
sub
inc
push
orl
bound
in
jno
pop
es
mov
out
cli
push
out
sub
lahf
cmp
leave
bound
mov
jns
xchg
popa
out
push
mov
pushf
bound
hlt
outsb
dec
push
adc
or
xchg
mov
ljmp
lods
pop
jp
fstp
inc
lcall
mov
sti
cmc
out
push
out
sbb
dec
hlt
push
loope
ret
and
enter
dec
mov
and
fistpl
fwait
loop
cwtl
push
out
aaa
addr16
sti
cmpsl
aam
mov
jecxz
not
adc
outsl
aas
mov
push
cmp
aaa
lea
ret
test
jo
rorb
push
dec
in
adc
push
out
lods
ja
inc
jb
xor
je
aad
les
and
lahf
xchg
or
mov
xor
test
mov
xchg
mov
lds
mov
xchg
xor
inc
add
sarl
mov
js
jge
sub
sub
iret
rcrl
push
in
int1
dec
lods
mov
xchg
or
push
bound
mov
into
enter
jg
sub
testl
(bad)
jmp
mov
sbb
mov
test
(bad)
pop
pop
pop
rep
out
mov
(bad)
insl
lret
xor
andl
insb
fistpll
push
mov
dec
jp
in
mov
fisttps
fxch
xor
ret
ds
je
sar
aas
shll
rcll
xor
mov
ret
jae
das
jno
(bad)
loopne
xchg
mov
lea
enter
in
dec
jg
mov
hlt
inc
mov
jns
push
fildl
jae
dec
in
das
(bad)
or
stc
leave
jle
dec
inc
xchg
sbb
insl
pop
testb
pop
(bad)
movsl
sub
inc
pop
pusha
test
xchg
sub
xor
fs
fidivs
lcall
loope
sub
and
fisttpl
xchg
in
xchg
sub
mov
aad
jle
cmc
into
int
push
movsl
jns
xchg
adc
push
push
pop
imul
cwtl
mov
adc
fiadds
adc
cwtl
outsb
inc
pop
jle
push
ljmp
ljmp
xchg
sbb
xabort
push
mov
pusha
int
jecxz
daa
xchg
or
iret
faddl
xchg
and
cmp
adc
addb
cmp
es
sahf
mov
aam
lret
adc
mov
push
jge
mov
push
push
mov
xlat
or
movb
lcall
testb
cmp
(bad)
or
js
out
imul
rcrl
lock
fcoml
fldenv
test
or
movsb
stc
(bad)
popf
fstps
fisubrs
pusha
call
and
mov
pushf
mov
cmp
into
std
clc
(bad)
outsb
jecxz
add
aam
sub
inc
enter
xor
jle
bound
sbb
push
jmp
lcall
clc
mov
pop
ds
(bad)
jb
(bad)
stos
sub
into
dec
jle
ret
in
cmpsl
mov
push
or
jne
mulb
mov
enter
jge
jb
jmp
mov
ficomps
enter
add
or
push
xor
shlb
insb
inc
sahf
(bad)
xlat
(bad)
cmp
aam
push
adc
adc
imul
repz
stos
sbb
aaa
mov
push
lods
leave
sahf
in
aam
jmp
cmpsl
mov
mov
mov
test
ljmp
sbb
lahf
idivb
xor
jb,pt
inc
mov
fldcw
xor
pop
dec
mov
das
cwtl
pop
addr16
iret
jnp
cmc
mov
sarb
and
xor
add
or
repz
add
fcoml
sub
add
jns
inc
shl
popf
push
and
(bad)
lods
(bad)
imul
dec
stos
jp
inc
hlt
addr16
mov
mov
sahf
xchg
sbb
dec
out
ficompl
mov
cs
aam
test
test
das
mov
dec
pop
out
test
adc
idivb
sub
cli
sahf
movsl
adc
add
inc
mov
mov
mov
lods
imul
push
int3
out
mov
add
push
inc
pop
cld
xchg
out
push
(bad)
mov
push
aad
loopne
or
add
jns
mov
and
sti
aaa
pop
push
leave
lea
pop
loopne
mov
rorb
gs
dec
push
or
call
int
mov
mov
pop
push
add
xchg
(bad)
repnz
inc
dec
cmc
std
add
loope
out
popf
sbb
push
xchg
push
or
in
mov
mov
mov
or
jge
mov
cli
or
ss
push
(bad)
dec
mov
inc
dec
fcom
push
shlb
mov
stc
popa
ljmp
sbb
dec
cld
push
push
std
hlt
jg
jg
mov
cmpb
xor
aam
jbe
and
mov
lods
sbb
popf
xchg
jl
bnd
xor
mov
bound
movsb
adc
mov
dec
aad
xchg
cmp
cmp
xchg
cmp
rcr
sbbb
rolb
pop
rorl
fwait
in
scas
pop
out
sbb
arpl
inc
lds
xchg
jb
lods
jl
(bad)
addb
out
sub
aas
iret
popa
mov
xorl
dec
xchg
jmp
inc
xchg
repnz
arpl
stos
jno
cli
cmp
call
cld
subb
mov
and
test
jnp,pn
mov
cmp
dec
xor
adc
or
mov
(bad)
sub
cli
int1
jge
adc
cmpsb
sub
cmp
xlat
(bad)
loopne
not
mov
popf
mov
or
xor
mov
lcall
jae
fs
jmp
js
nop
push
faddl
mov
ja
mov
dec
test
xchg
js
movl
ds
jb
inc
dec
cmp
mov
xlat
movsb
cli
lahf
sbb
test
sahf
and
dec
imul
decb
sub
pop
aas
and
mov
mov
out
mov
and
(bad)
xchg
mov
or
jae
fistpll
and
dec
inc
push
lahf
adc
cmp
test
lret
cmp
cmpsl
cmp
imul
sub
sub
repnz
fwait
sbb
or
and
or
pop
push
stc
sbbb
inc
mov
jg
rorb
pop
push
cli
test
out
popf
mov
mov
inc
add
(bad)
lods
mov
sbb
repz
ss
xor
push
xlat
out
lods
lcall
xchg
in
ror
cltd
sti
jo
xor
add
(bad)
faddl
xchg
cmp
mov
xchg
ljmp
mov
inc
pop
mov
aam
adc
dec
xchg
lods
cmovs
mov
(bad)
xchg
idivb
aas
mov
rcr
jbe
ss
jne
daa
mov
cld
testl
lcall
mov
xchg
fldenv
xchg
pop
mov
dec
je
enter
out
mov
in
cmp
cld
or
xchg
fwait
enter
(bad)
cltd
(bad)
push
test
jo
xchg
push
insl
outsl
cmp
rcr
push
xor
popa
push
test
je
stos
and
mov
adc
push
mov
sub
(bad)
js
stc
cmp
jbe
mov
andb
cmp
clc
inc
cmpsl
cmpsl
mov
jp
add
jmp
cmpsb
adc
imul
test
test
in
mov
lea
test
jge
pop
push
lods
dec
and
movsl
adc
mov
pop
fs
pop
pop
dec
push
adc
aad
test
dec
jecxz
inc
negb
jns
mov
mov
push
or
lahf
or
stos
bound
cmpsl
mov
subl
loop
pop
call
push
(bad)
outsl
arpl
adcl
push
push
mov
lahf
int3
jle
or
add
test
flds
stos
aam
adc
aam
xchg
xor
loope
push
fwait
sub
sub
lea
dec
xchg
cld
ja
push
adc
mov
addr16
clc
cmp
iret
jg
out
push
or
adc
lahf
xchg
leave
add
inc
lods
cltd
mov
xor
or
add
aad
shl
add
gs
dec
sub
arpl
