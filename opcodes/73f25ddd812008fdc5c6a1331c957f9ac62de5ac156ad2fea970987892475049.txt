cltd
and
iret
pop
bound
xlat
and
mov
xor
dec
adc
je
iret
fists
xchg
clc
(bad)
push
jmp
arpl
push
push
push
ret
lcall
enter
cmp
and
and
xchg
in
xlat
sbb
mov
push
mov
push
mov
xor
dec
gs
gs
fidivl
call
xchg
clc
(bad)
push
stos
inc
incb
in
sbb
lea
dec
xlat
mov
fs
movsl
mov
fisubl
sbb
and
aaa
push
(bad)
push
jb
(bad)
xor
dec
lahf
ret
mov
ss
sbb
in
lods
bound
lret
cltd
jle
jnp
dec
daa
jge
int
inc
scas
in
sub
mov
enter
add
xlat
sbb
mov
push
mov
push
mov
xor
dec
cwtl
hlt
gs
lods
in
ss
dec
ss
in
test
inc
outsl
movmskps
arpl
push
andb
xchg
int
in
lods
in
push
and
enter
jae
sbb
and
bound
lret
jge
dec
enter
(bad)
xlat
and
(bad)
sub
leave
xlat
lods
in
xchg
inc
out
lahf
xchg
int3
add
insb
shrb
push
andb
xchg
int
shrb
mov
enter
jae
lret
add
push
lret
jge
dec
enter
(bad)
xlat
and
(bad)
sub
lret
in
stos
inc
out
(bad)
xchg
(bad)
fists
ret
lods
in
mov
pushf
jle
call
bound
lret
insb
out
outsb
jno
xchg
int3
sub
iret
xlat
lods
in
push
sarl
jnp
dec
daa
jge
int
inc
scas
in
sub
mov
enter
and
arpl
pop
inc
push
mov
push
mov
push
mov
xor
dec
cwtl
hlt
gs
ficoms
test
inc
jp
fs
jle
call
leave
outsb
lds
push
iret
push
mov
ret
lods
in
popa
scas
outsb
into
insb
outsb
in
xlat
sub
jle
(bad)
lods
in
popa
mov
in
xlat
and
cltd
jge
dec
enter
pushf
inc
scas
in
sub
sti
imul
lods
gs
jns
inc
call
insb
in
shlb
jmp
jge
add
inc
hlt
mov
incl
jb
push
push
js
jno
test
xlat
lods
fs
mov
xlat
call
outsb
repnz
(bad)
loop
push
enter
inc
aad
in
popa
mov
in
xlat
sub
jle
aad
in
sub
and
loop
arpl
call
(bad)
xlat
and
(bad)
sub
enter
xchg
in
sar
push
push
daa
pop
bound
lret
push
loopne
xchg
adc
mov
push
push
push
iret
(bad)
jge
(bad)
loop
mov
enter
fists
push
shll
xchg
in
xlat
clc
std
pop
inc
push
mov
push
mov
mov
push
or
jle
shlb
jecxz
xlat
lods
insb
xor
sbb
mov
push
mov
xor
dec
lahf
hlt
gs
bswap
fstl
test
push
mov
push
mov
push
mov
push
lret
xlat
jno
push
stos
inc
notb
sbb
xchg
lods
insb
adc
sbb
(bad)
mov
iret
push
fsubs
push
popa
test
movsb
adc
and
push
mov
and
adc
movsl
jne
inc
push
mov
xor
dec
pop
cmc
gs
ficompl
into
ss
dec
(bad)
in
sar
test
daa
ss
and
and
fistl
inc
sbb
xchg
lods
jns
shlb
inc
enter
add
cltd
bound
lret
xchg
jle
jnp
add
inc
arpl
lret
xchg
insb
add
movsl
fs
es
sub
enter
fldl
mov
push
mov
push
mov
mov
push
or
jns
shlb
int1
leave
xlat
lods
insb
ret
lret
sbb
mov
push
mov
pushf
stos
psrad
dec
notb
or
pushf
test
lret
sub
fcmovb
xlat
lods
jne
shlb
loop
sub
gs
bswap
fsts
xchg
clc
(bad)
push
inc
push
mov
push
mov
push
mov
mov
dec
and
test
and
jle
shlb
add
lods
insb
xor
sbb
mov
xor
dec
lahf
hlt
gs
bswap
fsts
test
push
mov
push
mov
push
mov
push
lret
xlat
jno
push
stos
inc
add
inc
notb
cltd
insb
adc
movsl
(bad)
push
lahf
mov
in
xlat
sbb
pop
push
push
and
les
loop
sbb
inc
loop
test
loopne
jmp
arpl
lret
test
dec
and
push
mov
push
mov
push
mov
xor
dec
pop
cmc
gs
ficompl
into
ss
dec
ljmp
in
sar
test
xchg
fs
cltd
in
shr
outsb
and
test
xlat
lods
fs
outsb
and
test
(bad)
xlat
lods
fs
mov
repz
mov
pop
sti
loop
insl
sbb
cltd
ret
in
rorl
cltd
sbb
fbld
call
inc
pop
jb
push
cltd
mov
mov
ljmp
mov
push
fstpl
dec
ret
insb
out
(bad)
push
out
(bad)
push
pop
stc
in
pop
mov
loop
out
pop
pop
cli
enter
xchg
lods
mov
enter
ret
xlat
lods
in
sub
add
push
mul
jnp
sbb
fildll
fstps
loop
jmp
mov
cmc
jl
xor
pop
pop
cli
enter
jne
in
push
(bad)
xlat
and
pusha
xlat
lods
mov
ret
mov
pushf
insb
sbb
and
std
push
call
cmp
push
fisubl
mov
cltd
sub
push
ja
les
js
and
jae
sbb
(bad)
sbb
push
(bad)
xlat
and
rcrb
loop
stc
jae
cmp
stc
in
out
xor
push
cli
push
push
mov
and
xlat
lods
bound
lret
inc
cmp
inc
repnz
add
test
lods
fs
movsl
push
sub
mov
xchg
cld
and
mov
in
gs
jmp
rcll
and
mov
in
sub
cli
xchg
int
push
dec
push
das
(bad)
cmpsb
bound
push
std
arpl
lret
popf
loopne
jmp
es
push
mov
push
stos
inc
repnz
pop
jb
xchg
or
sbb
and
push
and
xchg
enter
enter
and
sbb
mov
jmp
sbb
inc
insl
xor
pushf
stos
lds
push
sub
addr16
mov
fs
jmp
loope
test
and
sbb
and
lret
shlb
push
cmp
add
and
mov
dec
loope
jb
in
push
mov
push
clc
xchg
xchg
and
lret
insb
lret
lret
sbb
push
xchg
sbb
cmp
sti
jne
popa
arpl
jno
push
jnp
sbb
inc
ret
and
lret
insl
or
popf
add
jmp
mov
push
mov
push
mov
push
mov
repz
push
out
sbb
lods
fs
mov
push
stos
inc
or
sub
outsb
and
in
sar
inc
push
mov
lcall
lret
pushf
stos
rcrb
sti
dec
out
mov
in
insb
sbb
and
pop
sti
push
fildl
mov
and
in
fisubl
movsl
lret
sar
loop
ds
lods
in
xlat
es
in
sar
pop
mov
(bad)
pushf
stos
(bad)
pop
popa
in
push
mov
roll
loop
roll
loop
ror
cmp
sub
mov
sub
roll
in
pop
xchg
stos
out
jp
es
add
add
cltd
mov
ficoml
(bad)
pop
mov
ds
(bad)
sarl
in
pushf
js
aad
in
cmp
stos
inc
push
ret
pop
stos
out
jp
sbb
and
mov
