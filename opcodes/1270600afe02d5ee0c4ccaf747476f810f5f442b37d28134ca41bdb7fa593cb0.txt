and
add
add
add
add
add
add
add
inc
add
add
add
add
add
dec
jmp
or
int3
adcl
es
in
test
dec
adc
adc
shl
and
ja
hlt
xchg
pop
jbe
cmpxchg
fidivs
in
mov
sbb
xchg
pop
aad
jne
pop
fistl
pop
sbb
cmp
sub
mov
addb
push
mov
pusha
ss
insl
jge
hlt
outsb
mov
mov
and
stos
add
out
pop
add
nop
lret
add
cld
xor
jmp
adc
sbb
ret
inc
in
loope
or
test
enter
out
loope
or
mov
jge
and
or
imul
add
jbe
ljmp
pop
cmp
addr16
cmpsl
cmp
lods
push
adc
fnstsw
int1
test
xor
pushf
xchg
movsb
rcr
mov
mov
lds
adc
push
int
xchg
dec
shl
xchg
inc
mov
add
(bad)
add
imul
sbb
sub
adcb
sbb
sahf
cmpsb
dec
dec
fidivl
decb
cmpsb
cmp
mov
and
xchg
mov
mov
push
call
xlat
or
fstpl
int3
push
iret
and
in
in
xchg
js
jns
cs
jno
xlat
stos
hlt
jno
jge
jecxz
jmp
sub
ja
inc
mov
mov
les
popa
or
jb
ss
les
daa
mov
stos
pop
movsl
pop
dec
jecxz
out
aas
mov
mov
xor
mov
cs
pop
jecxz
popf
cmp
jae
outsl
xor
inc
dec
movsb
(bad)
jl
jge
mov
mov
mov
(bad)
push
jle
cmc
cli
add
xor
in
inc
jmp
pushf
sbb
xor
iret
sbb
inc
int1
popa
lods
inc
lock
add
fisubs
adc
std
sub
imul
sahf
adc
outsb
insb
fisubrs
sbb
ljmp
mov
setb
xchg
andb
sbb
mov
add
mov
(bad)
pop
push
push
jge
ret
mov
jno
xchg
cmpsb
xchg
mov
mov
in
loopne
add
int3
shlb
lods
push
add
loop
xchg
inc
arpl
cmp
jbe,pn
xchg
or
and
pop
jg
rcl
jns
xor
in
cld
sbb
cmp
xor
cmp
cmc
xchg
es
in
mov
hlt
push
xor
mov
dec
dec
fadd
rcrl
push
mov
push
sbb
xchg
cmc
fs
gs
inc
cli
pop
das
loop
test
insl
dec
xor
in
(bad)
xor
(bad)
in
add
push
jp
xor
les
test
nop
popf
dec
lret
sub
scas
or
xchg
xchg
cmpsl
jo
add
imul
sbb
sbb
jl
and
gs
shrb
mov
pop
repnz
xchg
cmp
push
inc
xor
insb
popf
and
adc
mov
popf
sbb
cmp
add
bound
xor
das
(bad)
aaa
push
pop
adc
pusha
das
inc
je
cmpb
and
pusha
dec
insl
sti
test
ret
mov
add
or
int1
and
mov
cmpsb
push
sub
push
jne
pop
inc
clc
insl
mov
scas
xor
mov
lret
int
inc
outsl
es
mov
sbb
rclb
test
cmp
lock
decb
xchg
int3
cmc
add
mov
mov
ds
test
lods
mov
dec
movsl
mov
popa
xchg
mov
jp
imull
push
movl
fidivl
lea
outsb
nop
pop
mov
cmp
popa
(bad)
and
jno
jnp
fcoms
pop
movsb
adc
sub
stc
cld
out
fildll
sub
push
xorl
adc
pop
xor
sahf
jmp
cmp
pop
xchg
(bad)
fisubrl
iret
ds
push
mov
aam
das
mov
enter
test
call
mov
lods
(bad)
and
(bad)
leave
test
movsl
lea
mov
fisubl
insl
lret
adc
sbb
or
pop
das
lret
shll
push
push
aaa
cmp
mov
or
lea
aam
std
and
dec
fcoms
test
inc
outsb
fidivrl
cwtl
and
push
fwait
gs
test
xchg
mov
hlt
aaa
inc
push
out
mov
scas
fsubrp
orl
and
add
fstpl
aaa
add
mov
adc
or
lock
xorb
and
inc
in
xor
fwait
cmp
cmp
(bad)
sbb
sub
lock
in
cltd
rcrb
mov
outsl
sbbl
inc
sub
divb
cmp
sbb
in
(bad)
lock
fimuls
dec
int3
scas
lcall
push
lret
cmpsb
(bad)
or
outsl
int1
leave
outsl
fistpll
jmp
sbb
dec
daa
loop
rorl
inc
push
fcoms
out
lret
push
test
arpl
push
push
and
ret
inc
add
jae
dec
cmp
xor
je
cmp
sti
jo
(bad)
mov
dec
adc
sbb
cmp
sbb
imul
dec
sbb
fwait
push
add
push
push
fstp
faddl
scas
fwait
add
les
add
mov
adc
out
stc
outsl
sub
jns
mov
ret
repnz
mov
leave
jmp
std
loope
dec
lret
faddl
jb
movsl
js
inc
lret
mov
lods
pop
int
iret
and
ja
push
lar
dec
xchg
push
xchg
movsl
jmp
lds
sahf
add
(bad)
pop
pop
or
into
pop
sbb
stc
adc
and
sub
dec
add
add
addr16
push
(bad)
mov
aaa
popf
push
mov
stos
mov
lock
loop
inc
(bad)
cld
into
mov
mov
in
andb
xor
inc
adc
push
jl
mov
and
call
jp
idivb
jle
add
or
pop
loope
enter
and
outsl
popf
xchg
cmpsb
pop
xchg
lods
testl
js
sbb
fidivrl
es
leave
fstps
inc
gs
mov
dec
into
mov
ja
loope
jns
sbb
jmp
xor
sub
fsubr
sub
mov
je
add
dec
aaa
sub
movsb
sti
iret
lcall
dec
int
xor
push
push
lods
(bad)
jmp
fistpll
xchg
or
dec
and
gs
mov
or
rcll
testl
xor
out
cmp
push
push
das
in
in
or
test
shrl
mov
stos
addb
sub
adc
ret
in
mov
orl
outsl
add
push
mov
pop
mov
or
cmpsb
daa
or
movsl
xchg
in
arpl
mov
mov
pusha
into
leave
aaa
sbb
es
call
inc
aad
push
sbb
and
xchg
addb
sbb
push
(bad)
aam
and
pop
ror
rolb
leave
adc
mov
cmp
popa
outsb
je
enter
ja
adc
(bad)
clc
cmp
or
lds
imul
push
jg
xor
jecxz
test
or
pusha
outsb
out
arpl
sub
lods
adc
sub
incl
add
popaw
outsb
fnstsw
mov
dec
bound
or
jge
pop
cmp
adc
dec
xchg
mov
push
and
push
repz
mov
jge
push
adc
fwait
insl
cmpsl
aas
dec
imul
sub
dec
add
ss
in
cwtl
(bad)
je
nop
mov
xor
xchg
inc
xor
repnz
ds
clc
stc
adc
test
in
lret
jno
rolb
fcomps
aaa
xchg
xchg
push
fdivrl
movsl
push
sbb
sbb
stos
sahf
inc
fadds
jle
push
pop
ds
adc
popa
fiadds
sbb
pop
data16
outsb
les
cmp
sbb
xchg
cmp
pop
push
aas
lcall
or
out
(bad)
(bad)
mov
jne
jbe
aaa
fwait
aad
push
stc
std
xor
sub
movsl
aad
inc
mov
inc
pushf
xorb
mov
push
fxch
(bad)
mov
ljmp
gs
mov
loop
rolb
dec
xchg
mov
mov
mov
(bad)
stc
jg
or
mov
