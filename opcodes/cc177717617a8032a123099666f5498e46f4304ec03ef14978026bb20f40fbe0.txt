decl
and
add
int
fldcw
push
imul
out
imul
push
push
sahf
orb
mov
ss
inc
pop
sub
das
pop
sahf
das
les
mov
inc
xchg
push
ss
push
xchg
push
or
neg
push
(bad)
xchg
cwtl
xchg
cld
lret
dec
mov
lcall
push
sahf
sub
shll
mov
out
lock
push
out
mov
ss
push
sbbl
mov
repnz
decl
pop
dec
dec
dec
xchg
in
pop
add
pushf
push
lods
or
push
mov
inc
add
jae
popa
add
scas
(bad)
outsl
sub
and
inc
add
jb
outsl
or
push
es
mov
outsb
add
inc
adc
mov
push
and
push
jo
lods
neg
sub
mov
(bad)
sahf
push
or
aas
insl
scas
jne
mov
mov
dec
inc
adc
subb
(bad)
outsl
adc
fs
push
popa
addr16
loopne
js
and
inc
push
jns
inc
sub
mov
add
sbb
push
xchg
add
insb
mov
cmp
cmp
and
and
ss
and
and
and
xor
pop
and
dec
add
push
in
arpl
mov
pop
cmp
xchg
dec
cs
cs
pop
fidivrs
xor
sahf
xor
js
xor
outsl
jnp
mov
mov
es
ja
dec
jo
aaa
cmp
outsl
ss
mov
pop
cmp
cmp
jae
xlat
outsb
cmp
xchg
aad
pusha
push
mov
loop
cli
fbld
hlt
ds
repz
jle
mov
ds
shrl
ss
push
dec
fcmovu
cmc
xor
shll
adc
push
out
fnstenv
dec
(bad)
repz
loopne
add
add
push
orb
lock
inc
push
push
mov
adc
imul
adc
mov
push
insb
insb
ss
negb
mov
dec
mov
out
sub
incl
les
jmp
scas
push
fadds
scas
pop
lret
inc
iret
push
inc
outsl
jl
ljmp
push
jb
arpl
movsb
insl
jae
and
cs
insl
(bad)
push
bnd
outsb
je
insl
and
cmp
ss
repnz
testb
and
inc
insl
aas
int
mov
dec
inc
and
push
xor
cmp
sub
mov
je
and
fisubrs
insb
imul
outsl
jbe
jnp
dec
aaa
outsb
outsl
je
or
push
divb
popa
arpl
imulb
imul
(bad)
nop
imul
outsl
push
scas
xor
jbe
jb
jne
data16
add
inc
and
insb
push
mov
and
gs
mov
int3
inc
loopne
mov
sti
mov
and
outsl
jo
mov
jae
push
fs
mov
cmp
and
sbb
xor
fstpt
jne
je
push
arpl
loopne
bound
das
imul
pop
add
push
jo
arpl
(bad)
insw
cld
popa
push
inc
jno
rcrb
jbe
insb
push
sbb
out
cmpsb
out
adc
cmp
add
ret
jne
xorl
mov
add
aad
push
jnp
daa
mov
jbe
xor
xor
pop
sbb
xchg
adc
inc
divl
cmp
push
or
into
add
lret
cmp
(bad)
std
popa
jb
jne
jae
xor
mov
iret
push
outsb
or
je
and
sbb
xor
xchg
shlb
push
pop
data16
mov
xor
mov
jb
jns
or
inc
cmp
and
mov
and
mov
sub
jo
enter
imul
outsb
ds
mov
jne
pop
psubusw
jb
outsl
jns
pop
add
sub
dec
add
jb
push
jb
adc
add
xorb
adc
pusha
shlb
(bad)
ss
aam
push
or
or
test
pop
adc
mov
add
aaa
add
pop
adc
and
pop
mov
aas
scas
fstps
pushf
imul
push
pop
sub
sbb
add
(bad)
(bad)
incl
or
or
push
movups
adc
adc
push
pop
sbb
sbb
sbb
push
pop
and
and
(bad)
(bad)
(bad)
jmp
sub
sub
cs
xor
xor
xor
ss
cmp
cmp
cmp
ds
inc
inc
inc
inc
(bad)
(bad)
(bad)
incl
inc
dec
dec
dec
dec
dec
dec
dec
dec
push
push
push
push
push
push
push
push
pop
pop
pop
pop
pop
pop
pop
pop
pusha
popa
bound
(bad)
(bad)
jmp
addr16
insl
outsb
outsl
jo
jb
je
jbe
js
jp
jl
jle
lcall
dec
out
jmp
decl
(bad)
push
imul
mov
add
push
jae
jb
bound
dec
mov
fnsave
add
ss
popa
les
mov
pop
and
gs
fidivs
daa
pop
lea
dec
sub
mov
mov
outsl
js
jne
xor
je
push
mov
dec
jmp
inc
jb
mov
jnp
test
jo
inc
outsl
and
mov
gs
mov
push
scas
or
mov
fwait
mov
cltd
cwtl
lods
call
push
add
push
sbb
xchg
testb
add
add
mov
jg
push
pop
outsb
add
xor
push
push
pop
push
and
add
pusha
push
pusha
add
jo
js
pop
sub
add
jo
xor
sbb
mov
push
outsb
jne
adc
dec
cli
mov
push
jo
xabort
cmp
push
dec
dec
cmp
cmp
jnp
repz
fs
dec
and
jns
add
js
ja
das
das
adc
push
dec
push
inc
inc
mov
sbb
gs
bound
dec
outsl
jbe
dec
pand
sbb
je
inc
jne
in
or
adc
mov
sub
push
outsb
(bad)
cld
repz
gs
jo
imul
bound
pushf
mov
popa
outsb
adc
iret
cmp
cmpsl
xchg
pop
fstpl
inc
jb
jb
xor
lods
std
int3
lahf
mov
jae
push
gs
sti
cmp
sbb
dec
add
push
jne
into
cmp
insb
xchg
pop
dec
inc
xchg
jo
lahf
je
js
mov
pop
mov
push
pop
clc
scas
cld
scas
cmp
mov
mov
mov
insb
mov
out
je
adc
mov
mov
sbb
out
aam
lock
pusha
xor
cmp
(bad)
shl
sbb
xchg
out
cld
or
es
inc
push
iret
lret
mov
popa
mov
fwait
adc
roll
ja
rclb
movsl
xor
add
dec
xlat
shlb
push
rorb
pop
jb
sbb
sti
stc
(bad)
push
adc
dec
(bad)
fadds
sbb
mov
xor
pop
pop
inc
push
in
ficompl
pop
add
mov
(bad)
inc
dec
shr
aaa
rclb
mov
jnp
dec
bound
ljmp
addb
cmp
roll
subl
shrb
push
dec
pushf
(bad)
(bad)
(bad)
incl
das
mov
std
dec
xchg
stos
and
mov
cmp
cmp
dec
cmpsb
mov
stc
mov
out
sub
(bad)
jmp
mov
pop
inc
lods
aam
fcmovbe
mov
les
stos
inc
push
popa
push
inc
jnp
push
(bad)
(bad)
(bad)
call
leave
stc
mov
(bad)
sbb
iret
out
pop
pusha
sarl
inc
test
push
(bad)
mov
xor
mov
lcall
inc
nop
xor
daa
scas
out
adc
push
mov
(bad)
(bad)
cmp
jl
movsl
test
js
les
out
cmp
pop
cli
fsubl
mov
pop
bound
xor
mov
sar
jge
xchg
movsb
xchg
(bad)
lcall
dec
mov
test
xor
lods
jl
or
in
shrb
sti
ret
xor
inc
lcall
jg
add
dec
mov
insl
imul
mov
gs
(bad)
mov
pusha
cmp
