xlat
jne
repnz
hlt
add
xlat
repnz
je
subb
mov
outsb
jno
xlat
mov
mov
mov
movb
fcmovu
movsb
fwait
arpl
loopne
sarl
mov
in
lock
jmp
push
loopne
adc
in
or
jb
aam
sarl
sbb
mov
fildl
loop
mov
dec
sub
jo
cltd
mov
lret
int3
or
xor
fbstp
fisubl
xor
cmp
addr16
mov
ret
mov
lea
shll
notl
push
out
add
adc
nop
add
(bad)
jg
out
mov
aam
jo
int3
in
add
lret
movsl
mov
mov
hlt
and
jb
sahf
sahf
mov
lahf
out
mov
repz
mov
mov
pop
sub
enter
mov
pop
dec
push
xchg
mov
pop
shr
xor
shll
jno
inc
inc
mov
xor
loope
shl
cwtl
incl
and
insl
fsubl
cmp
sub
or
sub
imul
ffreep
sub
and
push
into
mov
jnp
cwtl
not
jne
mov
ja
neg
jb
mov
add
pusha
jl
jo
adcl
mov
mov
xchg
outsb
and
pop
mov
mov
pop
pop
stos
inc
jae
xor
jg
movsl
xchg
ret
jle
jmp
add
jmp
aas
or
sub
pushf
rcrb
jecxz
gs
xlat
imul
fmuls
bound
mov
jle
adc
fildl
test
cmpsl
inc
jg
adc
fsubs
repnz
mov
std
or
pop
(bad)
lods
out
push
fsubrp
lea
xchg
mov
xchg
rcl
les
or
andl
shlb
mov
lods
lea
inc
je
arpl
mov
jo
mov
and
push
(bad)
stos
sti
xchg
xchg
adc
iret
ret
in
or
movsl
aam
inc
in
je
mov
and
subl
aam
jnp
lods
xor
imul
imul
stos
in
xchg
xchg
xchg
and
xlat
outsb
adc
fwait
mov
stc
pushf
movsb
addr16
cmp
pop
sub
inc
xor
popf
push
imul
in
fsubl
sbb
stc
mov
int3
jp
dec
movsl
in
enter
push
in
out
jnp
in
mov
mov
fucom
pop
inc
pop
es
(bad)
push
xchg
mov
insb
jl
mov
int3
call
push
mov
mov
jo
xchg
push
sub
pop
call
lret
movsl
sbb
out
loop
adc
add
xor
imul
cld
jns
jb
sar
and
pop
or
xchg
cmpsl
out
imul
fwait
xor
lods
test
data16
and
sbb
clc
pop
pop
push
fcoml
cmpsl
inc
idiv
inc
xchg
pop
fbld
pop
jno
mov
loop
stos
stc
sti
add
rol
jb
leave
sbb
push
mov
mov
xchg
ljmp
push
in
fnstsw
dec
jmp
jns
and
outsl
fwait
pop
push
loopne
push
ss
out
cmp
xlat
cs
mov
xchg
push
inc
ret
popa
mov
pop
loop
scas
inc
fnstsw
cltd
movl
cli
xor
hlt
push
aam
lret
adc
xchg
dec
dec
cmpsb
ja
in
inc
mov
xor
fisubrl
mov
push
leave
aad
or
imul
or
push
ret
pop
imul
add
cmpsl
test
stc
pop
cmpsl
(bad)
adc
sub
out
(bad)
mov
aam
cmp
cmc
and
dec
mov
shrd
xor
rolb
in
hlt
push
lods
stos
pop
insl
test
mov
xchg
leave
ds
mov
mov
adc
lods
xor
push
fbstp
iret
xchg
jbe
dec
lock
xchg
or
mov
sbb
jo
data16
add
mov
xchg
and
out
dec
mov
ret
inc
lahf
xor
aam
scas
popa
(bad)
mov
mov
mov
fnstcw
push
leave
lods
fwait
ret
inc
shr
cli
mov
shll
iret
(bad)
(bad)
(bad)
(bad)
out
inc
(bad)
popa
jecxz
dec
pop
sbb
sbb
pop
pop
mov
fwait
sbb
out
lret
test
jp
cmc
push
cmpsb
mov
out
fldt
mov
out
xchg
pusha
pop
inc
rcll
sbb
(bad)
aaa
stc
xlat
in
sbb
or
inc
jne
cld
aad
movsb
data16
movsl
and
inc
leave
popa
mov
lods
roll
gs
sahf
(bad)
sbb
cltd
xor
mov
cmp
dec
mov
xchg
je
scas
rcl
jnp
fsubrl
jo
xchg
out
andl
gs
out
insb
lret
sub
jno
push
mov
rolb
xorl
in
sti
aas
adc
mov
gs
test
inc
cmpsl
stc
cld
in
jb
adc
mov
jg
outsl
movsl
sti
dec
lret
mov
shl
test
ret
lods
mov
nop
push
lret
int1
addr16
cmpsb
push
mov
cmpsl
jmp
bound
adc
sub
outsb
mov
inc
xchg
mov
int1
mov
sub
les
lcall
(bad)
shrb
pop
mov
push
int
cltd
jg
jbe
insb
popa
adc
pop
jl
cmp
pop
dec
inc
out
sub
mov
add
shll
pop
sahf
cwtl
inc
ja
aad
lahf
scas
pcmpgtw
xor
push
ljmp
adc
fcoml
fdivrp
jge
mov
stos
mov
cmpsl
xchg
pop
scas
xor
push
in
lcall
xor
pop
add
(bad)
enter
pop
imul
out
or
push
fidivrl
sahf
fdivrl
pop
ret
in
add
lods
jo
scas
(bad)
rcr
push
pusha
push
mov
shr
pop
adc
insb
int
lcall
dec
aad
xrstors
pop
into
and
js
loope
sbb
mov
mov
cmpsl
fs
xchg
mov
adc
xor
int3
(bad)
jnp
pusha
clc
aam
push
cld
xchg
rcr
push
inc
loope
into
insb
fs
ret
mov
fldl
cmc
leave
pop
xor
mov
imul
mov
daa
in
fidivrs
cmp
add
mov
cmc
inc
inc
adc
iret
lcall
(bad)
sahf
popf
outsl
mov
repz
lcall
lea
out
fldt
and
jo
mov
das
xchg
mov
fwait
jle
dec
xchg
cmp
dec
rorb
xchg
pop
mov
sbb
gs
push
shll
xorl
js
imul
mov
xor
jecxz
jmp
orb
out
rcrl
xor
dec
cmpsb
fstpt
outsb
lret
decl
or
sub
cmp
rcrl
cld
mov
call
cmp
lock
cmovnp
xor
inc
out
popa
xor
insl
filds
leave
lret
mov
loopne
ret
pop
jo
lahf
and
leave
ret
dec
or
lret
push
aas
cmp
mov
adc
fucomp
rclb
addl
cmpsb
xchg
fidivl
rcr
mov
clc
test
fnstenv
mov
bound
test
lods
push
cmp
sbbb
pop
popf
call
in
jg
adcl
out
push
jp
ljmp
pop
or
call
mov
and
dec
mov
enter
movsb
pop
mov
adc
lods
scas
sbb
sti
dec
in
aaa
jl
inc
mov
out
sbb
andb
xlat
jmp
dec
push
hlt
xor
inc
lds
mov
je
aas
scas
xchg
aas
mov
cmp
adc
inc
inc
push
or
xor
ret
inc
inc
add
mov
les
shlb
flds
rcrl
inc
cmc
test
bound
pop
rclb
inc
jl
add
xchg
adc
push
xor
shlb
push
add
in
mov
(bad)
cli
outsb
xchg
cmp
les
mov
lcall
inc
dec
(bad)
mov
cmp
xlat
pop
inc
xor
outsl
cmpsl
mov
out
shl
push
outsl
cmp
gs
enter
jae
(bad)
test
pop
bound
iret
hlt
jmp
ret
push
push
aaa
mov
lds
fs
