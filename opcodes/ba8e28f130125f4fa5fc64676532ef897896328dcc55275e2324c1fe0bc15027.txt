je
mov
push
loope
sub
or
push
add
aam
add
add
add
cld
sbb
jae
mulb
jl
or
jmp
pop
push
nop
in
cld
jbe
sbb
les
push
not
inc
ret
xchg
sbb
leave
inc
or
sahf
mov
ss
das
pop
movsl
cmpsb
dec
out
mov
cltd
ljmp
fs
cli
cmpsl
xchg
or
sbb
notl
in
pop
int3
je
and
ret
ficompl
adc
(bad)
cmp
hlt
pushf
pop
dec
sti
mov
dec
stc
jmp
push
ror
lds
mov
sbb
jle
outsl
stos
add
xor
imul
fsts
ret
shr
dec
and
js
mov
lods
xchg
stc
sahf
(bad)
pop
fadds
mov
aaa
cmpsl
mov
loop
and
sbb
jo
pushf
sbb
add
adc
cmp
or
push
enter
repz
xchg
rcrb
push
add
mov
fdivl
ret
push
xor
mov
xor
outsb
test
mov
xchg
int1
cmp
push
sbb
popa
push
cli
jl
pop
jl
inc
mov
lds
testb
es
cmp
aad
dec
bound
jecxz
push
add
mov
mov
out
or
int
mov
and
ret
mov
add
fdivrl
sbb
push
xor
sbb
test
stos
mov
sbb
fmulp
lahf
out
fistpl
lcall
push
fmuls
xchg
push
and
fsubl
sbb
jle
jns
pop
mov
or
ret
xchg
adc
mov
rcl
loop
subb
iret
push
imul
lock
cmp
cmp
mov
int
inc
sahf
pop
xor
insb
outsb
js
imul
call
xchg
mov
jl
in
or
and
mov
movl
xlat
cltd
pop
les
lret
lret
cwtl
(bad)
outsl
cwtl
out
fcomps
lahf
dec
in
arpl
aas
or
mov
pop
pop
in
popf
mov
inc
lcall
mov
sbb
mov
cmpsb
adc
and
cmp
ja
cmp
mov
std
sub
jmp
lds
push
mov
push
mov
mov
dec
jmp
lret
cli
in
push
fistps
aaa
mov
cmpsb
sahf
fists
xchg
pop
push
inc
xor
inc
int
in
arpl
clc
and
loopne
jns
sti
fsubl
insb
push
or
ss
fildll
xlat
mov
in
xor
mov
push
mov
cltd
mov
push
xor
into
sub
or
mov
inc
dec
imul
mov
dec
adcl
cmpsl
jne
ljmp
dec
mov
subl
adc
cmp
hlt
into
stos
dec
es
int3
push
push
out
ret
test
sub
sub
cmp
sbb
push
inc
mov
or
pop
mov
push
ficompl
das
(bad)
popa
cmpsl
shlb
or
dec
push
out
inc
add
sbb
adc
xor
das
pop
dec
pushf
pop
xchg
outsb
push
popf
push
stc
mov
lods
iret
push
or
add
or
cwtl
lods
push
leave
div
jbe
xchg
xchg
rcrl
mov
sti
cmp
jne
inc
push
jp
insb
addr16
ficoml
bound
dec
push
(bad)
jbe
mov
ret
ret
repnz
mov
pushf
pop
xor
pop
and
pop
mov
sbb
test
popfw
imul
andl
add
sbb
push
cld
xchg
and
loop
mov
pop
popf
cmp
add
fstps
stos
and
pop
dec
fs
mov
push
adc
push
imul
push
loopne
xlat
pop
xor
jno
dec
pushf
cmp
adc
fxch
inc
insl
pop
mov
in
add
gs
mov
shlb
mov
out
lahf
xchg
xchg
sbb
lcall
sarb
enter
mov
add
jne
cld
lret
sti
mov
inc
cmp
or
das
sub
call
in
fwait
in
mov
push
mov
push
push
or
lcall
add
xor
scas
adc
mov
cli
ljmp
(bad)
pop
and
adc
mov
outsl
sbb
out
fsubrl
mov
sahf
inc
inc
lea
jl
or
ss
xor
cmp
arpl
ror
mov
mov
dec
enter
push
pop
push
push
jnp
and
loope
cwtl
outsb
ljmp
dec
stos
fnstcw
jmp
or
sbb
hlt
mov
mov
push
xor
push
jb
add
mov
jge
mov
dec
mov
push
and
mov
or
mov
adc
lods
sbb
and
imul
mov
repnz
int
cld
push
enter
xchg
inc
out
cmp
cmc
(bad)
in
add
clc
cwtl
sbb
movsl
mov
add
sub
sub
cmpsb
sbb
test
mov
or
push
xchg
fbld
cmp
mov
ret
and
ljmp
mov
lds
adc
dec
jg
decl
sub
jne
add
fiaddl
sub
mov
(bad)
mov
test
enter
pop
(bad)
popa
(bad)
mov
fistpl
mov
add
cwtl
sub
jg
in
pop
arpl
arpl
and
xchg
xchg
cli
insb
or
cld
aaa
lds
jb
xchg
add
sub
bound
jmp
sarl
addl
stc
xor
dec
mov
shrb
mov
aam
push
outsl
(bad)
(bad)
sbb
or
les
jl
loopne
jno
ja
jnp
adc
in
iret
push
jne
xor
xchg
inc
fistl
lds
mov
mov
into
push
jae
inc
frstor
xchg
xchg
sub
sbb
lret
rolb
outsw
(bad)
(bad)
cmp
test
rcrl
imul
movsl
inc
xchg
nop
push
sbb
fdivs
out
fsts
push
js
jno
mov
mov
cmp
insb
outsb
pop
test
add
pop
rorb
es
lods
fildl
or
std
in
pop
cmpsb
out
or
fstl
push
int3
cmp
dec
loope
or
cmpsb
movsb
sbb
cmp
mov
mov
fiaddl
or
adc
test
add
sub
loope
mov
adc
mov
mov
imul
jbe
or
in
repz
call
pop
sysret
stc
sub
xchg
and
push
sahf
outsb
(bad)
xor
xor
gs
adc
mov
adc
iret
cmpsb
enter
and
mov
mov
movsb
sarb
data16
bound
mov
sahf
pop
pop
xor
in
aad
aad
sub
sbb
cmc
pop
sub
mov
sub
not
mov
movsl
aaa
mov
pop
sti
daa
xchg
xchg
inc
mov
fucomip
push
pop
test
lods
shlb
mov
pop
or
pop
push
and
mov
push
aad
lods
mov
mov
dec
sarl
pop
sub
sub
xlat
insl
xor
int
push
(bad)
out
out
xchg
out
inc
mov
mov
push
xchg
mov
or
add
mov
or
dec
pusha
cmp
aas
(bad)
mov
mov
jae
xor
push
xchg
or
mov
push
(bad)
cmpsl
push
mov
mov
lret
int
lods
test
outsb
stos
push
fmuls
push
sub
ret
jp
sub
jmp
(bad)
es
or
je
jmp
and
fsubrs
stos
lret
(bad)
push
sub
cmp
clc
inc
xchg
hlt
push
(bad)
or
jle
sub
push
xor
cmc
xor
inc
repz
lods
jo
jmp
mov
loop
stos
dec
out
dec
inc
adc
out
lods
je
xchg
sub
dec
jecxz
scas
dec
pop
sbb
mov
movhlps
push
leave
cmp
push
add
and
(bad)
jns
sub
ljmp
out
xchg
ljmp
in
push
sbb
mov
fdivrs
outsl
mov
int1
mov
lods
and
outsl
enter
(bad)
push
pop
jmp
ja
mov
cmp
and
cmp
mov
stc
cmc
lods
or
popf
cmp
pop
jnp
out
push
cmp
(bad)
dec
shlb
movb
sub
mov
ficomps
mov
mov
