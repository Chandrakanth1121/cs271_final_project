jne
lret
repnz
mov
jle
jbe
cmp
imul
jle
mov
add
sub
and
push
mov
inc
jle
lock
jle
jns
cmc
iret
pop
fs
shll
push
xchg
mov
or
dec
xor
xchg
iret
xor
cli
cmp
(bad)
jns
test
pusha
test
int1
mov
jle
cli
xorb
pop
mov
(bad)
adc
adc
imul
popa
lret
(bad)
sbb
ja
int
or
adc
(bad)
jne
cmp
jns
arpl
mov
inc
js
jns
jno
lds
lock
into
test
out
dec
cmp
or
jb
add
xchg
and
jle
jne
std
div
inc
jle
add
sub
adc
xchg
iret
jle
jns
dec
dec
cmp
xchg
iret
jl
dec
test
repnz
jp
inc
test
das
adc
xor
jle
hlt
jns
dec
cmp
dec
test
mov
repz
test
lock
dec
cmp
daa
mov
and
and
ja
or
aas
jbe
xchg
outsb
xorl
outsb
(bad)
lods
mov
dec
jno
jb
repnz
int1
add
dec
sbb
jno
jb
bnd
bound
mov
xchg
cli
sub
adc
arpl
mov
jb
jns
jnp
mov
inc
jle
jb
movsl
jns,pt
std
dec
jno
mov
dec
jl
mov
mov
jbe
mov
xorb
xor
js
jle
xchg
arpl
jae
xor
jno
dec
cmp
int3
inc
jle
mov
test
xchg
cmp
mov
mov
mov
and
and
xchg
(bad)
mov
push
jle
or
(bad)
mov
jle
xchg
in
dec
cmp
xchg
mov
inc
jle
sub
fwait
loope
sub
dec
cmp
imul
mov
jle
xchg
push
sub
arpl
popf
inc
scas
pop
lds
jns
cmpsl
cmpsl
pop
(bad)
mov
mov
insb
mov
dec
cmp
mov
lock
xchg
dec
cmp
pop
test
xchg
dec
cmp
insl
test
xchg
push
mov
movb
jle
mov
inc
jle
jns
imull
test
fsubrs
adc
(bad)
jne
test
shlb
notl
pushf
testl
inc
std
out
lea
addl
clc
scas
cwtl
mov
in
test
dec
mov
xchg
jbe
jp
jbe
push
inc
xchg
or
mov
mov
cmp
inc
mov
xchg
xchg
mov
cmp
inc
into
lea
jnp
cmp
xchg
mov
pushf
jg
lock
add
les
jns
xchg
cmp
cmc
into
jno
mov
or
jle
cmpb
or
(bad)
je
inc
jle
jg
lea
inc
jle
daa
pop
mov
sub
fwait
xor
jg
xchg
cld
rorb
repnz
and
mov
je
nopl
mov
negl
test
ljmp
int
or
inc
jle
cmpb
jo
sti
mov
orl
push
mov
fidivs
push
int1
sarb
jns
or
repnz
cmpl
mov
cmpl
testl
lock
push
jnp
sarb
mov
jg
xchg
xorb
sti
jns
and
and
das
fldt
adc
add
mov
push
inc
lds
ja
push
jle
dec
mov
lods
xchg
or
mov
add
imul
xchg
int
or
add
add
inc
jle
sbb
test
repnz
jge
jle
daa
pop
mov
sub
fwait
or
iret
and
pop
or
jecxz
jle
mov
addb
mov
mov
lods
popf
cmp
cmc
divb
lods
(bad)
sbb
mov
inc
mov
add
xchg
add
cmp
cmp
testl
mov
jle
cmp
mov
hlt
cmp
sbb
test
sbb
outsb
sub
fwait
repnz
cmp
lret
in
lea
pop
mov
jnp
mov
scas
bound
cmp
jno
jge
divl
mov
(bad)
jne
rcrb
jne
lret
xchg
push
cmp
mov
and
into
test
aam
pop
mov
sub
fisubrl
pop
sub
repnz
adc
mov
sarl
orl
(bad)
inc
jbe
mov
and
mov
jle
xchg
insb
xorl
(bad)
test
sub
je
(bad)
mov
jae
mov
mov
dec
sub
fsubrs
adc
(bad)
jne
into
mov
jmp
jle
xchg
jbe
clc
jmp
mov
adcb
inc
push
je
inc
jle
das
mov
adc
xchg
jl
mov
xchg
jge
jle
mov
and
and
sub
pushf
pop
sub
repnz
mov
jmp
clc
mov
repz
std
mov
test
jns
jne
mov
iret
data16
dec
cmc
int
mov
sbb
or
dec
add
sub
mov
and
and
sub
pushf
(bad)
xchg
scas
sub
sub
or
roll
inc
xchg
mov
mov
std
in
jge
adc
xchg
pop
aad
jns
cmp
sub
jns
inc
xchg
jns
inc
jle
mov
int
mov
in
test
and
push
jle
jge
jle
cmp
cs
out
jle
lock
jo
jno
mov
test
mov
mov
dec
jge
push
outsl
mov
jle
jg
dec
add
push
jns
jle
lock
and
sahf
int
outsl
lock
lahf
jno
mov
test
mov
ds
insb
cld
lcall
add
jl
mov
and
and
(bad)
mov
fs
jle
sub
sub
mov
pop
cltd
clc
mov
int3
jns
fbstp
mov
dec
jno
pop
inc
jle
repnz
lds
push
lock
mov
test
jns
data16
iret
dec
je
dec
std
scas
mov
int
mov
xchg
lahf
je
mov
xchg
jne
inc
jle
js
dec
jns
inc
repz
cwtl
mov
dec
jo
mov
xorl
mov
bound
jle
lock
dec
push
lock
into
lea
(bad)
je
pop
test
jns
cli
fs
jle
add
jle
cld
mov
sbb
lds
loope
lods
sub
add
and
add
test
sub
or
test
add
inc
lea
repnz
push
inc
sub
inc
mov
addb
mov
add
pushf
xorl
mov
mov
(bad)
add
add
push
jns
jle
lock
add
nop
xorl
cwtl
xorl
push
jle
bnd
sbb
inc
jle
lock
add
inc
push
movsl
mov
notl
pushf
testl
inc
jle
jb
mov
add
sub
cmp
inc
into
orl
or
leave
jns
notl
cmpsl
testl
lock
aad
lea
fldt
adc
xor
dec
push
lock
mov
sarl
divl
mov
mov
loope
jle,pn
jns
jle
jns
cmp
jns
testl
inc
sub
out
jle
repnz
mov
les
jns
xchg
mov
mov
jb
xchg
rorb
ja
jle
jns
cmp
jl,pn
dec
mov
mov
lods
jns
jns
sub
out
jle
sbb
outsb
sar
mov
xchg
and
sub
out
add
pusha
or
orl
jns
testl
hlt
sarl
mov
xorl
jns
jns
cmpsb
mov
jns
frstor
jns
xchg
mov
cld
mov
push
mov
lods
sbb
mov
xchg
out
inc
jle
inc
test
inc
shll
add
lock
movsb
xorl
push
jle
bnd
fdivl
int
ja
test
sub
pushf
mov
ror
xchg
mov
jecxz
mov
mov
rcrl
inc
mov
jle
lock
insl
jg
jle
mov
call
mov
push
cld
test
dec
mov
jl
faddl
int
ja
test
fiadds
mov
hlt
loope
jns
lret
dec
xchg
xorl
divl
cmpl
fnstsw
flds
jle
xchg
jnp
mov
sti
xor
fadds
mov
adc
add
ja
jbe
and
(bad)
cli
xorl
inc
jle
stc
stc
xorl
test
push
js
jns
jg
(bad)
xorl
arpl
je
xorb
and
sarl
jg
lock
