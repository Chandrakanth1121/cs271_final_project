mov
nop
push
mov
xor
lock
test
test
loopne
(bad)
aaa
pop
sub
cmp
mov
repnz
mov
push
inc
jg
mov
sub
inc
iret
cwtl
in
aas
xchg
test
xor
inc
das
push
cmp
mov
aam
sbb
xchg
repnz
movsb
rcr
test
fmul
mov
mov
mov
push
out
int3
mov
in
ret
xor
(bad)
movsl
stos
das
dec
sti
mov
iret
out
cmp
les
jnp
xchg
fidivrl
mov
pop
jge
xor
test
sub
fdivs
pop
mov
aam
adc
xchg
test
dec
xor
cmp
and
sub
cmpsl
in
insb
leave
fbstp
out
push
sti
lds
es
cmp
add
daa
arpl
jg
(bad)
cli
mov
push
sbb
loopne
subl
enter
cmp
cli
in
sub
shll
sub
sbb
xchg
cmpsb
cmpsb
sub
jbe
pop
xor
sarl
sub
in
movsb
stos
push
add
pop
js
pop
ja
cmp
inc
jle
mov
test
cwtl
test
push
jo
ljmp
cmp
test
xchg
fwait
mov
mov
sbb
int
mov
in
add
pop
jae
dec
js
mov
pop
mov
lea
fidivs
sub
inc
imul
inc
sub
pop
ret
dec
lahf
ret
mov
das
inc
fcmovnbe
adc
sub
test
pop
scas
fwait
mov
ss
daa
sub
mov
or
ret
daa
xor
iret
push
sarb
pop
mov
add
mov
inc
push
mov
addr16
push
je
xlat
iret
push
fstpt
mov
adc
push
aam
mov
mov
lcall
insb
pop
ret
fisttps
lea
fnstenv
mov
out
inc
cmc
jecxz
pop
sbb
out
psadbw
fwait
jnp
pop
aaa
les
adc
js
in
pop
jnp
in
mov
out
subl
jmp
xor
cmp
(bad)
sbb
scas
jmp
test
push
mov
lods
imul
jg
push
mov
dec
jno
sub
int1
arpl
out
add
aas
popa
in
mov
xchg
mov
jo
xor
aam
test
int3
xchg
arpl
das
fs
pop
lahf
mov
xchg
xchg
push
mov
adc
cwtl
xlat
mov
adc
sbb
mov
sub
in
aam
insb
or
cmp
cmp
inc
insl
test
jmp
mov
andl
inc
and
or
push
aaa
sbb
xor
mov
sub
fcomi
lret
inc
push
pop
out
dec
negl
test
xchg
addr16
xchg
insb
sar
xchg
mov
mov
adc
sarb
inc
mov
lahf
nop
shlb
and
movsl
dec
inc
sub
dec
stc
mov
(bad)
lahf
outsb
or
and
mov
pusha
test
xchg
jae
lcall
fwait
adc
jo
test
popf
mov
cli
idiv
cmp
and
aaa
mov
insl
out
mov
and
pop
xor
(bad)
int3
xchg
xchg
mov
sub
(bad)
dec
stc
lret
or
inc
push
cwtl
jo,pt
mov
lcall
pop
rcrb
add
inc
pop
pop
dec
ds
sbb
adc
adc
pop
pop
lea
xor
shll
add
in
jge
adc
jmp
loope
jmp
mov
ljmp
ret
js
cmpsb
data16
les
ret
sub
adc
mov
mov
dec
jno
mov
mov
test
sbb
ret
mov
jns
xchg
es
mov
xchg
scas
cmpsl
mov
jp
sarb
xchg
out
loopne
xor
clc
or
fldl2t
(bad)
push
test
or
adc
imul
or
sub
jp
js
(bad)
push
mov
cmp
mov
mov
fwait
jb
xor
mov
ret
or
jp
repnz
mov
mov
sbb
out
mov
mov
lods
faddl
mov
cltd
or
xor
push
fs
sbb
insl
mov
sub
mov
ds
outsl
mov
xchg
add
push
push
or
pop
addr16
les
pop
(bad)
lods
pop
rorl
int1
cmp
test
mov
scas
in
sti
inc
inc
xchg
add
or
out
mov
sub
xor
jo
js
and
jmp
push
push
testb
dec
pushf
notl
adc
mov
cmpb
sti
stos
test
lret
lock
dec
xorb
add
cltd
adc
pandn
xchg
ficomps
shr
movsl
addr16
and
sub
js
push
add
lahf
shl
sbb
fsin
mov
dec
scas
mov
shrd
in
xor
and
clc
push
out
out
xchg
clc
add
movsb
dec
cmc
mov
or
sahf
mov
push
and
loopne
mov
add
enter
jl
inc
pop
cmpsl
cmp
adc
mov
xor
push
mov
push
test
or
xor
pop
shlb
cmp
xlat
pcmpgtd
cmp
lcall
(bad)
pop
jg
push
test
pop
data16
(bad)
mov
js
mov
mov
rcl
lret
mov
sti
cmp
outsb
data16
scas
js
xor
mov
sub
xor
lret
jmp
xor
lods
or
ljmp
mov
xchg
mov
sub
sub
push
(bad)
adc
fsubp
movsl
jns
cmc
mov
xchg
pop
jl
sbbl
adc
mov
push
dec
subb
lea
xchg
fbld
inc
mov
shl
fisttps
mov
mov
loopne
outsl
add
je
xchg
mov
out
push
lods
cmpsl
cwtl
dec
fwait
adc
sbb
pop
push
and
mov
shlb
(bad)
popf
mov
xchg
xor
fwait
mov
das
xor
push
in
addb
sub
jg
cmpsb
xchg
test
fistpl
bound
enter
adc
xchg
decb
popa
out
loop
lcall
or
lret
sub
mov
add
hlt
push
call
aam
pop
push
fidivrl
xchg
int
and
jno
cltd
or
mov
jle
imull
jge
sub
lock
xchg
xchg
out
mov
out
test
pop
das
out
mov
sbb
orb
(bad)
pop
pop
fdivrs
movsl
imul
push
in
xor
inc
sub
xchg
sbb
mov
aaa
decb
and
fdivp
sub
xor
iret
andl
xor
leave
xchg
cmpsl
dec
xlat
pop
xchg
les
(bad)
data16
xchg
xor
pop
xchg
mov
dec
int3
stc
stos
lods
jp
mov
xchg
fisttpl
repz
mov
or
mov
xchg
lods
jbe
loop
incb
scas
inc
jecxz
jno
popa
movsl
jne
mov
cwtl
and
mov
add
xor
sbb
cmp
enter
jp
pop
cmpsb
in
cmpsl
pop
push
out
xor
xor
(bad)
(bad)
push
inc
imul
pop
subl
movsb
mov
daa
or
lds
mov
mov
sub
std
sub
xchg
push
and
(bad)
cmpsl
dec
cwtl
test
mov
fst
push
sbb
push
in
shl
xor
push
lea
mov
dec
and
ja
adc
mov
cld
xor
and
sub
jecxz
jbe
fsubrp
cld
mov
scas
mov
test
popf
cltd
enter
inc
out
rorb
int3
cmp
insb
xlat
xor
int1
and
adc
cmp
sbb
or
jmp
fdivs
enter
cmc
jno
sub
sub
popa
ja
fadd
(bad)
addr16
xchg
xor
lods
mov
test
push
enter
push
xchg
ss
ffreep
into
fbld
mov
daa
daa
loopne
sub
sub
xchg
xchg
call
xor
jns
ret
xor
gs
xor
pop
aad
lahf
(bad)
cmp
(bad)
push
inc
xor
mov
fildl
mov
cmp
and
stos
jg
mov
cmc
and
cmp
jno
sub
cmp
loop
mov
push
or
call
push
(bad)
push
ret
outsb
dec
in
xchg
roll
jne
dec
add
sbb
xor
mov
subl
loope
