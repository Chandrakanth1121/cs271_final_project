int3
int1
mov
pop
fwait
inc
mov
jmp
xor
repz
mov
divb
pop
sbb
jnp
adc
jno
ret
sbb
stos
jnp
mov
hlt
mov
adc
lcall
aam
add
mov
or
cld
lods
shll
ret
ret
sbb
cmpsb
push
cmp
mov
mov
lcall
fcoml
ss
cmc
inc
mov
(bad)
mov
cld
loop
push
pushf
sub
cltd
push
test
cmp
xorb
dec
daa
push
xchg
loop
incb
mov
mov
into
daa
mov
dec
jne
test
or
xorb
pop
or
cmpsl
shl
test
or
push
and
inc
outsb
mov
mov
jecxz
fidivs
mov
xor
lds
clc
inc
jl
repz
inc
jno
push
sbbb
sub
add
dec
pushf
les
jnp
sbb
(bad)
pop
or
xor
push
push
pop
in
fdivs
std
pop
push
dec
ja
xchg
inc
sti
xchg
sub
enter
jmp
xchg
mov
les
in
xor
stc
sub
and
pop
out
imul
pop
push
hlt
cmp
push
rcr
dec
leave
jnp
push
xchg
dec
cltd
les
pop
jp
shlb
ja
mov
rclb
mov
cs
xchg
test
aas
mov
outsl
push
sub
into
out
clc
xchg
pop
aam
movsb
pop
clc
mov
ds
add
lods
ret
cltd
pop
roll
iret
imul
movsb
in
cmp
fsubrl
dec
(bad)
jle
jnp
jmp
test
rcll
add
je
xchg
enter
shl
das
mov
lcall
in
aam
cmp
stos
jnp
add
and
test
fisubs
mov
gs
mov
outsl
stos
int3
jns
mov
int3
scas
adc
and
scas
or
push
dec
xor
repnz
adc
lret
fstps
sbb
loopne
mov
xchg
sub
or
movsb
lahf
mov
(bad)
mov
ret
repnz
and
lea
loope
outsb
insb
adc
xchg
pop
adc
push
sti
fs
subl
pusha
or
adc
nop
out
or
inc
cmp
sub
jne
popa
mov
cs
iret
jge
sarb
mov
hlt
les
xor
arpl
rorb
fwait
dec
pusha
lret
test
gs
insl
scas
mov
sbb
xor
aam
inc
sbb
mov
mov
push
and
sub
scas
imul
inc
test
stc
cmp
in
adc
push
int3
repz
adc
ss
mov
dec
pusha
push
xor
jns
jge
cmp
subb
push
jmp
aaa
xchg
mov
lahf
std
rcrl
inc
sbb
insb
inc
mov
orb
cmc
repnz
lahf
fcomp
push
pop
inc
les
sbb
sbb
imul
andl
add
xor
mov
lods
dec
push
adcb
or
stos
xor
sahf
jg
add
sbb
jno
int3
or
fldcw
stos
clc
jecxz
push
enter
fstl
jl
mov
enter
xchg
fwait
jo
fwait
pop
dec
mov
lea
sti
jns
jp
pushf
cmpsb
jg
add
pop
mov
pusha
sbb
rorl
sbb
sbb
scas
mov
pop
pop
adc
cwtl
fwait
cmp
jge
ljmp
dec
lock
lods
pop
sbb
insl
stc
inc
inc
movntq
dec
sahf
jnp
(bad)
sub
pop
sbb
push
lock
cmp
mov
push
push
ljmp
dec
out
loopne
ljmp
adc
dec
dec
insb
mov
jecxz
add
inc
dec
mov
push
lret
inc
loopne
(bad)
popa
jmp
push
daa
ficoml
xchg
hlt
data16
push
jmp
aad
scas
push
pop
lret
es
sbb
mov
or
outsb
xor
push
mov
rclb
fcomp
jne
push
jno
mov
scas
mov
(bad)
fisubrs
aas
mov
push
loopne
sbb
out
ljmp
push
sti
in
and
xorb
cmp
popf
adc
mov
fs
and
jle
leave
and
loope
cmp
pop
dec
dec
scas
jp
imul
push
xchg
test
dec
mov
push
pop
(bad)
sbb
lds
mov
movsl
rclb
jno
cltd
stos
adc
xchg
pusha
movsb
mov
fsub
mov
adcl
fmuls
adc
iret
andb
imull
sub
pop
iret
push
fidivs
mov
clc
inc
mov
dec
popf
mov
push
mov
pop
push
lods
test
mov
push
(bad)
xor
pop
cmpsl
xchg
mov
sbb
fisttps
mov
push
cltd
movsl
mov
sarl
mov
(bad)
adc
leave
push
inc
ja
shll
push
sub
enter
sbb
ss
out
in
in
mov
iret
shl
ficoml
jmp
push
sub
mov
or
fst
incl
add
cmpsb
pushf
dec
cmp
lcall
add
mov
push
shrl
into
rol
jno
jecxz
int1
mov
xchg
js
push
repnz
and
daa
rorl
loop
jl
push
jns
stos
cmpb
push
jno
xchg
pop
mov
adc
push
xchg
aas
mov
movsb
jb
and
cwtl
imulb
pusha
mov
dec
jnp
das
xor
out
sbbb
cmpsl
xor
pusha
rorl
enter
adc
fists
movsb
sahf
loop
jae
pop
test
cmc
mov
pop
xchg
mov
lock
enter
rcrl
jge
std
and
into
orl
adc
iret
in
int1
in
pop
pop
cld
clc
dec
inc
xlat
xchg
lahf
or
mov
pushf
cmc
cltd
or
jp
pop
adc
mov
lahf
das
and
inc
push
jge
pop
insb
cs
mov
orb
mov
subl
mov
mov
push
adc
xlat
xchg
pop
pop
andb
ja
mov
jo
lea
mov
push
scas
push
in
sbb
arpl
addr16
nop
test
fnsave
roll
push
cli
xor
and
aaa
imul
mov
shrb
sete
cmp
cmc
std
mov
pop
mov
fcoms
pop
pop
inc
ljmp
xchg
imul
clc
sbb
arpl
mov
or
movsb
pop
lret
stc
pop
pusha
jno
lret
outsb
xor
cmp
mov
movsb
int
xor
stc
mov
xchg
test
pop
cmp
aas
jle
mov
cmc
jge
inc
cwtl
jg
ljmp
and
mov
stos
mov
mov
sti
cwtl
push
sti
sub
ret
shlb
repz
sbb
xchg
addr16
arpl
in
insb
pop
cmp
in
sarb
nopl
cld
or
mov
into
mov
cmp
popa
aas
cmp
test
imul
ss
mov
jp
mov
shl
sbb
cmp
inc
jo
ret
dec
mov
pop
xchg
cmpsb
movsl
mov
mov
push
lods
sub
das
pop
jbe
sub
loop
inc
inc
pop
inc
cwtl
xchg
outsb
or
(bad)
pop
push
push
cmc
dec
or
outsl
daa
sahf
mov
enter
call
push
in
mov
test
jbe
test
dec
xchg
xor
pop
cmpsl
rol
nop
push
mov
lret
adc
inc
mov
mov
push
js
stos
inc
das
fwait
add
jno
scas
ficompl
pop
(bad)
dec
and
cmpb
fidivrl
dec
clc
inc
mov
ss
add
fsubrs
(bad)
mov
xchg
aad
outsb
pop
inc
out
stc
jmp
xchg
sub
pop
(bad)
cmpsl
mov
cmp
arpl
out
aam
add
push
pop
mov
out
mov
pop
cltd
(bad)
int1
and
pop
and
lea
shrl
and
mov
cli
xchg
leave
jbe
enter
leave
sub
pop
dec
lock
inc
fdivrs
rcrb
jns
xor
inc
push
lret
cld
lcall
loope
outsl
or
notl
daa
push
(bad)
in
enter
jb
lcall
sahf
out
dec
cld
mov
