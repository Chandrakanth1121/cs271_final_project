cmp
(bad)
or
popf
or
adc
outsl
mov
cs
or
setle
stos
cltd
xchg
shll
dec
mov
je
bound
cmp
cwtl
sub
push
add
xchg
adc
xor
push
inc
xor
push
or
xor
mov
pop
stos
dec
daa
push
push
sub
or
stos
pop
or
and
inc
push
adc
inc
out
push
xlat
adc
popf
hlt
adc
mov
xor
ficomps
test
push
stos
sub
lea
pusha
inc
jnp
inc
into
negb
or
xor
mov
xchg
push
dec
lret
leave
and
cmp
aaa
sub
in
dec
and
mov
ror
(bad)
mov
pushf
inc
push
orl
push
js
mov
xor
and
inc
push
outsb
sbb
inc
jnp
mov
pop
and
out
xchg
cmp
jg
inc
fadds
pushf
push
test
or
fstpt
inc
shrl
imul
jne
dec
sub
pop
xor
cmc
or
xor
shrb
push
cwtl
loopne
adc
push
test
sbb
cs
inc
push
scas
dec
testl
push
jmp
(bad)
pop
lods
mov
sbb
cmp
xchg
sub
in
sub
lcall
mov
sub
daa
insb
dec
in
sbb
movq
pushf
es
or
inc
fucomip
or
push
mov
sub
xchg
add
sub
sahf
sbb
push
movl
lods
cmp
lods
add
insl
int3
push
inc
mov
push
repz
jl
scas
aaa
and
adc
stos
push
xor
in
leave
sub
dec
fstps
xchg
(bad)
enter
shll
push
lret
mov
or
lahf
cmpsb
es
das
push
sub
shll
push
jnp
inc
pop
adc
test
add
jno
leave
mov
add
das
xchg
mov
fwait
cmc
and
adc
pop
mov
into
xor
xchg
jb
lods
sub
push
mov
popa
push
scas
rolb
fwait
sub
ret
and
push
(bad)
sub
sbb
jo
adc
mov
or
das
sub
xchg
es
jnp
mov
arpl
push
inc
mov
push
inc
pop
popa
sbb
popf
mov
add
push
xor
pop
jb
push
sub
ficoml
std
adc
push
movsl
adc
push
imul
mov
sbb
outsb
mov
dec
cs
arpl
daa
inc
adc
add
lahf
sbb
cmp
ds
cli
dec
add
mov
sbb
movsb
or
test
je
jmp
and
and
movsl
cld
and
xor
ds
inc
test
shll
mov
or
or
push
and
sub
lods
scas
rcl
ja
and
jnp
pop
cmpl
loop
adc
movsb
push
adc
adc
mulb
ss
lahf
inc
cmp
mov
adc
movsb
mov
pop
cmpsb
or
fcoms
inc
stos
stos
adc
jle
sahf
and
mov
add
adc
lea
fisubs
push
pop
cmpsl
dec
push
into
xlat
sbb
cmpsb
and
cmp
rorl
mov
and
sbb
or
in
mov
jae
sbb
sbb
mov
xchg
and
pop
popf
jl
inc
outsb
inc
data16
hlt
dec
adc
adc
fisubl
and
enter
mov
adc
xchg
int1
sub
lret
int1
jg
pop
push
pop
fmuls
mov
test
jne
lahf
mov
xchg
xchg
int1
das
testb
jp
sub
dec
fisubl
cmp
mov
push
int
pop
adc
mov
mov
xchg
mov
out
sub
push
cs
dec
pop
pop
lcall
inc
pop
pop
cmp
add
imul
iret
mov
sub
xchg
add
and
adc
inc
xor
inc
insl
mov
xchg
mov
mov
jmp
scas
sbb
xor
lods
sahf
sbb
xchg
xor
sbb
out
cs
xor
dec
sbb
sarl
lahf
nop
popa
ss
popf
(bad)
sub
and
xchg
sub
and
or
pop
mov
push
(bad)
push
mov
fisubrs
fwait
sahf
inc
inc
and
(bad)
cmp
lea
ljmp
and
push
dec
jo
adc
jne
mov
mov
movsb
pop
xor
daa
pushf
sub
or
mov
iret
fldcw
pop
and
xor
dec
movsb
mov
sub
push
xor
xor
push
test
mov
push
mov
rolb
sbb
inc
scas
aaa
(bad)
mov
xchg
daa
cmp
mov
(bad)
xor
scas
(bad)
push
std
sub
(bad)
sbb
xchg
jecxz
cmp
add
mov
cli
sbb
out
mov
(bad)
xchg
cmp
lcall
mov
fwait
jae
mov
cmovb
sbb
int3
mov
movsl
and
xchg
pop
pop
xchg
stos
jo
inc
cli
adc
xchg
mov
movb
xor
hlt
mov
popf
lock
repnz
dec
xchg
std
xor
and
gs
or
cmc
cmpsb
or
pop
cmp
sbb
inc
mov
lods
out
popf
outsb
xchg
aam
xor
inc
dec
andl
push
sbb
or
pop
inc
(bad)
and
mov
sahf
sbb
mov
imul
cmpsl
sar
loop
inc
inc
cmp
jno
mov
divb
arpl
push
xrelease
inc
ds
lods
mov
data16
adc
sbb
xchg
jmp
jno
(bad)
cld
scas
jb
mov
out
push
or
(bad)
lods
inc
lcall
or
jle
stos
push
inc
mov
xor
fstpt
lods
xchg
shrb
movsb
lods
cmp
sbb
and
cmp
popa
cmpsl
stos
and
jecxz
mov
scas
outsl
pusha
mov
stc
or
push
shl
sahf
sahf
movsl
stc
push
addr16
pop
stos
xchg
mov
movsb
(bad)
cmp
dec
dec
in
pop
lods
fildl
dec
xchg
push
bound
mov
ss
sbb
test
(bad)
enter
sub
mov
sbb
rorb
mov
les
xor
(bad)
lods
push
mov
mov
inc
mov
cltd
(bad)
les
(bad)
or
inc
cmpsb
je,pn
mov
xchg
xchg
popa
inc
cmp
lahf
sub
add
mov
fs
fisubs
add
mov
cmp
or
dec
adc
lahf
fists
loope
jns
xlat
sbb
sbb
loop
lret
sahf
pushf
cmp
sbb
push
and
jnp
or
jnp
sbb
pop
js
inc
fisubl
ljmp
mov
xor
(bad)
rclb
mov
or
sbb
out
stc
fnstsw
into
aaa
jnp
xor
sub
inc
aam
repz
fists
cmp
xchg
aaa
inc
push
push
mov
xchg
pop
adc
sti
gs
scas
in
and
adc
add
sub
xchg
sub
aaa
xchg
mov
inc
outsb
push
aam
jae
mov
(bad)
or
insl
arpl
fmull
imul
mov
pop
sub
filds
cmp
pushf
jle
pop
pop
push
add
inc
cmp
cmp
cmp
int3
sub
adc
adc
rclb
mov
sub
push
inc
cmp
clc
or
cli
ja
fidivl
in
stos
sbb
adc
ud0
sar
mov
add
test
or
test
pop
(bad)
push
leave
push
jle
pushf
adc
sbb
ficompl
lret
mov
sbb
dec
jg
and
or
jns
clc
cmpsl
mov
and
in
jno
xchg
insl
test
sub
and
cmpsl
add
xor
test
fwait
xchg
xor
sarb
scas
loope
inc
sbb
dec
xor
xchg
fcomps
or
pop
iret
pop
pop
pop
mov
cmp
negb
fmull
insl
sbb
pop
xor
cmp
jecxz
xor
jge
stos
frstor
cmp
xchg
adc
inc
ret
rolb
or
sub
jns
push
adc
sti
loope
add
insb
adc
xchg
mov
push
pop
inc
das
xor
mov
hlt
sbb
lcall
loopne
