push
stos
mov
xor
iret
push
inc
fwait
add
daa
cmc
int3
in
push
iret
inc
sbb
push
mov
aad
call
mov
fs
hlt
fwait
add
xor
dec
inc
jo
loop
jae
jl
fs
js
fs
push
mov
xchg
cmc
les
jecxz
ja
iret
jno
movsb
ret
dec
mov
inc
addr16
dec
fs
divb
push
xor
mov
sub
sub
leave
pop
outsb
and
loopne
testb
and
iret
mov
cmc
mov
dec
adc
and
(bad)
sub
fisttpl
test
mov
fs
loop
bound
(bad)
push
sub
xchg
shll
push
es
jg
insb
sub
and
stos
aad
sub
push
ja
test
pop
and
push
int3
cmp
ret
fimull
push
mov
test
sub
test
pop
(bad)
fisubrl
mov
rcr
add
lcall
pop
inc
cmpsl
into
dec
fcmovu
roll
mov
cmp
inc
or
jne
pop
mov
dec
push
and
cmpsl
clc
xchg
popa
dec
nop
mov
arpl
movsl
mov
out
(bad)
mov
out
int
cli
jne
and
push
nop
(bad)
or
add
fisttpl
mov
std
xchg
cltd
push
pop
mov
sarl
ds
jns
push
jns
das
test
cmc
cmc
fistpl
mov
cwtl
mov
pushf
(bad)
cld
cld
and
ds
jecxz
xchg
pop
repz
enter
jg
add
je
fmuls
push
dec
and
or
add
inc
xor
mov
dec
mov
add
into
aad
in
and
jno
in
mov
and
aam
enter
aad
in
or
leave
mov
loop
jae
(bad)
in
aad
dec
cmp
push
mov
in
cmc
jecxz
mov
jecxz
jae
xchg
jp
cwtl
fmull
outsb
sub
mov
mov
leave
and
imul
aam
pop
sarb
int
call
dec
es
out
xchg
bound
pop
outsl
rcrb
stos
cmp
jp
sti
adc
xchg
adc
sub
leave
fnstcw
fadds
xchg
(bad)
xlat
stos
pop
mov
imul
div
mov
or
mov
popf
cmpl
int1
repz
popf
dec
add
xchg
movsl
xchg
xlat
(bad)
out
push
movb
rorl
jae
xchg
sub
loope
lods
dec
in
loopne
std
mov
or
cmc
jp
gs
or
pop
or
andl
pop
test
jbe
aas
dec
mov
fstpt
cmp
pushf
sahf
push
sub
jo
sbb
popa
sbb
imul
jl
sar
sub
data16
std
adc
daa
sahf
cmp
je
jl
lock
xor
lret
ja
clc
aam
push
imul
xor
sub
xor
das
push
mov
inc
enter
add
sbb
xchg
scas
sub
pop
inc
cltd
movsb
jbe
in
inc
mov
pop
inc
sub
lods
enter
(bad)
cmp
mov
bound
scas
or
sub
stos
jbe
xor
pop
jno
fwait
add
out
pop
aam
repnz
jns
test
mov
dec
pop
adc
mov
sbb
hlt
xchg
mov
xchg
cmp
test
(bad)
xchg
cmp
into
int3
nop
cmc
dec
aad
jl
aam
add
jl
or
push
ss
adc
or
cltd
xchg
mov
xchg
lds
(bad)
mov
out
push
jbe
std
cmp
xor
inc
mov
ret
(bad)
or
sbb
sub
std
mov
jbe
sbb
mov
mov
dec
ftst
loop
popa
scas
and
inc
testb
(bad)
xchg
cwtl
aas
out
loopne
inc
insb
mov
xor
leave
cmp
mov
xor
dec
jmp
xor
pop
sub
lock
lahf
sub
push
cmp
fbld
fdivrl
adc
lock
or
jno
mov
xlat
test
rorb
gs
inc
push
sub
das
ds
adc
push
or
nop
std
fisttpl
xrelease
sbb
and
sbb
mov
mov
add
push
(bad)
mov
mov
fdivp
cmp
movsl
push
iret
inc
xor
sub
dec
imul
xor
int3
aam
jge
enter
cli
mov
pop
repz
mov
int1
insb
test
pop
push
mov
xchg
lahf
mov
out
leave
add
incl
mov
mov
loope
in
ljmp
pusha
pop
xchg
in
add
ss
data16
stos
cli
mov
adc
xor
enter
xchg
lds
xchg
decb
dec
mov
test
nop
adc
inc
mov
dec
pop
popf
popa
int1
fwait
sub
mov
push
cwtl
insl
pop
call
sub
mov
push
andl
cld
fwait
jo
sub
xor
pop
xchg
in
jle
cmp
xor
out
pop
inc
cmp
repz
cld
mull
xchg
or
test
mov
pop
or
push
adc
sti
sbb
mov
mov
enter
lret
data16
sarl
lcall
sahf
fstp
dec
cmp
arpl
(bad)
imul
(bad)
js
pop
sub
fs
aaa
pop
movsl
ljmp
(bad)
sahf
cmpsb
inc
shlb
aaa
lock
or
mov
scas
cld
cmc
imul
ret
in
xorb
fists
pop
mulb
addr16
inc
ja
jge
aaa
inc
shll
and
fiadds
push
jmp
sub
cmc
xchg
and
sahf
sti
jl
xor
rclb
sbb
subl
sbb
test
popf
sti
addr16
xchg
or
into
sbb
lea
mov
stos
xchg
inc
sub
push
pop
scas
or
adc
loop
imulb
mov
int3
es
lret
enter
int
lahf
fdivr
ret
nop
or
mov
in
xchg
pop
leave
sub
and
dec
xor
xchg
sub
or
sbbl
push
xchg
mov
popf
mov
sub
cmp
and
outsb
stc
addr16
add
ficomps
mov
xor
insl
xor
rolb
rcrb
mov
scas
mov
push
mov
(bad)
xchg
ss
test
(bad)
jmp
cmp
fwait
mov
cwtl
sbb
mov
(bad)
pop
mov
sub
aaa
push
jle
movsl
cmp
or
ja
and
fistl
cmp
xchg
repnz
mov
ror
mov
adc
mov
sbb
mov
push
pop
(bad)
inc
fs
dec
(bad)
jns
jae
push
leave
imul
lcall
rol
nop
(bad)
xchg
sbb
mov
xchg
adc
pop
(bad)
mov
mov
lcall
test
cltd
xor
xchg
and
adc
roll
jp
hlt
(bad)
cwtl
jecxz
push
xor
adc
loop
test
roll
out
aam
mov
shl
dec
mov
push
outsl
lods
out
dec
fs
mov
inc
out
push
and
xchg
lock
incl
push
add
mov
sbb
lret
leave
inc
(bad)
xchg
pop
out
push
inc
jmp
std
rorb
xchg
inc
ds
mov
lahf
push
push
lds
adc
aad
call
pushf
andb
ds
leave
lock
lods
sub
cmc
xor
scas
pusha
mov
xchg
lea
(bad)
fdivrp
addl
xor
mov
mov
loope
into
adc
(bad)
and
xchg
int3
sahf
int1
imul
addr16
push
sub
mov
push
aas
mov
or
addr16
xchg
sbb
leave
xor
test
add
enter
test
or
or
vmaxsd
fidivrs
jne
fstps
mov
inc
push
pop
mov
dec
push
pop
xchg
adc
pop
lods
rolb
mov
push
jg
xor
xchg
sub
mov
mov
jno
push
fstl
xchg
lret
stc
imul
out
nop
mov
movsl
es
(bad)
and
mov
jg
mov
cmp
ds
fwait
xchg
subb
push
xor
mov
test
adc
jne
push
sub
dec
mov
int1
dec
cmp
mov
je
loop
cmpsb
(bad)
or
cmp
