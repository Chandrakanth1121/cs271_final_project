pushf
push
inc
xor
ljmp
lret
mov
sbb
in
fstpl
sub
xchg
and
(bad)
loope
inc
mov
push
push
or
push
mov
add
ljmp
lret
mov
jp
mov
jp
mov
jp
mov
sbb
in
fstpl
sub
xchg
and
(bad)
mov
loop
gs
lcall
ret
jmp
lahf
bound
jo
mov
sbb
push
inc
pop
inc
cmp
sbb
in
stos
pop
lea
inc
rorl
loop
scas
out
idivl
addb
ljmp
jle
daa
gs
push
arpl
ljmp
lret
mov
jp
mov
jp
mov
jp
mov
sbb
in
fucom
out
lret
sub
cmp
sub
push
mov
inc
cmp
repz
cmp
imul
outsb
sub
mov
pop
push
gs
inc
sub
andb
jmp
and
dec
sub
es
scas
xchg
add
cmp
repz
cmp
imul
outsb
sub
loopne
and
outsb
pop
push
lods
ss
mov
sub
andb
adc
and
dec
sub
daa
lret
stc
mov
loope
inc
scas
inc
cmp
jecxz
int1
leave
jmp
lods
mov
in
push
jmp
bound
inc
sub
xchg
dec
inc
repnz
scas
inc
sub
jmp
and
aas
out
jle
addb
ljmp
jle
daa
gs
push
add
lods
shlb
lret
mov
jp
mov
jp
mov
jp
mov
sbb
in
fstpl
sub
xchg
and
call
jmp
dec
aaa
xchg
and
inc
sub
out
loope
cmp
add
jmp
movsb
je
xchg
xor
stos
imul
out
daa
data16
in
leave
jmp
movsb
je
pushf
xor
xchg
lret
and
xchg
mull
andb
aas
add
push
ljmp
dec
push
push
lds
daa
lret
pop
enter
lret
call
fs
lds
daa
lret
pop
into
dec
js
out
push
mov
sbb
dec
lret
ret
iret
mov
ret
push
int
test
and
stos
jo
jecxz
push
es
in
enter
je
xchg
xor
sbb
lret
and
in
enter
or
in
lds
and
jmp
lock
mov
and
dec
sub
and
mov
imul
inc
push
inc
add
scas
inc
sub
out
jle
std
jno
mul
movb
sub
pop
outsb
and
outsb
sub
cwtl
push
lret
cmp
xor
rorb
stc
mov
jp
mov
sahf
inc
lods
jmp
cmpsl
(bad)
jmp
in
outsl
bound
lret
adc
jp
mov
jp
mov
sbb
in
fstpl
sub
xchg
xor
pop
jp
mov
jp
mov
jp
mov
push
inc
sub
pop
pop
scas
mov
mov
jecxz
jecxz
and
jmp
push
fisubrs
push
iret
push
loop
inc
scas
dec
sub
lods
jp
outsl
cmp
lret
scas
mov
outsb
mulb
lret
jno
jecxz
mov
jp
mov
sbb
in
fucom
out
cmc
jmp
xor
and
xchg
aam
and
rolb
adc
add
outsb
or
into
movsw
add
bound
scas
mov
repz
lret
in
outsl
test
lret
popa
scas
out
popa
scas
jmp
in
loop
popa
scas
and
scas
jmp
popa
scas
jecxz
in
bound
and
ljmp
pop
jp
mov
jp
mov
sahf
inc
lods
jmp
mov
lret
in
outsl
dec
and
scas
jnp
mov
jp
mov
jp
mov
in
insl
cmc
gs
push
iret
in
lock
loop
scas
imul
lds
and
lds
in
fstpl
sub
xchg
xor
pop
jp
mov
jp
mov
jp
mov
out
inc
lods
jmp
mov
faddp
or
cmc
jmp
in
outsl
shll
jnp
mov
jp
mov
sbb
in
fstpl
sub
xchg
xor
pop
jp
mov
jp
mov
jp
mov
push
inc
sub
pop
push
scas
mov
dec
lods
and
jno
jecxz
xor
sub
gs
and
pusha
mov
add
xchg
and
popa
lods
add
scas
xchg
jg
int3
xchg
in
push
lods
loope
scas
xchg
pop
push
mov
add
jp
mov
jp
mov
jp
mov
sbb
in
fucom
out
hlt
jmp
xor
das
js
loop
push
jo
repz
scas
out
push
(bad)
aam
add
ret
stos
mov
into
aam
add
ret
inc
and
jmp
loope
lcall
xchg
mov
jp
addr16
add
jmp
jns
out
mov
push
es
add
outsb
pop
push
fbld
mov
pushf
out
jecxz
ret
push
int
sub
inc
mov
mov
dec
and
lods
add
cmpsl
or
loope
cmc
pop
jge
sbb
and
cs
out
and
jmp
arpl
jmp
and
sub
and
jmp
and
in
push
arpl
mov
push
aad
cmpsl
cmp
inc
pop
popa
je
arpl
cmc
outsl
and
sarl
(bad)
into
inc
jno
and
shrb
ljmp
jmp
cmp
lret
and
cmp
inc
cmpsb
inc
and
in
jbe
push
gs
leave
pusha
stos
cmp
push
es
imul
push
jns
jg
jecxz
shrb
push
scas
pusha
in
add
jnp
mov
aam
sub
mov
and
sub
popa
mov
or
imul
mov
pop
scas
mov
outsb
andl
scas
(bad)
cmpsb
scas
sahf
(bad)
jo
sbb
dec
fcmovnb
cmpl
bound
or
jmp
loope
xor
jnp
mov
aam
and
pop
adc
lcall
cmpsl
push
loop
in
cli
imul
inc
mov
or
loop
std
loope
pop
in
fnclex
popa
scas
sti
jg
int3
xchg
dec
push
mov
sahf
inc
scas
mov
jle
(bad)
jmp
scas
xchg
push
add
inc
add
fsubs
jecxz
fs
(bad)
stos
bound
enter
mov
jp
mov
aad
jns
and
scas
in
and
lods
pop
jle
(bad)
imul
jge
mov
xchg
add
push
into
(bad)
jg
mov
std
insl
adc
adc
insb
out
lret
add
push
popa
lret
iret
mov
mov
gs
push
lods
sti
ret
lret
in
outsl
mov
lret
sub
incb
loope
sub
push
imul
loop
jle
dec
lods
cli
addl
and
cld
imul
jnp
mov
jp
mov
jp
mov
jp
mov
fstl
js
loop
dec
and
fwait
ret
das
mov
ret
push
xchg
sub
or
xchg
add
aam
and
jp
mov
out
test
scas
in
cs
cmpsl
imul
dec
addr16
inc
mov
jg
ret
arpl
(bad)
and
inc
push
add
jmp
and
bound
clc
aam
and
out
inc
test
scas
in
and
or
add
jmp
jecxz
jecxz
pop
cmc
jmp
jecxz
out
pop
cmc
jmp
xor
lods
push
pmaxsw
inc
or
jmp
in
mov
bound
bound
and
out
and
in
lcall
and
sbb
in
gs
cmp
imul
xchg
bound
pusha
movsl
add
out
das
inc
or
jmp
and
jecxz
scas
jmp
and
sbb
in
sub
jmp
sub
lods
or
cmc
insb
and
inc
or
jmp
faddp
pop
inc
lods
or
in
and
movsl
repz
lcall
dec
and
jecxz
and
shll
dec
and
lret
imul
and
rcrb
add
in
and
movsl
lock
lcall
dec
and
in
shll
sub
push
lret
repnz
xor
mov
inc
sub
js
mov
das
repnz
