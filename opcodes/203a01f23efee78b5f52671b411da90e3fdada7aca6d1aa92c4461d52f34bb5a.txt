mov
pop
sub
mov
or
fbld
ss
iret
(bad)
cmpsb
push
lods
dec
enter
xor
push
sbb
mov
cltd
popa
int3
lahf
or
lods
xchg
adc
pop
fnstsw
or
loop
cwtl
fbstp
sbb
push
in
push
aaa
imul
test
mov
cmpsl
pop
testb
push
cmp
pushf
sub
jnp
jns
bound
fbld
addr16
enter
jp
sub
sbb
xorb
arpl
xchg
rcrl
mov
int3
in
aaa
(bad)
dec
test
ficoml
xchg
mov
popf
sub
add
pushf
sahf
inc
mov
lods
and
push
push
sbb
push
iret
out
push
(bad)
lods
js
stos
adc
lock
fcomps
addr16
out
shrl
push
push
gs
lahf
mov
sti
pop
in
xchg
gs
adc
mov
mov
mov
mov
ficompl
cmc
(bad)
iret
cmp
dec
insb
loop
pop
popa
push
sbb
or
ja
(bad)
in
mov
nop
xor
fcomps
xchg
mov
push
fs
fldl
dec
popf
sbb
ret
mov
aad
push
sbb
xor
sbb
xchg
mov
imul
loop
sbb
fisubrl
push
data16
jno
dec
push
xchg
cmp
fcom
popf
fisubrs
rcrl
mov
int1
insb
enter
jmp
xchg
xchg
call
loop
bound
cli
mov
pop
push
and
repz
(bad)
flds
xchg
lcall
dec
(bad)
bound
jmp
adc
cs
mov
(bad)
sub
out
dec
mov
sub
in
leave
or
and
xor
mov
data16
push
jae
rolb
in
sub
xchg
or
fldl
insl
push
stos
jge
lahf
xor
adc
xchg
adc
(bad)
lahf
lahf
mov
inc
xlat
or
adc
mov
push
decb
insl
pop
fldl
xor
mov
mov
push
daa
sub
or
sbb
fcoms
pop
test
push
subl
pop
int3
dec
sub
dec
mov
pop
test
push
xchg
rcl
xor
cmp
popf
lds
jae
sub
dec
imul
pushf
dec
push
mov
xchg
int3
enter
sub
test
(bad)
jmp
push
and
cli
stos
adc
adc
outsb
or
call
cmp
stos
push
nop
lock
mov
in
inc
pop
cmova
aaa
mov
add
jnp
jle
mov
jno
push
push
sbb
pop
dec
int
mov
movsb
aam
stos
dec
pushf
shrb
xor
inc
mov
loope
add
mov
sbb
pop
jbe
test
add
cli
ss
lock
aaa
popa
mov
sbb
add
test
sbb
inc
push
mov
jg
ret
xlat
lcall
test
lcall
pop
aad
stos
sarb
mov
push
rcr
jb
dec
ja
adc
fwait
xor
push
aad
dec
inc
neg
jg
jmp
int3
add
push
jl
dec
xor
lds
(bad)
mov
mov
mov
push
jns
jb
push
cmp
fstp
lcall
call
int
jecxz
inc
imul
loope
pusha
bound
fdivl
xor
paddw
mov
lock
and
sar
sub
lret
cmp
xor
stos
push
cmpsl
sub
cmp
addr16
rorl
push
loopne
push
call
jae
pop
test
ficompl
mov
cmp
imul
call
daa
int
(bad)
dec
movsl
test
sbb
aas
ja
dec
lds
jb
lock
cmp
or
jns
(bad)
cmp
push
or
aad
and
int1
addr16
imulb
xchg
bnd
pushf
push
mov
add
jle
mov
dec
pop
stos
add
dec
dec
scas
shll
mov
mov
das
xor
or
lds
outsl
cmp
(bad)
cltd
mov
test
cltd
inc
push
call
shl
shrl
jbe
rorb
xchg
inc
leave
mov
fucomp
push
das
jae
sti
xor
call
xor
loope
out
or
out
adc
and
and
jecxz
in
mov
cmp
sub
push
cmp
mov
loop
jns
jge
push
add
aam
dec
xor
stos
adc
mov
mov
(bad)
iret
mov
sbb
xor
rclb
punpckhdq
cmp
pop
aad
jg
(bad)
call
scas
inc
in
adc
sub
test
or
rcrb
hlt
or
dec
xchg
int1
jle
rclb
push
mov
data16
add
jne
imul
(bad)
lock
dec
ficoms
xchg
push
pop
jb
xchg
mov
or
nop
mov
(bad)
jns
data16
push
mov
xlat
fwait
ljmp
mov
cmp
xor
or
jp
push
mov
mov
lret
subl
call
ret
inc
sbb
cs
jecxz
aad
xor
popf
pop
(bad)
in
mov
aad
dec
outsb
add
arpl
cmp
aas
je
ja
in
mov
data16
push
(bad)
push
pop
insb
outsl
adc
dec
int
xchg
push
jno
push
scas
hlt
(bad)
iret
aaa
push
lds
sub
pop
ret
pusha
and
ljmp
mov
out
ret
xchg
(bad)
fnstenv
jae
push
mov
into
sbb
sub
or
in
inc
xor
sub
fcoms
int3
fldenv
cmp
loop
xor
mov
movsl
pop
jno
rcrl
shrl
out
sbb
(bad)
outsl
push
dec
rorl
jb
rclb
push
ja
xor
insb
fs
jnp
aad
ficoml
stos
repz
jnp
hlt
popf
stos
xor
add
mov
or
jecxz
fwait
sub
(bad)
mov
add
sbb
jmp
push
cmp
jns
pop
fdiv
and
sbb
mov
push
jg
pop
fcmovu
or
or
dec
cmp
push
sbb
popf
pop
jge
fcomi
incb
mov
jbe
push
addr16
xor
les
int3
daa
add
iret
cmp
push
lahf
test
xor
xor
push
inc
into
stos
pusha
cmpsb
ret
xchg
lods
lret
popf
sub
clc
push
mov
jb
lcall
test
ljmp
jnp
fnstenv
push
mov
cmp
or
xchg
filds
pop
pop
lods
jne
scas
inc
adc
leave
jo
enter
dec
lahf
call
push
jb
les
mov
stos
sub
or
jl
mov
rcrb
xchg
fstp
jmp
iret
adc
sti
test
ficomps
fstp
js
push
mov
push
ja
lcall
das
adc
xor
pop
adc
mov
dec
lock
data16
rorb
into
(bad)
lds
fdivs
push
pop
(bad)
(bad)
lret
push
xor
mov
iret
je
adc
sahf
ficompl
jg
sub
mov
xor
dec
jmp
fisubrl
loope
leave
ret
scas
mov
in
sub
xchg
stos
pop
sub
push
arpl
idivb
add
or
cltd
aaa
(bad)
push
mov
cmp
aas
shlb
decl
clc
ss
inc
je
loope
popa
sub
outsb
fcmovu
jp
cmp
je
xor
push
(bad)
push
sbb
fstl
sub
fmull
pop
jmp
(bad)
xchg
fisubs
push
in
outsl
pop
js
cmpsb
xchg
adc
fldenv
inc
js
addr16
gs
insl
imul
xorl
outsb
insb
lret
cltd
lock
fimull
push
pop
js
ljmp
jbe
mov
out
mov
aas
jg
mov
out
lret
mov
mov
xor
in
in
adc
jle
sub
lea
pop
in
mov
add
faddl
repnz
sahf
jae
xchg
test
shrl
jge
cmp
adc
in
lcall
in
inc
dec
push
arpl
js
fcmove
xor
jg
sbb
out
inc
movsb
mov
adc
andl
(bad)
cmp
pop
repz
(bad)
call
adc
loope
mov
push
enter
add
xchg
inc
call
aad
scas
inc
inc
jbe
add
call
adc
jno
ss
mov
jp
sub
push
stc
movsl
fs
adc
ficompl
