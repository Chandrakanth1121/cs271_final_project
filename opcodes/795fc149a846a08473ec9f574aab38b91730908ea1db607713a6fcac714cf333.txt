loope
jle
xchg
add
fwait
xor
clc
pop
testb
repz
test
lahf
aaa
(bad)
jnp
push
cltd
test
fcmovnu
repz
outsl
dec
(bad)
sbb
dec
stos
mov
mov
les
out
jmp
fs
push
and
incl
shl
pop
cld
mov
les
jl
loopne
loope
fcmovne
orb
test
mov
add
data16
mov
ret
lock
stos
(bad)
dec
int3
cli
pop
jmp
pop
adc
dec
rcrb
aam
push
(bad)
mov
cmpsb
fwait
jl
decb
dec
push
sbb
or
fcompl
pop
adc
cmpsl
mov
xchg
lret
in
cmp
lods
jbe
mov
scas
aas
(bad)
lea
xchg
sbb
out
dec
or
mov
cmp
jmp
cmpsb
jmp
in
push
jae
ds
xchg
sbb
sub
aas
insl
lea
xchg
cmc
test
roll
shll
pop
lea
das
ret
xor
lea
rclb
out
xchg
ret
sub
jg
cmp
jb
ret
lcall
jb
fisubl
arpl
popa
sub
int
loope
xor
xor
addl
sub
or
sub
arpl
lretw
outsl
ljmp
scas
addr16
mov
fistl
cmp
jnp
jbe
push
fisubrs
(bad)
(bad)
loopne
mov
in
sub
test
pop
(bad)
pop
mov
push
sub
or
stc
add
ret
sbb
and
push
decb
std
jns
push
xor
inc
in
into
in
test
pop
jle
mov
mov
dec
lahf
cmp
or
test
or
call
sub
push
aas
jle
mov
add
shlb
lods
mov
add
push
popf
pop
inc
aam
repz
or
addl
push
mov
jl
add
int3
std
por
aam
mov
cmp
pop
dec
jb
xchg
lcall
jle
pop
andl
mov
dec
cli
repz
ret
arpl
rorb
mov
aam
pusha
ljmp
xchg
cwtl
jge
jae
movsb
sbb
pop
jp
jle
dec
filds
pop
popf
mov
mov
jb
dec
lret
data16
xchg
stos
stos
cmp
mov
inc
enter
cmp
data16
imul
push
and
mov
ja
insl
mov
roll
pusha
sub
jmp
(bad)
or
popf
and
daa
xchg
or
add
pop
ret
xchg
rorl
std
fidivs
rorl
cmpsl
sbb
jg
jmp
xchg
roll
fidivrs
mov
inc
dec
cmp
sub
fs
cmp
jno
dec
xor
mov
dec
mov
cltd
out
jl
mul
call
sarl
jns
pop
jmp
add
jmp
popa
and
inc
xchg
or
std
push
pop
fwait
xchg
push
pop
in
or
dec
jg
sti
fidivl
push
(bad)
into
xchg
cmp
jmp
test
insl
cltd
ja
jbe,pn
or
data16
add
bound
sbb
add
(bad)
fldl
popf
test
call
(bad)
xchg
xchg
jl
cmp
inc
sti
adcb
ret
incb
in
push
je
subb
and
(bad)
(bad)
int
xchg
int
fwait
nop
mov
ret
jbe
out
mov
mov
int1
cmpsl
aad
xor
test
femms
repnz
adc
nop
cld
nop
lret
mov
lret
iret
inc
rsqrtps
cltd
adc
add
lods
jns
in
shlb
(bad)
xchg
mov
insl
mov
and
daa
shr
imul
data16
xchg
js
rcrb
xor
pop
sahf
mov
xchg
pop
je
cmp
cmc
hlt
push
mov
hlt
push
push
outsl
dec
jo
pusha
cltd
add
inc
add
fstl
mov
fnstcw
inc
dec
mov
xor
add
or
dec
(bad)
pop
xchg
add
jne
testb
mov
mov
in
mov
pop
pushf
or
push
jge
lret
mov
xchg
mov
addb
fstpt
pop
jl
orb
sahf
lret
pop
pushf
sbb
sti
js
or
or
sbb
xchg
cs
cmp
mov
(bad)
int3
push
mov
mov
in
lea
(bad)
jle
jle
or
test
out
mov
int3
adc
jns
jae
jb
or
dec
in
mov
orb
les
or
int3
shl
add
jmp
mov
cmp
mov
pop
lea
mov
mov
adc
or
and
sahf
jg
adc
sahf
pop
or
incb
in
jle
outsb
stos
rolb
cmpb
movsb
pusha
test
mov
or
sbb
pusha
pmulhuw
add
mov
xchg
cltd
bound
and
push
or
cmp
outsb
xchg
inc
call
aaa
test
jg
xor
jle
xor
mov
cmp
xchg
fs
faddl
dec
cmpsb
(bad)
mov
mov
xchg
aam
decl
xorb
mov
cmc
test
ljmp
pop
jmp
xlat
repz
add
jecxz
(bad)
lea
divl
dec
movsb
pusha
lods
inc
xor
dec
xchg
fisubs
cmp
jo
cwtl
or
int1
sub
dec
fs
out
imul
mov
pop
addr16
out
jp
inc
push
mov
imul
mov
mov
sbb
mov
imulb
addb
test
outsl
jbe
mov
sub
jmp
add
sub
sbb
outsb
mov
push
popf
das
xor
ret
rcl
jle
inc
sbb
push
add
lea
(bad)
jl
lret
pop
push
cmp
pusha
or
sub
(bad)
les
adcl
fs
mov
stos
jno
mov
pop
test
lods
push
jg
fwait
inc
int1
lea
in
mov
xchg
subl
xchg
arpl
sti
xchg
pop
(bad)
dec
ss
jle
sub
fs
movsb
jp
imul
decb
jle
(bad)
jge
adc
dec
cmp
and
fisubl
insb
test
popa
mov
in
mov
dec
fwait
mov
cld
sahf
pop
jmp
out
test
dec
dec
jns
loope
stos
xchg
sub
inc
sub
jle
lcall
or
gs
jns
test
inc
adc
dec
dec
dec
ds
xor
std
out
in
cltd
dec
sbb
out
adc
cli
jo
cld
nop
xchg
jp
imul
add
or
pusha
push
push
sub
xor
jle
push
jp
inc
or
inc
repz
cmp
js
mov
inc
outsl
sub
adc
pop
jl
xchg
ja
out
jl
sete
movsb
push
mov
jb
sarl
add
fisubl
mov
cmpsb
orb
mov
std
std
and
ret
cmp
lods
mov
(bad)
(bad)
(bad)
xchg
iret
mov
mov
push
aaa
pop
fnstcw
add
sbb
mov
fcomps
xchg
xchg
rcrl
adc
ja
sub
pop
movsb
jl
mov
mov
in
(bad)
mov
stos
add
out
add
sbb
or
jbe
jg
outsb
push
ret
js
sarl
dec
int
ret
push
adc
push
frstor
(bad)
inc
lcall
gs
int3
notl
popa
inc
stos
int3
ret
dec
subl
dec
jae
shl
popa
mov
inc
dec
cmpsl
in
lcall
adcl
or
rolb
adc
mov
lret
cmp
inc
or
pusha
mov
(bad)
pop
rorb
adc
repz
addr16
lods
add
mov
adc
cmp
les
and
sub
jo
cmp
sti
and
mov
orl
add
lea
mov
mov
fs
xor
cs
dec
int3
xor
(bad)
push
inc
ficoml
ljmp
out
jno
add
shll
cmp
data16
jnp
fwait
les
sub
adc
mov
inc
adc
loop
stc
pop
in
mov
shl
ret
mov
nop
add
jo
xor
or
(bad)
pushf
sti
popf
or
mov
test
aas
incb
push
mov
rcrl
fs
ficoml
mov
mov
pop
sub
push
pop
jb
imul
push
push
mov
cmp
scas
les
add
mov
movsl
cmc
test
