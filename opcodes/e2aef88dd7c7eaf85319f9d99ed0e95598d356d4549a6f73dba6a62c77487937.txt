inc
dec
or
aas
cltd
inc
push
mov
lret
int1
lcall
push
xchg
das
sti
cmp
mov
shll
push
pop
mov
mov
jno
addr16
pop
mov
daa
xlat
test
jl
cmp
int3
inc
pop
pushf
mov
mov
and
jg
sub
jg
in
sbb
insl
jno
jno
push
inc
xchg
movsl
test
sub
rolb
pop
popa
inc
lods
pop
pusha
cmp
aaa
cld
dec
jno
mov
xor
pop
dec
sbb
imul
or
iret
out
sub
fnstcw
sub
or
sbb
fisttpl
mov
add
push
pushf
adc
and
push
and
jbe
shll
push
dec
lea
rcrl
xchg
stc
xor
sbb
int
and
pop
insb
adcl
push
push
mov
jge
xor
xchg
push
jge
add
(bad)
ljmp
jp
rcll
leave
push
add
jno
inc
les
jbe
loope
hlt
sub
popa
mov
divb
adc
adc
push
ret
jmp
push
hlt
push
sbb
jmp
sub
bound
(bad)
fwait
mov
sub
cmp
nop
outsb
xor
pop
adcb
jbe
add
andl
lret
call
mov
sub
jp
mov
jb
pop
mov
lcall
fmull
dec
push
xor
clc
sti
inc
jbe
aad
insl
out
cmpsl
std
fwait
pop
daa
push
jl
push
xor
xchg
and
aam
add
stos
je
outsl
rcl
sub
dec
mov
mov
cmp
test
lea
mov
adc
mov
test
into
sub
jbe
cs
ficoms
aas
fdiv
mov
inc
xchg
outsb
call
add
movsl
stc
les
aaa
xchg
imul
popf
dec
(bad)
movsl
jne
dec
in
lret
fisubl
shrl
(bad)
aaa
xchg
pusha
ja
xchg
cmc
sbb
jb
or
jae
sub
cwtl
in
inc
adc
lret
int1
hlt
cmp
dec
cmp
and
mov
repnz
cmp
mov
imul
mov
dec
(bad)
pop
and
insl
nop
es
repz
int
pop
pop
call
rclb
sub
pop
out
jo
jle
ret
shl
iret
mov
fsts
idivb
aad
fsubl
cld
inc
mov
mov
mov
movb
mov
add
adc
mov
xchg
ja
fnstcw
ret
ljmp
inc
fwait
sbb
pop
mov
xor
jle
repz
xor
push
in
mov
jl
rclb
ret
subl
adc
call
xchg
mov
push
mov
je
cmp
mov
movl
mov
js
push
jo
call
inc
mov
mov
jmp
loopne
sub
adcl
jmp
push
fs
mov
add
adc
adc
movsl
pop
sub
cmp
sbb
fsubl
dec
out
cmp
mov
(bad)
mov
pop
xchg
adc
lahf
fwait
cmp
rolb
mov
bnd
and
lret
mov
jg
xor
sbb
scas
or
js
add
insb
mul
dec
mov
inc
add
js
movsb
loopne
push
daa
xchg
dec
xchg
pusha
(bad)
xor
dec
sbb
inc
pop
leave
out
lds
mov
lds
add
cmpsb
mov
gs
insb
and
add
pusha
popa
mov
dec
sti
test
(bad)
cmp
loop
stos
xchg
imul
and
push
xor
dec
xor
in
push
mov
pusha
int3
out
mov
cld
pop
inc
mov
xchg
xchg
mov
scas
pop
pop
inc
fwait
jmp
test
push
pop
outsb
mov
je
push
aaa
or
fcmovu
xchg
les
ret
xor
roll
xchg
mov
cli
cmp
sbb
sub
push
sbb
add
lds
or
dec
insl
pop
cli
mov
(bad)
or
jo
call
inc
mov
mov
(bad)
lock
adc
aad
gs
jg
lds
outsl
scas
js
ret
sub
add
insl
sbb
mov
xor
arpl
mov
aad
outsl
lcall
pushf
call
orb
sahf
jg
int1
jg
jbe
testl
jg
das
iret
push
xor
dec
cmc
pop
repz
push
sbb
fidivl
out
mov
in
mov
inc
push
popf
(bad)
ds
sub
stc
(bad)
ljmp
lock
std
lds
pminsw
scas
aad
sub
iret
aam
fidivrl
pop
imul
cmpsl
inc
xacquire
cli
cmp
pop
push
mov
lcall
fwait
pop
ret
mov
cld
(bad)
push
cmp
or
loope
cmpsl
imul
xchg
test
mov
mov
jbe
inc
ret
movl
dec
mov
mov
ljmp
enter
out
dec
test
and
lea
mov
je
gs
inc
or
adc
faddl
arpl
pop
adc
push
jae
or
mov
sub
pop
dec
test
(bad)
xor
push
lahf
scas
lcall
pop
inc
testb
push
push
add
push
dec
nop
scas
xchg
add
movsl
outsl
sbb
stos
jae
jmp
mov
jmp
fnstcw
clc
sahf
mov
les
test
jecxz
mov
push
fdivrs
test
nop
ja
mov
out
sarl
cmpsb
sub
jle
fisubl
jno
jg
rcl
and
pop
add
stos
adc
stos
aas
repnz
inc
push
pop
jno
xchg
sbb
sub
mov
jge
add
dec
add
aad
sub
testb
fdivrp
insb
inc
xlat
repnz
rcr
das
into
mov
ret
daa
scas
lock
inc
inc
or
enter
mov
mov
(bad)
in
imul
or
cmpsb
cmp
adc
jmp
cmpsb
call
std
sub
mov
test
fwait
dec
mov
mov
push
cmp
and
jecxz
and
mov
lret
inc
test
fwait
pop
pop
pop
sub
xor
or
fldcw
mov
scas
cmp
mov
mov
fwait
out
test
call
sbb
out
xor
dec
xchg
xchg
add
push
and
cwtl
mov
add
stos
movsl
int
lea
xor
fbld
call
and
xorl
mov
and
mov
mov
cmpsl
mov
and
cmp
inc
cwtl
out
jo
lea
sbb
js
shrb
inc
cmpsb
and
in
daa
sbb
insl
mov
lahf
mov
xlat
adc
sbb
add
xchg
adc
sub
push
dec
or
and
sub
in
fisubrs
and
enter
and
xchg
cmc
addr16
(bad)
xlat
fwait
adc
loopne
ret
dec
scas
fs
int1
jne
shlb
ljmp
bnd
adc
ja
xor
clc
es
gs
pop
outsb
sub
mov
fists
sub
mov
gs
dec
push
pop
xchg
sub
and
mov
mov
repnz
dec
pushf
dec
jne
pop
xchg
cmp
dec
mov
mov
push
mov
and
(bad)
pushf
pop
push
mov
add
mov
mov
out
pop
cmp
add
push
and
xchg
sub
(bad)
aaa
movsb
imul
insb
xor
xchg
xorb
pop
pop
xchg
push
mov
jle
pop
mov
push
js
fcmovnbe
mov
inc
push
fsts
cmpsb
jge
xlat
push
push
bound
jne
cld
stos
bnd
clc
out
mov
dec
daa
iret
roll
adcb
adc
scas
in
push
lods
call
and
aas
jle
xchg
push
xchg
cmpl
(bad)
push
mov
adc
test
mov
push
mov
cmp
and
sbb
stos
rcl
xchg
push
pop
and
ljmp
es
or
mov
std
push
popa
jl
(bad)
faddp
dec
sbb
jg
xor
dec
or
jg
test
xchg
mov
sbb
sbbl
fcompl
push
cmc
fsubrl
test
fsub
cmp
sub
int3
lods
or
roll
pop
imul
and
dec
in
jp
xor
or
pop
and
cld
add
std
(bad)
negb
fiadds
pop
