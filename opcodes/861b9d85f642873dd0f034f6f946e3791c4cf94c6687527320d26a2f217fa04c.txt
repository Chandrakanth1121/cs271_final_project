mov
or
add
add
dec
add
add
add
add
add
add
push
rcrb
or
dec
pop
lcall
(bad)
pushf
mov
xchg
test
lahf
sbb
mov
loop
repnz
popa
daa
dec
insb
xchg
lahf
jmp
bound
cltd
sub
xor
adc
dec
mov
psubsb
loope
loopne
push
fwait
ja
popa
fildll
sahf
in
call
ljmp
scas
jmp
jae
cmpsl
mov
adc
push
jne
fwait
(bad)
pop
sbb
pusha
adc
inc
stc
jne
pop
sarb
loope
xchg
mov
and
push
xchg
pusha
pop
fwait
into
loope
xchg
lret
jg
shrb
addr16
imul
int
xchg
fiadds
mov
pop
sbb
mov
xchg
mov
mov
fcompl
arpl
cmc
scas
fnstenv
xor
and
push
aad
clc
xchg
xchg
inc
aam
jl
loope
add
pop
inc
scas
bound
lods
ret
pushf
fcmovbe
pop
xor
cld
jp
es
loope
(bad)
sbb
mov
addr16
inc
add
das
test
cltd
jne
add
or
pop
lcall
aas
(bad)
or
xchg
test
cmp
add
(bad)
sub
scas
mov
sub
jp
and
insb
adc
fcoms
pushf
jno
into
(bad)
cld
add
test
arpl
jl
sub
(bad)
iret
aam
fstpl
insb
mov
lcall
lds
inc
loop
les
jno
add
fiaddl
cmpsl
mov
je
test
xor
xlat
test
sub
lods
push
ja
mov
ss
xchg
and
pop
fidivs
jp
test
gs
sub
stos
dec
mov
add
movsb
dec
xor
push
adc
jae
nop
fstl
or
rcrb
or
cltd
xchg
(bad)
xor
pop
push
stc
(bad)
nop
popf
and
pop
push
inc
mov
cmp
mov
outsl
mov
insb
mov
dec
pushf
sub
cmpsl
mov
les
inc
sbb
jmp
nop
pop
rcll
cld
popa
push
lahf
mov
push
call
test
out
sbb
push
xchg
aad
sub
adc
push
out
push
fcmove
loope
jno
stos
mov
bound
adc
les
adc
add
jns
dec
cli
in
loope
pop
std
push
mov
test
inc
arpl
ds
lods
jns
fwait
(bad)
fcmovbe
cmp
imul
fcmovnbe
jecxz
scas
and
jecxz
fstl
jl
cmpl
and
mov
(bad)
push
iret
test
adc
in
into
push
stos
xor
scas
pop
pop
pop
xchg
in
iret
mov
pushf
and
mov
std
movsb
repnz
scas
xchg
mov
pop
xor
sub
stos
mov
inc
adc
mov
jecxz
into
and
xor
mov
mov
(bad)
inc
ret
stos
mov
push
add
in
xor
push
ljmp
cmpsl
mov
mov
sub
or
cmpsl
xchg
push
sbb
popf
inc
int
scas
cmp
push
ja
inc
pop
fldt
ljmp
lret
pop
nop
and
jp
call
xchg
pop
sbb
pop
test
lret
pop
and
mov
leave
xchg
negb
pop
scas
stos
insl
clc
push
rcr
and
cmp
jne
call
pop
int3
js
lea
(bad)
add
xchg
jecxz
lods
lods
push
add
xor
and
leave
rcrl
pop
push
push
push
out
lcall
cli
and
pop
imul
fldt
les
fimuls
pop
pop
inc
fwait
inc
push
test
(bad)
jge
mov
push
dec
es
outsl
lret
adc
orl
jge
dec
adc
pusha
dec
hlt
jle
and
shlb
dec
movsb
adc
cmp
xor
in
lcall
hlt
data16
jmp
push
push
xor
movsl
pop
hlt
ja
mov
sahf
mov
loope
pushf
sbb
inc
sar
into
out
and
jne
xchg
xor
jns
cs
mov
hlt
inc
mov
sbb
lahf
xchg
das
xchg
fs
xor
add
inc
and
rclb
cld
jmp
jmp
xchg
aad
mov
pop
mov
jecxz
and
je
mov
frstor
push
mov
dec
cmp
push
mov
aad
fnsave
and
rolb
out
xor
dec
push
push
test
pop
ljmp
test
in
push
push
jge
cmpsb
mov
aaa
aas
mov
inc
cmp
cltd
inc
jl
xchg
int1
insb
or
sub
mov
pop
dec
movsl
jecxz
inc
push
test
xchg
cmc
dec
test
add
iret
dec
push
pop
mov
xchg
nop
and
jl
inc
jp
or
push
popf
mov
outsb
pop
shlb
and
fwait
stos
shll
ss
or
repnz
and
push
add
addl
inc
jo
decl
into
or
lea
vandnps
jno
sbb
cwtl
test
jno
push
xlat
movhps
fldcw
(bad)
jnp
sub
push
movsl
mov
out
lds
adc
jo
idivl
daa
ffreep
movsl
jbe
mov
sbb
mov
cmp
push
pop
xchg
dec
mov
jbe
hlt
xor
mov
imul
ds
adc
mov
(bad)
fstps
push
cmp
lods
pop
ds
call
scas
idivl
push
or
mov
xchg
leave
push
xor
add
xor
push
xchg
dec
es
add
lock
or
adc
dec
fnstenv
mov
(bad)
dec
pop
sub
or
mov
sbb
insl
add
cmp
mov
mov
or
adc
stos
and
imul
cmp
(bad)
mov
imul
(bad)
lret
leave
nop
dec
mov
sbb
fcomip
fistpll
or
cmp
xbegin
hlt
lret
outsb
and
push
jg
sbb
jns
popf
std
mov
pop
nop
dec
sbb
adc
out
mov
mov
xchg
jbe
pop
test
(bad)
push
enter
arpl
dec
fnstenv
inc
xchg
jge
loope
frstor
mov
pop
lahf
insl
scas
mov
ret
and
repz
in
mov
jp
jle
jbe
movsb
sbb
fildll
data16
incl
cmpsb
popa
dec
xor
test
outsb
adc
(bad)
in
es
sti
jge
jnp
scas
testb
inc
cs
stos
and
fidivrs
push
inc
mov
push
mov
std
int1
(bad)
in
sbb
jnp
scas
jno
aas
dec
mov
setne
adc
cwtl
imul
inc
inc
gs
and
es
bound
mov
inc
addr16
add
jge
insb
aaa
push
outsl
mov
repz
inc
mov
mov
pop
lret
pop
fidivs
mov
mov
mov
sti
imul
lock
mov
repz
mov
inc
push
addr16
sub
and
and
or
shll
rcr
cmp
outsb
push
xor
les
outsb
pop
mov
jecxz
addr16
popa
or
test
add
mov
fsts
cmp
xchg
loope
aaa
dec
ffreep
loop
and
fmuls
pop
je
add
lock
(bad)
push
mov
rcll
mov
imul
clc
fcmovnb
fstpl
push
sarl
stos
repnz
mov
js
ret
cmc
mov
xchg
mov
sub
jmp
mov
jp
jno
dec
inc
inc
fwait
sub
push
pop
mov
in
sub
sahf
movsb
sbb
sub
loop
adc
dec
cmc
ja
mov
mov
and
xchg
lods
(bad)
daa
in
jge
ret
jbe
call
sub
or
fidivrl
push
pop
mov
int1
clc
or
xchg
pop
ret
aaa
daa
mov
or
test
push
add
loopne
xor
push
aaa
push
bound
mov
mov
fistpll
inc
jb
xchg
inc
jge
pop
mov
push
pop
mov
cmp
dec
mov
sub
lret
mov
sub
cmp
cmpsb
mov
add
push
insl
or
and
mov
ss
mov
mov
fisubl
or
sub
