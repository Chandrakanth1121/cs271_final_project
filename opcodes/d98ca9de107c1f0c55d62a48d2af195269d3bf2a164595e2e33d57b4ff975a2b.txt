sbb
add
outsl
std
std
pushf
sahf
jae
mov
and
mov
cmp
fdivp
push
adc
sub
loop
mov
xor
mov
scas
(bad)
aam
sub
mov
imul
outsb
add
xor
lahf
jp
adc
(bad)
push
jecxz
pop
mov
inc
out
mov
dec
xor
xor
push
je
push
adc
jmp
cmp
sbb
stc
dec
popf
gs
mov
es
push
cli
push
xor
jo
test
mov
shlb
lock
pop
mov
mov
cmp
xor
and
sbb
fcmovnu
xor
sub
cmp
jmp
jb
mov
fs
loop
mov
xchg
sbb
pusha
daa
and
cltd
ret
inc
in
out
inc
inc
xor
popf
cmp
aaa
decb
daa
mov
adc
dec
inc
pop
fcmovnb
and
xor
cmp
xor
cwtl
jecxz
and
jne
call
shll
lea
pusha
(bad)
sbb
jb
xchg
lret
fmul
pop
mov
movsb
push
popa
clc
fsubrs
xor
and
(bad)
adc
mov
adc
lret
mov
xor
mov
fsubs
pop
jnp
out
pop
inc
dec
sub
fsubrl
xlat
stos
(bad)
in
jns
or
js
into
enter
push
arpl
idiv
mov
iret
stos
mov
xor
test
movsb
or
lock
mov
add
sahf
shl
jae
pop
pop
int
push
testb
cli
jp
inc
pop
call
and
xchg
fstpl
in
xchg
pop
push
roll
outsl
out
das
bsf
int3
fsubs
popf
push
pop
adc
cs
outsl
push
mov
scas
mov
fcomi
insb
mov
inc
test
loope
mull
mov
xlat
mov
ret
mov
cwtl
push
xchg
lods
dec
jge
aam
fdivrs
push
stos
scas
cmpsb
test
test
push
adc
pop
(bad)
int
adc
jae
jmp
ljmp
pop
loope
cltd
jne
mov
stos
sbb
aad
xchg
test
inc
sti
or
push
adc
sbb
sub
mov
xor
out
add
jnp
jns
add
pop
xor
aam
filds
lock
cltd
ficoms
lds
jno
pop
int
std
dec
or
add
xchg
cltd
mov
dec
dec
ss
sub
xor
cld
movsl
jp
rolb
push
pop
dec
and
or
or
sarl
xlat
call
sahf
mov
ret
xchg
andb
push
insl
and
mov
jo
stos
stos
or
mov
jg
pushf
xchg
jmp
popa
add
mov
xchg
sub
mov
jp
insl
push
lea
xchg
fisttpll
mov
cmp
mov
aam
(bad)
jnp
mov
fildl
sbb
aam
fsubl
mov
cs
(bad)
hlt
shl
mov
cmpsl
inc
mov
sub
push
mov
fadds
cmp
inc
push
push
jb
dec
ss
adc
inc
int1
pop
xor
push
adc
push
dec
cmpsb
cli
cmp
nop
xchg
jns
sbb
sbb
add
cli
or
into
fisubs
mov
and
pop
clc
je
jg
ja
out
scas
scas
ja
inc
lahf
iret
(bad)
out
outsl
cs
idiv
into
mov
ja
lcall
push
fnstsw
adc
push
leave
lret
jb
movups
sub
pop
hlt
rclb
jnp
fimuls
inc
adc
data16
test
jae
jns
and
adc
pop
mov
or
pop
mov
jg
out
mov
add
cmp
cltd
mov
push
nop
hlt
jae
arpl
(bad)
cltd
sbb
xor
fs
movsb
lods
mov
addr16
cltd
insb
dec
lea
lds
pop
les
loopne
outsl
mov
(bad)
lahf
mov
inc
out
cld
sti
(bad)
and
add
fwait
in
stc
mov
lret
cmp
jae
and
lret
ljmp
int1
xchg
adc
clc
lods
pop
fnsave
mov
leave
aad
add
mov
or
rcr
cmp
pop
push
loopne
arpl
cmp
sub
jg
rol
std
das
inc
das
inc
sbb
shl
fdecstp
mov
lods
xchg
cmp
cmp
fiadds
leave
inc
ret
adc
fsub
adc
add
mov
mov
dec
inc
lock
or
lcall
lret
xchg
jb
or
int
shrb
sbb
popf
lahf
jmp
pop
(bad)
jae
cltd
outsb
xor
jle
addb
lcall
or
add
repnz
imull
pusha
into
repnz
lods
mov
mov
mov
lcall
std
(bad)
rep
out
insb
frstor
push
jp
imulb
int3
movsb
mov
repz
cli
fsincos
cmp
cmpl
fiaddl
(bad)
arpl
lret
jmp
dec
daa
(bad)
sub
push
and
cmpsb
mov
popa
xor
cwtl
mov
loope
jns
shr
es
mov
pop
sti
mov
mov
int
jp
mov
testl
jl
adcb
imul
cmc
cli
jbe
imul
hlt
dec
sub
sbb
push
repz
sub
into
ret
lcall
dec
push
loope
and
repnz
movsl
cltd
mov
xor
sub
(bad)
fwait
movb
jno
rcrb
adc
xchg
jno
mov
and
cmp
or
mov
or
sub
or
push
test
mov
adc
cltd
jo
scas
sbb
(bad)
xchg
repnz
push
loopne
popa
lods
fwait
add
mov
inc
mov
sub
aad
add
lret
pop
loopne
or
adc
mov
pop
pop
dec
mov
and
(bad)
jb
mov
sub
push
xchg
daa
mov
or
xchg
jb
stos
push
iret
ret
in
in
jae
insl
jecxz
std
cmp
rclb
push
clc
inc
fcoms
ret
push
jae
shl
inc
jp
add
and
push
dec
xor
iret
push
(bad)
into
mov
sbb
xchg
sbb
xor
fbld
xor
mov
sbb
xchg
mov
jno
or
cmovp
ja
fiaddl
int1
andl
and
outsl
pop
gs
je
xor
or
lcall
mov
mov
sbb
jnp
push
add
or
mov
fbstp
mov
inc
shll
mov
pop
sbb
jge
inc
or
subb
(bad)
clc
xor
xor
outsb
in
mov
push
nop
mov
jae
cmp
sub
xchg
stos
or
lds
iret
mov
and
mov
or
xchg
add
les
lahf
sahf
push
sbb
xchg
sub
and
xchg
and
push
leave
popw
rcr
lock
insl
out
cli
ret
cmp
outsb
and
inc
enter
cmp
sbb
jno
jl
ds
pop
xor
sub
xchg
jno
xor
pop
fcoml
xor
mov
jns
or
and
push
loope
inc
jp
inc
mov
test
dec
cld
mov
cmpsl
fnstenv
ret
inc
xor
push
push
xchg
mov
and
test
sub
sbb
mov
out
xor
mov
outsl
test
pop
mov
cltd
ja
mov
mov
adc
fwait
jb
idivb
mov
push
subl
movsb
int
mov
out
jo
popf
lea
mov
jp
cmp
inc
enter
mov
out
loopne
(bad)
clc
aaa
xchg
xchg
rolb
enter
sbb
lret
std
push
mov
dec
add
mov
jbe
xor
cs
cmp
cmp
xchg
xchg
mov
cmp
xchg
(bad)
jp
dec
or
es
sbb
shrl
mov
adc
test
jecxz
cmp
movl
ja
jno
xor
sub
rclb
mov
add
call
cmp
mov
iret
(bad)
dec
pop
add
cs
and
mov
and
xchg
mov
bound
pop
inc
stc
xor
pop
cmpsl
mov
in
cli
cli
pop
fiadds
xorb
xchg
fisubs
in
dec
iret
mov
in
and
add
push
xchg
enter
cmp
mov
repz
cmp
inc
mov
jb
iret
pop
(bad)
