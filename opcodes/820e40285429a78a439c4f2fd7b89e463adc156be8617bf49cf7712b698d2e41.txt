mov
leave
mov
jbe
mov
or
jns
loope
(bad)
mov
outsb
imulb
xchg
mov
scas
je
push
addb
or
xor
sbb
pusha
verw
and
fsubr
imul
jmp
fistps
bound
lahf
mov
lcall
cmp
mov
mov
sub
mov
dec
mov
sbb
(bad)
push
push
lret
jle
enter
push
pop
push
mov
in
push
mov
and
cmpsl
xor
add
(bad)
inc
push
into
mov
jmp
dec
or
jbe
pop
jl
or
rorb
mov
push
xchg
in
das
jae
repnz
pop
sbb
repnz
or
ret
rorb
sbb
cmpsb
sub
jmp
cmp
idivl
add
mov
push
enter
sarb
andb
add
dec
push
int3
jle
mov
iret
or
cmp
aas
nop
into
clc
(bad)
popa
fwait
and
push
out
insb
or
mov
ss
mov
leave
cmp
xchg
test
adc
inc
jle
mov
mov
add
mov
mov
jo
fisubrs
lods
push
mov
fwait
mov
cmp
mov
xchg
or
out
aas
adc
jnp
lea
out
mov
mov
rorb
inc
(bad)
int3
sub
(bad)
in
push
(bad)
or
mov
bound
popf
push
and
xchg
sbb
xor
dec
jmp
loopne
xlat
in
addr16
or
ss
int3
xchg
mov
xchg
pop
push
int3
dec
int3
or
and
(bad)
mov
out
out
dec
push
loopne
push
inc
dec
inc
inc
lahf
inc
and
xchg
ret
push
push
rolb
scas
jecxz
inc
ret
les
pop
divl
scas
jns
jae
mov
push
(bad)
sub
scas
sti
movl
out
dec
fcompl
dec
in
dec
mov
lods
jle
xchg
lea
test
mov
xchg
lret
lock
clc
sub
xchg
(bad)
mov
adc
dec
addr16
mov
repz
outsb
(bad)
mov
rolb
adc
scas
pop
cltd
(bad)
pop
fsub
push
enter
and
push
push
dec
xchg
push
fnstenv
fimull
imull
dec
xlat
dec
test
mov
sbb
pop
test
sbb
lret
jbe
jae
div
int3
xchg
and
nop
movsl
sbb
loopne
test
(bad)
stc
or
cmc
cmpsb
mov
aaa
loopne
mov
sbb
pop
push
divl
pop
sarb
xor
gs
fwait
xor
mov
ffreep
mull
dec
sbb
sub
into
inc
mov
lcall
pushf
dec
jge
inc
dec
gs
lods
dec
inc
popa
add
mov
mov
mov
test
movsb
cmp
lret
jns
jmp
popa
cld
xor
pop
jbe
cltd
nop
xchg
(bad)
lock
jo
mov
sbb
pusha
push
enter
cwtl
addb
mov
add
or
fistps
sti
out
test
lods
mov
xlat
add
leave
rcrb
sbb
movsb
mov
data16
fdivrl
testb
es
enter
cmp
cmp
pop
dec
int3
push
xor
in
test
outsl
outsl
out
dec
aaa
or
rolb
inc
dec
cmpsb
fs
aaa
cwtl
xchg
mov
lds
pusha
cwtl
xor
cmp
out
xchg
pop
pop
xor
(bad)
int
push
xchg
insb
sub
lret
adc
ss
test
or
rolb
orl
sbb
and
xchg
and
mov
mov
sub
int3
roll
jno
jg
insl
push
mov
mov
pop
lds
das
ja
adc
cs
popa
js
mov
xchg
ja
in
or
mov
lea
mov
add
out
push
jns
and
rep
xchg
pop
push
or
inc
mov
push
dec
repnz
rcrl
aas
fistpll
add
cmp
sbb
push
fnstcw
into
mov
lea
dec
fstpt
neg
iret
testb
inc
cmp
rol
push
scas
adc
inc
inc
dec
sub
es
popa
fdivr
lea
das
inc
xor
rorb
std
inc
bound
cwtl
cmp
pop
das
xchg
out
into
sub
cld
or
lods
dec
push
add
cmpsl
fucomi
mul
mov
fldt
dec
pop
stos
mov
fisttpll
sbb
int3
mov
lock
ds
dec
roll
lcall
pop
jle
push
out
and
insl
push
mov
inc
int
xchg
sub
in
fimull
jge
loopne
mov
fdivs
rorl
bound
sbb
mov
nop
dec
xchg
jg
push
dec
fs
add
or
jae
mov
inc
aad
insb
mov
cmp
test
add
dec
pop
inc
int3
aam
addr16
rorb
push
xor
inc
inc
outsb
out
outsb
dec
sub
leave
neg
dec
dec
stc
dec
test
xchg
mov
cmp
xor
movsb
push
xorl
daa
sub
shrb
adc
jl
inc
out
sub
mov
or
lods
mov
xor
daa
mov
insl
xlat
stos
jb
or
pop
adc
mov
jbe
inc
mov
fwait
jecxz
and
mov
aas
mov
imul
test
stos
fcompl
sub
shll
fs
mov
ltr
add
mov
movsl
cs
push
xorl
out
or
shr
iret
dec
aad
dec
pop
(bad)
test
mov
inc
outsl
inc
mov
cmc
xchg
adc
and
sbb
jecxz
insl
dec
int
(bad)
push
sbb
pop
ds
xlat
dec
adc
shrl
jp
mov
out
add
dec
push
sub
pop
jmp
cmc
fistpl
arpl
inc
pusha
clc
push
or
repnz
dec
cwtl
jnp
paddb
jne
xor
inc
mov
int3
pop
(bad)
scas
sub
cld
and
push
pusha
and
and
adc
outsl
dec
mov
dec
imul
test
ret
stos
xchg
jg
dec
xchg
xor
loop
sahf
imul
sub
jecxz
cltd
fsubp
adc
lret
fimull
xlat
div
(bad)
out
sbbb
rorb
cmp
les
sahf
ss
dec
lret
nop
rorb
into
fdivl
je
dec
pusha
pop
lahf
mov
inc
inc
and
mov
push
adc
jno
dec
ret
fcmovnb
sbb
mov
int3
jle
pushf
mov
clc
int3
jae
cmp
mov
adc
ja
sbb
push
xchg
or
and
stos
xchg
in
bnd
or
mov
mov
jne
xchg
or
(bad)
clc
xor
lea
jmp
and
cmc
cmp
cli
sub
xchg
mov
jg
cmp
shl
out
xchg
dec
inc
imul
fcmovnb
dec
dec
mov
ret
push
cmp
stc
sbb
adc
movsl
adc
jp
fs
addr16
push
int
clc
sbb
int
or
and
inc
mov
mov
push
dec
loopne
pop
jl
sbb
jecxz
push
ret
pusha
sub
repnz
push
cld
out
test
mov
xchg
cmc
add
jb
fst
and
xlat
sarb
fidivl
xchg
jg
mov
fstl
idivb
push
inc
test
sub
or
or
mov
insb
mov
or
scas
mov
lods
mov
inc
repz
dec
mov
fs
popf
fldcw
and
fmulp
lods
mov
mov
jle
inc
add
cmpsb
sbb
sbb
mov
mov
cmp
jmp
and
rcrb
in
mov
mov
jmp
pop
(bad)
mov
mov
adc
dec
dec
cmp
mov
mov
movsb
xor
xchg
adc
insb
out
cmpsl
(bad)
loop
inc
mov
inc
lret
addb
xor
cli
testl
xchg
pop
out
mov
mov
cmpsl
push
movb
dec
dec
ljmp
es
enter
cmpsb
mov
iret
loop
loope
int1
movsb
push
xor
mov
int3
xchg
inc
aaa
sbbb
(bad)
cltd
in
and
xchg
pushf
test
push
push
out
push
mov
jns
