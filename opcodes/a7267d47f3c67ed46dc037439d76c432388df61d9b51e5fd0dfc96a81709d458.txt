mov
int
(bad)
aas
push
sub
ljmp
sbb
pop
inc
mov
push
shrl
inc
outsl
add
mov
xchg
mov
mov
dec
mov
xor
(bad)
stos
adc
mov
hlt
mov
jno
inc
xor
jg
xchg
mov
push
mov
sub
cs
mov
xchg
xor
into
ficoms
outsl
movsl
cltd
lret
or
xor
aad
loope
daa
xchg
data16
(bad)
cwtl
arpl
cmp
mov
test
xchg
pop
dec
hlt
(bad)
clc
inc
aas
push
sub
mov
or
out
(bad)
jl
push
shll
ss
sbb
sbb
test
jbe
into
jne
mov
in
push
and
dec
xchg
fstpt
ror
jo
hlt
and
mov
ljmp
out
insl
je
mov
inc
and
test
cmpl
cmpsl
out
aam
jge
inc
xchg
push
lods
sub
jmp
ret
jge
mov
out
cmpsl
sbbl
loopne
stos
adc
push
or
cmpb
mov
clc
mov
outsb
imul
mov
jmp
addr16
std
inc
xchg
loop
pop
das
mov
repz
mov
mov
xor
inc
or
shr
ss
pop
sbb
je
and
out
mov
ret
lods
or
imull
jmp
inc
xchg
and
inc
jmp
dec
repnz
mov
hlt
lea
outsb
mov
out
outsb
add
jecxz
sbb
ror
mov
pop
xor
and
sub
movsb
jo
rcrl
xchg
xchg
pushf
xchg
clc
push
scas
jb
jae
push
sahf
sbb
ljmp
or
cs
adc
loopne
mov
add
pop
adc
repnz
aad
les
cmp
int1
mov
addb
outsb
aaa
inc
mov
std
xlat
rclb
mov
mov
push
adc
ret
outsl
sub
lahf
subb
sub
outsl
or
cli
dec
dec
dec
cmp
outsl
enter
cmp
into
sub
cmp
and
enter
nop
jne
pop
fsubs
arpl
lods
pop
mov
(bad)
jns
xor
and
hlt
pushf
inc
cmpsl
inc
or
repnz
pop
sbb
mov
mov
lret
lcall
sti
mov
mov
dec
rcrl
das
js
push
jge
jnp
pop
or
test
repnz
gs
vmovss
adc
out
lock
add
mov
js
or
xor
mov
mov
aas
jnp
enter
cltd
setne
cmp
insl
outsl
addr16
repz
rorl
insb
call
std
ret
jge
mov
pop
mov
call
jne
enter
push
jb
pop
lods
and
insl
mov
mov
mov
jns
jno
sbb
mov
in
jecxz
enter
mov
pop
pop
(bad)
sub
dec
inc
out
ror
push
iret
pop
iret
sahf
jle
lock
nop
sarl
push
jns
mov
sarl
jmp
adcl
fwait
push
lods
and
xchg
mov
push
cmpsl
fsubs
clc
add
and
xor
shl
inc
in
mov
pop
jmp
jle
das
movsl
adc
pop
cs
cmp
daa
dec
jge
sarb
push
jbe
cmp
shr
lods
pushf
into
mov
stc
outsb
pop
aaa
add
cmp
cs
xor
aas
sub
out
or
(bad)
mov
loope
cmp
and
outsb
insl
push
sbb
int1
cmp
clc
jnp
cmc
nop
mov
imul
jmp
(bad)
or
jmp
movsl
popf
or
pushf
mov
cmp
cmpsb
insb
mov
mov
mov
nop
add
dec
fdivrl
jecxz
push
xchg
or
xchg
jno
mov
rclb
xor
push
fstpl
mov
dec
dec
xchg
jmp
xchg
fs
(bad)
xor
mov
ficoml
scas
outsl
mov
orb
push
mov
movsl
movswl
movsl
insl
aaa
sub
ror
push
jg
fwait
imul
sub
xchg
or
mov
jns
(bad)
test
add
adc
outsl
or
imul
jle
int1
dec
mov
push
pop
inc
mov
repnz
mov
leave
cmc
push
cld
cmpb
and
pop
push
mov
cmp
mov
stos
mov
cmpsl
sahf
(bad)
pop
out
and
adcb
stos
fnstenv
clc
or
mov
inc
repz
dec
ja
int3
dec
addr16
mov
insl
mov
repz
std
mov
jge
push
mov
mov
out
divl
mov
daa
addr16
and
push
xor
sbb
int1
and
pop
nop
es
inc
stc
outsl
xchg
(bad)
mov
cmp
cltd
mov
gs
insb
insl
mull
lea
fsubs
mov
int
int3
outsb
fs
lcall
hlt
inc
outsl
mov
int3
sub
test
adc
add
int1
jbe
sub
dec
add
(bad)
enter
cli
push
shlb
(bad)
nop
sub
dec
imul
data16
inc
cmp
dec
iret
xor
cmc
jns
dec
lret
add
cmpsb
incb
xor
lahf
cmpsl
mov
mov
add
stos
push
mov
fildll
add
repnz
mov
movsb
inc
mov
fiaddl
fs
loopne
sub
sbb
loopne
inc
out
test
fidivl
mov
cli
int1
dec
cs
hlt
dec
cs
std
dec
int3
or
repnz
mov
ret
sarb
(bad)
repz
add
mov
out
push
rol
mov
and
adc
clc
jle
lock
xor
mov
sbb
incb
mov
jns
fwait
repz
aas
fcompl
nop
subl
xchg
das
push
cmpsl
sysenter
add
cli
scas
mov
ja
int3
cmp
leave
cmc
test
cmp
lret
or
or
aas
jg
repz
rcrl
xchg
loopne
xorb
jge
xlat
or
(bad)
xchg
fwait
sar
xchg
mov
cltd
inc
(bad)
(bad)
in
ljmp
jg
xor
jns
mov
cmp
aaa
jmp
mov
jge
push
into
jns
mov
lret
sbb
divb
hlt
test
loope
aad
mov
rcrl
addr16
cmc
jecxz
fldt
dec
push
inc
daa
sahf
or
and
sub
and
ja
fmul
cltd
mov
and
pop
jns
cmp
adc
fcmovne
iret
push
addr16
pop
xchg
test
jge
xchg
mov
push
ja
push
jo
and
daa
jo
in
xor
stos
roll
lahf
mov
(bad)
lret
cltd
sbb
ret
sub
lret
bound
jns
and
mov
int1
(bad)
lock
rolb
inc
adc
mov
imul
and
test
(bad)
push
cmp
je
or
insl
into
imul
aaa
cmpsb
iret
dec
dec
repz
orb
ret
sub
(bad)
push
shr
jge,pn
hlt
mov
test
ja
(bad)
and
jno
notl
rolb
mov
inc
pop
dec
jmp
sbb
arpl
adc
data16
cmp
xchg
es
fdivrp
pop
in
shlb
jle
neg
xor
mov
jle
ja
pop
sahf
shr
repz
dec
nop
sbb
popa
sub
mov
mov
pop
push
pop
stos
xchg
insb
push
jbe
mov
inc
cmp
stc
push
mov
pop
out
jle
jbe
in
or
popa
out
jns
dec
scas
mov
xchg
add
inc
mov
mov
mov
and
add
stos
mov
andb
je
repnz
and
jne
iret
or
pop
pop
dec
pop
pusha
lret
cmp
ret
pop
stos
mov
push
dec
mov
mov
clc
mov
filds
cwtl
mov
mov
sbb
pop
pushf
js
test
adc
and
and
sarl
dec
mov
fidivs
test
mov
inc
pop
xor
jecxz
mov
cli
inc
out
xor
popa
(bad)
mov
xor
jg
mov
outsb
inc
sbbb
in
cmp
repnz
or
sbb
cmpsl
sub
mov
popa
popa
imul
mov
push
pop
out
lds
fwait
dec
push
(bad)
jle
inc
or
