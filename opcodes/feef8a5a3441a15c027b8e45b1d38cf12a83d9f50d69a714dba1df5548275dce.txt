mov
mov
sub
and
add
push
mov
mov
mov
adc
movsd
add
pop
test
push
leave
andps
add
add
pop
sar
sti
mov
push
movl
add
cvtpd2ps
movss
jne
fildll
out
shr
sub
lds
subb
dec
clc
xor
push
(bad)
cvtdq2ps
pop
inc
cmpsb
mov
pop
pop
and
roll
mov
add
leave
call
fstpl
xchg
pop
out
pusha
(bad)
xor
in
sub
fldl
in
movsb
mov
mov
and
adc
movaps
pop
xor
dec
loopne
(bad)
mul
or
(bad)
aam
or
mov
ret
adc
(bad)
insl
leave
jb
mov
mov
or
jbe
sub
jmp
or
inc
dec
ficoms
push
or
sbb
jmp
pushf
in
xchg
shl
jmp
fldenv
jmp
add
fbld
outsl
sbb
jb
sbb
sbb
ret
jbe
jae
add
repz
orb
cs
ret
out
mov
idivb
cmp
(bad)
movsb
imul
bound
pop
(bad)
(bad)
(bad)
jle
inc
adc
ret
popa
shll
sub
inc
inc
(bad)
cmp
int
les
push
fwait
outsb
fadd
daa
pop
lret
xor
mov
sbb
mov
pop
movb
ds
add
mov
jae
or
mov
out
sub
mov
pop
mov
sbb
cwtl
adc
fstp
add
cmp
(bad)
adc
clc
push
push
push
fadds
jmp
adc
adc
add
imul
aaa
jbe
sub
or
orb
cmp
test
mov
push
or
push
mov
push
push
movsl
pusha
decl
mov
pop
mov
pop
ret
int3
add
out
lcall
frstor
hlt
loopne
xor
mov
mov
push
ss
out
testl
lret
sub
jmp
add
out
add
test
psrlq
outsb
aaa
outsb
in
mov
imul
loope
mov
adc
and
adc
data16
cs
(bad)
or
imul
add
add
in
fisubrl
add
hlt
sub
das
jnp
arpl
or
mov
push
fadds
add
mov
sbb
into
sub
xor
incb
and
push
push
push
in
jg
mov
add
cmp
xchg
pushf
push
sub
push
cmpsb
or
rclb
xor
xchg
in
ficompl
sub
pusha
ret
xchg
sti
fidivrl
mov
sub
adc
ret
sub
sbb
ret
insb
enter
push
and
dec
add
xchg
add
and
inc
add
int3
xchg
ret
andl
movb
and
adc
adc
and
rolb
das
add
in
std
jge
rolb
div
xchg
push
mov
or
cmpl
jne
mov
daa
and
jecxz
cs
dec
push
push
push
cwtl
bt
inc
aas
sbb
pop
test
in
add
or
xor
loope
xor
mov
ret
lcall
pop
xchg
addb
jmp
sbb
enter
add
neg
test
mov
arpl
pop
roll
adc
nop
mov
insb
push
xlat
daa
or
and
or
sbb
xor
lahf
sbb
mov
clc
clc
cmp
push
adc
pop
cld
pop
fisttpll
jl
cld
cmp
jbe
xor
ljmp
ret
and
mov
cltd
rorb
sbb
inc
xor
addb
sbb
adc
sbb
out
enter
in
test
pop
jo
and
jecxz
xlat
loopne
sti
push
xor
push
lods
imul
das
inc
cmpsl
jl
into
insb
push
mov
or
das
std
mov
je
insl
and
inc
mov
mov
scas
ret
push
in
adc
je
adc
inc
or
fisttpl
jmp
popa
add
lea
ds
(bad)
push
add
hlt
call
dec
jge
(bad)
pushf
and
push
sbb
or
mov
jo
popf
aad
dec
mov
(bad)
sbb
xor
test
jle
rorb
cli
adc
pop
andb
pop
shl
jne
test
cltd
out
fldl
fwait
imul
in
sbb
movzbl
leave
push
or
insb
in
jg
enter
clc
pop
fstpl
adc
rorl
add
sub
pop
jp
out
imul
lcall
mov
(bad)
mov
cmp
or
or
imul
dec
sbb
mov
adc
sub
jno
sbb
push
rorl
cmp
add
mov
push
sar
sar
jb
sbb
fcmovnb
xchg
leave
or
rorb
mov
sbb
mov
add
xchg
fdivl
lret
mov
add
js
repz
sar
sbb
decl
mov
sar
and
cld
stc
ficomps
jmp
out
iret
pop
loope
aaa
in
sbb
cwtl
aas
dec
ret
into
xor
dec
mov
out
or
lds
push
or
pop
cwtl
push
int
fldt
loope
into
add
add
enter
sub
jne
ret
sbb
or
inc
mov
stc
movsbl
jecxz
sub
test
mov
rorl
data16
jg
add
cli
mov
rolb
ret
aaa
sbb
or
pop
test
or
fucomi
fwait
sbb
lret
and
and
jl
rolb
imul
mov
mov
dec
and
jmp
mov
sbbb
xor
push
mov
add
inc
shl
jmp
cli
add
shl
add
jmp
clc
xchg
clc
push
not
and
loop
or
add
cmp
(bad)
push
sub
add
in
pusha
rol
mov
or
jmp
cwtl
or
mov
(bad)
sbb
jl
push
outsb
xor
sbb
push
arpl
gs
inc
ffree
sbb
mov
cs
dec
cmp
daa
sar
dec
push
mov
lods
addl
push
aaa
mov
xchg
cltd
xchg
les
loop
addr16
sub
aam
xchg
add
mov
call
adc
xchg
mov
inc
jb
mov
push
js
loopne
std
cmp
push
push
add
jnp
fxam
mov
or
pop
mov
mov
dec
mov
shll
mov
fistl
push
je
or
mov
pop
jmp
ss
dec
add
ss
sub
inc
dec
push
imul
scas
(bad)
pushf
pop
cmp
pop
mov
sub
inc
pop
xor
xchg
fstl
cmp
add
mov
insb
sub
arpl
test
js
call
je
call
ret
bound
jge
add
jo
fsubs
push
cmpsl
loope
loop
aaa
add
clc
lret
nop
fdivs
or
clc
daa
inc
(bad)
mov
test
mov
mov
jmp
cmpsl
sarb
test
mov
pushf
pushf
sub
push
into
neg
mov
xchg
xor
rol
sbb
dec
les
or
mov
cltd
jo
or
xchg
push
fcompl
(bad)
inc
lret
scas
rolb
or
lea
push
adc
sbb
dec
mov
cltd
sub
shll
cltd
sar
or
clc
fnstenv
pop
and
or
sbb
orb
cmp
insl
adc
pop
or
pop
add
sub
ja
rcrl
out
push
out
mov
leave
mov
mov
mov
subl
movl
mov
fs
sbb
xchg
cmp
pop
sbb
popf
jl
and
cmp
push
push
sbb
jne
test
sub
(bad)
jge
lcall
fucomip
jbe
inc
cmp
jge
adc
enter
into
jge
test
js
fwait
pop
mov
cmp
jge
inc
mov
mov
lock
mov
xchg
mov
sysenter
inc
aas
pusha
mov
cmp
jl
sub
xchg
sbb
ret
or
jle
xchg
mov
add
adc
outsl
shrl
cmp
inc
iret
cmpl
test
fbld
sbb
and
xchg
add
sbb
push
lea
popf
es
imul
and
mov
push
or
lods
pop
pop
jns
inc
jl
fcoms
lds
rcl
test
dec
aam
test
sbb
mov
pop
popa
dec
data16
cmpb
jne
push
ljmp
sub
jne
js
fs
push
dec
push
sub
lret
