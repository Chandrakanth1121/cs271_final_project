(bad)
pop
daa
sub
inc
xor
jmp
stos
xchg
dec
inc
xor
daa
inc
jne
out
mov
(bad)
jo
sbb
pusha
cmp
int
or
add
push
ljmp
call
sbb
loopne
cmpsb
jle
fbld
arpl
dec
notl
cld
cmp
es
jae
jle
xor
shrl
and
into
mov
xchg
inc
mov
xor
xchg
inc
cmpsl
push
push
push
or
stos
push
inc
pusha
push
jl
out
lcall
mov
or
and
push
mov
stos
cwtl
punpckldq
xor
dec
loope
das
(bad)
pop
or
loopne
enter
in
jae
mov
frstor
fmulp
mov
cmc
ljmp
in
jmp
inc
insl
adc
aas
gs
mov
or
jnp
cmpsb
ficoms
cmpsb
mov
adc
push
cmp
repz
jbe
out
stos
fisubs
dec
inc
pop
or
cwtl
mov
cmp
cmp
or
(bad)
sti
xchg
xchg
out
movsl
lahf
jo
cmp
cld
dec
mov
gs
aam
sub
mov
es
in
ss
jecxz
fwait
je
xchg
loopne
in
inc
jl
cmp
and
mov
push
int
int3
or
cmpb
shll
sbb
daa
cmp
adc
sbb
es
fsubp
out
stos
xchg
daa
mov
xchg
jle
xor
mov
pop
inc
mov
xor
push
imul
aas
adc
jne
stos
mov
inc
ja
dec
pop
das
push
test
sbb
inc
cmp
(bad)
inc
inc
pop
cmp
fists
jg
mov
cmp
lds
ljmp
rcrb
push
divl
adc
xlat
mov
in
aad
inc
shlb
inc
pop
repnz
das
call
fimuls
sub
fnsave
in
mov
outsl
rep
ret
out
jg
mov
imul
loopnew
jb
roll
dec
lret
cmpsl
outsl
cld
fildl
js
lret
fistpll
xor
call
iret
jae
adc
and
mov
shlb
hlt
pushf
xor
(bad)
jge
xchg
int
mov
repz
sub
(bad)
dec
mov
dec
ss
sub
push
out
sbb
xor
dec
cli
push
jge
or
mov
and
jo
inc
mov
aam
insb
testl
out
jmp
ljmp
adc
out
int1
movsl
cltd
int3
out
cmp
dec
jo
insb
shll
clc
sbb
or
into
xchg
dec
cs
xor
je
pop
shlb
or
sarb
sbb
(bad)
cmc
cwtl
or
push
mov
add
repnz
sbb
lea
jecxz
add
or
cmp
lgs
xchg
jnp
xlat
fwait
cmp
int3
cmp
and
(bad)
sti
lods
xor
test
sbb
push
imul
out
fstpl
and
sub
dec
fisubs
adc
inc
adcb
(bad)
movsb
mov
push
pop
bound
hlt
and
mov
in
push
jo
dec
(bad)
jne
cmp
pushf
stos
inc
sub
mov
cwtl
movb
ja
je
mov
sub
and
outsl
adc
es
loopne
imul
and
sbb
mov
leave
sub
cmpsl
jnp
sub
loope
fldl
imul
mov
adc
cli
mov
subb
push
dec
hlt
ljmp
shll
mov
jne
orb
or
notb
cmp
int1
lds
int
js
cmp
or
mov
push
inc
into
out
les
cmpsl
push
shl
adc
cli
dec
or
pop
or
popa
stos
mov
or
adc
inc
adc
pop
test
xor
fisttps
negb
outsl
clc
add
cmp
sub
inc
cmp
aad
xor
or
push
fwait
ret
cmp
mov
es
ror
insl
out
data16
add
cwtl
dec
and
fs
sahf
push
sbb
subl
xchg
lock
mov
mov
repz
add
push
test
or
or
pop
push
sub
hlt
mov
popa
mov
push
aad
sbb
es
push
mov
das
mov
sbb
cltd
addr16
xchg
inc
ficomps
test
inc
leave
add
add
jno
or
cmp
mov
sbb
(bad)
(bad)
les
shll
cmp
lods
testl
sub
dec
fcoml
cmpb
inc
fs
popf
dec
mov
scas
mov
into
fistpl
shrb
dec
jp
les
push
stos
fadds
aas
arpl
inc
push
adcb
stos
xor
je
rcrl
ja
lcall
mov
cli
bound
and
or
sbb
std
jnp
add
xor
jle
pop
ss
mov
push
(bad)
dec
inc
and
es
push
jl
add
negl
adc
add
jl
push
mov
(bad)
aas
aaa
mov
out
mov
and
fdivl
clc
out
push
outsb
call
mov
xchg
xchg
(bad)
(bad)
push
imul
jp
mov
push
dec
addr16
pop
xorb
aas
xor
sbb
cmpsb
lret
gs
jmp
cmp
sbb
xchg
je
jb
push
orb
dec
jb
jcxz
and
dec
and
ss
shlb
jl
jl
pop
rol
pop
pop
sbb
sbb
popf
popa
and
jge
xor
or
or
lahf
cmp
mov
nop
xor
and
inc
adc
and
sti
in
cs
mov
js
ret
mov
pop
fcom
cmp
pop
in
rcl
repz
mov
or
mov
push
dec
jne
inc
mov
(bad)
jbe
jne
fcompl
cmc
adc
test
fistpll
lods
imul
pop
mov
in
sbb
scas
xchg
and
sub
and
aas
fwait
in
jmp
cmpb
mov
push
(bad)
loop
int
pop
mov
and
dec
pop
jbe
and
aaa
mov
add
mov
cmc
add
mov
adc
mov
decb
std
lds
out
js
loopne
adc
sbb
loope
scas
adc
cmp
pop
dec
xchg
and
ret
sbb
xor
dec
and
dec
adc
cmp
int3
lret
mov
(bad)
sub
sti
inc
adc
testb
add
dec
push
and
dec
and
adc
xchg
pop
add
lret
xor
out
jge
xor
pop
push
fistl
cmp
ss
mov
pop
xchg
testb
aam
stos
cmp
int1
add
lods
outsb
push
pop
jle
or
sbb
push
sub
sbb
fbstp
lea
pop
je
out
xchg
push
lods
add
lock
xor
cmpsb
js
cs
out
adc
shl
push
add
int3
ljmp
pop
test
or
jnp
(bad)
cmp
aas
and
adc
mov
push
test
stc
xchg
sahf
rorb
lods
jne
or
xor
imul
xor
stc
dec
mov
jl
sbb
sub
inc
mov
or
bswap
testb
stos
jno
ljmp
aas
dec
add
nop
stos
ja
xor
testl
xorl
fistl
data16
jmp
pop
mov
frstor
outsl
ja
xor
mov
xor
mov
mov
ss
adc
mov
shlb
pop
rclb
jae
in
(bad)
pop
xchg
(bad)
addr16
xchg
cmp
int3
mov
dec
mov
(bad)
push
xchg
jp
lahf
cmpsl
fwait
dec
int1
daa
inc
pop
int3
imul
jle
jo
cs
fdivl
add
or
push
pop
enter
adc
mov
jle
ss
clc
fwait
cmp
add
sub
sub
clc
jmp
rolb
push
insl
sbb
and
in
cmc
jge
xor
pcmpgtw
xchg
xlat
jg
or
inc
cmp
jl
data16
daa
nop
cwtl
pop
enter
loopne
pop
jbe
fsubrs
les
mov
outsl
int
loopne
hlt
cmp
int3
inc
xor
push
roll
imul
std
dec
or
out
pusha
push
push
inc
mov
fsubl
dec
or
in
testb
push
dec
gs
add
cmp
xchg
adc
ss
or
jp
and
cwtl
mov
xchg
orb
stos
movsl
