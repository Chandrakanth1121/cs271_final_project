inc
fbstp
hlt
std
xchg
mov
pusha
out
in
in
jo
daa
mov
std
inc
inc
cmc
sahf
shll
sti
lret
mov
pop
inc
mov
push
scas
adc
push
mov
fs
es
push
jp
inc
into
mov
pushf
(bad)
int1
fidivs
mov
imul
cs
mov
inc
push
mov
cmp
scas
outsl
pop
push
imul
daa
aad
out
cmpsb
sub
fisubs
sbb
adc
mov
je
dec
cmp
orl
shlb
notb
std
loop
push
jge
ds
addl
je
fcompl
loope
inc
push
fadd
lock
sbb
into
adc
jp
and
push
iret
sbb
mov
push
jecxz
lahf
jns
push
cmpsb
lahf
mov
jae
out
addr16
sbb
addr16
fiaddl
xchg
test
data16
mov
dec
pop
repz
stc
in
movsl
sbb
fs
cld
arpl
inc
mov
jns
lcall
out
pushf
das
mov
in
xchg
xor
pminsw
xchg
sub
incl
add
xor
cwtl
adc
mov
enter
sti
out
shrl
sub
pop
insl
pop
and
sbb
jne
fwait
loopne
mov
pop
xchg
int1
fs
jle
test
xor
jmp
xor
ljmp
subl
arpl
div
pop
jg
mov
add
mov
jmp
adcb
jne
xor
inc
sub
mov
add
scas
add
dec
out
int
cmp
aad
sub
xchg
xchg
insb
jae
xor
and
mov
inc
movl
stos
ss
daa
(bad)
cmc
ds
aam
push
inc
and
in
dec
inc
sbb
imul
jecxz
outsl
and
inc
push
dec
cmp
in
mov
jl
xor
into
or
cmp
mov
in
sarl
cmc
xchg
mov
add
sub
test
int
or
push
andb
(bad)
mov
aad
fadds
in
mov
out
lcall
(bad)
fldl2e
shr
fmull
mov
rcr
xor
xor
and
jle
jns
mov
xor
pop
int
adc
push
int
adc
xchg
sti
loope
aam
cmp
iret
ficoml
dec
and
pop
bound
data16
shrl
cmp
adc
pop
cmp
jle
mov
popa
dec
enter
je
or
nop
and
cmc
mov
sbbb
sbb
adc
int
xor
dec
pusha
inc
dec
push
jp
cmpsb
cmc
test
fists
mov
lret
enter
stos
(bad)
jne
arpl
std
std
test
dec
jb
in
in
gs
xchg
fildll
aaa
push
scas
lahf
xchg
dec
int1
repnz
cmp
int1
jmp
sti
fnsave
pusha
enter
arpl
pop
jno
xchg
mov
in
aaa
pop
int1
inc
ss
out
inc
push
sub
xor
pusha
dec
out
mov
mov
jge
popa
xor
and
fists
(bad)
aaa
mov
in
xchg
lds
cli
stc
cmp
cld
das
pop
sar
push
pusha
notl
ds
mov
jmp
sbb
(bad)
mull
out
adc
jns
pop
mov
sti
pop
idiv
and
sub
cmp
jle
push
pop
fistl
and
xor
int1
div
and
sbb
push
push
push
xchg
and
shll
shrb
xor
pop
hlt
fisubrs
inc
imul
test
hlt
add
movsb
mov
pop
xor
out
sub
inc
(bad)
int
push
stos
shll
mov
cmpsl
xchg
movsl
sbb
jge
jl
iret
out
repz
out
mov
pop
je
scas
sti
mov
out
rcl
loopne
ja
jecxz
adcl
repnz
fbstp
add
cmp
jmp
loopne
in
loop
mov
xchg
jge
(bad)
jmp
out
out
scas
add
cmp
jle
das
jecxz
je
nop
ret
addr16
and
cld
cmpsb
movl
pop
jbe
xchg
jno
mov
sbb
lahf
sub
int1
xor
roll
test
xchg
dec
lcall
in
jb
jmp
push
mov
jnp
jecxz
fnop
fcoml
repz
repz
mov
cmc
sub
cs
xor
inc
push
cmp
in
out
push
imul
pop
push
jb
push
jle
jns
in
xchg
xchg
and
adc
pop
cmc
ss
or
inc
inc
popa
add
fsubl
gs
dec
xor
push
fmuls
out
loopne
out
push
push
(bad)
mov
push
call
adc
out
adc
jns
dec
cmp
movsb
pop
or
lods
in
test
sti
enter
ss
or
mov
fdivrl
cmpsl
sbb
imul
mov
cmc
in
fwait
or
movlps
adc
gs
aaa
sbb
mov
mov
mov
dec
pop
and
ds
loopne
add
es
loopne
cmp
out
push
fdivs
movsb
or
sbb
mov
scas
rclb
mov
and
dec
or
dec
inc
sti
stc
push
iret
repz
sub
push
shlb
or
xor
aas
fistl
jo
shrl
iret
mov
mov
jmp
mov
cld
enter
idiv
push
inc
loope
mov
int1
clc
aad
loop
cwtl
pop
loopne
sahf
(bad)
pop
push
pusha
or
cmp
rclb
clc
cmp
or
movsb
loopne
sbb
xchg
div
mov
loop
inc
pusha
cmp
mov
ss
rcrl
call
jg
inc
cmpsb
orl
xchg
add
out
sub
scas
xorl
adc
cmp
pop
mov
out
cwtl
aam
fadds
jl,pn
xchg
dec
lock
insb
sub
mov
push
xor
mov
cmp
mov
jns
out
push
mov
add
out
pop
jae
movsl
lcall
dec
dec
cmp
fstl
push
loope
shl
mov
out
jno
and
int1
mov
xor
int1
jp
mov
sahf
pop
adc
(bad)
sub
out
ds
ret
push
sub
mov
cwtl
sbb
sbb
sub
sbb
cltd
out
das
cmpb
out
or
loopne
into
cmpsb
pop
fisubrs
out
cltd
out
fbld
sbb
cmpsb
inc
cltd
lods
mov
test
cwtl
xor
push
into
mov
test
dec
mov
cmc
jle
shlb
call
test
cmp
aam
test
sub
lods
insl
pop
dec
std
cld
jb
pop
and
jno
bound
leave
and
mov
js
mov
into
sub
jne
mov
clc
fnsave
pop
ficoms
inc
(bad)
bound
inc
adc
movsb
sbbb
pop
aaa
out
call
inc
xchg
inc
and
outsl
orb
inc
or
fimull
daa
xor
cmp
sbb
test
xor
repnz
mov
or
lahf
outsl
imul
sbb
push
jae
mov
cmpl
jbe
arpl
out
inc
bound
inc
add
(bad)
jg
outsl
bnd
loope
(bad)
push
enter
sub
movsb
inc
or
xchg
pop
stos
loope
andnps
repz
dec
les
cmp
out
clc
repz
loop
movsb
orb
rcr
js
lods
(bad)
add
shlb
ljmp
aas
or
pop
movsl
gs
mov
lret
and
pop
jl
ficompl
xor
mov
roll
xchg
neg
int1
mov
flds
scas
mov
and
scas
loope
std
(bad)
sbb
xchg
movsb
xor
popa
daa
jno
dec
popf
sbb
movsl
dec
test
mov
pop
mov
gs
push
jns
iret
daa
idivl
insb
insb
(bad)
int1
and
loopne
mov
sahf
movsl
fistl
into
mov
fistl
loopne
rcrb
cli
pop
mov
cwtl
sbb
sarl
push
aaa
add
rorl
int1
xchg
mov
sub
insb
daa
add
scas
push
cwtl
mov
jg
stc
mov
push
decb
mov
decl
outsb
push
sub
xchg
xor
inc
xlat
scas
xor
sub
andl
ljmp
inc
outsb
daa
fadds
arpl
pop
