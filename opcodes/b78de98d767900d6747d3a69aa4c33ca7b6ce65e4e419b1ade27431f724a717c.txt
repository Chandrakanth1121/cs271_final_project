popa
mov
mov
add
cld
mov
es
add
add
in
cmp
jns
repz
aaa
jnp
xchg
aam
roll
repnz
rcll
inc
push
xor
jecxz
hlt
xor
and
adc
add
and
mov
push
inc
push
or
ja
cmp
lods
or
and
inc
sbb
push
shlb
pushf
aam
xchg
das
xchg
shrb
sti
inc
mov
jae
pop
leave
sub
fildl
ss
lock
and
test
dec
out
or
lock
dec
pop
xor
cmp
dec
pop
xchg
cmpsl
mov
xchg
in
mov
xchg
mov
xor
push
jae
push
mov
jmp
insl
xchg
pop
jmp
stc
adc
inc
dec
adc
dec
inc
les
imul
loope
mov
movb
cmp
cwtl
xchg
test
or
int1
jge
(bad)
out
in
jb
fdivl
adc
ljmp
aaa
jno
sbb
fcomi
insl
ret
ret
cmpsb
je
test
or
mov
filds
add
pusha
negb
pop
bound
addr16
pop
dec
orb
sbb
aaa
enter
aaa
add
xor
in
dec
inc
jo
(bad)
jae
lds
cwtl
cmp
dec
push
sahf
mov
mov
js
xor
mov
mov
pop
sti
imul
xchg
and
mov
adc
push
xchg
mov
cmc
and
ljmp
dec
arpl
mov
les
pop
jle
loopne
xor
pop
sbb
push
or
testb
mov
and
rcll
inc
xor
mov
ja
dec
adc
fisubs
ja
and
call
or
lods
in
mov
mov
rcll
mov
stos
dec
ficomps
and
adc
mov
shl
pop
cmpsb
hlt
lods
inc
gs
or
filds
adc
inc
and
sbb
mov
mov
mov
pop
stos
mov
je
cmc
imul
enter
or
xchg
cmp
fbstp
test
fsubs
cmp
addr16
push
push
lods
pop
rolb
adc
ret
iretw
arpl
test
divb
xchg
shrb
lods
ljmp
xchg
dec
or
ja
cmpsb
inc
ja
mov
sbb
sbb
dec
push
int1
sub
xchg
loop
roll
out
ljmp
js
sbb
jge
jle
jne
mov
lret
test
xor
shl
jnp
movsl
lret
int
insb
cmp
bound
mov
mov
scas
mov
dec
add
push
jno
sub
es
push
dec
int
sub
cmp
cmp
cmc
nop
cmp
dec
mov
mov
test
xchg
sbb
mov
mov
xlat
cmp
hlt
stos
jno
mov
or
adc
incl
jge
hlt
loopne
mov
mov
repnz
(bad)
insb
movsl
sub
dec
sbb
ss
sbb
cli
inc
fnstsw
repz
sub
in
das
ljmp
push
mov
(bad)
jbe
js
in
cmpsl
movups
int
xor
enter
xchg
mov
cmc
xchg
push
mov
imul
xor
rep
add
or
xorb
popf
sbb
xor
sub
(bad)
adc
xchg
push
pusha
fs
sub
cmp
sub
sbb
iret
push
sub
out
adc
std
bound
push
mov
rorb
lahf
clc
sub
gs
es
loop
mov
dec
or
(bad)
cmc
cmpsb
out
pop
dec
and
sti
int3
push
inc
rcll
lds
test
and
fiadds
sbb
cmp
stos
jno
loopne
mov
stos
dec
rclb
jle
jbe
cmc
jg
dec
xor
mov
jecxz
cltd
das
or
lock
lea
add
cwtl
lret
fcomps
outsl
sahf
imul
in
push
xchg
or
mov
addr16
jmp
imul
push
pop
std
push
mov
cmp
cmpsl
or
dec
sbb
xor
in
aas
loop
in
mov
sbbb
adc
dec
leave
in
xor
mov
lods
lret
pop
out
dec
(bad)
and
cli
shll
movsl
xchg
testl
sub
mov
add
ret
leave
and
fsub
pop
sub
and
aam
pop
mov
shl
mov
daa
aas
negl
and
push
roll
sbb
shl
xchg
or
mov
mov
adc
fsubs
push
sti
cli
popa
or
sbb
xchg
add
fwait
or
cmp
(bad)
scas
jns
pop
(bad)
mov
xor
sub
pop
mov
pop
(bad)
mov
outsl
out
inc
or
and
sub
clc
out
push
ficomps
testl
std
mov
mov
rcrb
mov
(bad)
stos
imul
imul
mov
add
call
dec
incl
subl
pop
int3
push
popa
lret
dec
push
push
sub
mov
rcr
jbe
mov
mov
dec
arpl
enter
inc
sub
fnstcw
cmc
xchg
dec
push
push
in
push
jae
(bad)
nop
js
dec
hlt
jmp
mov
lret
jb
mov
imul
dec
mov
cmp
or
pusha
mov
sar
bound
xchg
xor
mov
pop
xor
xchg
sub
or
insl
add
pop
xchg
out
adc
xchg
aas
xor
jle
sub
stos
jp
push
imul
and
lret
lea
mov
xor
pop
fs
xchg
ret
(bad)
cmp
xchg
or
insl
mov
xchg
mov
xor
push
mov
imul
leave
pop
sub
and
pop
mov
lds
pop
cmp
in
aad
pop
(bad)
jmp
xchg
(bad)
fwait
add
test
cmpb
mov
xor
sidtl
mov
lea
into
push
jns
imull
lock
jae
push
xor
cltd
ret
lahf
lods
fsts
test
add
mov
and
out
popa
inc
mov
nop
and
mov
or
jg
imulb
cs
inc
jmp
adc
mov
lea
mov
mov
push
scas
outsb
push
push
cmc
jp
dec
ffree
rorb
or
js
xor
add
sub
jge
lret
rcrb
xchg
aam
mov
add
xchg
inc
lahf
mov
mov
push
in
subb
add
inc
clc
bound
leave
mov
sub
pop
ret
dec
inc
daa
pop
mov
aaa
mov
movsl
push
and
dec
ret
xchg
in
test
bound
aaa
cmp
in
movsb
cwtl
jmp
sbb
mov
mov
inc
or
jl
xchg
cltd
push
mov
aam
shll
dec
or
or
cwtl
add
js,pt
fadd
lret
ss
cmc
adc
movsb
jle,pt
jmp
out
cmc
adcb
xor
cld
(bad)
cli
sub
add
jae
lods
pop
adc
out
in
mov
stc
int1
push
xchg
movsb
pop
pop
repnz
mov
inc
add
test
mov
push
push
js
adc
out
jmp
sbb
leave
pop
jae
shll
cwtl
jb
xchg
in
mov
addr16
test
insl
jp
test
jno
push
inc
rcrl
scas
movsl
loop
dec
push
lds
loop
mov
jne
insb
cmpsl
dec
addr16
out
std
and
adc
cmp
dec
lcall
add
cwtl
xchg
shll
ljmp
ljmp
adcl
popf
cmpsb
mov
lods
iret
cld
das
frstor
mov
adc
mov
cmp
cmc
cmc
in
xchg
outsb
adc
test
pop
dec
and
jecxz
roll
xchg
or
repz
jne
out
sub
adc
pop
fwait
sbb
xchg
mov
or
rcrl
dec
lods
pop
push
scas
xchg
push
ljmp
and
lahf
lidtl
movsl
and
scas
mov
in
sti
call
aam
das
lcall
cmp
loopne
int1
xor
xor
push
jbe
jge
sbb
repnz
int1
lods
ret
js
xor
pop
cli
pusha
aam
ja
xchg
mov
push
test
or
popa
cmpsl
(bad)
sbb
lret
or
aaa
inc
cmp
aad
xor
sub
cltd
pop
sbb
sbbl
or
inc
xchg
pop
