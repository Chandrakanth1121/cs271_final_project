pop
push
inc
cwtl
bound
cmp
mov
and
mov
(bad)
and
int
lods
fs
inc
cmp
mov
int
mov
call
pop
mov
lds
ret
mov
sbb
fadds
enter
je
and
jno
scas
mov
jle
xchg
lret
mov
stos
hlt
clc
fdivl
cmp
shld
aad
hlt
fbld
pop
je
jns
stos
lea
jl
les
lods
xchg
out
cli
add
pop
scas
and
mov
cli
sub
out
xor
imul
xchg
loopne
and
imul
pop
mov
mov
test
mov
js
out
into
int
cs
scas
inc
cmp
sbb
cmpsl
mov
pop
sbbl
lods
pop
fiaddl
test
pop
popa
andl
in
cmpsl
in
mov
andl
push
gs
dec
arpl
hlt
imul
mov
int3
call
outsb
(bad)
inc
je
cwtl
sti
jl
cmpsb
pop
jnp
movsl
adc
out
and
fistpll
mov
push
lods
stos
sbbl
jns
addr16
popa
aam
cmp
mov
jg
cs
mov
xchg
sahf
mov
aaa
jge
loopne
mov
mov
in
daa
leave
add
out
dec
mov
popf
pop
into
(bad)
xchg
int3
mov
and
pop
std
and
mov
sub
sub
or
bnd
mov
lcall
sub
sub
jp
mov
pop
push
fs
jae
and
add
enter
jg
or
sahf
syscall
(bad)
fdivl
aas
lods
loopne
test
jmp
movsb
mov
fmull
xchg
imul
adc
mov
mov
arpl
lock
jo
scas
pop
mov
xchg
test
jns
jmp
popa
dec
mov
inc
movsl
and
outsb
fstpl
bound
pop
xchg
outsb
rcrb
sbb
pop
cli
mov
pop
mov
mov
rcrl
sahf
test
mov
sub
das
rcrl
les
mov
and
lcall
push
scas
pop
je
sub
add
sar
mov
outsb
in
test
fs
inc
ss
and
push
mov
adc
mov
mov
scas
mov
mov
add
xchg
filds
and
ret
xchg
call
scas
daa
aaa
(bad)
addr16
int
aas
inc
inc
lods
(bad)
in
mov
and
pop
mov
outsl
js
sub
xchg
imul
dec
aad
(bad)
outsl
inc
rolb
or
push
sbb
xchg
pushf
mov
jo
loopne
(bad)
ds
fldt
push
push
data16
xchg
xcrypt-cbc
cmpsl
aad
cmp
pop
movsl
mov
(bad)
movsl
add
rolb
add
pop
clc
insb
test
inc
int
in
loopne
pop
adc
sub
jb
inc
dec
addr16
loopne
add
mov
pop
jnp
sub
testb
fs
cmpsl
sub
sub
cmpsl
iret
dec
xchg
xchg
sbb
ja
in
jmp
enter
and
test
pushf
cmp
jbe
mov
jp
inc
inc
mov
or
and
js
jne
sbb
dec
test
iret
inc
and
jg
and
mov
add
xor
sub
lods
out
jne
inc
out
pop
sahf
sbbb
jo
sbb
scas
in
ja
cwtl
decb
stc
mov
sub
adcl
inc
sbb
and
scas
lcall
shlb
and
roll
insl
or
in
dec
xchg
jp
and
(bad)
rcll
imul
push
mov
into
pop
mov
int1
shlb
jg
sbb
mov
xor
mov
push
bound
incl
cmpb
dec
xor
jno
fldenv
daa
push
add
mov
call
aam
xchg
adc
xchg
add
inc
mov
aaa
adc
(bad)
cld
push
sarb
lcall
ss
mov
lea
xchg
mov
and
fsubr
xchg
cmp
(bad)
sub
mov
pop
adc
push
scas
pop
pop
sbb
test
xor
push
(bad)
adc
xor
xor
dec
popf
rorl
sub
clc
stc
or
out
jo
and
mov
je
xchg
repnz
gs
xor
push
bound
cmpsb
popf
das
ss
add
popf
cld
fdivl
fistl
(bad)
mov
mov
mov
inc
lea
mov
sbb
mov
jnp
iret
outsl
sub
lahf
pop
and
(bad)
lea
push
and
pop
xchg
pop
push
adcl
repnz
push
and
sbb
or
rol
xchg
dec
inc
inc
insl
jnp
rclb
jae
out
jmp
cmp
pusha
je
dec
gs
sti
fildll
ret
push
mov
enterw
lret
fsubrs
movsb
(bad)
jmp
je
imul
xchg
loope
xchg
mov
fs
pop
mov
loopne
(bad)
mov
jnp
loop
dec
clc
push
lcall
sbb
inc
lret
xchg
into
xchg
inc
jge
js
data16
(bad)
nop
(bad)
(bad)
ficoms
add
outsb
jns
movsl
jno
push
bound
pop
cmpsl
lahf
jmp
sub
lods
int3
jnp
inc
pop
std
xchg
cs
dec
lds
cmpsl
mov
loopne
das
xchg
add
hlt
clc
dec
and
mov
sbbb
jo
aas
mov
push
mov
pop
pusha
loope
push
loopne
lods
xor
fwait
xchg
inc
lds
jmp
xor
cmc
shlb
pushf
sbb
jg
pop
push
int
jge
add
fistpl
or
mov
push
jns
roll
fcmovu
sub
xchg
jbe
push
das
lea
sti
push
mov
inc
popa
fistpl
dec
in
cli
jmp
push
std
sbb
mov
xor
adc
pop
sbb
mov
jecxz
fidivrs
shrb
fsubr
loop
in
push
jecxz
push
js
pop
inc
inc
shlb
jecxz
stos
cmpsl
adc
pushf
push
add
js
mov
rcr
(bad)
jmp
addb
push
pop
shrb
out
jmp
loope
dec
mov
gs
test
or
lea
fs
mov
xor
jne
in
or
add
ss
cmp
sub
sahf
data16
jb
mov
jl
mov
xchg
test
lods
pop
fsubp
sbb
push
and
sub
dec
or
jo
stc
push
jo
dec
push
dec
adc
jae
and
fdivr
inc
jge
(bad)
jle
dec
loope
pop
shlb
fwait
fs
adc
jo
pop
stos
fnstsw
shl
jmp
out
fsubs
cmp
aam
out
pop
pop
push
mov
sub
out
test
clc
aam
pop
fwait
xchg
fs
mov
mov
push
mov
(bad)
out
mov
inc
and
cmp
lret
mov
jb
dec
adc
sub
leave
sub
pop
xchg
mov
movsl
sub
loope
js
cmpb
inc
cmp
pop
iret
dec
pop
loopne
fs
(bad)
call
notl
stos
push
inc
insb
adc
mov
pusha
xchg
outsl
enter
pop
jecxz
mov
fidivs
mull
imul
aas
jge
pushf
mov
mov
xchg
inc
inc
dec
ficompl
lahf
arpl
dec
fstpt
jge
ret
popa
repnz
pop
lea
xor
mov
and
mov
sub
sbb
aam
sbb
push
or
adc
mov
push
or
sbb
xor
mov
inc
mov
jge
and
adc
mov
imul
mov
dec
sub
fldl
clc
cmc
imul
push
jge
push
sub
movsl
ja
es
jb
mov
push
fiadds
cmpsb
movsl
pushf
cmp
(bad)
in
mov
jle
test
pop
shrb
gs
cmp
pop
into
push
shlb
or
mov
dec
(bad)
xlat
xchg
xor
or
jae
addr16
ljmp
imul
(bad)
scas
sub
popa
int
iret
imul
cmp
outsb
jnp
cmp
bound
lcall
jne
addl
lret
imul
inc
fwait
decl
or
sub
insb
jne
ret
sub
stos
frstor
outsl
xor
shlb
pop
data16
int
scas
jle
and
dec
inc
dec
push
outsw
