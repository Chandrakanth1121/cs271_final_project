addr16
fdivrs
xchg
sbb
add
pop
push
test
adc
sbb
mov
imul
fimull
xchg
lcall
ret
or
pusha
nop
inc
xchg
enter
dec
add
mov
dec
add
mov
push
test
inc
insb
sbb
mov
imul
jecxz
subl
push
sub
sbb
mov
fsubs
fs
mov
cmpsb
and
dec
cmpsb
in
mov
pop
push
xchg
loope
pop
sbb
mov
stc
add
xor
repnz
cli
cld
or
loopne
fldl
aad
and
xchg
lcall
xchg
sbb
add
mov
dec
add
mov
push
sahf
loope
insb
sbb
push
stc
xchg
outsl
mov
popf
sbb
add
sbb
fbld
cmpsb
or
mov
punpcklbw
xor
stc
xchg
in
jl
outsb
aad
nop
lcall
nop
inc
cmpsb
mov
bound
js
sarb
pusha
data16
test
popf
fstpl
daa
cmpsb
or
mov
punpcklbw
xor
stc
xchg
in
jl
outsb
aad
nop
lcall
nop
inc
ljmp
pushf
stc
lods
setge
shlb
cmp
adc
test
xchg
fstpl
fdivrs
cmpsb
cld
jecxz
push
stc
xchg
in
fstl
push
pop
and
xchg
and
mov
pusha
add
mov
xchg
lcall
bound
cli
cld
cmp
loopne
fldl
aad
and
xchg
lcall
sub
push
jns
ljmp
add
mov
push
sahf
loope
insb
sbb
mov
imul
dec
in
mov
shlb
pusha
fdivrs
cmpsb
clc
add
cli
jecxz
push
stc
xchg
sbb
outsb
sarb
outsb
fwait
jge
pop
push
push
stc
xchg
sbb
js
rol
cltd
lcall
pusha
stos
jnp
bound
stc
xchg
sbb
fwait
fwait
cmp
push
stc
adc
push
test
lcall
in
push
stc
adc
push
sahf
popf
sbb
call
jecxz
or
loopne
mov
pop
add
int1
push
stc
sbb
pop
jle
or
insl
pop
stc
xchg
lcall
in
sahf
int3
jns
pushf
inc
in
rcll
xchg
sbb
outsb
shrb
outsb
lcall
xchg
sbb
cld
pop
stos
pop
jge
sahf
int3
adc
stos
jnp
bound
js
sarb
pusha
data16
test
xchg
int1
fwait
test
xchg
mov
fdivrs
pop
fldl
pop
sub
lea
sahf
int3
jge
outsb
aad
cltd
lcall
mov
mov
xchg
sbb
mov
mov
dec
add
cmpsb
sub
push
nop
int3
adc
fstpl
cwtl
push
stc
add
dec
add
mov
dec
add
pop
push
xchg
loope
insb
sbb
and
insl
xchg
add
in
mov
dec
add
mov
xchg
mov
push
in
mov
in
pusha
inc
jno
mov
xchg
lcall
inc
jns
jle
or
(bad)
daa
add
xchg
test
pop
jge
pushf
push
stc
push
in
(bad)
pushf
push
stc
add
xor
dec
add
pop
push
xchg
sbb
adc
xchg
and
adc
outsb
mov
popf
sbb
in
sahf
xchg
add
in
bound
pop
jle
or
push
jns
(bad)
xchg
fnsave
push
stc
adc
pop
jge
pushf
push
stc
add
in
pop
xor
loope
pop
xor
int
pop
xor
bound
xor
stc
loope
mov
dec
add
mov
sub
inc
fwait
push
stc
adc
pop
jge
popf
push
stc
add
mov
dec
add
xchg
in
and
rclb
test
push
in
stos
inc
or
cltd
xor
jle
popf
push
stc
add
pop
push
pushf
sbb
adc
xchg
and
xchg
and
xchg
add
in
mov
dec
add
mov
std
mov
(bad)
pusha
inc
jns
add
xchg
int3
adc
fstpl
popf
push
stc
add
dec
add
mov
push
xchg
loope
insb
sbb
and
xchg
add
in
mov
dec
add
mov
xchg
mov
push
in
push
loop
fnstsw
cltd
in
sub
cmpsl
mov
cltd
std
aad
pop
stc
xchg
lcall
mov
shlb
pusha
cwtl
sarb
pushf
in
popa
lcall
cmc
popf
aam
aad
or
add
aad
or
dec
add
mov
dec
add
mov
push
xchg
sbb
adc
xchg
and
adc
outsb
mov
popf
sbb
sbb
sahf
xchg
add
sub
int3
sbb
xor
adc
jns
add
push
stc
sbb
push
adc
jns
add
fsts
lock
data16
outsl
mov
xor
addr16
sahf
int3
adc
xor
adc
mov
addr16
pusha
jns
jle
or
pusha
xchg
sbb
in
pop
loop
std
add
pop
jle
or
gs
decb
fimull
inc
cltd
shlb
pusha
data16
nop
in
pop
cltd
sbb
hlt
add
xchg
cwtl
and
xchg
lcall
xchg
lcall
xchg
lcall
xchg
lcall
add
and
xchg
rclb
lcall
cmp
fsubr
pushf
sub
jl
sahf
int3
js
cltd
cmpsb
imul
test
jb
lcall
data16
nop
xor
outsl
add
push
stc
fsubs
push
cmp
movsb
inc
jmp
sub
js
lahf
rclb
nop
or
pop
jne
and
mov
fs
and
and
rclb
add
jle
or
dec
add
fs
popa
stc
mov
shlb
cmp
fcoms
jecxz
adc
lcall
mov
rolb
scas
js
jle
cltd
push
stc
add
xor
fisttpll
add
push
stc
sbb
push
(bad)
adc
aad
cmp
add
push
dec
add
pop
adc
sahf
push
out
xchg
in
js
pushf
popa
mov
mov
adc
leave
fwait
cmpsl
cmpsb
cmp
outsl
fidivl
add
cmpsb
add
pop
xor
aad
or
(bad)
cmpsb
sub
mov
adc
lahf
movsb
xchg
stc
xchg
jecxz
fldl
fdivrs
sub
bound
xor
xorb
add
mov
push
pop
xor
in
cmpsb
add
js
push
pop
das
pop
bound
jns
mov
popf
aam
cli
pop
and
pop
jl
lcall
negl
popa
cltd
addl
add
or
clc
xchg
lcall
cs
push
stc
pop
fstpl
lcall
dec
pushf
cmpsb
int
outsl
xchg
sbb
rclb
fwait
or
add
push
in
add
inc
fnsave
clc
js
lcall
mov
pop
push
dec
add
mov
dec
add
mov
adc
inc
pop
add
outsb
add
notb
sbb
pop
jle
or
fldl
xor
test
adc
sahf
mov
in
loope
cli
add
in
fldenv
addr16
sarb
lcall
mov
aam
popa
inc
fwait
rclb
cltd
or
fstps
int3
cmp
jns
stc
xchg
lcall
in
sahf
fdivr
mov
cltd
cli
add
in
popf
fnstcw
jecxz
int3
adc
cmpsl
push
loope
push
int3
adc
cmpsl
push
in
dec
int3
adc
outsb
xchg
les
adc
mov
loope
jbe
xchg
fstpl
or
(bad)
cld
cltd
mov
ret
sahf
or
add
jns
inc
in
push
push
in
pop
push
stc
xchg
outsl
xchg
andb
orb
pusha
push
jns
std
sub
pusha
out
test
inc
into
add
int
push
push
jns
inc
in
push
push
in
popa
push
stc
xchg
outsl
xchg
fldt
push
or
pop
adc
mov
loope
adc
pop
out
mov
push
js
fidivs
push
jns
and
sbb
cmpsb
cmp
lods
adc
xor
adc
lcall
ret
or
pop
out
mov
sbb
fidivs
push
jns
and
sbb
cmpsb
