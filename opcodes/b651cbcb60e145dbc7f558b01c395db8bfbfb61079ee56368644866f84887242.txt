clc
arpl
sub
mov
ds
stc
fsubp
shll
pop
es
int
push
xchg
push
and
cmp
fs
push
aaa
ljmp
clc
jecxz
adc
jg
(bad)
xchg
xor
aad
aam
daa
arpl
xchg
aad
sbb
push
int
dec
fs
cmp
pop
shrb
pop
cmp
int3
popa
push
pop
sti
ficoml
(bad)
mov
and
dec
jmp
xchg
pop
fsub
loop
fdivl
rcrl
out
loopne
gs
push
dec
mov
jle
cmp
(bad)
insb
or
jns
test
sbb
cmp
fidivs
or
pop
aaa
(bad)
ds
add
mov
outsl
mov
incl
leave
mov
inc
popf
pop
and
les
xor
sub
into
into
lcall
xlat
rcll
adc
lret
or
pop
iret
iret
outsl
jbe
mov
push
push
out
scas
outsl
mov
dec
fucomi
xchg
push
jmp
imul
and
in
pusha
movsb
mov
dec
daa
ds
dec
lods
js
dec
popf
lea
push
popa
dec
xor
dec
jbe
push
fildll
or
ret
xchg
(bad)
inc
inc
pop
leave
dec
or
push
add
pop
mov
cmp
pop
idivb
xorb
xchg
(bad)
jecxz
cmc
sub
pop
jmp
or
or
xchg
xchg
negb
sub
xor
mov
push
adc
dec
jl
add
fdivs
int3
cmpsl
dec
pop
lea
pop
aad
adc
jmp
dec
pop
loopne
xchg
jns
loope
jecxz
jmp
bound
dec
scas
popa
sub
fsubl
or
add
pop
jae
or
mov
leave
std
pushf
xchg
stc
jl
inc
jecxz
xchg
dec
jne,pn
dec
mov
jl
outsb
subl
mov
mov
(bad)
push
movsl
test
movsl
push
in
add
(bad)
les
xchg
aad
rolb
or
push
les
mov
adc
fisubs
jnp
xor
xchg
stos
adc
pusha
mov
sbb
jl
pandn
int
int1
cli
xchg
add
(bad)
cmpsb
inc
dec
dec
bound
cs
or
mov
ret
and
sbb
stos
sub
fidivrl
jae
rol
aaa
insl
xorb
in
or
sahf
shl
push
bound
and
adc
pop
pop
adc
sbb
inc
das
xor
pop
mov
ret
je
dec
lahf
mov
mov
pop
jne
fdivrl
inc
fmulp
test
add
push
push
(bad)
or
sub
push
dec
out
stos
push
pop
dec
jecxz
dec
aad
mov
inc
push
out
mov
mov
outsl
inc
(bad)
idivb
cli
mov
fists
repnz
add
mov
clc
mov
mov
shll
adc
push
and
ret
dec
cmp
or
pop
jns
pop
subb
push
int1
sarl
mov
test
pop
pop
ficompl
push
mov
ds
shr
pushf
repz
jle
fld
add
lcall
mov
out
mov
out
push
xor
xchg
add
jmp
test
xchg
cmp
xchg
fsub
aaa
lds
mov
aaa
bound
stos
jae
mulb
jb
inc
jb
dec
lea
xchg
push
mov
xchg
xchg
ss
mov
push
dec
mov
ret
add
mov
(bad)
out
dec
and
fsubl
jb
ds
sbb
dec
cmp
or
mov
ret
inc
jmp
push
cmp
xchg
jno
dec
add
stc
repz
rorb
cmpsb
aad
dec
mov
cmp
xor
gs
add
(bad)
scas
push
cmp
fwait
push
xchg
shr
pop
jbe
lods
inc
mov
scas
das
out
add
jbe
sti
lret
loop
fldenv
push
imull
adc
jecxz
iret
(bad)
gs
sub
jge
iret
pop
loop
xlat
dec
ds
jb
(bad)
repz
sti
mov
push
jae
ljmp
aas
push
pop
inc
mov
sub
nop
xchg
clc
sub
xchg
xchg
sub
add
add
je
dec
push
scas
out
lret
shr
mov
aas
rorl
and
jmp
cld
add
push
fwait
(bad)
mov
adc
in
hlt
xchg
inc
repz
push
ds
xchg
js
mov
div
xor
pop
mov
cmc
pop
inc
push
scas
and
out
out
(bad)
int1
add
dec
push
sub
xor
or
jae
inc
inc
jbe
adc
outsl
hlt
sub
sub
or
sbb
je
aam
mov
add
(bad)
mov
loop
add
xchg
jne
mull
mov
inc
xchg
pop
mov
shrb
inc
sbbl
push
sbb
rcrl
orb
mov
test
jle
shlb
cwtl
and
jno
stc
shl
loopne
rclb
jmp
push
test
fists
mov
(bad)
and
and
xchg
gs
jmp
testl
into
mov
xor
loop
adc
outsl
or
rsqrtps
dec
sub
pop
shlb
je
int1
push
popa
push
push
inc
fisttpll
push
adc
test
push
jmp
xchg
push
daa
data16
or
push
add
dec
pushf
sub
dec
test
mov
je
test
popa
in
out
(bad)
mov
ss
clc
aad
sahf
(bad)
push
xchg
sub
movsl
cmp
adc
into
ds
push
repnz
insb
mov
or
push
pop
push
xchg
sbb
test
mov
xor
testb
addb
pop
insb
imul
faddl
and
ja
insb
imul
clc
sub
jbe,pn
notb
gs
xor
cs
dec
ss
inc
push
push
push
hlt
push
cmp
imul
dec
push
sub
jg
repnz
cli
(bad)
das
scas
and
testb
imul
test
mov
jge
arpl
insb
and
(bad)
scas
and
mov
xor
fnstenv
xchg
lea
mov
and
adc
mov
dec
push
jne
xlat
cmp
rclb
sub
shrl
imul
clc
ret
sub
out
push
mov
movsb
and
xor
imul
dec
gs
mov
dec
jo
or
push
add
fcmove
pushf
subb
xor
aaa
sub
jne
je
push
fsts
jae
pop
ss
and
int3
mov
and
mov
cltd
ficompl
xchg
dec
ret
cmp
jne
call
mov
xor
sub
fs
popa
push
cmc
(bad)
cmp
xor
mov
in
test
xor
lret
das
ret
jge
jmp
or
jecxz
fstpt
stos
pop
in
loope
jmp
outsb
sub
fidivs
pop
fnsave
xlat
movsb
add
pop
xchg
in
fwait
jne
adc
imul
outsl
rcrl
ret
cmp
sbb
jmp
(bad)
sbb
es
int1
cmp
mov
push
add
mov
into
mov
in
lea
hlt
or
pop
pop
xchg
sti
dec
in
lods
rclb
arpl
add
pop
adc
mov
sbb
mov
stc
xchg
jg
inc
jecxz
push
dec
cmp
inc
jg
imul
push
sub
scas
xor
(bad)
jne
(bad)
enter
popf
cmpsb
test
push
test
pop
push
xlat
addl
xchg
aad
mov
cmpsl
mov
xchg
xchg
cmp
push
inc
push
hlt
iret
or
fdivs
cmpsb
add
or
sub
lea
inc
test
dec
sub
jmp
aas
shlb
ret
repz
cld
jns
loop
sub
mov
pop
inc
push
in
inc
int
ret
or
mov
(bad)
out
xor
imul
and
je
in
fistpl
push
popf
dec
scas
test
lret
dec
ja
mull
inc
mov
mov
mov
mov
push
push
fucomp
lret
ret
in
enter
push
aaa
out
fstps
jo
loop
sub
jo
mov
into
mov
outsl
(bad)
jb
mull
imul
lds
or
loope
push
cmpsl
shl
cwtl
dec
xor
jmp
