ret
jle
rorl
mov
fists
nop
jp
enter
(bad)
cmc
sbb
shrl
clc
lods
pop
divl
xor
sbb
push
test
xchg
ss
jg
gs
xchg
(bad)
scas
addr16
jno
or
std
aad
addr16
fistpl
xor
push
aam
xor
loope
fiadds
aaa
jmp
dec
pop
into
inc
pusha
popf
push
lock
loopne
and
adc
andl
in
jmp
cwtl
fsts
sahf
outsl
std
jg
test
xchg
and
pop
dec
jmp
push
sub
popa
sbb
(bad)
outsb
outsb
int1
into
data16
out
testb
test
mov
and
out
add
loop
sbb
popf
sahf
nop
shll
mov
cmp
lcall
adc
xor
adc
push
mov
fwait
adc
pop
mov
mov
xchg
movsb
ror
pop
mov
fsubp
ljmp
(bad)
jne
cmpsl
mov
pop
ret
outsl
mov
dec
cwtl
xchg
leave
add
jbe
adc
cmp
ficompl
sahf
push
jmp
mov
pop
inc
xor
clc
push
add
mov
add
(bad)
rorb
sbb
ror
stos
cltd
jbe
movsb
mov
mov
mov
out
lods
cli
nop
pop
rolb
or
sub
push
cmpsb
xor
js
mov
orl
mov
out
inc
mov
scas
sbbl
push
int1
aad
stos
cmp
je
and
dec
pop
inc
or
and
outsl
lret
nop
imul
or
popa
push
decb
cli
fisttpll
dec
inc
and
and
inc
or
testb
adc
xchg
dec
pop
sbb
enter
xchg
andl
mov
lea
or
dec
insb
fs
lcall
lea
jl
stc
cli
scas
data16
mov
js
imul
xchg
dec
lcall
pusha
cmp
mov
dec
inc
xor
mov
mov
movsb
lcall
into
jecxz
xchg
inc
and
jg
in
arpl
or
int3
cmp
fdivr
outsb
mov
arpl
pop
cmp
fisttpl
jge
cmpb
and
sahf
mov
push
mov
pop
int1
les
jno
and
inc
subl
adc
pop
repz
push
adc
mov
(bad)
fcoms
or
inc
lock
insl
inc
push
pop
dec
ja
adc
xchg
mov
rorb
loope
outsb
pop
bound
cmp
ds
aaa
(bad)
adc
std
mov
insb
jo
movsb
lret
mov
pusha
shlb
outsb
and
jbe
mov
mov
mov
loopne
push
adc
lods
rcrb
ljmp
ret
scas
and
inc
xchg
jp
stos
xchg
pusha
lahf
mov
jg
jecxz
fstpt
pop
cmp
fildl
popa
and
mov
sub
dec
push
sysret
cmc
scas
sahf
pop
adc
inc
leave
jmp
xchg
push
xchg
shrl
jg
sbb
mov
mov
sub
jp
add
js
mov
shlb
jae
pushf
or
inc
jbe
aam
bound
inc
adc
mov
fsubs
dec
jg
pusha
jl
mov
ret
fldt
push
repz
and
push
mull
xor
add
andb
lcall
adc
mov
lea
mov
xor
fstl
hlt
(bad)
cmp
push
cmp
daa
sub
iret
shl
shll
and
rorl
clc
in
out
jecxz
push
xlat
ss
pop
or
fstps
xor
mov
je
addr16
mov
rcr
in
mov
shlb
push
popf
scas
jecxz
add
sbb
dec
mov
sbb
aam
dec
add
push
movsw
push
or
out
cmp
enter
test
cs
jns
sahf
pop
xchg
aad
mov
pushf
xchg
lods
push
add
dec
mov
mov
pop
fisttpll
cs
in
loope
jle
arpl
pop
jnp
ret
jb
jecxz
push
push
push
pop
ficompl
sar
mov
sbb
int
pusha
lret
or
xor
pop
xor
jmp
dec
inc
pop
push
repnz
cltd
cmp
ja
or
insb
mov
and
dec
mov
xchg
dec
mov
loop
rorl
orb
ret
inc
add
add
cmp
mov
jl
daa
mov
adc
xor
pusha
les
cmp
(bad)
lahf
lea
dec
inc
inc
fimull
stos
movsb
dec
jle
inc
imul
cmp
add
xor
out
(bad)
and
pop
int3
cmp
lahf
lods
(bad)
push
jg
mov
push
mov
pop
loopne
cbtw
iret
in
pmovmskb
outsl
add
pusha
dec
mov
xor
cmpsl
sbb
push
lods
pop
sahf
cs
daa
shlb
adcb
or
sahf
pop
jle
cmp
mov
mov
mov
out
(bad)
es
push
je
lods
shll
clc
fucomip
ljmp
insb
and
test
push
sub
iret
in
stos
xorb
rolb
notb
int1
inc
(bad)
xchg
add
add
adc
xor
sbb
arpl
xlat
xchg
shlb
pop
jp
add
add
jmp
xchg
push
add
arpl
xchg
cli
popf
rcrb
popa
nop
xlat
pop
(bad)
imul
inc
mov
ds
cmpsb
jecxz
mov
sbb
mov
cmp
cmpsl
xchg
(bad)
loopne
or
sub
xchg
push
fcmovnbe
out
inc
mov
hlt
pop
fcomp
or
jl
and
ljmp
rorl
xchg
sub
jnp
adc
cmc
daa
pop
lcall
sarl
adcb
inc
mov
call
ds
mov
je
mov
jmp
jmp
xchg
mov
jb
xchg
pop
jnp
lods
mov
(bad)
repz
cli
mov
jl
lds
xchg
jp
mov
inc
fsubrp
cli
xor
insw
or
jne
scas
fs
insb
jg
inc
mov
pop
inc
sbb
notb
stos
cmpb
inc
inc
xchg
mov
outsb
or
adc
das
shrb
push
sarb
mov
ljmp
and
pop
cltd
int1
dec
xchg
sarl
rcll
test
sub
fwait
imul
in
mov
add
inc
push
data16
push
fsubrl
sbbb
sub
sbb
ja
das
adc
test
or
fwait
imul
out
je
aas
inc
sub
bound
adc
lea
addr16
xor
test
dec
iret
sbbb
jb
dec
(bad)
and
cmp
popf
in
dec
test
mov
add
sbbb
dec
(bad)
mov
in
xchg
xchg
cmpsb
dec
movsl
xor
sub
add
std
adc
xchg
push
bt
jb
fstl
and
rolb
push
lret
pop
push
ret
or
sbb
das
push
push
leave
fimull
cltd
mov
mov
out
mov
mul
imul
and
mov
push
dec
movsl
enter
inc
dec
xor
push
mov
inc
and
pop
aas
mov
into
or
in
int
shll
ret
das
mov
mov
jge
sti
push
outsl
inc
mov
push
mov
scas
out
or
mov
js
and
(bad)
bound
popa
mov
push
jne
jp
add
test
push
pop
out
(bad)
mov
mov
mul
adc
xor
fsubrs
mov
rcrl
jbe
mov
addr16
ja
xor
bnd
cltd
stos
xchg
mov
loopne
fiaddl
push
fcomps
mov
hlt
das
xlat
lock
jb
xchg
imul
stc
sbb
pop
push
dec
aaa
mov
(bad)
push
imul
loope
xchg
das
lods
jnp
ss
out
inc
lock
test
repz
es
mul
xor
inc
jb
pop
inc
fidivs
ret
outsb
jg
push
cmp
scas
test
fs
push
fildll
fmuls
pop
fimull
imul
into
imul
cmpsl
rolb
out
adc
push
inc
test
cltd
aaa
daa
cmp
imul
lock
sub
dec
push
mov
jbe
jl
cmp
jp
or
mov
lock
push
push
jo
or
int
adc
inc
ja
mov
inc
sti
lods
test
incb
sahf
cmpsb
