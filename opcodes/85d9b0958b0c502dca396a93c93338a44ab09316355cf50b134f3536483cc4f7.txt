adc
loop
xchg
and
pop
cmp
rcrb
test
dec
sub
subl
insl
test
jl
les
idivl
and
or
aas
mov
sbb
jns
(bad)
shl
out
mov
out
xchg
dec
jl
dec
insl
cmc
cmp
out
cltd
into
out
add
lods
insl
popf
test
push
xor
hlt
stc
jbe
(bad)
mov
lret
dec
xor
scas
jmp
xchg
and
jg
fisubrl
jnp
cmp
leave
ret
dec
adc
mov
adc
addr16
cmpsl
pop
js
arpl
adc
add
sub
sbb
cmpsb
adc
rcr
sti
and
insb
xchg
mov
cmp
aaa
mov
repz
push
fiaddl
loope
out
adc
cltd
cmp
cmp
hlt
mov
mov
pop
rorl
xchg
sbb
call
leave
push
clc
mov
pop
in
jb
addb
cmpsl
add
movsb
mov
repz
mov
fistps
jo
dec
imul
or
xchg
ret
lret
fmull
ret
test
dec
call
add
jl
lahf
pop
das
add
fsubl
popa
(bad)
jg
outsl
sbb
fimull
pop
out
and
fsubs
xor
insb
(bad)
cld
xor
imul
pushf
mov
dec
jge
inc
outsb
cmp
sub
rorb
fildl
adc
inc
push
jp
jns
mov
decl
xor
lret
push
stos
or
jg
mov
movl
cld
pop
ret
pop
and
xchg
dec
or
lret
pop
aad
xor
mov
xor
popf
bound
mov
dec
xchg
sub
sbb
cwtl
adc
jb
fcomps
cs
jb
mov
mov
fs
push
shlb
ret
fwait
pop
and
jg
movsb
lods
loope
in
lret
mov
cmp
in
int
lea
out
xchg
cmpsb
sbb
insb
test
repz
jnp
add
(bad)
sub
fmuls
rcrb
sti
gs
add
inc
mov
out
scas
popa
adc
loope
repnz
fisubl
in
dec
shlb
lret
addl
jmp
psubw
mov
cmc
sbb
lret
je
lods
cmp
jno
cmp
xor
mov
jnp
mov
push
aas
pop
cmp
pop
inc
subl
ja
inc
push
test
push
test
gs
sub
inc
sbb
pop
jp
pop
sub
aam
cmpsl
cmpsb
inc
jne
insb
inc
mov
out
test
fstpt
mov
mov
inc
jbe
ret
shll
pop
dec
jge
loopw
mov
mov
or
inc
in
outsl
lock
out
fdivl
stos
sti
pop
sti
adc
or
push
push
repz
push
ficoml
mov
xchg
cmp
(bad)
bound
lock
fimuls
stos
xor
outsb
add
or
stos
fbstp
jae
dec
cmc
out
adc
rclb
cmp
out
jnp
sbb
mov
lea
push
xor
or
lea
jns
mov
xor
pushf
aaa
jle
sub
mov
or
scas
add
ret
mov
push
sub
call
mov
loop
jns
gs
ret
dec
ret
lea
cld
lods
dec
sbb
xchg
imul
and
ja
shll
in
pop
push
call
jp
dec
mov
push
pop
arpl
imul
test
inc
jle
cmpsl
out
aas
ds
cld
jmp
inc
loope
(bad)
stc
insb
fucom
xchg
and
or
sbb
outsl
mov
aad
sub
ret
jmp
dec
loop
lods
mov
ljmp
and
call
mov
and
pop
leave
cmpsl
sbbl
into
(bad)
or
jp
shl
imul
add
lret
sbb
js
pop
bound
out
mov
jp
lahf
stos
jmp
xor
inc
xor
inc
jl
push
movsl
jmp
mov
add
cmp
or
mov
jge
inc
mov
jns
ds
bnd
addr16
(bad)
scas
xor
jae
and
inc
hlt
adc
sbb
sub
inc
in
clc
cli
aas
mov
push
add
les
arpl
outsb
les
mov
push
stc
ss
mov
int3
inc
stc
cmp
lahf
dec
inc
jg
and
stc
inc
add
cmp
inc
or
push
sub
sbb
sbb
mov
movsl
sbb
jmp
test
das
roll
shr
call
mov
rcrb
imul
shl
pop
popf
bts
pop
inc
jl
shl
lahf
lods
movl
imul
mov
or
xor
ret
movsl
push
lods
jl
int1
out
adc
pop
dec
xor
mov
mov
rcl
mov
cmpsb
push
mov
data16
fiaddl
pop
pop
mov
xor
inc
push
push
pop
cmp
or
mov
insb
je
xchg
or
daa
mov
xchg
push
and
andl
pop
xor
jp
fdivr
daa
mov
mov
cltd
jp
mov
pop
insb
jae
xor
lret
and
push
xor
popa
and
aaa
int
cmp
cmc
dec
sahf
push
mov
sti
lea
mull
dec
imul
nopl
clc
dec
int3
loop
inc
test
xor
add
aaa
ljmp
pop
jmp
lret
adc
(bad)
and
pushf
push
sub
sub
xor
movsl
sarb
cltd
lea
xchg
and
insb
adc
stc
pop
add
cmp
in
test
sub
cmc
hlt
jp
sbb
push
pop
int1
xlat
cmp
mov
sbb
call
mov
cmp
daa
fwait
je
mov
adc
aad
enter
mov
cmp
jmp
push
je
ljmp
cmp
push
push
mov
push
jecxz
idiv
push
imul
stc
and
sub
pop
lock
mov
rcrl
(bad)
in
fcmovb
xor
cmp
ret
push
jns
(bad)
fwait
lods
or
test
jno
xchg
sub
sbb
jl
rorb
hlt
adcb
nop
mov
fwait
pop
js
int1
jno
sahf
stos
xor
and
nop
pop
mov
stc
jmp
jp
dec
push
in
lret
push
xchg
add
imul
sub
sbb
outsb
sub
jo
ja
mov
sbb
popa
jecxz
jbe
mov
add
inc
add
(bad)
jecxz
js
mov
dec
mov
jns
outsb
push
push
mov
mov
xor
add
push
mov
push
insb
cmp
addr16
cltd
jle
mov
aaa
mov
jns
data16
sbb
repnz
push
jae
pop
xor
gs
mov
push
rcll
mov
orb
inc
adc
in
ss
in
mov
mov
cmpsl
push
xchg
mov
pop
xchg
fisttpl
cld
pop
cmp
jbe
jo
add
or
ss
dec
push
push
pusha
and
imul
dec
repnz
arpl
xor
cmp
test
mov
xlat
rcrl
xchg
lret
in
test
pop
mov
and
xlat
out
popf
shlb
repnz
insb
les
sbb
dec
(bad)
test
and
mov
xlat
sub
cmp
sbb
je
fwait
adc
les
sahf
jno
lret
mov
xor
popf
jp
mov
lock
adc
cmp
aas
mov
pusha
and
sbb
lods
and
xchg
(bad)
mov
mov
insb
loopne
cltd
mov
jge
or
sbb
rcrl
and
mov
add
pop
(bad)
pop
outsl
and
cltd
arpl
xor
fwait
push
lock
test
(bad)
pop
int1
aam
int3
pusha
add
lret
repnz
or
loopne
mov
jmp
sbb
dec
xlat
add
mov
add
jle
push
jns
mov
test
out
push
mov
movsb
pop
xchg
pop
repnz
cmp
dec
lods
stc
push
insl
aas
mov
dec
and
push
sbb
jae
sub
mov
xchg
push
jle
in
std
mov
jg
(bad)
in
push
sub
outsl
jbe
(bad)
xchg
mov
sub
ds
(bad)
std
mov
scas
(bad)
push
inc
dec
call
lock
inc
loope
xor
adc
popf
