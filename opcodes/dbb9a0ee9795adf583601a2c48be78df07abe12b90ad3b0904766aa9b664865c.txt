idivl
decl
in
sub
or
call
(bad)
fnop
add
movq
add
cld
rclb
data16
fldt
jmp
add
rorb
sbb
and
(bad)
shlb
ja
xor
pop
lret
(bad)
cwtl
fisubrl
xchg
lods
mov
sti
fcomp
neg
(bad)
call
cmp
out
shr
ret
pop
mov
push
push
mov
outsl
in
fnstenv
decl
rex.wb
fidivrl
mov
rcr
(bad)
sbb
clc
or
cmp
inc
or
mov
cmp
testl
cmpl
push
adc
xor
imul
and
sbb
lock
fsubrs
insb
and
sub
out
(bad)
rex.rb
incl
jl
and
(bad)
mov
jns
xor
and
mov
jg
cld
out
subl
xor
mov
mov
loop
rex.r
mulb
(bad)
add
lea
pop
out
lcall
(bad)
adc
(bad)
jp
pop
nop
lea
lea
(bad)
js
jbe
sti
or
rorb
xor
rex.wrb
insb
nop
mov
mov
jae
repz
sbb
ret
jb
rex.wxb
pop
sahf
addr32
lea
nop
xor
out
jbe
fwait
mov
and
push
je
shll
lret
push
sbb
adc
fldt
andl
mov
jmp
pop
ss
pop
sbbb
ror
test
push
nop
gs
add
xchg
test
pop
nop
push
enter
(bad)
mov
push
enter
call
sbb
mov
cld
rex.wxb
loope
insb
test
jne
out
xchg
mov
mov
mov
and
push
cmc
and
add
sub
(bad)
push
(bad)
and
xchg
lret
jbe
(bad)
int3
or
call
(bad)
popf
xchg
test
adc
jge
pushf
ja
jbe
cmovae
(bad)
mov
imul
jl
clc
cmp
add
lock
(bad)
add
add
sbb
cmp
out
je
and
(bad)
xchg
sbb
xchg
movabs
sti
outsl
es
push
push
push
push
push
pushw
rolb
rex.wrxb
fwait
movabs
(bad)
imul
(bad)
sbb
add
adc
mov
(bad)
mov
xchg
push
shl
jg
decl
add
sahf
(bad)
enter
(bad)
(bad)
(bad)
es
cs
sti
cmp
je
nopl
lret
out
xchg
fistpll
jmp
test
cld
rex.wr
fs
scas
jae
(bad)
jno
nop
cmp
enter
fildll
movzbl
sbb
(bad)
pop
outsl
cmpsl
fistpl
(bad)
push
(bad)
scas
leave
nop
cmpsl
jb
push
(bad)
mov
in
(bad)
test
je
rex.b
mov
cmp
(bad)
jl
ret
and
test
mov
adc
jg
(bad)
add
sub
add
(bad)
mov
(bad)
xchg
jrcxz
(bad)
je
fnstcw
sub
sar
rolb
jbe
mov
scas
js
fs
mov
xor
imulb
rclb
add
mov
loopne
rcll
xor
div
test
adc
cmp
(bad)
(bad)
rex.wrx
imul
test
je
jg
sub
(bad)
sbb
mov
or
je
sbb
xor
cld
nop
sbb
int
cmp
(bad)
(bad)
sub
clc
je
test
rex.wb
sbb
xchg
adc
call
call
mov
xchg
enter
mov
(bad)
jae
xchg
mov
pop
pop
pop
pop
mov
pop
fs
cmc
rorb
stos
rex
imul
(bad)
test
rex.b
rex
add
pop
pop
jne
xor
sbb
fcomip
jno
pop
ljmp
pushf
nop
mov
in
xor
in
mov
adc
mov
adc
inc
std
sbb
stc
add
(bad)
je
ss
jbe
rex.wrx
mov
rex.x
cmp
jb
sub
cli
or
(bad)
(bad)
jbe
mov
rcrl
jrcxz
xchg
je
lcall
test
add
test
jne
add
jmp
mov
stos
stos
add
out
(bad)
lea
cmp
jne
sub
pushf
sbb
add
adc
sub
je
stos
movsb
clc
imul
pop
jae
(bad)
fs
add
adc
call
pop
jl
sahf
or
xor
and
shrb
rex
ds
push
sbb
push
and
in
call
adc
notb
test
repnz
xor
mov
rex.wx
subb
add
and
shlb
rolb
push
xchg
or
js
cmp
(bad)
sub
(bad)
lock
xor
rex.wrxb
(bad)
je
ds
rex
scas
pop
stos
mov
mov
mov
cmp
mov
pushf
jl
cwtl
mov
push
mov
mov
test
pop
rex
(bad)
jns
pop
mov
(bad)
xor
lods
rex.x
rex.r
push
or
jb
cwtl
(bad)
cmpsb
or
popf
movabs
xor
adc
rex
rex.xb
outsl
sub
movabs
(bad)
pushf
cs
add
fimuls
cmovnp
(bad)
js
pop
mov
(bad)
(bad)
jns
sbb
and
hlt
test
call
enter
add
movb
adc
fsubrs
adc
rex.wr
rcrl
insb
in
out
insl
(bad)
rex.wx
jae
jg
loope
(bad)
(bad)
xlat
mov
mov
mov
sub
cmpsb
mov
rex.rxb
sti
movabs
adc
rolb
(bad)
stos
jmp
repz
sbb
(bad)
jnp
mov
mov
jnp
sbb
sub
imull
rcll
mov
repz
cmp
sahf
sahf
out
push
(bad)
test
(bad)
rex.wx
cmc
add
push
rex.wrx
ds
(bad)
cmp
xchg
(bad)
cmp
xor
adc
push
xor
cmp
adc
jl
movabs
rex
movabs
mov
adc
(bad)
push
jmp
nop
sbb
std
pop
(bad)
pushf
testb
xchg
mov
rex
(bad)
gs
(bad)
imul
push
test
jnp
cs
pop
(bad)
xchg
movsxd
testl
mov
push
lock
xchg
rex.wx
add
cmp
rorb
enter
cmpsb
add
stc
enter
fs
sbb
cwtl
(bad)
in
or
movabs
cmpsl
(bad)
mov
jmp
sar
cmp
jmp
(bad)
(bad)
pop
(bad)
mov
lahf
add
pop
and
cmp
leave
mov
lahf
xor
adc
mov
out
sub
pop
or
mov
pop
(bad)
jle
add
addr32
pop
or
outsl
pushf
(bad)
push
ffree
sbb
or
rcl
sub
andl
lahf
movsl
notb
testl
rex.w
cmpsb
rex.wrx
or
sub
rex.rx
(bad)
(bad)
rex.wr
(bad)
sub
roll
sbb
pop
and
mov
movsl
and
xchg
fists
movsl
adc
mov
push
(bad)
mov
mov
shl
mov
orl
adc
push
(bad)
movabs
add
outsb
outsl
cld
(bad)
fs
lea
rex.xb
sbb
adc
insb
mov
mov
adc
mov
add
jo
rex.wrb
rex.rx
pxor
mov
cld
push
cmpl
(bad)
test
adc
mov
jg,pn
fadd
rex.rxb
movsb
sub
shl
sbb
xchg
(bad)
and
mov
out
mov
mov
(bad)
jl
mov
pop
jns
or
pop
(bad)
cli
cmp
jge
rex.wb
rex.rx
ss
xchg
(bad)
sysretl
and
(bad)
(bad)
(bad)
(bad)
(bad)
cmp
imul
mov
cmpsb
repnz
(bad)
fcomps
pop
mov
cmp
out
or
iret
or
(bad)
push
not
mov
(bad)
xor
in
and
cmp
(bad)
xchg
rex.rxb
rex.rx
mov
int3
or
test
jno
fs
(bad)
and
(bad)
movabs
or
clc
sbb
pop
pop
(bad)
(bad)
adc
cmp
rex.w
movabs
rex.wr
int3
fucomi
hlt
adc
mov
(bad)
jmp
outsb
sahf
out
int3
sbb
(bad)
jmp
(bad)
ret
ret
fwait
pop
in
cli
pop
ret
sbb
jbe
cmp
mov
or
mov
js
shl
test
loopne
add
(bad)
adc
orl
stc
mov
sbb
(bad)
int1
jbe
(bad)
(bad)
or
es
and
mov
(bad)
fs
mov
ja
fwait
enter
sbb
(bad)
sub
jae
jnp
rex.rxb
rex.b
xorl
fistpll
leave
add
(bad)
ss
or
mov
(bad)
(bad)
sub
(bad)
out
sub
push
sbb
add
and
js
push
jl
lret
