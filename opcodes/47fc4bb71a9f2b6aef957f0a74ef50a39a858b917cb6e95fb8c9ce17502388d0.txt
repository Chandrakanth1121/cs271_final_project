mov
repz
aad
repz
shll
subb
cmpsl
xchg
shl
add
mov
mov
das
cmpsb
data16
pop
rcrl
inc
sub
jnp
fstl
lock
mov
mov
sub
xor
jb
cmp
movsb
mov
sub
mov
loope
jnp
fstpl
rcr
or
out
inc
push
into
pushf
push
jmp
sub
andl
mov
mov
xor
(bad)
sti
inc
dec
test
mov
push
push
jb
jns
loopne
sub
xchg
in
sub
cmp
pop
xlat
out
out
adc
aad
push
mov
popf
lret
daa
cmp
adc
and
loope
xor
mov
aaa
add
cmpsl
lcall
cmp
inc
add
iret
mov
out
mov
mov
jnp
shrl
xchg
sti
mov
sub
andb
mov
mov
xor
push
xchg
ja
movsb
cmpsl
xor
mov
rcl
mov
jecxz
nop
jge
aaa
sub
mov
addr16
imul
lock
jl
dec
hlt
jle
sub
loop,pt
in
into
push
mov
cmp
std
cmpsb
pop
mov
pop
stos
dec
mov
xchg
and
mov
iret
fisubl
addr16
mov
and
sbb
sti
(bad)
mov
ss
and
lcall
ror
and
adc
imul
out
(bad)
shrb
fstpl
call
int3
xchg
shlb
mov
scas
ret
js
xor
test
add
(bad)
int
mov
sbbl
jo
mov
mov
xor
lcall
jo
jno
lcall
push
xchg
cmp
pusha
cmpl
push
xchg
mov
shll
jno
and
push
int1
ss
mov
sub
pop
adc
mov
mov
loope
loope
sub
and
repz
inc
xor
loop
(bad)
cmp
xchg
mov
xor
inc
mov
int3
subl
cmp
mov
clc
stos
sub
imul
or
jnp
das
sti
jg
jno
xchg
and
adc
xor
cmc
mov
add
xchg
jns
sub
jle
and
dec
or
cmp
gs
inc
pop
in
pop
lods
lods
roll
in
or
mov
sbb
roll
je
enter
ficompl
iret
push
decl
or
stc
and
(bad)
lret
or
sbb
sbb
mov
inc
cmp
xor
enter
inc
push
dec
rcll
push
outsl
shlb
mov
mov
subb
sub
test
adc
inc
adc
sub
xor
test
das
inc
adc
dec
and
fsts
mov
inc
(bad)
xchg
cli
or
popa
jmp
sti
lret
xchg
out
cmpsl
and
adc
dec
mov
pop
mov
jb
or
xchg
insb
lock
pop
mov
(bad)
pop
xchg
(bad)
sarb
nop
sarb
pop
das
mov
inc
ja
in
rcl
dec
pop
ret
mov
mov
mov
and
cmp
pop
xor
and
xor
xchg
inc
lret
sbb
sbb
push
xorl
xor
call
mov
cmc
xchg
fstps
gs
int3
mov
jns
ss
(bad)
mov
mov
jns
mov
ss
std
scas
divb
pop
jecxz
jnp
adc
mov
aam
push
mov
popa
adc
dec
jb
or
mov
das
call
sbb
lds
sub
lds
repnz
int
orb
insl
mov
dec
jle
leave
pusha
xchg
jmp
in
sbb
imul
ss
and
add
mov
adc
adc
pop
xor
mov
sub
sbb
imul
scas
mov
pop
mov
push
pop
sar
inc
pushf
adc
xchg
xchg
rclb
cmp
cmp
shr
outsl
or
dec
mov
insb
lods
ret
insl
movsl
jno
xlat
push
or
mov
data16
pop
mov
lods
loope
int3
mov
in
pop
jns
(bad)
adc
fsubrs
roll
mov
adc
lock
add
pop
(bad)
out
adc
dec
jmp
push
je
and
iret
or
sbb
and
pop
xor
ret
loop
xchg
lcall
add
ficompl
mov
stc
xchg
sti
fcompl
imul
xchg
out
or
loop
xchg
mov
push
ja
(bad)
cli
es
mov
push
in
jp
stos
sbb
mov
sub
lret
scas
movsb
imul
xabort
popa
cli
loope
nop
imul
or
shlb
out
rorl
push
lea
cmpsb
dec
cmp
dec
dec
xchg
mov
rorb
inc
jl
xchg
cmp
dec
bound
pop
pop
pusha
mov
or
pop
cld
pop
sbbl
pop
mov
movsl
cmp
jo
popa
popa
or
dec
xchg
cmp
xchg
or
pop
imul
pop
mov
push
rcr
lods
cltd
jae
(bad)
mov
popa
pop
jg
xchg
or
add
(bad)
rclb
in
sbb
mov
hlt
sbb
jns
sbb
(bad)
leave
fisubrl
dec
push
xor
addr16
rorl
pop
mov
add
mov
jp
subb
xorb
jecxz
and
nop
lcall
pushf
xchg
jecxz
jmp
test
mov
inc
pop
add
lea
sbb
push
mov
lods
jg
bound
xchg
jns
int1
dec
movsl
xchg
fstpt
rcrl
scas
push
dec
sbbl
dec
insl
push
xchg
inc
pop
jle
insb
or
mov
loop
mov
jb
mov
or
pop
push
aas
dec
lods
pop
inc
add
shl
lock
int1
loope
punpcklbw
daa
mov
xchg
jb
or
(bad)
mov
xor
pop
mov
xchg
int3
mov
push
jnp
xchg
add
jno
sub
xor
jbe
or
pop
(bad)
popf
out
imul
add
popf
xchg
jp
cli
rorb
sbb
imul
sarl
sbb
add
lcall
std
loopne
out
sarb
mov
mov
and
and
jl
xor
push
pop
mov
xchg
iret
xchg
mov
nop
inc
pop
mov
lcall
sub
sbb
cwtl
jo
xchg
int3
push
xchg
xor
cmp
inc
inc
idivb
jmp
repz
xor
xor
dec
rorb
and
lret
ret
xchg
inc
and
mov
sarb
xor
mov
sub
xchg
cmp
je
sub
pop
pusha
cmp
add
in
rorl
subl
mov
popf
xlat
jl
idiv
mov
sbb
scas
leave
inc
dec
je
jae
sub
mov
js
jnp
cmp
pusha
mov
out
mov
xor
dec
jo
shl
scas
es
lret
push
sbb
pop
add
pop
arpl
inc
int3
test
or
inc
aas
jbe
inc
pusha
into
sahf
cmp
xchg
mov
sahf
lods
cwtl
dec
dec
(bad)
inc
in
or
out
scas
pop
add
test
je
gs
stos
ja
cs
sub
xchg
andl
xchg
push
mov
xor
aaa
sub
scas
(bad)
push
inc
rorb
add
scas
xor
push
movl
lret
loop
cli
scas
(bad)
pusha
mov
into
movsb
mov
and
or
mov
cltd
sbb
pop
jns
js
mov
xor
adc
outsl
push
iret
xchg
jecxz
ljmp
add
les
sub
mov
or
mov
sbb
and
cmp
bound
test
add
or
dec
test
adc
mov
outsb
(bad)
and
mov
imul
pop
and
idivb
adc
sub
xchg
pop
pop
add
(bad)
pop
shlb
int
add
xchg
js
lcall
sbb
(bad)
popf
jecxz
and
addr16
mov
mov
xchg
imul
ss
rolb
fwait
repz
popa
shll
xor
push
jl
ja
aam
and
mov
pop
rcl
aas
mov
call
jb
adc
sbb
pop
xchg
imul
cmp
xchg
jmp
data16
stc
mov
jp
(bad)
mov
cli
scas
pop
xchg
or
das
insb
sub
and
mov
insl
mov
enter
or
rcrl
xchg
mov
pop
imul
(bad)
shlb
xor
sbb
