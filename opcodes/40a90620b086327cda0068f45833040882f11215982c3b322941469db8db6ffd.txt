mov
mov
cmp
adc
pop
std
orl
out
mov
pop
pop
mov
pop
imul
(bad)
jb
pop
xor
pop
and
sbb
or
std
mov
mov
inc
ss
dec
sub
pop
push
xor
jl
xor
and
add
mov
add
jecxz
test
das
sub
push
cmpl
(bad)
push
pushf
xor
cmp
pusha
int3
pushf
sti
sbb
or
clc
fisttpl
addr16
xchg
add
mov
pushf
dec
cmpsb
sub
ret
fisubs
(bad)
jg
or
or
xor
jle
dec
adc
mov
dec
push
fiadds
les
mov
cs
subb
xlat
cs
inc
js
lock
and
and
into
pop
enter
and
cmp
popf
pop
push
leave
repnz
mov
xchg
ror
fwait
mov
push
adc
xor
sub
mov
outsl
repnz
in
mov
jo
lret
push
pop
or
mov
pusha
call
and
movsb
mov
fwait
pop
push
or
int
pusha
pop
fdivl
xchg
fdivrs
fistpl
fwait
shll
pop
movsb
lcall
fdivs
mov
repz
loope
lcall
cs
adc
fildll
rcrl
or
daa
fiaddl
xor
dec
pop
push
adc
int
je
cmp
out
lret
sbb
and
adc
pushf
jae
dec
cmp
movsb
xor
cli
and
insl
push
jbe
mov
push
dec
scas
(bad)
rolb
xchg
test
js
test
pop
dec
pop
inc
dec
popf
cmp
negl
mov
sub
into
aad
cmp
sbb
scas
repz
test
pop
inc
mov
push
cli
sbb
ret
pop
cmp
dec
int1
mov
ret
dec
dec
pop
pop
jp
jo
lea
cmp
jnp
mov
repz
jge
lret
pop
xchg
cmp
pop
ja
stos
int
mov
mov
or
xor
dec
xor
or
test
xor
call
inc
pop
inc
into
arpl
cld
mov
rorl
sub
inc
shl
test
mov
xchg
push
lock
(bad)
sub
xchg
mov
inc
mov
mov
loope
push
pop
mov
ljmp
dec
into
sub
inc
inc
cmp
lret
add
ds
into
mov
sahf
cmc
jb
sub
sbb
cmpsb
add
sti
sbbl
ljmp
dec
ret
inc
push
dec
add
loope
lret
xchg
mov
or
dec
mov
sub
(bad)
loop
mov
cmp
divl
movl
pop
stos
xchg
lods
divl
insl
dec
inc
push
std
adc
mov
dec
lret
es
rclb
add
adc
aad
dec
int
mov
mov
pop
aas
inc
ds
enter
aas
scas
clc
loopne
jle
inc
jmp
pop
inc
pop
add
fbld
les
notl
test
mov
add
or
leave
sub
(bad)
mov
cs
and
push
(bad)
movsb
mov
xchg
lock
sub
xor
push
test
ss
(bad)
lahf
stc
mov
data16
cmc
dec
leave
add
js
and
cmp
roll
int3
lahf
pop
int3
add
inc
int1
or
mov
stc
mov
jl
sbb
jae
mov
jge
mov
pop
iret
xor
mov
mov
push
shrb
dec
fs
and
push
fcompl
mov
dec
ja
shlb
fmulp
sar
loop
dec
test
pop
push
pop
test
xor
dec
jae
add
lds
sub
dec
dec
cltd
lea
int1
adc
add
fistps
cltd
add
add
rorb
dec
mov
iret
xchg
cmc
cmp
sub
push
test
cmpb
scas
(bad)
insl
(bad)
add
(bad)
(bad)
mov
mov
ret
xor
cmpsb
cmp
arpl
cmp
push
dec
jl
int1
sub
daa
in
aas
sbb
push
movsl
mov
pop
lret
mov
lds
imul
sbb
push
inc
dec
pusha
hlt
and
add
xor
xchg
fnstsw
inc
xchg
mov
movsb
dec
incb
stos
xor
add
(bad)
or
lds
(bad)
mov
jne
mov
mov
sub
je
popa
enter
inc
cmp
ficoml
testb
mov
push
rcrb
scas
(bad)
les
test
mov
inc
pop
cwtl
pextrw
mov
sbbl
jmp
shll
lahf
push
cmpsl
lret
jno
add
mov
dec
lcall
adc
lret
call
mov
in
xor
inc
int3
(bad)
xor
push
push
outsb
fsubrl
clc
add
jp
xor
push
ljmp
pop
pushf
fwait
and
dec
adc
jne
sbb
mov
and
fnstenv
inc
add
loop
mov
xchg
jne
imul
shll
jmp
xor
sbb
stos
mov
dec
out
arpl
xor
push
gs
xchg
pop
(bad)
aas
leave
mov
sbb
jmp
xor
xchg
call
sub
test
jl
call
xchg
repz
dec
push
jno
loope
pop
lods
lret
pop
inc
and
test
aaa
mov
cli
nop
dec
test
cs
adc
sub
mov
xorb
jne
and
arpl
insb
test
fwait
pushf
(bad)
cmp
ds
xor
xchg
in
inc
loope
roll
mov
or
lods
psrld
aam
int
test
rol
aad
pop
ss
push
jmp
incb
out
sub
pop
inc
mov
inc
jmp
cltd
mov
jl
jg
mov
and
push
dec
ret
jmp
scas
test
loop
mov
cltd
ret
dec
and
add
clc
push
cmp
testl
loop
aas
pop
mov
sbbl
xor
cmp
xor
adcl
pop
mov
adc
jp
inc
cmpsb
test
mov
xchg
scas
sub
insb
mov
jnp
bound
lcall
add
pop
hlt
je
cmp
cmp
cmpsl
int1
jbe
ret
pop
or
iret
(bad)
pop
std
xor
je
inc
dec
inc
or
mov
xchg
pop
jnp
(bad)
in
xlat
dec
stos
shrb
mov
or
add
lahf
sahf
mov
cmp
xor
lea
popa
sub
lods
shrl
ja
leave
imulb
popa
sbbb
scas
dec
dec
jne
push
pop
or
subb
pop
inc
lock
lcall
dec
int3
dec
sti
jb
scas
mov
cltd
pop
mov
add
mov
dec
pop
cmc
mov
mov
xor
dec
dec
in
in
and
leave
into
push
dec
mov
xor
out
mov
test
pop
or
scas
pop
xchg
fs
jge
filds
xor
and
lret
mov
shlb
std
test
cmp
pop
in
or
mov
pop
aas
test
jns
dec
xor
mov
in
inc
push
int
mov
mov
divb
test
dec
stos
cwtl
cs
aaa
insl
lock
hlt
or
(bad)
in
sbb
orb
dec
and
sub
dec
jns
mov
cmpsl
shlb
xchg
scas
es
push
push
stos
xchg
jmp
mov
sbb
inc
xchg
cli
lret
int1
dec
sbb
movb
push
fsubr
dec
dec
mulb
imul
data16
sub
mov
scas
rol
mov
inc
ss
mov
hlt
jmp
sbb
mov
pop
xchg
out
fwait
fwait
sti
(bad)
dec
and
sbb
xor
stos
xchg
mov
mov
outsl
sbb
jmp
jp
addb
pop
mov
or
insl
into
inc
mov
mov
jno
jp
int3
add
xor
mov
jecxz
test
int
iret
aad
adc
add
or
iret
(bad)
push
stos
lods
xchg
imul
int3
loope
cltd
mov
pop
pop
roll
loope
dec
xchg
xchg
and
jo
cmc
(bad)
aam
lcall
mov
adc
add
fadd
fcompl
add
mov
repz
dec
(bad)
loope
cmpsb
es
push
lret
or
mov
rcr
