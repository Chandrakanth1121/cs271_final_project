push
call
ret
ret
or
adc
in
(bad)
lock
jge
xchg
mov
mov
clc
loopne
es
cmp
add
sbb
jg
pop
dec
repz
lds
mov
push
and
iret
xchg
inc
lret
mov
les
scas
push
gs
aas
cmp
mov
into
xorb
mov
test
xor
dec
xchg
rorl
cmp
mov
lods
jno
cmp
mov
xor
cltd
gs
dec
fmuls
xor
out
dec
stc
jge
mov
mov
inc
mov
out
clc
fbstp
push
fstpl
fwait
mov
in
jnp
js
mov
nop
push
test
sarb
and
cltd
aam
lret
cltd
addr16
xor
xchg
(bad)
push
add
and
stc
(bad)
sti
inc
pop
(bad)
mov
insb
(bad)
andb
jg
cmp
rcll
and
pop
xlat
inc
cmp
pop
mov
push
and
sbbb
pop
and
roll
jmp
rorb
shrb
pop
sub
loop
inc
cwtl
sbb
inc
imul
sub
xor
data16
add
lcall
fimuls
inc
cmpsl
ret
inc
mov
add
pop
inc
sbb
mov
push
mov
pusha
jb
xchg
roll
add
test
mov
pop
jmp
mov
rcrb
popf
out
(bad)
sbb
inc
lret
daa
insb
ds
out
adc
(bad)
mov
int3
iret
dec
mov
clc
xchg
or
popf
aad
lods
xchg
jnp
xchg
jecxz
add
adc
cld
ret
mov
loope
or
decl
sub
jg
adc
sub
frndint
push
fidivs
jecxz
jg
call
insb
sbb
inc
add
sbb
cmp
cmc
int1
xchg
xchg
jg
fnstcw
lock
mov
out
in
add
sub
cmp
xchg
nop
stos
int1
jg
mov
push
and
or
xchg
xlat
mov
mov
sbb
push
cmp
pop
std
(bad)
cmpsl
lock
pushf
test
mov
sti
inc
ret
or
sub
jge
mov
insl
cmc
popf
daa
shl
dec
push
pushf
bound
adc
call
jnp
adc
in
mov
sub
dec
pop
dec
mov
lea
ficompl
xchg
mov
sbb
xchg
arpl
mov
mov
adc
movsb
mov
stc
or
jle
xlat
sub
pop
hlt
sbb
lds
sub
push
gs
jp
xchg
dec
scas
mov
xchg
enter
int
leave
ret
mov
call
ss
pop
sub
fnstenv
pushf
mov
and
aad
adc
mov
cltd
adc
clc
cwtl
push
inc
lods
repz
jmp
xor
data16
cmc
push
adc
adc
in
in
shll
(bad)
jmp
dec
cmp
iret
lahf
mov
imul
or
cmc
xchg
ret
mov
add
lahf
pop
adc
clc
fidivs
cmp
add
movsl
xor
cmp
mov
push
pop
mov
xchg
xchg
(bad)
cwtl
not
mov
inc
dec
loop
sub
and
or
dec
pop
dec
add
inc
loope
stos
lds
pusha
stos
xchg
lock
mov
dec
fs
push
lods
xchg
in
push
pop
pushf
sbb
mov
mov
test
data16
aad
popa
fucom
mov
andb
pop
je,pt
mov
push
in
dec
andl
cmp
orb
sbb
or
pop
(bad)
sbb
pop
pop
xchg
hlt
imul
lcall
jb
dec
clc
loopne
or
testb
movl
dec
pusha
dec
jno
popa
cli
mov
call
jbe
jns
pop
bound
adc
inc
(bad)
std
stos
dec
push
insb
sub
adc
cmpsb
in
call
out
adc
push
test
mov
cmp
jecxz
cli
mov
xchg
fs
fcompl
test
daa
in
and
or
dec
fisttps
dec
xchg
rclb
les
stos
es
cmp
loope
in
dec
dec
jns
loop
mov
repnz
push
pop
jmp
sti
mov
pop
or
xor
push
call
or
data16
sbb
xchg
movsb
lods
sahf
fcmovnu
call
add
dec
ja
out
enter
mov
pop
lret
pop
test
or
stc
rcpps
pop
xchg
lods
(bad)
lret
fnsave
daa
push
ret
test
ret
jp
sub
dec
mov
testl
inc
iret
lock
dec
xor
lret
and
aas
jle
cwtl
adc
dec
je
xchg
inc
jle
dec
cld
jns
mov
and
push
insb
inc
clc
push
ret
add
cltd
add
push
fsubs
sbb
sub
mov
sahf
xor
push
fdivrl
cmp
cmc
ss
sbb
adc
or
arpl
inc
sti
nop
lods
insl
clc
lcall
pop
lea
aad
pop
xchg
inc
dec
pop
add
jmp
xchg
add
mov
(bad)
xchg
push
sbb
pop
pop
sub
ljmp
loop
ret
push
mov
or
mov
jp
sbb
push
repz
or
or
add
or
jmp
push
bound
xchg
loope
je
repnz
inc
mov
push
xchg
jne
imul
mov
(bad)
scas
fildll
sbb
dec
xchg
test
(bad)
daa
out
popf
cwtl
jo
loope
mov
add
cmp
sbb
mov
sbb
jmp
fwait
xchg
jo
mov
mov
pop
aaa
stos
cmp
int3
mov
mov
fsubs
sub
mov
lret
xchg
stc
mov
cmpsl
in
xor
pop
jne
pop
adc
mov
flds
cs
dec
sbb
jle
imulb
sbb
cmc
inc
jp
add
sub
insb
mov
(bad)
cltd
movsb
mov
sub
adc
ds
mov
cli
lea
shll
mov
xchg
push
out
fsubrl
xchg
push
sbb
aaa
mov
scas
negb
lods
ret
mov
adc
add
fidivs
into
int
or
sti
arpl
sub
inc
addr16
cs
es
lret
mov
mov
dec
pop
or
ret
jnp
gs
sub
or
enter
das
ficompl
(bad)
mov
iret
xor
orb
xchg
ret
sbb
xor
dec
add
(bad)
int1
cmp
mov
adc
mov
jg
jmp
mov
mov
test
pop
int1
xchg
incl
sarb
lods
outsl
push
movsl
cwtl
and
xor
push
dec
fs
scas
jg
add
xchg
pop
xor
jne
and
adc
hlt
mov
fs
xchg
aaa
popa
inc
(bad)
aas
mov
push
push
cld
xchg
sub
lods
vpsubusw
dec
lds
clc
sbb
test
rcll
inc
or
mov
jl
cmp
ret
mov
(bad)
insb
ljmp
out
loope
pop
cltd
fst
push
repnz
idivl
in
test
push
xchg
adc
xor
sbb
stos
lret
daa
stc
fnstenv
divw
jg
jmp
int1
or
(bad)
xchg
(bad)
cmp
or
lock
xor
fldenv
jo
into
push
pop
pop
(bad)
in
and
adc
lret
xor
insb
xchg
popa
int3
adc
(bad)
(bad)
popf
pop
movsb
xchg
int1
mov
int3
test
xor
push
fs
adc
shlb
pushf
dec
cs
mov
call
pop
aaa
cltd
pop
int
ljmp
(bad)
ss
rorl
jae
int3
sbb
mov
filds
subb
pushf
sbb
fwait
add
hlt
nop
movsb
or
mov
pop
adc
jo
mov
out
repnz
fs
insb
call
out
add
sub
sbb
(bad)
sub
dec
lock
mov
or
xchg
js
cmc
jecxz
popf
rcr
mov
(bad)
loop
fisttpll
test
es
mov
sti
jnp
cli
xchg
push
or
pop
mov
scas
xorb
mov
sub
ret
out
jns
dec
pusha
mov
fs
stos
or
push
xchg
loopne
push
scas
inc
dec
repnz
into
aam
daa
lcall
gs
