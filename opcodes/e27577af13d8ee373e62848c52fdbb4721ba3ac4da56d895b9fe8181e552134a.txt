nop
ja
add
add
add
add
add
add
add
add
add
add
jp
add
dec
or
dec
aas
movsl
gs
shll
xchg
and
insl
push
data16
(bad)
out
mov
add
outsb
inc
inc
lods
pop
fsts
sbb
dec
fs
std
adc
out
mov
lds
jp
mov
mov
test
adcb
loope
lret
xor
(bad)
lods
mov
xorb
sti
push
xchg
into
adc
and
push
cmp
(bad)
and
mov
out
xchg
rcrb
jne
leave
shufps
dec
xchg
or
dec
fwait
ja
in
sub
mov
fdivrs
nop
sbb
jg
movsb
outsl
adc
std
add
pop
jp
pop
mov
xchg
cmp
ljmp
stos
je
and
or
fsubrs
test
dec
jp
xchg
jp
adc
es
mov
fdivrl
sbb
lahf
stc
mov
dec
(bad)
mov
daa
bnd
adc
inc
jge
push
xor
fsubrs
mov
das
ss
bound
aad
fs
dec
jo
mov
lret
xor
aas
mov
cmc
push
test
dec
xchg
enter
dec
call
push
add
xchg
int
int
xlat
pop
jge
shrb
stos
and
cmp
pop
push
lock
lahf
rcl
inc
dec
int3
or
xchg
inc
pop
xchg
push
imul
dec
mov
xor
in
sub
loope
add
outsl
int
loopne
xor
in
and
lret
inc
and
shll
das
jns
add
in
mov
loope
or
xchg
xor
fmuls
stos
pop
test
cmpsb
repz
mov
and
lods
adc
call
or
jecxz
ds
cli
mov
bound
mov
mov
adc
mov
add
into
sub
lret
sub
clc
xor
sarl
fnstsw
mov
rorl
jmp
xlat
stos
xlat
cmp
inc
mov
fwait
xchg
push
push
jle
mov
cwtl
dec
dec
cmp
adc
call
mov
add
stos
repnz
lock
rolb
sub
jle
out
jecxz
cmp
mov
imul
mov
cmpsl
aam
push
cltd
fnsave
fimull
(bad)
jns
cli
jno
mov
in
sub
or
ds
fyl2x
pop
push
xlat
jmp
push
out
mov
mov
add
pop
adc
push
(bad)
lret
dec
mov
arpl
rcrl
movsb
movsl
std
dec
repnz
pop
aaa
lds
inc
mov
movsl
repz
sbb
push
stos
in
sbb
test
rcrl
inc
test
cmc
sub
jb
rolb
and
stos
jl
roll
shl
out
xor
ffree
clc
(bad)
mov
das
lock
add
and
jle
outsb
sub
stos
cmp
push
push
adc
call
dec
sbb
adc
inc
ss
rorb
shrb
(bad)
mov
or
ja
or
mov
fstpl
sub
fildl
lods
dec
adc
add
mov
jl
cmp
lea
mov
in
movsl
loopne
mov
and
repz
add
imul
push
sub
xchg
mov
jecxz
dec
and
int3
testb
loop
mov
imul
sbb
pop
mov
fmull
push
mov
cmp
shrb
push
cmp
fisttpl
outsb
divl
xchg
xchg
inc
in
sahf
add
lret
mov
lock
jne
xchg
adc
stc
scas
sub
pushf
mov
int
pushf
popa
xor
jecxz
xchg
daa
sar
dec
dec
and
or
popa
inc
mov
dec
stos
sub
sub
pop
repnz
xchg
lods
lds
mov
sub
mov
cmp
sub
mov
cld
mov
test
aaa
test
hlt
loope
sub
jb
les
lret
mov
(bad)
sub
mov
nop
xchg
and
int3
mov
arpl
es
aam
lods
mov
dec
sub
dec
je
pop
cmp
or
lods
xchg
push
dec
ljmp
dec
inc
pop
popf
cmpl
popa
push
mov
jne
inc
cmpsb
push
cmp
scas
andb
sub
mov
mov
dec
push
test
sub
mov
lahf
aad
lahf
xrelease
movsb
jmp
cmp
mov
jo
mov
sub
sahf
sbb
movsl
nop
sbb
sub
dec
and
and
sub
pop
and
mov
aaa
jbe
pushf
ror
inc
push
(bad)
faddp
and
xchg
fisttpl
leave
ljmp
push
xchg
in
aam
(bad)
xor
jbe
inc
stos
test
sbb
add
jnp
cmpsb
fcompl
add
leave
cmp
mov
sbbl
stos
inc
push
test
(bad)
addr16
cmp
xor
cmp
inc
or
cmp
mov
cld
or
ret
std
add
(bad)
xor
xor
sbb
cmp
sbb
jae
mov
adc
jle
mov
cmpsl
imul
xchg
(bad)
lcall
push
mov
js
sbb
out
or
mov
mov
std
adc
pop
imul
push
mov
lods
push
mov
movsb
fstpl
fisubs
mov
fsubs
or
adc
iret
lods
dec
mov
xor
pop
mov
cmp
xchg
mov
lret
cmp
inc
xorl
int
nop
movsb
inc
xor
jle
movsl
shl
lahf
xor
fldl
loop
or
dec
add
add
loope
test
clc
dec
adc
and
xchg
addb
mov
cli
loopne
xor
push
addl
lcall
outsb
mov
dec
sbbb
dec
sub
inc
and
nop
sub
mov
fimull
js
addl
les
mov
adc
mov
and
gs
mov
sbb
cs
cmp
(bad)
jge
inc
adc
mov
hlt
xor
sub
push
xor
stc
adc
push
push
or
ds
cs
stos
push
aad
dec
xchg
std
push
ficoml
mov
sbb
mov
mov
popf
push
je
daa
scas
pop
and
sub
stc
insl
dec
push
mov
fucomi
rorl
lods
xchg
dec
das
pop
ret
lods
and
mov
daa
push
inc
adc
ficoml
repnz
cmpsb
lahf
jns,pt
xchg
xchg
push
sub
add
jae
inc
(bad)
and
xchg
loope
xor
popf
sbbb
xor
cmp
sbbl
push
mov
rcll
pop
adc
xor
pop
jo
out
insl
fs
and
mov
stc
jne
xchg
sbb
mov
pop
lret
adc
push
add
push
add
ficomps
cs
mov
and
lods
xchg
into
push
outsb
(bad)
pop
popf
sub
cmp
dec
jns
or
loope
sub
jmp
cli
ror
push
jnp
mov
xchg
lret
cmp
aaa
mov
dec
sbb
lahf
push
or
les
mov
outsl
lcall
fistpll
add
pop
or
lret
mov
mov
push
cmp
test
sbb
mov
mov
test
xor
clc
lock
dec
xchg
fcomps
nop
or
mov
sbb
xchg
xchg
js
pop
push
loope
fdivs
push
stos
sbb
pop
out
bound
and
lods
in
loope
or
add
inc
pop
cmpsl
stos
mov
push
int3
sub
jecxz
jb
jo
sub
jbe
movsl
jg
mov
xchg
push
cwtl
push
or
pop
jne
fwait
cmp
pusha
adc
and
in
and
push
cmc
push
fwait
imul
test
sbb
movsl
test
(bad)
xchg
je
adc
loope
xor
scas
jecxz
and
pop
test
or
pop
jb
rol
push
enter
xchg
push
(bad)
mov
pop
jb
and
inc
addl
adc
test
int3
mov
push
test
std
jge
insb
pop
imul
insl
cmp
lea
in
jmp
test
push
adc
adc
xchg
mov
sti
rorl
pop
daa
mov
mov
adc
fbld
call
lds
jo
in
imul
cld
(bad)
adc
and
mov
jns
popa
xchg
push
getsec
dec
aaa
hlt
mov
int3
cmp
