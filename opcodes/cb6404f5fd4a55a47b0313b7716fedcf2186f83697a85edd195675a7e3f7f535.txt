loope
pushf
adc
adc
jl
xchg
xchg
inc
jo
cli
or
lea
cli
adc
xchg
iret
ret
nop
call
inc
add
xchg
mov
faddl
mov
dec
loope
int3
addr16
in
stos
outsl
xor
aad
fs
add
mov
shrl
mov
jmp
add
test
aad
pusha
inc
into
(bad)
adc
push
fs
insl
jge
mov
ret
in
sarl
(bad)
ficoms
cmp
or
mull
jmp
xor
insl
(bad)
sub
push
xor
pop
xchg
and
movsl
xor
add
cmp
mov
xchg
jns
insl
push
rcll
sbb
inc
bound
and
test
xchg
sti
outsl
sub
lret
push
push
mov
rcll
pusha
and
lods
dec
add
call
mov
pushf
xor
jge
aam
pop
mov
mov
cmc
imul
(bad)
dec
(bad)
mov
sub
pop
dec
cmp
xchg
sub
mov
into
add
cmp
pushf
fstpt
inc
mov
adc
mov
pop
test
dec
testl
test
popf
int1
lea
dec
add
xor
sti
testl
bound
decb
mov
pop
adc
dec
or
sarb
xchg
add
fnstenv
sub
xor
jge
jno
insl
push
rcll
enter
jge
inc
bound
and
testl
outsb
cmp
jo
testl
(bad)
call
mov
roll
mov
faddl
lods
stos
xor
out
add
lret
xchg
sbb
cmp
sahf
shrl
out
pop
stos
daa
test
jl
pop
jle
outsb
mov
mov
inc
add
imul
popa
in
shrl
push
and
xchg
stos
sub
std
inc
mull
cmpsl
in
xorb
jno
sub
fstl
and
adc
push
das
les
xchg
andb
pop
rorb
mov
repnz
inc
inc
mov
add
std
push
bound
int3
out
pop
jmp
inc
pop
outsl
cltd
push
bound
pop
cli
popa
pop
cmpsb
movsb
inc
sarb
mov
and
dec
add
call
mov
pusha
mov
rcr
pop
decb
arpl
jnp
dec
pusha
pop
cmpsb
sub
repnz
inc
and
add
cmp
lods
(bad)
jp
mov
adc
push
and
movsb
popa
shlb
and
test
push
std
stos
idiv
cmp
in
addb
pop
mov
ljmp
pop
and
repnz
aad
ss
and
pop
divl
pop
std
xor
jns
mov
inc
sarb
adc
push
mov
stc
movsb
mov
(bad)
adc
shlb
add
xchg
jne
movl
in
inc
stc
shrl
cmp
xor
test
sti
or
ds
dec
jb
and
add
dec
and
lahf
cltd
and
loopne
ds
add
adc
stos
cltd
movsl
decl
adc
xor
cmp
xor
out
push
bound
cltd
cltd
std
insl
enter
ds
int
cltd
xor
in
outsb
stc
addr16
cmpsl
stc
int1
fistps
shll
xchg
cmpsb
mov
pusha
(bad)
lahf
sti
jge
and
xchg
rorl
adc
xor
sub
fwait
fwait
inc
in
shl
xor
xor
testb
push
pop
fdivr
in
int3
test
cmc
mov
jge
movsl
inc
sarb
xlat
(bad)
jne
stos
iret
shll
ds
jmp
stos
in
inc
stc
shll
inc
mov
add
mov
sub
std
iret
sub
pop
pusha
stos
gs
rcrl
dec
dec
sbb
cltd
sub
xchg
gs
(bad)
testl
adc
cmpsb
and
pop
xor
cmpsb
mov
sub
xchg
sbbb
sti
pop
loope
inc
cmp
movsl
or
pop
into
stos
mov
xor
pop
stc
popa
xor
stc
xor
mov
lahf
xchg
lea
inc
scas
inc
test
xorl
lret
jns
add
shll
push
test
sbb
mov
xor
insb
pop
jns
mov
(bad)
xchg
inc
or
ror
ret
jbe
jle
stos
test
xchg
xor
(bad)
in
loopne
xor
test
cmp
lods
sbb
mov
jle
and
cmp
(bad)
fnstenv
mov
test
push
dec
pop
xor
movsl
sub
cmpsb
jge
fists
xor
cltd
and
pop
fldenv
sub
inc
mov
pop
xor
dec
jnp
dec
xor
or
xor
inc
cltd
jp
add
adc
adc
cltd
ror
xor
mov
cmp
or
test
xor
add
in
subb
jl
xchg
lea
shr
sub
scas
add
cs
out
sahf
inc
outsl
push
mov
add
mov
into
sub
(bad)
dec
xchg
stos
insb
test
lods
dec
xchg
xchg
jne
bound
push
pop
pusha
jne
push
lds
(bad)
shrb
add
enter
imull
xor
jbe
movsl
or
xor
fdivrp
ljmp
mull
test
out
sub
mov
push
cmc
pop
je
aad
lcall
pop
add
dec
pop
dec
cltd
push
call
xchg
xor
cmp
cmp
xor
movsl
mov
leave
sti
xchg
rcrl
adc
addl
pop
sub
add
mov
xchg
xlat
loope
mull
test
(bad)
call
adc
sbb
sub
inc
shll
insb
xchg
jb
cmpsl
ret
int
pusha
xchg
stc
add
push
xchg
push
push
clc
movsl
lods
(bad)
cmp
lret
xchg
popa
adc
rorl
pop
and
pusha
shrl
out
call
mov
pop
pop
xchg
pop
and
stos
dec
dec
sbb
add
xor
addr16
mov
push
std
and
inc
test
int3
inc
movsl
iret
stos
das
inc
push
add
rorl
cltd
sub
sub
inc
pop
sbb
mov
mov
aam
shrl
pop
cmpsb
clc
test
add
movsb
lcall
jmp
nop
js
lock
pop
lds
push
adc
shrb
sub
out
cmpsl
test
stos
jnp
stc
adc
dec
aaa
push
inc
sbbb
stos
cmp
dec
imul
mov
pop
rorl
mov
test
ds
xchg
ficompl
dec
pop
mov
into
push
push
mov
inc
ja
mov
pusha
jmp
or
out
cmp
mov
push
repz
or
add
sbb
push
cmp
je
mov
sub
rcrl
sbb
lret
out
pop
mov
popf
mov
jmp
lods
mov
or
nop
jno
aaa
cmp
test
cmp
shrb
out
dec
(bad)
cmp
pop
sub
or
xchg
pusha
add
shlb
jmp
mov
or
clc
scas
xchg
sbb
lret
ret
dec
adc
jns
push
add
or
xor
adc
push
sub
cld
cmp
shrb
ret
outsb
push
bound
and
mov
lret
pop
and
cmpsl
mov
mov
lret
mov
out
out
(bad)
mov
sbb
sub
ret
or
lods
xchg
xor
or
mov
sub
lds
fwait
xor
xchg
cltd
das
mov
sbb
leave
unpckhps
mov
push
push
cmp
movl
jecxz
stc
cwtl
stos
test
test
cmp
mov
cltd
enter
xchg
pop
insb
push
cs
loopne
roll
ljmp
loopne
in
in
inc
jnp
xchg
dec
mov
cmc
incl
in
push
imul
scas
(bad)
addr16
add
insb
fdivrs
outsl
loopne
xchg
ret
add
jb
mov
cmc
xchg
mov
sbb
into
inc
(bad)
cmp
popa
sub
xor
lret
inc
cmpsl
add
adcb
pushf
popa
das
iret
bound
pushf
jmp
adc
xchg
push
mov
adc
sbb
cli
jecxz
sub
inc
aam
adc
stos
fmul
test
das
subb
inc
jbe
push
pushf
mov
mov
filds
flds
insb
mov
testb
test
inc
sub
cli
addb
addb
mov
das
