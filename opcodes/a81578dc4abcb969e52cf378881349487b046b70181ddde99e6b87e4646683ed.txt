loope
enter
or
mov
xor
test
xor
ja
test
stos
push
mov
push
outsb
mov
out
push
(bad)
xor
dec
popa
(bad)
mov
cmp
les
pop
inc
ja
loop
mov
lret
imul
pop
pop
scas
mov
inc
or
(bad)
into
cmp
or
lcall
pop
(bad)
mov
btr
or
sbb
cmp
mov
or
or
popa
nop
push
int3
xor
ss
push
shrb
push
xchg
lods
cmp
test
mov
dec
sbb
cld
adc
hlt
and
pop
cld
lcall
int1
inc
inc
xchg
xchg
lea
jnp
or
sti
ss
inc
mov
nop
xchg
or
jns
adc
inc
sub
mov
cmpsl
stos
add
testl
push
pop
int3
aam
in
(bad)
(bad)
iret
pop
push
mov
add
jnp
mov
or
or
mov
out
fstpt
(bad)
jle
(bad)
mov
pop
stos
inc
or
ja
fidivrs
cld
dec
cld
mov
adc
test
mov
mov
cmp
jg
cmp
test
mov
add
mov
jecxz
sarl
fisttpl
mov
iret
pop
adc
(bad)
mov
lock
or
inc
les
jo
dec
mov
cmp
mov
adc
sub
test
repz
push
cmpsl
xlat
popa
nopl
mov
lea
mov
mov
out
cltd
mov
loop
xchg
add
sahf
sbb
scas
jae
push
dec
leave
or
jg
enter
daa
jb
(bad)
or
or
cmp
jb
push
stos
popf
mov
call
iret
inc
mov
cmp
push
pop
cmp
pop
sub
xchg
push
cmpsl
lret
add
testl
and
pop
out
xor
xor
inc
(bad)
jne
enter
push
cmpsl
lret
push
lahf
jbe
xor
push
sbb
(bad)
sbb
lock
bound
xchg
in
pop
(bad)
outsl
or
imul
sbb
cld
notl
cmp
cli
outsl
ret
mov
or
(bad)
pop
movsl
std
int
sub
pop
push
std
cmp
lret
mov
sbb
push
xor
pop
cli
push
jns
adc
aam
pop
insl
mov
cmp
lds
daa
fisubrl
xchg
enter
sbb
shrl
push
aaa
jnp
pop
sub
int3
es
les
and
or
scas
and
lea
(bad)
jle
mov
clc
ljmp
inc
dec
xchg
jb
test
mov
adc
add
adc
shl
ret
mov
add
mov
inc
in
push
aas
sub
or
in
mov
sbb
dec
xchg
inc
mov
mov
mov
fs
xor
mov
mov
mov
ficompl
add
add
dec
cltd
pop
adc
inc
cmc
test
into
cmp
cs
cmpsl
repnz
mov
inc
notb
pusha
(bad)
dec
popf
cmp
(bad)
int1
out
in
sub
jae
add
sbb
and
cltd
push
imul
insl
mov
pop
jle
dec
fcmove
lahf
test
adc
inc
andb
divb
xor
cwtl
stos
imul
add
xor
jb
ja
insl
cltd
cmp
dec
testb
pop
push
fisttpl
ds
shll
or
adc
and
ret
cltd
mov
loope
mov
push
(bad)
jp
into
jb
mov
cmp
dec
mov
jne
out
and
nop
dec
enter
inc
or
inc
mul
scas
popf
mov
jbe
in
mov
iret
xlat
pop
pusha
ret
addr16
mov
mov
jo
mov
pop
inc
jl
jae
and
or
mov
fsubl
cmc
sbb
arpl
adc
pop
inc
std
and
mov
adc
int
add
inc
inc
lds
ret
decl
cmp
mov
insl
sub
test
mov
pop
cmp
or
xchg
mov
pushf
test
lods
inc
jl
mov
xor
pushf
enter
inc
mov
or
(bad)
in
sub
aas
cwtl
idiv
cmp
js
dec
bound
lsl
pop
inc
mov
dec
mov
add
loope
loope
add
ss
inc
jno
and
add
jp
cmp
lods
ljmp
stos
lds
int1
mov
push
add
cmp
jbe
test
dec
mov
in
inc
jbe
scas
push
sti
mov
dec
push
cwtl
addl
scas
cmpsl
cmp
cwtl
pop
es
dec
jbe
rolb
(bad)
das
xor
je
enter
cmp
mov
pop
xchg
iret
jmp
shlb
push
sbb
cmp
xchg
mov
mov
test
jecxz
inc
mov
(bad)
out
movsb
das
or
inc
sbb
pop
sbb
add
sub
test
sahf
je
dec
cmp
test
cmpsb
fstl
cs
pusha
lods
(bad)
aad
hlt
insb
aaa
cmpb
sub
js
xchg
sarl
jg
pop
insl
and
inc
xor
nop
sahf
sti
cmpsl
(bad)
pop
mov
cwtl
mov
stos
push
int
movsb
leave
mov
int1
cmp
xchg
data16
rorb
jmp
repnz
int
jmp
and
mov
pop
das
jmp
and
pop
mov
mov
dec
mov
dec
jge
xchg
mov
outsb
mov
and
push
js
mov
test
ljmp
jl
loop
cmp
aaa
popa
dec
xlat
addps
add
cltd
dec
sahf
loop
mov
shrb
cmpsl
enter
insb
cltd
or
lea
push
les
cmp
test
mov
inc
xlat
movb
sbb
mov
loop
hlt
aaa
mov
cmova
xchg
lea
clc
cmp
mov
xchg
dec
jecxz
inc
mov
mov
sbb
cltd
clc
cmp
aam
dec
mov
dec
sti
nop
mov
(bad)
mov
jnp
mov
or
xchg
jp
pop
cmp
xchg
lods
cli
mov
ds
in
cmp
stos
das
pop
jb
fsubs
mov
pusha
cmpsl
inc
aaa
sar
cmpsb
(bad)
mov
shll
and
mov
dec
push
idiv
xchg
aas
jns
mov
xchg
faddl
arpl
mov
and
in
sub
mov
cli
ja
sub
and
decl
pushf
shll
mov
push
loop
sti
pop
push
lea
xlat
add
cs
xchg
sgdtl
mov
cmc
shll
in
mov
sbb
xchg
jecxz
or
dec
std
mov
and
insl
(bad)
jns
(bad)
xlat
fidivrl
outsb
or
sub
cmp
xor
dec
shll
xchg
lcall
xchg
test
rclb
pop
pop
inc
fcmove
js
lods
mov
xchg
iret
int
mov
add
mov
std
inc
or
jmp
popa
testb
rclb
aaa
sbb
cmpsl
mov
and
add
insb
cmp
dec
fistpll
jno
popf
loop
jbe
lock
xlat
lds
fcom
or
out
ljmp
adc
inc
mov
imul
(bad)
out
cs
and
aas
jmp
ret
dec
mov
insb
lock
push
test
mov
and
jle
nop
movsl
ret
addr16
data16
cmp
stc
and
push
cmpl
addb
adc
or
pop
aas
test
cwtl
lcall
push
xchg
in
dec
incl
add
out
int3
and
xchg
test
int1
dec
insb
jo
int
hlt
inc
lea
fcmovne
int
dec
js
imul
ljmp
or
sahf
into
or
sbb
shll
stos
aaa
sub
jno
pop
stos
iret
sbbl
insb
inc
clc
sub
mov
loopne
and
xchg
out
mov
cwtl
inc
rorl
adc
mov
arpl
sub
punpcklbw
ja
sbb
inc
pop
push
sub
lods
mov
mov
xchg
fiaddl
in
xchg
mov
stos
xchg
movb
shll
fadd
nop
js
mov
std
call
add
not
repz
pushf
insl
cmp
js
pop
cli
mov
dec
mov
jbe
aam
fistpll
or
xor
xor
xchg
mov
rorl
