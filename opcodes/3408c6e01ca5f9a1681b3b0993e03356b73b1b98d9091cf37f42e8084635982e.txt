xchg
or
jmp
cmp
adc
aaa
rcrl
test
jnp
xor
cmp
lds
mov
(bad)
jp
mull
adc
pop
leave
and
cmp
lcall
fsubrs
insl
cmp
adc
div
rcrb
aam
rcll
adcb
pop
mov
push
mov
mov
mov
cmp
xorb
mov
xchg
jo
mov
mov
or
sub
jmp
loop
fldenv
adc
mov
(bad)
cmp
rolb
or
jle
inc
fldt
cmp
fs
cwtl
nop
mov
adc
mov
insb
paddd
adc
or
sub
xchg
sub
and
jmp
pop
pop
cmp
inc
movsb
dec
pop
push
or
mov
es
mov
daa
loopne
sub
fdivrs
inc
and
mov
pop
mov
rolb
ds
movsb
adc
fistpll
cmp
andb
mov
das
outsb
jle
imul
ds
and
sub
(bad)
mov
mov
aaa
aam
stos
stc
mov
(bad)
sub
sbb
stos
(bad)
addr16
js
jg
subl
popa
cmp
cmp
inc
cmc
testl
sbb
adc
mov
sti
dec
mov
cmp
lock
cmp
ret
or
add
call
loop
jp
test
orl
sub
adc
aaa
fstcw
ja
jnp
jno
pop
cmpsb
cmpsb
ret
fbld
and
or
xor
jae
aam
sub
fidivrl
inc
fcomi
fbld
mov
sub
fucomip
(bad)
std
push
or
cmp
inc
fbld
fimull
into
mov
jg
ja
xor
pop
mov
xchg
js
xor
inc
stc
push
push
mov
notl
sbb
sahf
add
cmp
lret
pop
mov
daa
addr16
xor
in
es
sub
cmp
outsb
mov
shr
adc
outsl
cwtl
mov
mov
pop
add
aaa
dec
out
push
jp
sbb
pushf
adc
outsb
inc
add
fists
addl
and
push
fdiv
jae
cmp
add
jp
movsl
popa
adc
cmp
call
xchg
shlb
xlat
aas
jmp
mov
xor
xchg
or
(bad)
xchg
mov
jg
inc
add
movsb
(bad)
jmp
push
into
imul
pop
jecxz
mov
repz
lcall
mov
cmp
cmpsb
out
ret
popf
imull
test
jg
push
pushf
jne
shll
jb
mov
test
std
aas
jo
insl
out
cmp
cmp
xchg
lcall
inc
inc
mov
inc
lcall
cmpsb
addr16
jle
or
sub
popa
and
pop
test
mov
push
into
dec
repnz
and
test
out
test
push
sbb
pop
xlat
xchg
jne
mov
lret
in
and
adc
mov
daa
sub
repz
jle
and
(bad)
lds
sub
mov
mov
pop
arpl
out
sub
sbb
inc
jne
mov
xchg
ret
inc
fldcw
mov
pop
aaa
push
bnd
enter
inc
inc
ret
mov
(bad)
imulb
cmp
scas
fsub
insb
pop
mov
aas
adc
mov
js
scas
inc
xabort
add
dec
and
ja
mov
les
loopne
pop
outsl
aas
xchg
lock
jno
lock
cli
(bad)
hlt
sbb
adc
js
movsb
push
loop
adc
sub
add
das
lret
jo
outsl
arpl
mov
in
adc
or
jnp
cmp
mov
pushf
mov
pop
neg
xchg
repz
dec
dec
sahf
xchg
adcb
mov
enter
cmp
das
test
iret
mov
mov
stos
aam
xor
jmp
jne
cwtl
jns
arpl
mov
sahf
sub
jo
xchg
popa
push
add
jecxz
mov
sub
shrl
mov
adcl
cmp
sbb
subl
add
sbb
mov
mov
lahf
ljmp
and
push
jle
and
xlat
dec
fwait
mov
push
xchg
(bad)
push
xor
imull
pop
leave
jmp
stos
pop
test
inc
(bad)
iret
mov
inc
pop
aad
mov
das
and
test
repnz
sub
les
mov
sub
ljmp
dec
shlb
test
imul
sub
(bad)
jb
lods
pop
cwtl
ss
push
sbb
push
std
push
xor
cmp
popf
scas
fdivr
scas
jb
testl
jbe
pushf
and
dec
outsl
(bad)
ss
outsb
pushf
loopne
pop
jae
sub
outsb
dec
lods
shll
repz
sbb
xorl
adc
ds
lods
inc
lret
dec
mov
jmp
pop
lret
sahf
lret
ds
std
out
dec
fsubrl
incb
in
shrb
jne
leave
test
hlt
ss
out
fs
cwtl
aas
add
xor
fwait
shlb
dec
xchg
dec
repnz
sub
cmpsb
es
or
dec
jmp
std
or
popa
mov
jno
movsl
pop
aam
stos
(bad)
mov
aam
ret
add
ss
sbb
mov
xor
enter
fcoms
xor
push
aaa
mov
sub
jg
adc
mov
jle
xchg
call
pop
in
leave
mov
popf
cli
xor
ret
movsb
in
mov
jns
mov
xchg
xor
pop
cmp
cmpsb
imul
jb
insb
mov
jg
mov
adcb
imul
into
adc
pusha
or
and
push
add
inc
das
cwtl
out
sbb
bound
pop
das
xchg
or
sub
data16
inc
and
mov
jle
out
push
push
xor
out
insb
mov
cmp
fstpt
andl
adc
sub
scas
xor
jl
addr16
cwtl
int1
pop
shll
imul
daa
jge
cmpsb
push
add
les
test
fwait
mov
push
out
call
lcall
push
mov
mov
xchg
jl
test
sbb
push
xor
jl
lods
mov
lret
mov
jl
pop
dec
mov
test
add
cmp
cli
ret
adc
sbb
jae
cld
sbb
pop
jb
push
push
jo
loope
movsb
loope
cmp
and
or
mov
mov
adc
pusha
jb,pn
adc
push
push
lea
inc
enter
cwtl
ja
negl
pop
rorb
add
cmp
mov
out
lea
outsl
push
ja
outsb
nop
outsb
mov
mov
jp
cmpsl
adc
push
jne
jbe
and
gs
mov
pop
int3
push
in
aaa
popf
mov
fstpl
lahf
jp
and
sbb
pop
adc
sbb
test
(bad)
mov
inc
sub
jo
inc
cmp
jg
sub
mov
out
pop
test
(bad)
das
test
mov
(bad)
pop
mov
adcb
mov
add
ja
pop
xor
stos
ds
sub
jae
xchg
mov
xchg
outsb
and
jo
lcall
aaa
bound
jns
pop
and
inc
imul
(bad)
mov
(bad)
cmp
and
shlb
xchg
incl
lahf
in
cmc
xchg
xchg
stos
or
call
loop
inc
sbb
mov
pop
jno
aaa
cmp
and
jl
fisubl
cmp
(bad)
outsb
push
ss
nop
iret
cli
pop
mov
ficoms
jno
xor
xchg
frstor
pusha
testb
loop
mov
mov
xor
cmp
push
or
js
inc
outsb
and
dec
inc
sub
inc
mov
mov
insb
mov
popa
call
pushf
and
aaa
scas
cwtl
push
clc
mov
outsb
out
inc
pop
and
sbb
mov
test
xor
add
xor
mov
loope
inc
mov
lods
aas
or
stos
out
mov
aaa
mov
or
repnz
sub
popa
(bad)
xchg
pop
sbb
pop
mov
subb
fwait
rol
aas
mov
dec
orl
add
stc
mov
xchg
add
pop
jle
push
bound
and
or
je
lcall
jge
inc
cmp
and
lahf
imull
mull
fidivrs
idivb
popf
sbb
jmp
adc
das
mov
mov
sahf
(bad)
test
stos
lods
mov
arpl
push
push
imulb
mov
adc
and
adc
