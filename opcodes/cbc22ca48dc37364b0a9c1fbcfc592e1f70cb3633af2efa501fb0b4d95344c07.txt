push
inc
mov
cmp
dec
loope
pop
pushf
sub
mov
inc
lods
les
sub
repnz
sarl
push
or
in
fsubp
add
and
shl
aam
and
lods
std
outsb
jecxz
push
outsl
aad
push
or
xor
or
scas
scas
idiv
sbb
mov
int
mov
repz
pop
mull
sub
mov
adc
cmpsl
iret
sub
loopne
aaa
lock
jno
loope
or
add
lret
call
rclb
sbb
out
cmp
mov
pushf
cs
flds
jecxz
out
cld
xor
xor
mov
sahf
mov
push
std
mov
cld
int
sub
shr
daa
rcll
mov
mov
test
int1
es
data16
mov
mov
inc
negb
adc
mov
mov
add
imul
sub
mov
ret
imul
mov
(bad)
loope
insb
pop
adc
outsl
lret
mov
adc
cmp
add
pop
outsl
mov
xor
fsts
mov
add
fbstp
xor
or
inc
ss
dec
aas
testl
ret
pop
lahf
push
bound
emms
jecxz
in
mov
and
ret
fsubrs
test
lock
in
xchg
fbld
and
loopne
das
dec
or
xchg
repnz
cmc
xchg
pop
call
push
shlb
mov
pop
add
xchg
movsl
mov
(bad)
jle
add
mov
fdivrs
mov
scas
push
mov
lahf
jmp
mov
push
lock
call
sti
mov
sbb
bound
int
cmc
mov
mov
es
(bad)
push
cmc
hlt
mov
adc
push
mov
and
stos
fs
mov
out
outsb
adc
pushf
add
mov
adc
in
out
sub
test
stos
call
cwtl
in
dec
cltd
jp
mov
stc
sbb
xor
pop
cltd
and
jbe
shl
repz
js
sarb
js
cli
mov
jo
mov
popf
andl
loope
in
iret
leave
push
jp
push
xor
es
xchg
cld
xchg
xchg
idiv
jecxz
daa
sti
adc
inc
enter
insl
rorb
cli
negb
push
adc
es
repz
push
jmp
dec
add
push
add
pop
dec
pop
loope
mov
(bad)
call
(bad)
cli
push
push
pop
and
jge
orl
push
add
mov
notb
stos
arpl
or
cli
stc
mov
jge
push
stc
or
add
mov
das
in
mov
sahf
mov
out
sub
in
sbb
pushf
or
or
adc
test
xchg
jb
adc
popa
and
push
and
stc
xor
aad
lock
loope
mov
cmp
push
in
int
seta
mov
dec
jecxz
or
xchg
out
pop
daa
mov
int3
inc
push
jmp
xor
adc
aaa
add
out
scas
cld
mov
outsb
cmpsl
or
cmp
sub
popa
sar
in
xor
sub
cs
mov
pusha
outsl
pop
fimull
mov
xor
add
loop
push
mov
xor
scas
jl
add
aam
or
imul
loope
adc
mov
xor
and
and
inc
xor
es
add
inc
push
jno
add
push
mov
push
jecxz
sub
pop
outsl
outsl
fidivs
xlat
xchg
into
mov
and
prefetch
add
jae
repz
xchg
mov
insb
out
mov
loope
sub
rcr
push
movsl
mov
ret
xorb
mov
negb
xchg
jl
out
cmpsl
imul
cmp
loop
ds
divb
(bad)
cli
les
add
lret
or
aam
nop
ret
add
daa
pop
iret
push
inc
adc
insb
(bad)
adc
mov
sbb
addl
sahf
shl
push
inc
in
jecxz
or
(bad)
fcomp
andb
imul
ss
dec
or
lock
in
pop
in
xchg
bound
add
mov
mov
xchg
sub
clc
jno
mov
sahf
leave
adc
mov
sbb
sbb
faddl
sbb
(bad)
pop
mov
xchg
push
out
mov
jno
dec
ret
stc
xchg
sarb
repnz
pop
add
and
xor
loopne
and
jl
adc
je
lods
das
pop
dec
fisubl
mov
fnsave
shrb
add
incb
cwtl
mov
dec
stc
aad
hlt
add
stos
shr
lea
fsubrs
rorb
orb
dec
pop
in
and
mov
divb
sbb
add
es
out
cmc
incb
or
sar
and
ss
mov
sub
xlat
cmp
rclb
aas
in
jl
std
into
(bad)
bound
xchg
imul
(bad)
test
mov
push
mov
inc
mov
in
mov
sub
fcomps
int3
sbb
cs
std
fisubrl
in
lahf
pop
loopne
sub
add
pop
adc
loope
out
mov
and
in
es
sar
lods
scas
xchg
int1
lret
push
fiadds
shl
push
les
sti
xchg
jl
fcoml
js
xor
clc
adc
push
jbe
dec
roll
popf
fistps
xor
into
push
stos
hlt
dec
or
iret
cmc
loop
adc
xchg
or
aam
(bad)
mov
add
cld
std
and
jle
mov
addr16
inc
jmp
insb
pusha
pop
jecxz
xlat
cmp
sbb
add
inc
decb
adc
sbb
enter
(bad)
cmpsl
sbb
popf
cmpl
dec
rolb
mov
xlat
mov
(bad)
fisttpll
inc
imulb
scas
incb
mov
mov
mov
mov
cmp
xlat
adc
sbb
lahf
fsubr
(bad)
add
aam
in
ret
xor
sbb
(bad)
cli
and
add
jo
in
add
inc
loopne
mov
mov
pop
idivb
adc
push
rorl
cmpsl
gs
xchg
xor
int
cwtl
inc
leave
push
add
shlb
xor
cld
es
xchg
movsl
arpl
loope
decb
push
inc
add
cmpsl
(bad)
mov
sti
lcall
inc
add
inc
sub
sbb
insb
mov
sub
aas
iret
push
in
add
inc
push
xor
jp
dec
fsubs
jge
stos
ret
inc
xchg
dec
fwait
cmp
mov
clc
mulb
or
sub
dec
mov
stos
(bad)
add
adc
pop
inc
cli
in
push
aas
push
mov
(bad)
cwtl
sahf
or
ret
push
sub
clc
xor
pop
xchg
movsl
iret
jne
and
xlat
sub
and
adc
mov
das
and
and
add
es
dec
int3
or
push
fidivs
sbbl
js
hlt
add
sbb
cmp
pop
jnp
sub
cmp
push
jle
rclb
fld
ds
ja
xor
outsb
test
call
shl
repnz
pusha
mov
(bad)
push
repnz
scas
push
jns
mov
fsubrp
aad
jp
sub
inc
cli
sub
cwtl
add
jno
mov
add
inc
(bad)
add
dec
sub
inc
pusha
loop
out
sub
and
mov
push
je
inc
push
imul
loop
adc
push
mov
sub
lret
sbb
xor
cmp
in
ss
add
jbe
sbb
push
repz
push
std
in
add
std
negb
stos
add
push
inc
dec
xchg
leave
adc
call
mov
(bad)
frstor
or
inc
adcb
lahf
divl
jo
(bad)
in
pop
dec
lret
add
lock
mov
add
aam
dec
int3
push
out
enter
rcrl
ss
mov
jns
stos
call
lea
(bad)
std
sub
sbb
adc
in
mov
pop
jmp
push
jns
pop
insb
add
pop
push
xor
ljmp
mov
(bad)
dec
jge
gs
sub
mov
dec
lods
bnd
fisttpl
xor
or
enter
scas
test
out
sbb
movsb
ljmp
pmulhuw
adc
jg
pop
in
add
or
call
xchg
outsb
imul
cld
pop
sub
repnz
lcall
add
