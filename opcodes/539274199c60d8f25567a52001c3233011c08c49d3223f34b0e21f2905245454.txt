leave
pop
add
add
add
add
pop
add
add
add
add
jo
std
dec
punpcklbw
stc
pushf
dec
cmpb
test
inc
shlb
inc
insl
test
jg
dec
pop
or
adc
lea
stc
adc
jmp
cltd
pop
into
bound
mov
dec
rcll
mov
incl
clc
push
adc
repz
loop
test
inc
jmp
test
sub
mov
ljmp
push
(bad)
cli
push
lret
arpl
mov
or
inc
jns
dec
loopne
in
ljmp
mov
aam
lods
mov
mov
lock
lock
call
movsb
dec
shl
xchg
adc
lock
inc
loope
aam
pop
jg
leave
adc
xor
sub
pop
(bad)
mov
xlat
mov
in
test
gs
mov
xchg
std
xor
rorb
into
pop
inc
lds
xor
js
or
mov
and
mov
push
add
lret
sbb
out
inc
(bad)
pop
lods
shrl
rcll
push
and
pop
inc
ja
or
xor
aas
jl
fsts
mov
jg
lea
jne
je
repz
xchg
cs
inc
les
stc
sbb
xchg
lcall
cmp
add
dec
scas
dec
cmp
mov
dec
cs
fwait
bound
push
in
xchg
shl
pop
stos
jae
mov
popf
lret
push
mov
push
mov
adc
insb
cwtl
fs
push
imul
repnz
cmp
xor
ljmp
test
adc
in
add
sbb
xor
xchg
adc
mov
inc
sarb
pushf
adc
imul
iret
pop
and
testl
inc
cmovbe
cmp
inc
pop
push
and
insl
sub
mov
cmp
clc
xchg
rclb
ds
cltd
lret
mov
inc
dec
inc
mov
mov
sub
subb
pop
xlat
or
sar
jle
clc
loope
iret
ss
ret
mov
xchg
sbb
and
xor
sub
repz
out
push
mov
dec
lods
and
pop
push
xchg
push
push
pop
ret
(bad)
cmp
scas
cmp
dec
jg
or
cmp
jno
sub
enter
idivb
lcall
les
xchg
stos
inc
sub
sub
je
fs
mov
int3
cmp
lds
in
pop
mov
push
fcmovnb
aaa
(bad)
adc
aaa
lea
sub
pop
iret
add
cli
in
fucomp
out
pusha
xchg
xor
cmpsl
mov
mov
shll
inc
xorb
jge
jmp
pop
pop
sub
fnstcw
mov
inc
cmp
ss
add
mov
sub
aaa
jp
mov
sub
inc
int
mov
jl
xchg
add
jle
dec
sbb
fcompl
cmp
xlat
and
xchg
lds
mov
jecxz
outsl
push
xor
xchg
jns
cmp
repz
insb
fisubrl
ljmp
aad
nop
ret
jecxz
lahf
mov
dec
adc
xchg
ja
mov
int
fidivs
xlat
loopne
cmc
loop
push
(bad)
movsl
inc
faddl
add
mov
mov
pop
mov
adc
push
sub
adc
into
in
hlt
pop
int3
subb
add
les
into
jl
gs
lock
mov
rclb
rclb
movsb
lods
inc
and
lahf
adc
roll
lret
insl
pusha
pop
addb
testb
pop
into
inc
aaa
inc
dec
xchg
fdivrl
mov
and
mov
sti
mov
negb
xor
pop
(bad)
fidivs
cmc
data16
add
js
mov
add
sti
(bad)
test
lcall
pop
adc
mov
ret
shl
mov
or
mov
inc
pushf
jg
fcmovnu
rclb
inc
aad
pop
mov
cs
mov
cld
jmp
sahf
movsb
push
adc
xor
push
test
mov
mov
push
pop
ljmp
or
inc
pop
sub
int1
sub
test
mov
push
mov
call
sub
outsb
mov
nop
stos
inc
cld
shr
mov
int
adc
jnp
and
xchg
stos
sbb
insl
int1
imul
lods
add
rorb
jbe
mull
jo
ds
cmc
andl
inc
hlt
hlt
add
rcrl
lcall
and
mov
push
xchg
add
mov
mulb
ds
aaa
std
or
xchg
jge
or
fimuls
nop
sbb
jl
insl
daa
nop
inc
int
xchg
fdivl
ret
mov
and
inc
cs
jns
test
(bad)
pop
sbb
cmc
(bad)
popf
ret
inc
movsl
mov
dec
and
aad
loope
in
cld
sbb
loope
mov
push
mov
mov
mov
jnp
adc
(bad)
cwtl
push
mov
push
and
das
ficompl
jns
aas
push
mov
jo
pop
jns
ja
bound
add
sub
ret
test
jb
outsb
fmull
stos
les
ljmp
xchg
or
mov
jno
aaa
imul
or
enter
and
mov
jmp
dec
out
xor
mov
fldl
stos
(bad)
(bad)
out
jns
sti
int3
xor
xor
lret
out
cmpsb
cmp
mov
ret
lahf
lcall
clc
test
xchg
sbb
jmp
jcxz
dec
pop
sbbb
mov
inc
push
pop
cmp
gs
sub
sbb
dec
fistps
int1
insb
shll
divl
js
popf
cld
hlt
lds
jmp
mov
sarl
bound
inc
lret
mov
add
sub
stc
test
jmp
pusha
jnp
std
lods
fiadds
sub
xchg
clc
shlb
clc
cld
pop
daa
dec
xchg
(bad)
sbb
mov
xchg
xchg
movsb
lahf
adc
notl
jp
xchg
and
jno
shlb
out
stos
push
mov
lret
cmp
inc
dec
fnstsw
sbb
lea
and
and
and
test
mov
sub
cmc
and
jns
decl
insb
in
mov
add
clc
push
xchg
xor
aad
and
mov
push
addr16
xor
(bad)
mov
fstpl
mov
ja
and
lcall
mov
mov
mov
leave
pop
and
insl
mov
or
lret
scas
mov
add
out
dec
sbbl
adc
outsl
loop
xor
jbe
sti
hlt
push
pop
cld
mov
je
add
in
fistpl
xor
cs
in
xor
pop
je
in
xchg
jne
ret
sbb
ret
call
iret
jmp
add
sbb
cmpsb
out
pop
addb
movsl
addr16
test
adc
xorl
jmp
jns
sub
jge
ss
sub
sbb
and
shr
and
mov
mov
negb
ds
and
ljmp
xchg
out
jge
xchg
or
sub
pushf
jb
mov
aaa
jnp
mov
push
inc
adc
cld
jmp
jecxz
arpl
orb
stc
and
dec
jg
adc
lock
in
aad
outsl
(bad)
rcll
sbb
insl
mov
outsl
jp
push
inc
stos
jp
push
test
in
inc
stc
push
imul
shrl
jg
aas
(bad)
stos
xor
xor
lret
imul
insb
pusha
cwtl
int
incl
adc
cmc
add
push
out
cmp
sbb
cmp
dec
mov
push
push
mov
xor
mov
push
inc
inc
outsl
insl
jo
arpl
inc
jge
daa
jo
sbb
rcr
push
xor
xchg
xor
and
mov
bound
lock
out
mov
loope
jae
xchg
loope
inc
nop
stos
iret
add
mov
xchg
adc
xchg
jle
pop
std
adc
push
dec
cmpsb
jmp
sahf
std
leave
repz
pop
sarb
outsb
std
sub
dec
dec
or
add
test
push
adc
dec
push
pop
inc
stc
out
js
test
jno
insl
popf
push
(bad)
cwtl
imul
cld
mov
decl
js
je
ljmp
ljmp
ret
cmp
cmp
fnstcw
jmp
sbbb
dec
loope
inc
pop
or
add
jb
push
xor
cmp
push
das
mov
pop
and
aaa
