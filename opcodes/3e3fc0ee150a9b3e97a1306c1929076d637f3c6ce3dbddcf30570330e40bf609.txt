pop
roll
xchg
or
(bad)
pop
lret
scas
cmp
jp
mov
xor
mov
enter
jg
lret
rolb
int1
ret
xchg
mov
mov
in
pop
sbb
test
aad
hlt
stc
sub
sti
pop
scas
arpl
mov
int3
fnstenv
xchg
push
adc
jno
pop
push
mov
pop
arpl
dec
jecxz
mov
cmp
leave
mov
pop
push
stc
xchg
and
cmc
ds
or
mov
inc
incl
and
fimull
cmp
imul
lods
mov
dec
mov
xchg
cltd
int1
addl
dec
in
hlt
mov
pop
jno
xchg
cmp
lcall
(bad)
out
add
lea
or
inc
jmp
shl
jle
inc
pop
bnd
scas
pop
ret
jbe
mov
lcall
es
outsb
clc
cltd
pop
cmpsl
iret
xchg
xor
inc
sarb
or
push
xchg
mov
lods
inc
or
out
sarl
ja
fidivrs
into
xor
add
stos
aaa
push
insl
(bad)
out
mov
in
fidivl
mov
xchg
js
fists
mov
and
nop
and
push
xchg
outsb
or
rclb
adc
lea
adc
and
andb
lea
cmpsl
repz
cmpsb
shlb
add
(bad)
sbb
(bad)
dec
popa
stc
imul
or
fistpl
jp
(bad)
sbb
sarl
daa
cmp
jmp
xchg
movsl
(bad)
cmpsl
call
shll
imul
fistl
loope
mov
mov
lahf
jg
cltd
rorl
dec
pop
ja
adcb
imul
jg
mov
test
mov
addr16
jl
jecxz
mov
loop
cmc
mov
loope
ds
cmp
or
mov
jg
pop
and
sbb
iret
nop
or
in
inc
pop
inc
stc
loopne
loopne
inc
data16
pop
sarl
mov
push
dec
pop
neg
es
rol
sbb
mov
push
sarb
adc
clc
cli
xchg
dec
nop
jecxz
xor
(bad)
jae
loope
loope
or
pop
lret
(bad)
ja
inc
std
aam
add
mov
and
cmc
hlt
jle
outsl
mov
int
lea
aaa
stc
cmp
bound
inc
mov
orl
stos
mov
push
int3
adc
mov
jp
and
sbb
stos
jns
aam
pop
es
cmp
popa
stc
aas
dec
or
testb
and
jae
jg
insb
pop
jno
jl
iret
push
inc
jb
jle
cmc
inc
adc
arpl
in
out
(bad)
sbb
fnsave
cli
and
or
aaa
xchg
sbb
pusha
pop
daa
insl
loop
aas
loop
inc
std
dec
sub
jne
cmpsl
xor
jbe
jl
mov
lahf
repz
pop
or
sbb
push
jnp
push
mov
sbbb
pop
outsb
dec
test
test
dec
mov
cmp
std
dec
inc
push
push
lods
loope
and
call
fwait
ljmp
iret
nop
pop
adc
add
dec
out
popf
sbbl
xchg
mov
push
jns
mov
mov
fldl
fists
pop
lcall
and
popf
(bad)
add
ss
pop
fimull
sub
outsb
nop
mov
dec
cld
xchg
inc
jne
mov
or
xor
cwtl
add
push
inc
cmp
cmp
out
push
push
lret
stos
xchg
loopne
sub
jo
add
cmp
aas
dec
inc
ret
into
repnz
ret
lock
inc
inc
add
lods
mov
lret
mov
push
adc
cli
loop
lret
je
mov
cltd
in
push
cli
pop
test
das
lods
aas
lock
inc
ja
lods
aaa
mov
jl
xchg
or
jno
fistpll
mov
cmp
mov
adc
clc
jo
and
shll
sbb
scas
jbe
lods
sub
xchg
fcoml
mov
daa
fbstp
(bad)
jecxz
test
mov
inc
xchg
leave
xchg
push
xchg
rcll
mov
subl
mov
dec
pop
mov
push
std
push
fsubrs
xchg
mov
or
arpl
stos
lock
and
mov
andb
sub
andps
aas
xchg
arpl
inc
cltd
sbb
cmp
xchg
cwtl
xchg
adc
pop
(bad)
arpl
and
jns
push
inc
outsl
pusha
add
mov
arpl
and
dec
out
jne
cmp
cmp
cmp
push
adc
push
pop
stos
cmpsl
pop
data16
lock
push
sbb
stos
cwtl
hlt
xor
mov
push
int
cmovno
xchg
outsl
cmpl
ljmp
xchg
mov
sbb
pop
inc
inc
cmp
lcall
movsl
inc
jmp
xchg
mov
xchg
mov
or
add
pop
or
add
adc
fistpll
sub
add
enter
pop
loop
in
push
xchg
jge
ss
push
xor
mov
outsl
pop
jecxz
and
xchg
inc
ja
cmp
out
loop
arpl
push
dec
pop
push
pop
xchg
mov
mov
push
and
sar
pop
dec
fsubp
scas
pxor
adc
lods
popf
std
sub
das
pop
ficoms
aas
xchg
or
adc
xor
in
mov
lds
sti
add
int3
(bad)
aaa
jae
addl
mov
clc
xchg
jbe
lods
(bad)
(bad)
jae
xchg
jg
xor
out
sbb
push
inc
jns
popf
shr
hlt
ret
nop
xchg
aas
mov
and
mov
xchg
mov
adc
shll
nop
dec
pop
mov
push
fisubrs
loope
mov
fwait
cmp
sub
dec
push
jbe
inc
inc
or
int
cmp
jnp
mov
decb
sub
(bad)
jnp
push
leave
inc
dec
fcmovu
movsl
cmc
push
sub
add
mov
popa
insl
or
insb
ffreep
ds
pop
push
sbb
sbb
jne
cmp
push
mov
adc
test
sub
mov
gs
fsts
lea
ret
lret
or
dec
jl
les
(bad)
aam
sbbb
inc
addr16
push
scas
cmp
dec
jge
lods
fsub
ds
sub
jb
xor
test
int3
scas
mov
fbstp
adc
pushf
push
scas
and
test
js
xor
cmpl
mov
fimull
jp
lretw
repnz
popf
aaa
das
push
in
adc
push
leave
adc
lahf
mov
shl
outsl
imul
mov
arpl
(bad)
ljmp
push
lods
inc
pop
popa
mov
mov
(bad)
fistpl
mov
jb
std
adc
sub
jb
fsubrs
mov
push
pushf
stos
inc
mov
jb
idiv
push
cmp
jp
push
insl
mov
push
(bad)
filds
gs
cmp
std
lods
lock
sbb
mov
lret
adc
jecxz
pop
dec
loop
xchg
xlat
insl
imul
orb
mov
stc
into
adc
mov
scas
pushf
and
pop
push
test
inc
lods
sbb
insb
add
xchg
addl
adc
pop
fbld
es
jge
daa
mov
jbe
mov
subl
mov
std
pop
fwait
push
push
xchg
mov
adc
or
cld
imul
mov
loop
mov
lahf
sbb
cmp
clc
fs
pop
push
dec
jle
mov
push
add
(bad)
xor
sahf
loope
dec
lods
and
pop
fs
jle
lock
std
loopne
leave
xchg
iret
adc
mov
pop
cmc
cld
daa
in
mov
mov
xchg
push
popa
mov
mov
mov
or
mov
pop
repnz
repz
mov
pushw
daa
loopne
push
or
mov
push
pop
es
add
cmp
inc
in
xchg
insl
movl
adc
push
or
dec
lea
inc
add
inc
aas
out
or
add
test
addb
lea
xchg
pop
dec
push
dec
dec
or
adc
out
(bad)
inc
jp
je
pop
mov
pop
(bad)
insl
cmc
outsl
xor
lock
push
