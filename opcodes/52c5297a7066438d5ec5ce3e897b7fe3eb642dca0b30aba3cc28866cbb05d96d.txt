shlb
pop
in
bsf
cld
cmc
inc
inc
mov
xor
in
adc
ficoml
(bad)
bound
lods
(bad)
push
shl
ljmp
scas
scas
or
movsb
mov
bound
xlat
repnz
dec
popa
in
cmp
movb
insb
push
jno
sbb
jmp
daa
jle
cmpsb
faddp
xchg
addr16
cmp
jl
int3
jns
mov
je
add
or
sbb
lcall
xchg
or
fimuls
stos
or
scas
lods
push
pop
lcall
lea
data16
add
jecxz
inc
inc
mov
test
call
and
sub
and
cmp
or
sbb
aam
jo
mov
or
inc
pop
stc
es
jno
push
in
push
imul
fcmovne
sbb
or
cmpsl
mov
jae
fs
imul
or
fidivs
les
or
cmp
xchg
inc
jbe
cmc
es
shrb
jle
pop
je
mov
mov
lret
cli
mov
mov
ret
and
pushf
lock
sub
jmp
cmpl
enter
xchg
inc
push
or
(bad)
push
fwait
inc
frstor
roll
sub
enter
movsl
int1
out
add
xchg
(bad)
or
xor
adc
stc
jno
cltd
jle
mov
fwait
stos
bound
jne
int1
int3
flds
loope
jbe
(bad)
sti
mov
add
sub
mov
inc
test
inc
xchg
ja
jp
in
out
mov
xchg
dec
adc
xchg
mov
scas
add
push
push
jge
je
imulb
nop
call
mov
inc
xor
sbb
xchg
ja
arpl
inc
lahf
pusha
sahf
adc
mov
pop
cmpsl
xor
aas
(bad)
cmpsl
sub
mov
push
cmp
cmc
sbb
fs
cmpsb
mov
fadds
aad
ret
mov
in
mov
into
ljmp
and
(bad)
pop
fwait
movsl
jbe
roll
fsub
sbb
js
decb
lea
and
lock
call
cmp
mov
notl
cld
pop
in
mulb
cmc
mov
add
div
add
and
dec
adc
add
lds
ret
pop
sub
loopne
test
mov
in
nop
lods
or
lcall
fdivr
rolb
jl
out
xor
inc
fistpl
push
out
outsl
dec
jns
add
pop
fldt
push
inc
adc
xchg
popa
cmp
test
xchg
xor
shl
out
test
push
ss
mov
cmpb
adc
(bad)
jbe,pn
lcall
xchg
bound
cmp
inc
pop
dec
inc
fcoms
xchg
or
sbb
push
imul
add
or
ret
(bad)
bound
mov
mov
addl
adc
jmp
mov
es
jnp
(bad)
stos
add
add
xchg
cmp
sub
std
ret
cmc
cmpsl
es
add
add
xchg
and
scas
inc
cmp
xor
dec
push
dec
cmp
hlt
scas
adc
add
hlt
loopne
sbb
inc
xadd
push
adc
rcll
sti
sub
adc
(bad)
loopne
popf
sbb
xchg
int1
or
xchg
lcall
jne
pop
pop
pop
jno
loope
inc
fisubl
addb
(bad)
js
repz
cmpsl
push
(bad)
lahf
pop
dec
mov
lret
(bad)
mov
loopne
add
mov
stos
lods
int
xor
xor
into
iret
mov
inc
cltd
or
je
cmp
cmp
ljmp
popa
fwait
dec
adc
lods
push
xor
test
mov
add
add
das
xchg
nop
(bad)
lods
pop
fiaddl
adc
xor
adc
fistpll
mov
mov
xorb
int3
daa
and
fdivrs
adc
bound
pusha
out
cmp
ret
sbb
scas
(bad)
out
lcall
ficomps
pop
das
xor
xchg
aaa
or
ljmp
mov
sbb
xor
xorb
in
inc
addl
sbb
xchg
test
sbb
rcrl
push
leave
arpl
push
cwtl
add
pop
test
push
jo
int1
jns
push
into
add
int1
jns
sti
fisubrs
xor
test
adc
push
setne
cli
stos
xchg
sub
cmc
scas
ret
mov
arpl
adc
cmp
pop
test
push
mov
or
rorl
cmp
arpl
dec
pusha
mov
mov
pop
jecxz
pop
call
push
or
pushf
sbb
shll
std
int3
loop
enter
mov
pop
jge
cli
add
bound
jl
setle
push
mov
xchg
jo
mov
xchg
jecxz
fsubl
popa
scas
jno
sub
jmp
sbb
ja
mov
xor
push
(bad)
xchg
ret
rclb
jg
out
xchg
push
ds
dec
fistpll
inc
add
or
das
xchg
dec
cmp
mov
inc
pop
je
lods
enter
and
leave
mov
popa
mov
pop
inc
lret
rcr
(bad)
loopne
jmp
mov
push
push
ljmp
sbb
push
push
jmp
dec
cltd
cmp
leave
into
faddl
lods
aaa
xchg
aad
int
pop
mov
fstps
lcall
mov
push
andl
arpl
mov
decb
push
sbb
stos
push
test
adc
pop
lods
lods
dec
clc
xor
xor
sub
xchg
jno
mov
test
popa
add
dec
rclb
lods
mov
push
mov
pop
fbstp
aad
orb
pop
lods
sbb
out
dec
pop
sub
arpl
cs
inc
(bad)
js
mov
mov
push
clc
push
ss
popa
cld
lcall
dec
je
dec
xor
pop
or
jae
sbb
mov
cmp
push
jo
jo
xlat
fiadds
xchg
idivl
inc
sahf
pop
ja
sbb
mov
in
sbb
xchg
push
inc
aaa
(bad)
addr16
int3
sbb
jo
cmp
shll
lret
jne
mov
jae
and
sti
push
inc
imul
clc
ljmp
sub
das
test
add
and
push
push
cmp
inc
sub
xor
cwtl
roll
mov
cmp
cwtl
mov
(bad)
jl
add
mov
pop
andl
pop
addr16
pusha
out
cmp
pop
in
mov
out
scas
inc
outsl
mov
shlb
push
adc
push
xchg
out
rcr
stc
add
mov
jmp
arpl
ss
jp
jo
push
ret
imul
scas
test
mov
movsb
mov
incl
push
fisttpll
aaa
mov
and
fimull
adc
dec
cmpl
rorb
push
lcall
sbb
cmp
lcall
cmp
imul
sbb
add
addb
ljmp
stos
mov
sar
cmp
cwtl
xchg
daa
push
pop
sbb
movsl
sahf
out
adc
data16
mov
es
add
int1
fwait
dec
rolb
jb,pt
je
adc
push
push
mov
pop
push
mov
addl
xor
lea
pop
push
pusha
pop
or
and
scas
iret
stc
adc
and
pop
mov
pop
popf
lods
test
(bad)
dec
jle
lahf
xor
inc
bound
pop
push
ret
aam
sbb
sbb
lcall
xchg
jbe
stos
jns
fsubrs
out
mov
je
xchg
xor
pop
fisttps
cmp
faddp
pop
sarl
inc
nop
jo
iret
mov
mov
lcall
ret
fidivrl
xchg
(bad)
push
or
iret
outsb
rcrb
mov
mov
out
in
repz
lret
popa
idivb
pop
mov
mov
or
lds
sbb
insl
mov
mov
inc
(bad)
dec
aaa
dec
ljmp
fistpl
xor
jnp
cld
lds
ds
stos
push
dec
cmp
or
cmpsb
loope
int3
sbb
ret
jbe
test
fstpt
inc
out
pop
jo
ret
jno
insb
out
data16
xor
pop
dec
pop
ret
add
nop
jnp
dec
sub
leave
sti
add
test
sub
(bad)
stos
push
cmc
inc
int1
pop
out
shrb
xchg
mov
mov
pop
sbb
cmpsb
shrb
popa
sbb
cmp
ficompl
push
(bad)
dec
sbb
mov
jecxz
call
