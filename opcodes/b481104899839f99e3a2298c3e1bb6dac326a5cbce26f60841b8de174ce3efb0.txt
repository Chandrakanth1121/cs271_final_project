push
mov
add
popf
or
mov
iret
or
ret
and
ja
pusha
cmc
roll
dec
outsb
mov
cmc
jge
sbb
dec
fbld
cmp
inc
sub
lods
xor
repz
mov
jl
ret
cmpsb
fdivrs
push
popa
sbb
xor
mov
in
jp
ds
int
or
pop
dec
lods
hlt
test
sub
loopne
adc
adc
hlt
aad
aad
mov
mov
lret
out
arpl
js
addb
sbb
insb
popa
xor
push
xchg
sub
outsl
mov
sti
adc
gs
dec
pop
cmp
sbbb
clc
out
js
mov
sbb
add
std
movsb
dec
stos
mov
pusha
bound
or
jg
fisttps
int1
sub
and
ds
cmp
push
loop
fwait
leave
scas
cmp
idiv
gs
adc
and
mov
mov
inc
std
or
add
add
dec
es
mov
(bad)
or
mov
test
sbb
inc
adc
push
xchg
movsb
pop
xchg
test
push
xchg
or
stc
cmp
js
lock
pop
loopne
or
push
jnp
add
jnp
pop
out
(bad)
addl
dec
mov
(bad)
cmp
sti
inc
push
pop
lcall
(bad)
mov
outsl
jo
mov
pop
sub
mov
xor
cld
(bad)
xor
cli
mov
insl
mov
jl
(bad)
sti
sub
pop
mov
and
int
cmp
or
out
sbb
mov
jge
dec
mov
jecxz
imul
clc
jg
mov
jae
push
nopl
and
je
xchg
lret
push
inc
jno
jg
adc
jl
jnp
out
mov
roll
adc
mov
inc
mov
xchg
cmp
popf
jle
in
xchg
lds
test
rorl
mov
adc
cld
mov
or
nop
addr16
add
cld
mov
push
pop
push
aaa
popf
xor
or
inc
push
shlb
mov
sub
aad
insb
jecxz
adc
mov
into
lea
cld
pop
dec
mov
ja
and
adc
sbb
add
or
stc
stos
lea
jo
insl
mov
cmpsb
jle
add
sub
mov
stos
stc
out
mov
rolb
mov
ss
ficoml
push
xchg
cmp
mov
incl
mov
jl
mov
imulb
add
jo
mov
sbb
dec
imul
add
popa
loope
mov
dec
cli
repnz
jl
push
sar
fs
jne
cmpsl
jp
push
mov
pusha
fcomps
(bad)
(bad)
mov
fisubl
outsl
jle
repz
or
imul
in
mov
mov
ret
add
mov
js
leave
sbb
dec
sub
sub
xor
dec
mov
push
xadd
insl
cmp
shlb
scas
jge
mov
test
in
sbb
addl
dec
ljmp
xor
test
lret
shlb
stos
jg
xchg
push
sbb
mov
clc
ret
insl
lret
dec
js
popf
gs
(bad)
mov
fdivrs
sbb
mov
je
imul
sub
nop
and
test
adc
loope
scas
pop
push
jo
into
fs
xchg
add
shl
mov
jmp
add
in
scas
pop
mov
mov
fwait
mov
cmp
aad
jecxz
push
(bad)
lea
fidivrs
jb
push
mov
gs
sahf
or
fwait
and
je
adc
jl
fnsave
lods
dec
inc
out
ret
and
in
shrl
mov
xchg
push
add
iret
rorl
pop
or
pop
ds
push
adc
fwait
andb
cld
stos
mov
mov
aas
jns
jae
fistl
or
(bad)
push
pop
jb
inc
leave
repz
add
stos
add
pop
rcll
mov
xchg
mov
sahf
nop
popa
in
dec
add
bound
inc
cs
jbe
cltd
or
leave
mov
mov
lock
or
sub
sub
xchg
jno
inc
int3
pop
and
xchg
inc
push
dec
test
in
xchg
and
jmp
cmc
push
adc
mov
xlat
pop
mov
aaa
sbb
into
cld
pop
cmp
shll
mov
ja
cltd
leave
fstpl
pop
jle
jg
daa
orl
cmp
leave
stos
add
(bad)
ret
movsb
jae
int3
mov
lcall
jge
(bad)
add
jae
inc
fdivrs
add
cltd
add
dec
js
je
imul
imulb
pushf
lcall
jnp
cs
leave
mov
lahf
sub
sbb
jbe
cld
lea
int
dec
addb
pop
pop
jns
mov
movsb
add
mov
inc
repz
fildll
notl
aam
dec
pop
xrelease
repz
out
mov
lods
add
xor
leave
std
les
sbb
pop
sbb
bound
pop
stc
mov
adc
inc
add
arpl
push
push
jg
jmp
int
sbb
mov
js
jbe
orl
jbe
movsb
xchg
sub
inc
aas
cmp
mov
stc
(bad)
movsl
hlt
xchg
cmpb
xchg
cmc
adc
jp
lahf
jb
(bad)
xor
pop
sbb
xor
dec
mov
cmp
sti
xchg
sbb
jne
add
jbe
adc
fwait
or
insl
(bad)
outsb
cmp
addr16
pop
lea
insb
loope
sub
filds
mov
mov
xor
out
xor
inc
lret
inc
lods
(bad)
mov
(bad)
fnsave
xchg
pushf
jnp
sti
adc
xor
jns
out
xchg
or
ret
lcall
fcmovb
cmpsl
mov
lock
test
outsb
jo
test
jl
pop
inc
rolb
in
frstor
sub
fs
adc
push
shlb
jnp
gs
or
lret
out
jl
std
enter
(bad)
sti
cmpsl
add
int
mov
add
(bad)
in
lcall
outsl
xchg
or
call
jl
(bad)
cmpsl
ljmp
cmc
ds
les
cmp
(bad)
push
jmp
insl
jnp
inc
pop
js
arpl
xchg
and
push
mov
jae
outsb
aam
nop
mov
push
sub
inc
jge
xor
push
shr
mov
fstpt
mov
pushf
mov
jl
imul
push
daa
push
add
fistl
call
addb
loopne
mov
inc
test
test
add
or
fsubrl
and
adc
lcall
jecxz
movsb
(bad)
xchg
jge
das
mov
cmp
test
lret
sub
lahf
rclb
pop
movsl
out
mov
mov
push
cmp
pop
out
gs
imul
leave
test
int
add
sub
lahf
outsb
mov
dec
int
add
mov
or
rcll
mov
(bad)
sub
or
or
mov
daa
(bad)
xlat
and
lock
mov
dec
sbb
bndstx
add
fsub
and
add
cmp
out
jae
dec
xor
adc
insl
lcall
out
xlat
mov
jecxz
mov
xchg
adc
add
fsubrs
rcll
outsl
mov
jbe
shl
divl
adc
test
fwait
xlat
sub
std
loope
mov
daa
cmp
mov
and
xchg
in
jne
fisubrl
call
clc
pop
xor
push
and
push
jmp
pop
insb
xor
lea
fcompl
test
(bad)
xchg
pushf
je
aad
arpl
fnstenv
jno
es
jmp
mov
pushf
scas
les
add
aam
in
mov
adc
in
test
xor
jb
add
outsl
mov
mov
mov
andl
fdivs
fwait
jg
mov
hlt
or
ja
xor
lret
mov
dec
jp
ds
fwait
aam
dec
sbb
mov
outsl
mov
lods
jle
in
mov
js
lcall
jp
cmp
es
faddl
mov
cmpsb
push
xchg
adc
xorl
lds
stos
cs
jne
xor
jns
and
push
lcall
xchg
or
jmp
dec
test
test
sti
in
stos
repnz
rorb
sub
cld
sbb
cmc
out
sbb
daa
mov
mov
cmp
push
aas
sarl
pop
pusha
lds
mov
mov
mov
loop
