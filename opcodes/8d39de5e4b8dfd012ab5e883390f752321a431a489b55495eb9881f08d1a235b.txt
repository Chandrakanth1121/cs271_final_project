sbb
add
data16
adc
jecxz
popf
and
lret
(bad)
popf
lea
mulb
push
sahf
jp
pusha
adc
aas
push
xchg
mov
xchg
xchg
mov
mov
cwtl
xor
xchg
shlb
cwtl
jae
cs
test
sar
les
jb
stos
mov
sub
mov
add
dec
fucomp
push
outsl
mov
(bad)
sbb
jp
mov
bound
ljmp
dec
es
je
dec
es
mov
ret
imul
push
mov
dec
inc
cmpsl
mov
addr16
push
push
iret
and
and
add
lods
mov
push
dec
jbe
mov
mov
push
test
ss
push
movsl
rcll
dec
lds
mov
(bad)
mov
xchg
jbe
gs
jl
in
mov
int3
mov
shll
jg
in
lds
mov
test
repz
cmp
neg
pop
iret
lret
jbe
repz
mov
xchg
outsl
(bad)
imul
mov
nop
mov
cwtl
das
es
push
fsts
push
pop
push
ja
sahf
jo
insl
ret
fimuls
mov
pop
(bad)
mov
stos
jne
pop
loope
push
mov
jnp
inc
mov
movsb
call
adc
or
daa
xchg
xchg
jge
ss
cltd
or
or
pop
or
push
mov
pusha
pop
addr16
or
dec
(bad)
clc
inc
sub
cmp
jae
mov
jne
fsubs
and
jecxz
sub
xor
cs
add
addr16
mov
dec
fidivs
inc
xor
pop
mov
lret
into
cld
xchg
js
ret
pop
dec
sahf
xchg
jp
cmp
inc
mov
es
subb
sti
faddl
fldt
cmc
and
push
aaa
mov
jb
and
shrb
push
(bad)
rcrl
subb
test
aam
sbb
or
decl
push
clc
stos
enter
pop
fwait
adc
ja
dec
mov
stc
pop
dec
xchg
xchg
incl
xchg
xor
or
or
sar
xchg
cmp
dec
sub
mov
scas
aad
or
test
xchg
add
jle
dec
enter
mov
sub
add
nop
sub
push
dec
adc
pop
mov
adc
in
sbb
int1
(bad)
addb
ljmp
inc
xor
out
lret
ret
mov
jp
sbb
insl
aas
jge
sub
arpl
pop
lock
push
cld
sub
pushf
ds
fcmove
xchg
data16
in
into
shrb
addl
jmp
adc
pop
rolb
stos
shrb
sub
pop
pop
adcb
in
imul
popa
inc
call
pop
(bad)
cmp
cmp
(bad)
dec
lds
lea
cmc
pop
aaa
adc
and
lret
or
pop
rcll
xor
mov
sbbb
cltd
sarb
or
lea
inc
(bad)
cmp
hlt
ja
pushf
mov
loopne
stos
mov
loopne
daa
popa
(bad)
jecxz
and
push
and
jge
or
or
in
leave
pop
jae
shll
mov
in
pop
stos
add
fmuls
xchg
mov
ss
cmp
jbe
dec
dec
cmp
and
loopne
mov
int3
sub
push
ljmp
cmp
popf
bound
jne
ja
shrl
cli
jmp
dec
jge
insb
xchg
jg
cli
aam
and
add
add
inc
inc
sub
test
xor
xor
bnd
stos
jae
pop
movsb
cmp
repz
push
mov
dec
add
mov
in
push
cmpsl
lret
mov
jns
adc
push
dec
jb
pusha
mov
inc
(bad)
jle
jae
lret
bound
adc
pop
mov
test
jo
pusha
dec
data16
repz
jg
out
mov
jl
push
jbe
sub
cmp
cmpsb
cmp
enter
(bad)
mov
nop
enter
into
pop
jo
dec
xchg
sbb
lods
lds
cmp
inc
(bad)
in
jle
mov
imul
shlb
ss
int1
push
shrb
das
imul
pusha
(bad)
mov
outsl
aad
xlat
test
popa
out
mov
sub
jl
mov
cltd
jp
(bad)
outsl
stos
xchg
enter
and
lcall
push
pop
cmp
ror
loop
mov
fstl
inc
jle
xchg
mov
dec
pusha
imull
lea
cli
mov
xchg
mov
fidivs
repz
js
pfnacc
scas
cwtl
es
adc
in
xor
sti
mov
cmpsl
jb
cmp
sbb
pop
push
push
push
mov
addr16
addl
push
mov
cwtl
jo
dec
lods
inc
imul
sahf
mov
loopne
mov
sarb
dec
and
mov
cli
test
orb
jmp
mov
mov
or
jle
push
outsb
arpl
sbb
int1
out
adc
pop
jbe
mov
inc
sub
stc
cltd
dec
xchg
ljmp
jae
cmp
test
xchg
rcr
mov
pop
jns
adc
mov
dec
xchg
sbb
sub
and
or
and
out
sarb
in
dec
xor
mov
int3
jg
xchg
imul
test
adc
dec
push
adc
cmp
sbb
pop
fadds
sar
jae
mov
cwtl
or
mov
mov
pop
inc
cs
xor
mov
mov
jno
imul
inc
test
add
in
test
pop
(bad)
mov
bound
dec
in
xchg
jmp
xchg
jle
mov
push
aas
and
(bad)
jae
pop
les
test
mov
pop
iret
xchg
lahf
sub
out
xchg
lods
(bad)
int3
sub
adc
jae
xchg
push
pop
call
fisubrs
mov
shrb
pop
pop
jne
inc
dec
lcall
push
add
out
popf
int
cs
imul
pop
mov
incl
mov
lock
pop
jle,pn
in
adc
or
out
cmp
jno
push
and
xchg
inc
imul
test
data16
and
inc
out
popa
leave
dec
and
inc
sarl
pop
imul
aaa
testl
aaa
adc
rorl
add
cli
call
rol
(bad)
push
sub
and
sub
push
(bad)
stc
fsts
into
out
jo
xchg
es
adc
dec
dec
mov
insb
pop
mov
or
imul
pop
xchg
jno
into
xchg
sub
mov
hlt
stos
scas
and
movsl
and
push
add
fnstenv
mov
roll
jo
push
inc
adc
jecxz
xchg
(bad)
fsubl
(bad)
push
sarb
push
mov
int
jns
lret
fldt
je
sbb
in
jae
mov
mov
pop
stc
xchg
shll
in
shl
into
pop
lret
call
mov
(bad)
push
sbb
dec
(bad)
push
loop
mov
test
cld
out
insl
fldcw
mov
mov
and
(bad)
addr16
imul
popf
repnz
cld
sub
xor
stos
pushfw
int1
lcall
mov
loopne
imul
popa
and
movsb
fidivrl
fimuls
dec
sub
stc
gs
sub
imull
and
inc
(bad)
and
daa
mov
or
adc
fildll
push
in
fcomp
fs
ret
adc
ret
stc
ret
xchg
sub
mov
and
cmp
lret
sahf
jge
test
aad
mov
jo
add
in
jb
or
push
pop
rcrl
mov
bound
sub
test
jmp
scas
rcrl
mov
mov
adc
xchg
enter
lret
mov
fs
xchg
jmp
jmp
mov
sti
mov
addr16
stc
push
pusha
mul
inc
aas
loope
cmp
cmc
aas
test
test
int
test
mov
mov
and
cmp
add
mov
push
call
jno
je
fmull
cmp
mov
pop
mov
(bad)
call
cwtl
push
enter
and
inc
mov
insb
xchg
rclb
dec
arpl
mov
out
sti
pop
scas
and
jne
cld
stos
aad
fisubl
push
leave
push
dec
cs
imul
cwtl
push
lock
rcr
(bad)
jno
xor
and
int3
dec
aaa
ljmp
aas
push
jo
decb
testl
push
