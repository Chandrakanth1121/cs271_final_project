incl
gs
gs
xor
cs
xor
pop
dec
inc
inc
jb
insl
add
push
(bad)
(bad)
cld
dec
pop
dec
outsl
je
jb
je
insb
pop
jb
outsb
ja
ud0
pop
out
iret
mov
test
cmp
mov
sti
adc
js
(bad)
(bad)
decl
inc
inc
add
sbb
dec
int
call
and
inc
cmp
push
add
inc
ljmp
fists
cmpsl
xor
add
test
push
inc
pop
adc
sbb
mov
fldl
pop
add
pop
movsb
sub
faddl
xchg
mov
push
das
sbb
add
add
mov
repnz
adc
or
add
add
mov
pop
jne
add
insb
add
dec
popa
jns
jo
imul
bound
popa
push
popa
daa
fnsave
in
jg
add
add
fs
jne
dec
outsl
pop
das
mov
insl
mov
and
xor
add
ret
push
arpl
add
lods
mov
je
add
or
push
je
sti
adc
or
outsb
jae
jo
push
imul
(bad)
outsb
jb
inc
xor
cmp
ja
jb
push
popa
insb
jae
neg
(bad)
pop
insl
popa
imul
insl
pop
popa
mov
aaa
mulb
jae
sbb
pop
push
jo
mov
arpl
mov
fisubrs
or
sbb
sub
imul
dec
insb
imul
cmp
dec
jne
insl
imul
fldt
imul
popa
fs
xchg
loope
inc
inc
popa
jcxz
push
iret
mov
sti
outsl
insb
fs
and
jae
outsb
xchg
(bad)
(bad)
sbb
and
das
add
into
cmovnp
je
imul
aas
push
scas
or
push
push
sub
fidivs
dec
push
fs
lods
jge
notb
pop
imul
out
mov
pop
jp
jno
push
data16
fidivl
jns
push
mov
divb
sub
outsb
pop
mov
outsl
and
jne
pop
pop
mov
push
pop
xchg
jmp
(bad)
jle
jb
lret
arpl
push
push
jl
fs
jns
xchg
out
inc
outsl
outsb
gs
pop
fldt
sbb
push
lods
jae
stc
popa
imul
inc
outsb
fs
adc
bound
mov
outsb
cs
(bad)
lea
cld
mov
cs
insl
popa
jbe
pop
sub
mov
pop
inc
push
xchg
and
nop
pop
lret
sub
sub
add
inc
roll
jo
insb
push
fs
add
add
dec
inc
xchg
cmp
fs
add
sub
mov
add
fs
cmpsb
add
or
add
insb
mov
add
cmp
pop
add
outsb
bound
pop
cmp
xor
pop
pop
or
testl
sbb
insl
fs
movaps
cs
push
pushf
fnstcw
inc
add
xor
push
push
inc
push
push
push
dec
inc
dec
dec
inc
add
pop
jo
jmp
rorl
outsb
fldenv
or
and
sbb
in
adc
aaa
enter
rol
daa
dec
shll
xor
lods
test
shlb
movsb
aaa
add
sti
or
dec
aaa
sub
mov
sbb
fucomip
and
das
(bad)
nop
ror
fsubs
pop
enter
sarb
lods
and
daa
fbld
cmp
repnz
dec
and
push
fcomps
rcll
iret
xchg
loopne
mov
cmc
int
add
and
jl
and
jge
jnp
jnp
pop
lods
data16
insl
jge
or
push
(bad)
loopne
pusha
insl
jl
add
mov
add
or
inc
aam
or
imul
add
and
and
sub
and
outsl
or
jnp
jl
jge
add
filds
mov
push
ja
xchg
push
fisubl
sub
pop
jnp
mov
jl,pn
sub
jge
lods
mov
or
pop
daa
mov
fs
cmp
jl
pop
add
fisttpll
xor
fistpl
jnp
pop
jl
jge
fsubl
sub
inc
jnp
push
xchg
sbb
and
bound
jl
or
lods
mov
add
out
insb
popa
jmp
mov
mov
jg
cmc
insl
xor
mov
or
fistl
push
iret
subl
out
popa
insb
shrb
imul
jl
jno
pop
sbb
and
jae
mov
mov
fsubr
imul
cmp
scas
xchg
cwtl
fisttpll
loope,pt
inc
andl
push
nop
add
jl
and
jl
bound
xor
or
push
cmp
add
pop
cld
lea
jg
fs
mov
stos
loop
mov
mov
and
sub
jne
mov
push
cmp
jnp
je
push
jnp
in
roll
test
push
js
push
inc
sub
mov
adc
sarl
sbb
jl
gs
mov
out
gs
test
divl
mov
and
cmp
xchg
call
cmp
jge
lahf
jb
jb
or
mov
andb
jnp
ljmp
inc
lods
push
xor
dec
inc
fldt
mov
inc
inc
pop
jge
popa
push
or
popa
push
adc
mov
call
sub
je
and
jnp
jl
push
adc
mov
add
mov
ss
stos
pop
cmp
sbb
add
call
scas
xchg
lcall
jb
and
mov
adc
inc
xor
dec
push
sub
neg
jbe
xor
jae
fs
push
push
popf
or
dec
jnp
inc
int
xor
sbb
push
or
int3
int
add
cs
xchg
cmp
decl
mov
jl
jge
cld
movsl
test
sub
xchg
push
js
in
jno
stos
je
fs
inc
pop
fwait
inc
popa
jmp
or
mov
test
je
or
scas
fs
jo
adc
sbb
xchg
clc
addr16
sub
mov
imul
out
add
xchg
push
frstor
pop
ret
mov
insl
lock
pop
and
data16
mov
sahf
adc
cmc
inc
test
stos
mov
pop
and
call
xor
and
fsubs
test
outsl
or
lcall
shrl
outsb
mov
push
adc
and
xor
or
jnp
arpl
test
out
fnsave
and
lahf
inc
aaa
jae
inc
adc
jo
aas
sub
push
add
pop
fnstcw
daa
xor
jge
pop
and
mov
inc
and
dec
in
ja
sub
lea
add
dec
pop
sub
or
rcrb
fsubs
leave
sub
nop
in
outsl
sbb
mov
aam
insb
adc
fs
test
ja
push
pop
stc
shlb
mov
and
in
jl
imul
sub
mov
pop
or
jb
fwait
push
cwtl
lds
cmpsl
outsb
sti
push
insl
xorb
push
fistpll
data16
popa
mov
scas
(bad)
or
repz
andb
mov
pop
imul
jmp
pop
imul
jecxz
or
stos
mov
inc
inc
push
loop
push
imul
mov
dec
inc
fdivl
inc
jnp
jl
dec
push
and
pop
jae
xor
and
pop
pusha
jnp
ljmp
xor
mov
or
in
add
adc
or
int
rol
mov
xchg
sbb
mov
mov
xor
dec
mov
rclb
js
and
dec
test
enter
int3
adc
aaa
push
int
mov
hlt
inc
push
push
sti
dec
imulb
xor
push
cmpsb
pop
and
dec
mov
cmp
insb
and
adc
shrl
xchg
add
mov
jnp
xor
jmp
test
clc
and
outsl
sbb
and
pop
into
adc
and
cmp
rol
and
in
lea
jo
fildl
xor
mov
jl
pop
push
leave
pop
jl
(bad)
or
adc
cltd
arpl
pop
cs
inc
and
mov
push
inc
push
push
adc
cmp
pushf
out
xchg
inc
dec
pop
and
sbb
inc
jl
psraw
add
and
xchg
dec
add
