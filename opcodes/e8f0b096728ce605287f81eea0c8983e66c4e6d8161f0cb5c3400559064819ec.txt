push
cmp
aad
jns
cmp
imul
fisttpl
rol
aaa
or
jbe
inc
enter
fdivs
sub
dec
dec
insl
das
bound
int
adc
pop
shll
jns
lret
rolb
mov
shlb
jno
popaw
je
(bad)
or
test
imul
lret
js
cmpsb
push
mov
pop
inc
aad
xor
fsubl
xor
sbb
xorb
and
cld
mov
push
popf
xchg
call
enter
sbb
fbld
push
add
pop
xlat
mov
sbb
ficoml
insb
outsl
xor
jle
test
adc
scas
or
jge
mov
and
jno
dec
pop
insb
mov
les
adc
nop
pop
adc
xor
mov
(bad)
mov
xchg
std
mov
jb
cld
insb
dec
fs
lret
xchg
rcll
insb
xchg
sbb
stos
push
call
js
sub
ret
adc
xor
or
push
sahf
pop
roll
scas
cmp
fbstp
sti
mov
adc
rorl
arpl
into
mov
jns
jno
popa
mov
fwait
add
(bad)
pop
gs
repnz
jg
cmpsl
adc
repnz
into
cmp
jg
add
xchg
adc
or
push
cmp
jb
dec
(bad)
addr16
or
out
push
fdiv
mov
in
lcall
mov
repnz
imul
fists
ret
xchg
sbb
jg
add
sbb
sbb
imul
cmp
add
pop
fdivl
aaa
or
nop
or
repz
xchg
test
cs
push
mov
xchg
outsl
add
sahf
xchg
mulb
imul
loop
sbb
cmp
int1
ss
fisubl
dec
rorb
or
insb
inc
and
imul
inc
lock
inc
loopne
xchg
xchg
repnz
stc
out
movsb
sarb
pop
sub
pusha
(bad)
push
inc
aas
leave
xchg
cmp
or
cmpb
fmuls
sbb
repnz
jmp
cs
inc
jle
mov
div
scas
mov
push
jp
sub
mov
fisttpll
or
mov
mov
in
xlat
and
lret
mov
mov
mov
ss
and
mov
adc
xchg
mov
sahf
nop
test
cli
xchg
popa
jne
loop
adc
aad
pop
lock
imul
mov
inc
ffreep
bound
push
ss
xchg
out
dec
(bad)
addr16
push
sahf
(bad)
js
xchg
fadds
dec
jbe
out
push
test
inc
or
ficoms
mov
lock
pop
nop
pop
cmp
or
ret
je
push
fsubrs
stos
and
and
dec
xor
sbb
xchg
and
cs
movsl
incl
in
insb
aad
sbb
mov
inc
popf
int3
xlat
inc
adc
cmpsb
jo
and
dec
shl
or
mov
push
mov
aad
or
ficoml
xchg
dec
cmpb
outsl
push
in
fistl
jecxz
sub
into
mov
cs
nop
mov
sub
int
out
cld
fiaddl
fcom
inc
mov
(bad)
mov
push
enter
orl
jb
adc
sub
jecxz
xchg
pushf
push
cmpb
inc
push
mov
fisubl
mov
pop
or
test
or
push
xor
fucomi
xor
cmp
lahf
adc
pop
(bad)
stos
sbb
add
out
(bad)
lock
adc
and
(bad)
mov
pop
lock
ja
adc
push
ja
xchg
mov
in
clc
adc
movsl
insb
dec
or
into
cvtdq2ps
cmpsl
push
jns
and
aad
hlt
fdivs
stc
pop
lea
mov
movsl
mov
adc
adc
xchg
dec
add
xor
or
push
mov
or
sub
cmp
xor
jbe
mov
inc
mov
dec
pop
mov
sbb
mov
mov
into
jns
shr
lds
xor
push
(bad)
lret
mov
in
dec
push
lahf
cs
sub
sub
push
jg
test
add
mov
dec
adc
or
(bad)
sets
mov
cli
fsubs
test
jb
fwait
sbbl
(bad)
xor
pop
pop
dec
in
pop
or
xchg
xchg
inc
adc
movsl
addr16
add
jg
xlat
js
cmp
lret
rcr
mov
dec
lcall
mov
and
int
push
lea
lret
ljmp
push
jmp
cmp
dec
aam
jno
fwait
xlat
lods
divb
inc
int1
mov
push
sbb
add
aad
push
int3
sbb
mov
xlat
xchg
lock
test
cmp
or
inc
jge
lret
and
(bad)
xor
and
xchg
pop
sub
sub
sub
add
stos
fildll
sti
and
inc
or
test
add
xor
mulb
call
xchg
mov
inc
negb
push
jno
jns
pslld
jbe
xor
ds
jecxz
pop
xchg
xor
(bad)
jb
shr
sub
jno
aaa
mov
test
ret
in
pop
xchg
xchg
rol
mov
(bad)
sbb
mov
idivb
mov
push
test
ja
aaa
shll
mov
pop
pop
gs
adc
push
pop
mov
jbe
insb
cs
cmp
sub
xchg
pop
sbb
dec
fucom
(bad)
inc
mov
push
jbe
xor
sbb
xchg
push
dec
ja
repz
pop
mov
push
das
pop
or
xchg
inc
xorl
mov
fcoms
push
mov
add
adc
cld
in
jg
test
xlat
and
das
fistps
insb
fisttpll
lock
inc
or
jg
jp
hlt
lea
pop
outsb
sbb
xchg
adc
rcll
shl
lret
aam
pop
or
mov
push
cmc
xlat
in
in
out
ss
ret
jecxz
in
mov
insb
lahf
dec
(bad)
push
cwtl
mov
push
lret
ja
gs
adc
jecxz
mov
xlat
repnz
push
test
ds
lods
into
jp
sub
out
rolb
sbb
aad
mov
jmp
data16
adc
cmp
rorb
nop
sub
push
fimull
mov
cmp
push
imul
cmp
xchg
mov
pop
stc
and
inc
movsb
or
sbb
or
and
and
push
repz
or
xor
rolb
xor
cmp
pop
int3
add
pop
or
lret
orl
or
sub
movaps
dec
insb
(bad)
das
callw
dec
outsb
inc
popa
cmp
sysexit
insl
adc
std
jle
lods
rcl
sbbb
push
outsb
cmp
enter
in
mov
dec
scas
int3
adcl
cwtl
or
scas
mov
xchg
jne
mov
les
mov
xchg
xchg
outsb
lcall
mov
sub
sbb
mov
je
(bad)
cs
dec
sbb
or
adc
je,pn
mov
repnz
cmp
push
in
cmpsb
lods
inc
jnp
xchg
loop
(bad)
cmp
aas
sub
arpl
lea
(bad)
in
cwtl
dec
xchg
int
xchg
outsl
jno
fsubr
cld
push
flds
js
mov
lret
push
dec
ret
jl
add
sahf
cmp
jbe
xlat
push
mov
sbb
enter
repz
cmp
mov
test
add
cmpsb
sbb
cmpsb
or
rolb
mov
out
(bad)
je
cmpsb
out
cmp
xor
jg
cmpl
push
pop
lods
movsl
lea
aad
cmc
xor
push
mov
imul
loopne
sub
addr16
insl
int3
(bad)
stos
adc
negb
ds
inc
sub
in
add
inc
arpl
and
cli
jo
sub
(bad)
out
xchg
sbb
dec
shrb
sub
fsts
jns
xchg
jp
in
mov
stc
cs
repnz
repz
enter
cwtl
mov
lea
lret
jle
or
ret
mov
(bad)
mov
scas
jae
sbb
into
out
and
gs
daa
mov
loop
lcall
test
ljmp
pop
repnz
mov
or
test
mov
shl
mov
js
jg
and
and
loopne
aas
mov
push
and
mov
es
mov
dec
ficomps
mov
and
adc
xor
inc
add
mov
lret
int
fists
inc
mov
sbb
mov
