mov
je
add
and
imul
mov
bswap
dec
xchg
xor
mov
neg
push
not
mov
push
imul
call
pop
imul
inc
inc
cmp
jo
mov
sbb
mov
inc
xor
xchg
sub
cmp
jo
mov
push
inc
pop
imul
imul
test
or
inc
mov
test
xor
imul
add
test
xadd
sub
test
sbb
push
add
pop
xor
and
xadd
cmp
sub
lea
inc
movsbl
cmp
jb
movd
inc
bswap
mov
add
mov
movd
test
mov
mov
add
xchg
sub
adc
neg
not
cmp
jne
test
mov
xchg
mov
lea
jo
inc
dec
or
xchg
push
jo
test
pop
not
or
adc
add
jb
mov
imul
test
jb
and
test
inc
xor
test
lea
lea
movzwl
add
jae
not
add
bswap
add
cmp
jbe
mov
xadd
or
inc
jmp
mov
cmp
jb
sbb
jmp
xchg
push
jo
lea
mov
dec
ret
dec
stc
mov
adc
sbbb
jnp
aad
lcall
mov
out
push
rolb
leave
ds
or
cmp
mov
cmp
(bad)
push
sbb
daa
movsb
pop
and
adc
inc
int3
aam
xor
pop
pop
xchg
xchg
add
sbb
inc
dec
mov
push
mov
lds
adc
xchg
cmpsl
test
jg
mov
push
leave
jno
in
mov
cmc
insb
lock
xchg
hlt
arpl
xor
cld
mov
lods
sahf
sbb
in
adc
push
out
(bad)
out
das
lods
adc
inc
xchg
test
adc
popa
xor
jb
daa
popf
aad
mov
(bad)
cwtl
ss
ds
mov
cmp
aad
mov
lea
add
addr16
pop
(bad)
imul
pop
popa
push
cs
sub
imul
jns
inc
inc
or
(bad)
imul
leave
cld
jl
adcb
loop
adc
lock
push
clc
dec
into
pusha
dec
push
mov
(bad)
cwtl
ljmp
pushf
and
dec
push
loop
lock
pop
enter
pop
and
shlb
call
ja
or
loope
sbb
(bad)
and
inc
cmp
cld
jns
cmp
aam
sbb
out
test
movsb
arpl
mov
je
xor
sti
push
fstpl
les
dec
or
sbb
xor
fcom
pop
mov
dec
cmp
push
cmpsb
shll
aam
pop
mov
xchg
int
out
sub
sub
mov
push
shrb
dec
mov
sti
lret
lret
or
xorb
xor
sbb
(bad)
dec
jb
xlat
xchg
fsubs
fucomip
and
daa
mov
sbb
add
rolb
test
mov
outsl
fs
xchg
ja
pushw
cmp
gs
std
movsb
int1
add
dec
mov
mov
xchg
es
aas
fstpt
fnsave
xor
loop
out
int3
cwtl
push
mov
cli
mov
mov
sub
xor
add
dec
lods
mov
push
add
call
mov
pop
xlat
fwait
stos
inc
fucom
and
sbb
dec
jg
rolb
sub
addr16
add
data16
outsb
push
enter
inc
xor
inc
mov
dec
xor
cmp
mov
pop
xlat
(bad)
jnp
push
ja
xchg
data16
xor
sahf
pop
jmp
test
or
addr16
sub
xchg
(bad)
divl
pop
movsl
lods
xor
cmp
mov
enter
dec
ss
pop
movsb
mov
lods
lods
sub
adc
shll
xchg
mov
sbb
cld
xchg
lds
dec
adc
arpl
dec
rcl
add
xor
push
lods
sti
push
ss
int
pop
test
pop
mov
test
cmc
mov
jmp
stos
dec
idivl
xor
sub
pop
fwait
mul
sbb
add
lahf
divb
andl
das
push
adc
push
mov
or
cmpsl
xchg
jge
xor
push
xlat
jbe
aad
dec
mov
call
(bad)
xchg
dec
or
xor
iret
inc
pop
cmp
xor
jae
mov
(bad)
mov
inc
ds
and
mov
popf
decb
test
pop
movsb
fdivs
jle
(bad)
lods
mov
movsl
xlat
jg
movsl
sbb
stc
sub
jge
xlat
sub
int
inc
cmp
push
mov
(bad)
mov
sti
push
imul
adc
es
(bad)
dec
xorl
or
xor
cmp
sti
push
mov
mov
and
or
pop
repz
scas
xchg
(bad)
lret
arpl
jl
outsl
fs
cmpsb
lret
push
out
jo
popf
xor
xchg
cmpl
aas
data16
xor
dec
mov
imul
les
addb
and
pop
scas
jge
daa
xchg
arpl
aaa
sbb
xchg
mov
or
in
push
jno
mov
pop
fists
pop
rorb
adc
loopne
gs
xor
or
sar
fcoml
enter
es
outsb
cmc
std
lahf
aam
jbe
adcl
into
cld
dec
xchg
(bad)
bnd
jp
sub
lock
push
push
cmp
mov
mov
stos
enter
arpl
push
mov
push
sahf
xor
sti
mov
stos
andl
fwait
leave
mov
lcall
(bad)
hlt
push
push
ror
arpl
sub
jl
outsb
mov
mov
clc
das
es
in
int
daa
dec
movsb
dec
lods
mov
jns
adc
test
ret
std
hlt
mov
lret
dec
test
sbb
mov
mov
sub
lahf
jge
call
fmuls
cmc
mov
out
aaa
cli
fldt
mov
scas
xchg
cmpsl
mov
dec
mov
les
ret
jnp
les
xchg
inc
xor
insl
mov
call
mov
scas
sbb
jo
cwtl
stos
fidivl
pusha
cmpsb
push
adc
inc
push
adc
inc
fcomps
xchg
xchg
jp
add
test
mov
lret
jp
mov
sti
adc
into
notb
repz
out
scas
push
shrl
mov
loope
test
shlb
in
fistpl
sbb
pop
bound
in
out
mov
lahf
iret
jle
xchg
lret
out
stc
test
aam
sbb
pushf
xchg
xor
stc
jg
xchg
jp
jno
add
nop
lock
call
stos
dec
lock
xor
adc
cmpsl
insl
adc
es
in
lds
xchg
movl
and
push
cmpsb
mov
and
test
test
push
sbb
mov
das
mov
cmc
adc
into
test
dec
hlt
ds
push
cmpsl
int
pop
add
jbe
dec
mov
ja
lods
or
push
and
pop
push
shl
mov
call
test
xchg
mov
repz
rorl
and
jg
mov
mov
inc
shlb
mov
shrb
fs
dec
gs
test
lock
bound
cmpsl
into
test
fs
pop
sahf
fwait
test
sbb
rorl
ss
pop
pop
sub
rclb
mov
dec
sbb
sbb
cmp
mov
xor
mov
lock
jecxz
popa
cmp
bound
mov
stc
sub
leave
aad
inc
je
jecxz
movsb
scas
(bad)
dec
dec
imul
lods
push
dec
cmp
lcall
xlat
or
ja
jp
leave
inc
mov
mov
lods
shll
add
mov
fsubrs
mov
push
xchg
in
jo
out
pop
and
dec
pop
mov
fildl
popa
les
mov
loopne
sarl
xor
nop
enter
outsl
xlat
lret
sub
fmull
adc
fwait
xchg
dec
hlt
sbb
aam
aad
mov
lcall
ja
xchg
cmp
push
imul
sub
jmp
popf
inc
call
or
es
dec
cmp
and
je
shlb
ds
fdivrl
push
add
int3
inc
xchg
div
outsb
repnz
fisubs
mov
(bad)
xor
mov
push
lds
stc
jle
mull
sub
outsl
int1
jge
