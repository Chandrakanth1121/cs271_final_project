les
inc
dec
mov
popf
mov
sti
lcall
fnsave
push
jo
mov
leave
and
push
bound
and
es
inc
fisttpl
call
jge
inc
fsubs
ljmp
out
mov
pop
add
loope
inc
lahf
push
sbb
cli
xor
adc
lods
sbb
or
cmp
mov
push
mov
pop
sarl
lahf
add
and
xchg
and
adc
mov
test
inc
andb
or
xor
xor
push
lcall
pop
leave
lods
popf
fstpt
dec
arpl
mov
cmpsl
rorb
mov
xchg
pop
push
aas
int3
jb
stos
lret
sub
popf
lret
mov
es
add
cmc
loop
(bad)
sti
add
ljmp
aaa
js
add
sahf
lret
add
xchg
adc
jbe
andl
and
mov
lcall
mov
rcrb
(bad)
rol
pushf
cltd
lods
(bad)
sbb
(bad)
sbb
outsb
lods
fstpl
mov
js
aaa
sub
(bad)
in
scas
jns
fistpl
ret
mov
and
mov
clc
fs
ja
mov
rcrl
ds
xor
xor
mov
loopne
add
cltd
dec
push
mov
les
fwait
in
ret
inc
mov
cmp
(bad)
aad
daa
aad
mov
push
lds
jbe
imul
sub
iret
fmul
aaa
jnp
xchg
andb
or
sbb
mov
cwtl
mov
mov
call
in
cmpl
adc
cs
lcall
sub
jmp
pop
inc
push
and
cmc
mov
in
popa
mov
ret
jbe
jl
mov
push
test
and
and
mov
mov
inc
sti
(bad)
and
mov
pop
and
movsl
adc
stos
sarb
ss
mov
stos
or
lret
xchg
xchg
xor
lcall
in
xor
cli
jbe
punpckldq
arpl
xor
(bad)
sub
xor
push
push
ficoml
aas
dec
or
mov
int3
adc
stos
call
xchg
or
mov
pop
scas
pop
or
or
jl
adc
test
stos
pop
fwait
dec
je
sub
pop
xchg
pop
inc
es
cmc
xlat
mov
push
inc
mov
call
sbb
stos
out
pop
scas
pop
push
sbb
sbb
popa
push
adc
js
stos
out
pop
adc
test
stos
push
push
mov
out
mov
lods
fs
mov
inc
sub
pop
sbbb
sbb
into
sbb
sub
xchg
int
pop
sahf
js
sbb
push
xchg
pop
loopne
in
std
sbb
push
pop
or
xor
loop
adc
xchg
adc
sub
pop
dec
or
subl
stos
in
pop
test
pop
fimuls
dec
loop
dec
inc
(bad)
push
or
mov
cmp
jbe
or
xor
ljmp
and
rcll
push
dec
adc
sub
ljmp
mov
stos
cmp
xor
add
sub
loop
test
gs
cmp
and
cmp
push
aaa
gs
gs
xor
int
js
and
add
or
and
inc
xchg
xor
popa
daa
gs
or
es
imul
sub
cmp
cmpsb
lds
cmp
outsl
jo
mov
int1
or
lods
pop
jge
add
fcomps
add
xor
add
mov
dec
xor
popf
cmpsb
shll
pop
add
mov
and
add
or
lods
pop
jge
add
mull
pusha
push
and
or
push
and
inc
js
and
jo
ljmp
aaa
inc
js
jb
push
loopne
out
jae
movl
aaa
movsb
sti
scas
rorl
scas
xchg
fwait
outsb
inc
dec
sub
mov
cmovbe
out
insb
push
lea
xlat
mov
aad
mov
arpl
mov
out
mov
in
sub
push
pop
fimull
sbb
or
ror
dec
inc
pop
xchg
mov
arpl
adc
nop
sub
stos
sbb
loope
mov
stos
or
xor
adc
scas
lcall
push
xchg
pop
out
mov
not
call
xchg
or
cli
test
or
or
rorb
lds
cmp
adc
xlat
and
shll
add
aaa
sbb
out
pop
mov
push
cmpsb
mov
lret
push
fs
mov
mov
xchg
push
mov
xlat
mov
xor
ja
xor
lock
(bad)
movsl
out
andps
sbb
mov
pop
jmp
(bad)
call
fs
mov
subl
or
(bad)
movsb
adc
aaa
mov
out
int3
loop
outsb
pop
jle
sub
sbb
sub
lcall
cmp
push
mov
push
dec
push
sbb
or
stos
mov
inc
xor
pop
lcall
dec
push
pop
mov
(bad)
push
sbb
pop
outsb
mov
push
data16
outsl
xor
lock
push
pop
push
mov
sbb
outsb
mov
mov
ja
jmp
mov
in
sbb
push
sbb
mov
push
cwtl
adc
popa
push
stc
imulb
add
add
nop
loop
xor
aaa
push
lods
and
xchg
sbb
stc
xor
pop
cld
inc
loope
cld
out
fldt
stc
outsl
lcall
shr
mov
mov
lcall
or
in
push
dec
sbb
mov
push
xor
out
xchg
sub
xchg
jp
test
mov
mov
and
mov
out
mov
fwait
aam
cmpl
mov
out
inc
call
out
andl
and
sub
inc
movsl
sub
mov
jns
xchg
fdivr
int1
stos
out
mov
sbb
pop
insb
and
mov
out
or
out
inc
or
xchg
mov
out
jle
out
mov
out
cmpsl
lods
out
adc
cmp
xchg
mov
xchg
inc
rclb
aaa
lea
pop
sub
mov
xor
fnsave
xor
adc
notb
or
scas
out
int
cmpsb
mov
or
cmp
lahf
jl
push
xor
imul
(bad)
jecxz
popf
sbb
mov
jno
cmp
jnp
add
cmp
push
xor
mov
pop
sub
out
and
aam
div
dec
inc
in
mov
push
or
outsb
or
xor
out
fistl
mov
lea
not
ja
push
mov
jno
jg
scas
add
pop
bound
call
or
sti
lea
(bad)
xlat
enter
push
mov
out
jbe
iret
jle
out
mov
jecxz
nop
or
orl
xchg
sub
imul
and
call
fstpl
fsts
xchg
lcall
sbb
mov
mov
insb
jle
outsb
push
jmp
jecxz
push
test
addr16
mov
out
lds
je
notb
pusha
fistps
sub
or
inc
shrb
mul
xchg
ja
mov
movsl
leave
push
pop
or
fcomip
push
mov
(bad)
call
scas
lds
cmp
mov
sti
pop
adc
pop
adc
pop
adc
pop
adc
pop
adc
pop
adc
pop
or
pop
dec
mov
mov
add
out
push
out
cmp
push
xor
stc
add
or
sahf
js
lea
cwtl
inc
or
or
fnsave
loope
or
pop
filds
push
addb
addb
pop
sbb
mov
or
pop
out
add
test
pop
lcall
lcall
fstps
mov
mov
adc
out
adcl
(bad)
push
fnstsw
das
add
aaa
xor
mov
mov
push
or
jge
popf
mov
in
cmp
adc
lcall
sub
sti
pop
jno
fistps
setle
inc
leave
and
in
in
fidivrl
push
pop
cmp
mov
cmp
lea
jg
sbb
jno
fucom
mov
sub
in
sub
mov
pop
(bad)
lock
(bad)
pop
xchg
lock
ja
loope
or
loope
or
std
hlt
push
xchg
xor
movsb
std
add
mov
jg
rclb
popa
mov
mov
cmp
inc
inc
inc
pop
sub
jg
inc
xchg
add
popa
mov
out
iret
