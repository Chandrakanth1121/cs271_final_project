loopne
pop
mov
add
push
push
add
and
mov
bound
stc
mov
ret
int3
mov
adc
in
cs
xor
daa
in
cmp
and
and
imul
dec
inc
cmp
and
push
dec
cmp
insb
insb
cmp
xor
jns
xor
jb
inc
push
inc
outsb
jb
(bad)
(bad)
decl
cmp
push
jne
push
insl
push
das
imul
cmp
xor
push
xor
incl
sub
push
push
jns
push
push
outsb
inc
push
ss
add
xor
or
(bad)
lcall
fcomip
(bad)
fbld
adc
add
popa
or
sub
call
and
push
sbb
inc
and
mov
or
mov
add
add
cmpb
add
ret
adc
jg
xchg
add
(bad)
lcall
pop
and
mov
jmp
mov
mov
test
je
(bad)
lcall
(bad)
shr
add
mov
jge
xor
xor
mov
jmp
cmp
ja
push
jo
cmp
jb
lea
mov
xchg
neg
push
sar
idiv
lcall
and
add
cmp
jl
cmpl
jne
xor
xchg
xor
jg
dec
and
mov
test
jl
ret
adc
cmpb
mov
cld
mov
sbb
insb
in
inc
std
pop
and
lea
lea
clc
inc
in
cmp
sti
inc
fidivrs
xor
rorb
and
lea
and
mov
add
cmpw
jne
sbb
sbb
add
pop
mov
jne
lea
cmpb
dec
xor
sete
or
pop
jne
ds
insb
jne
mov
pop
inc
cmp
xchg
add
jle
mov
cwtl
loope
jbe
mov
sbb
mov
add
lea
push
(bad)
push
adc
enter
sub
xor
in
ja
push
mov
and
leave
add
sbb
inc
frstor
mov
add
pusha
sbb
push
cmp
mov
nop
xchg
dec
outsb
mov
mov
and
mov
rclb
cmp
jge
stc
mov
or
enter
mov
decl
rclb
je
xor
sbb
rol
sub
add
xchg
frstor
sbb
and
jns
repz
sbb
add
dec
adc
push
xor
cli
jae
js
sahf
add
outsl
push
sbb
ret
movsb
sub
orb
xchg
fnsave
cmp
mov
push
lock
rcl
movsb
cmp
jg
scas
xor
mov
shl
dec
pop
push
cmp
cmp
jne
movsl
rorl
cmp
xor
fsts
fs
pop
in
mov
insb
adc
adc
mov
xchg
lcall
outsb
mov
std
ja
and
inc
sub
inc
cmp
push
(bad)
jbe
xchg
lcall
sbb
stos
inc
(bad)
push
(bad)
sti
fldl
lods
push
push
mov
mov
or
add
or
cmp
jge
mov
addb
jae
(bad)
xor
adc
add
(bad)
jb
jmp
jns
addr16
lock
int1
or
in
mov
add
rcll
or
ret
sarl
rorb
jmp
das
add
push
jo
divl
xchg
and
pusha
jecxz
cmpsl
add
add
imul
adc
sbb
and
xor
xlat
push
push
push
adc
and
push
xor
jb
sub
or
sub
out
sahf
insb
inc
push
inc
xchg
sub
push
push
xor
sub
add
adc
mov
aad
cmp
or
repz
push
je
or
push
sbb
sahf
jecxz
push
enter
jb
add
cmpsl
jmp
add
lret
jae
mov
repz
push
adc
add
or
add
xchg
(bad)
inc
cmp
xchg
add
mov
scas
mov
jl
sub
std
rclb
mov
jbe
out
shl
scas
or
data16
lock
or
(bad)
jp
cmp
lea
je
adc
out
inc
push
push
sbb
dec
out
sahf
out
dec
xor
(bad)
jns
inc
inc
cmp
test
jne
lea
in
orl
dec
fisttpll
add
sub
out
sbb
pushf
cmp
sbb
sbb
sbb
mov
aas
into
adcb
sub
out
pop
pop
es
popf
andl
mov
sub
cmp
out
imul
cs
outsb
mov
fs
xor
outsb
xor
cmp
xor
gs
xor
cs
xchg
jae
cs
jmp
mov
scas
mov
or
inc
enter
je
and
cmpsl
lahf
jb
inc
xor
lock
cmp
jb
push
xor
xor
jb
and
orb
sub
and
jns
sbb
and
repnz
cmp
and
nop
iret
call
xor
nop
mov
and
add
inc
mov
cwtl
cmp
cwtl
pop
push
xor
ret
add
mov
out
daa
adc
and
add
push
mov
xchg
sub
jb
add
or
mov
addb
and
xchg
negl
mov
test
fbstp
mov
sub
xor
xchg
shrl
int
test
or
loop
repz
lcall
sbb
test
fistps
data16
xchg
mov
jp
rorb
stos
lahf
test
xchg
xchg
movntps
xor
dec
sub
incb
outsl
test
sub
shlb
daa
sub
jne
xor
jmp
pop
or
inc
rorl
test
cmp
adc
sub
stc
jns
mov
xor
sbb
push
mov
or
ret
dec
rclb
sbb
and
rcrl
and
dec
inc
push
out
and
push
push
addl
add
les
mov
add
or
int3
jge
sub
xchg
push
add
mov
sbb
pop
rcrb
adc
sbb
mov
xgetbv
(bad)
sub
aam
lods
sub
xor
push
sub
(bad)
dec
int1
pop
sbbb
mov
jne
mov
cmp
mov
push
dec
sub
and
or
jge
jne
mov
mov
movsb
inc
or
fimull
xchg
adc
sbb
int
push
mov
and
mov
add
imul
shl
adc
xor
mov
add
or
dec
enter
(bad)
ds
pusha
insb
adc
add
sbb
cmp
or
sub
sbb
mov
sbbl
lcall
adc
(bad)
fcoms
les
(bad)
loope
push
pushf
pop
push
bound
mov
pop
and
(bad)
iret
jl
(bad)
(bad)
and
adc
xor
data16
dec
lret
(bad)
jns
movsb
out
dec
or
cmpxchg
psubq
adcl
pop
push
jb
pop
adc
enter
int3
adc
jbe
pop
pop
aas
adc
sbb
adc
es
(bad)
add
mov
or
adc
adc
dec
add
inc
pop
lods
rcr
popa
aas
mov
cmp
add
enter
push
int1
cmp
je
inc
enter
(bad)
add
mov
add
adc
jmp
int1
aas
ret
mov
xchg
mov
int3
mov
and
pop
jns
mov
fcmove
iret
stc
xchg
into
push
mov
mov
pop
or
in
mov
fildll
jg
emms
ret
push
mov
sarl
jg
ja
rol
jne
sti
lahf
mov
in
loope
or
pop
and
mov
lahf
pop
or
adc
and
lahf
pop
fwait
insl
mov
cmp
lcall
adc
dec
cltd
leave
loope
enter
enter
sub
mov
fidivrs
ja
negl
or
subl
pop
jne
mov
repnz
add
inc
cmp
push
mov
sbb
add
pop
int1
int1
lock
cmp
sub
leave
jmp
lea
hlt
jbe
jno
imul
lock
or
(bad)
push
lock
(bad)
clc
int
pop
ja
add
cmpsl
repz
xor
add
rolb
and
repnz
(bad)
jmp
xor
mov
incl
std
hlt
lods
add
lea
or
testb
cmp
sbb
mull
stc
jle
cmp
ja
aad
les
mov
sbb
cmp
jne
insb
subb
mov
push
push
fisubl
out
mov
mov
lods
add
fldcw
ret
dec
adc
(bad)
insb
mov
imul
mov
int
mov
