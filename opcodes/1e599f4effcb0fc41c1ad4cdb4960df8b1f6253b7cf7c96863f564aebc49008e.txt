shrb
bound
cmp
lea
aad
dec
pop
dec
js
sbb
jge
push
cmp
dec
(bad)
jns
xor
pop
mov
pop
les
pusha
jno
mov
add
pop
push
or
dec
adc
add
dec
loopne
xchg
xor
outsl
mov
push
(bad)
clc
cmp
sbb
inc
insb
or
pop
add
jp
sub
scas
sbb
pop
test
jp
adc
fcoml
daa
jle
imull
sub
popa
scas
dec
ja
xchg
pop
dec
arpl
adc
pop
cmp
std
and
mov
nop
daa
arpl
xor
sbb
int3
pop
mov
push
daa
and
pop
pop
sbbl
outsb
xor
push
pusha
add
adc
in
fisttpl
xor
fdivs
repz
mov
push
mov
push
pop
dec
ds
jmp
inc
bswap
xor
test
add
jmp
mov
cmp
test
mov
cmp
jmp
inc
cmp
clc
neg
add
stc
rol
test
cmc
clc
xor
stc
add
jmp
jmp
dec
stc
rol
clc
jmp
inc
mov
inc
xadd
inc
seto
inc
mov
inc
or
inc
mov
inc
bt
inc
bts
dec
sub
shrd
dec
movzwl
inc
setp
inc
mov
inc
movswl
pushf
inc
cmp
inc
pop
dec
movswl
dec
sub
inc
mov
xor
inc
rol
jmp
inc
clc
stc
bswap
neg
not
jmp
inc
xor
add
jmp
test
xor
sub
clc
ror
cmp
cmp
xor
rol
stc
bswap
not
ror
not
xor
add
jmp
stc
xor
cmp
cmc
add
jmp
sbb
xor
leave
insl
lock
inc
ja
xor
shll
popa
shr
add
cmpsb
and
sti
decl
adc
(bad)
roll
push
dec
lods
test
aad
outsl
sti
inc
inc
movsl
lea
sub
push
int3
or
fwait
scas
repnz
cmp
jo
nop
bound
cmp
sub
cltd
jl
loop
js
out
xchg
push
xor
pop
push
xor
(bad)
fnstsw
xor
ds
shlb
mov
dec
push
jb
repnz
mulb
loope
aam
dec
imul
jae
cltd
(bad)
pop
divb
mov
inc
or
dec
xor
xlat
cmp
push
cmpl
jo
jge
jp
cmp
or
cmc
sti
orb
fwait
cmp
xor
das
cli
stos
inc
cmp
and
push
mov
in
jmp
inc
not
bswap
jmp
inc
jmp
inc
cmp
inc
test
jmp
inc
inc
test
push
inc
movsbl
mov
btc
xor
shl
neg
sbb
pop
inc
test
cmc
dec
arpl
dec
add
jmp
cmp
mov
or
sub
sar
movzwl
stc
mov
stc
xor
jmp
btr
movzbl
cmp
test
xor
clc
cmc
and
cmp
mov
clc
cmp
shr
xor
jmp
rol
test
not
xor
jmp
bswap
jmp
stc
bswap
jmp
clc
mov
cmp
shr
shl
sub
mov
cmp
jmp
sbb
sub
sub
sbb
or
rorb
negl
gs
cmc
push
xchg
stc
or
js
repnz
sbb
in
sbb
(bad)
fisttpll
sub
xchg
xlat
into
(bad)
cld
idivb
mov
and
lock
cmp
add
mov
push
xchg
in
or
adc
cmp
repz
dec
bnd
scas
dec
push
xchg
jl
dec
movsl
xor
ss
insl
push
cmc
int
add
push
lcall
arpl
jno
add
push
out
xchg
jg
rcll
addl
or
repz
insl
subb
or
divl
aam
mov
sbb
jbe
add
(bad)
js
aas
aaa
mov
cld
into
jle
lock
addl
(bad)
cmp
jg
and
jg
scas
adc
xorb
sbb
dec
cmp
add
stos
shll
lret
add
sbb
push
outsl
push
jne
psllw
cltd
cli
mov
fstl
repz
jae
or
rcll
imul
pop
and
dec
xor
loop
add
xor
sub
loopne
jl
dec
out
imul
jg
hlt
or
imul
mov
call
xchg
call
mov
test
jmp
std
sbb
inc
jle,pt
inc
mov
pop
push
xlat
jle
mov
jns
pusha
dec
ret
dec
xorb
jg
(bad)
insb
mov
xchg
jg
aam
dec
subb
xor
push
sbb
mov
ljmp
adcl
jg
push
cmp
ljmp
insb
or
push
sbb
movl
in
cmp
xor
adc
int
mov
fbstp
jmp
pop
mov
mov
xor
inc
sub
inc
popa
and
out
(bad)
shrl
lds
dec
outsb
neg
and
mov
jne
ds
sbb
xor
mov
fnstenv
ret
movsl
mov
pop
xor
shl
enter
and
mov
testl
std
sahf
and
jb
cmpsl
mov
mov
popa
dec
or
jnp
pop
push
test
sub
aaa
mov
into
mov
mov
(bad)
add
ja
cmpsl
int
(bad)
mov
out
adc
dec
dec
lds
inc
aas
mov
ss
div
dec
dec
(bad)
out
stc
call
cmp
jmp
adc
cmp
and
mov
pop
push
lret
cmp
adc
je
out
fs
inc
sbb
stos
stos
mov
xor
sub
xchg
int3
fbstp
ret
pop
pop
fs
iret
movsl
stos
insb
mov
fbld
cmpsb
dec
ds
movsl
mov
inc
push
test
mov
xchg
xor
test
insl
push
push
orl
out
mov
enter
movl
jp
mov
xor
int3
dec
pushf
rcrl
adc
int1
test
lret
or
mov
mov
sub
dec
cli
mov
cltd
aam
adc
cmpl
div
popf
popa
mulb
pop
imul
sbb
nop
pop
push
stos
lahf
insl
lret
test
inc
xchg
scas
adc
push
jp
fst
roll
in
shrl
insb
mov
fisttpl
cmc
stc
loope
aam
mov
int
jo
fs
shlb
call
sub
imul
xor
lds
add
xor
lret
mov
or
cmp
mov
shl
lods
pop
sar
cmpsb
xor
leave
test
nop
mov
jmp
xchg
incl
mov
push
imulb
pop
dec
add
pop
cmpsl
jg
xor
jg
sbb
outsl
cmpsl
aaa
add
mov
cmpb
sub
sahf
pop
adcb
movsl
dec
test
mov
insl
int3
repz
orb
js
add
push
bound
jle
into
adc
fwait
push
orb
(bad)
lret
sbb
lret
jmp
add
dec
gs
jbe
inc
jb
je
arpl
push
arpl
outsb
add
lret
clc
ror
clc
cmp
xor
test
neg
test
stc
clc
xor
test
cmp
stc
xor
test
add
jmp
ret
test
xor
add
jmp
dec
xor
jmp
jmp
rol
not
cmc
jmp
mov
mov
shl
mov
lahf
btc
bsr
lea
sbb
mov
and
lea
dec
mov
mov
clc
xor
neg
stc
test
xor
bswap
neg
jmp
xor
cmc
jmp
movzbw
test
mov
test
lea
cmp
shr
mov
pushf
movswl
sets
pop
bt
or
jmp
dec
bswap
neg
test
stc
cmp
sub
ror
clc
cmp
xor
jmp
pop
cmp
pop
bts
sbb
shl
popf
xchg
cbtw
pop
setne
movswl
cmovle
pop
jmp
add
jmp
not
jmp
add
inc
gs
jne
dec
outsb
jne
bswap
jmp
sub
clc
shr
mov
movzwl
pushf
pop
cltd
cwtd
sub
xchg
mov
xor
cmc
clc
stc
rol
jmp
inc
jmp
stc
xor
dec
jmp
xor
jmp
