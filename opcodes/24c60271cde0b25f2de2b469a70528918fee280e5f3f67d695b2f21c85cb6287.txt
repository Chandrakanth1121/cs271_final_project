mov
cwtl
inc
jne
imul
leave
add
pop
xchg
xor
repnz
(bad)
pop
dec
adc
nop
push
daa
shlb
rcrb
aam
lods
aam
mov
and
sbb
xchg
xlat
nop
scas
clc
sub
sub
push
xlat
pop
cmp
push
rcr
lahf
lds
test
adc
mov
lret
xorl
xchg
push
adc
adc
pop
nop
fldenv
pop
add
lea
loope
xchg
adcb
inc
aas
xor
mov
aam
xchg
add
call
sahf
leave
push
xlat
sbb
cwtl
repz
rolb
xor
fdivl
insb
fwait
ja
mov
xchg
outsb
ds
xor
aad
sti
add
aad
inc
loopne
imul
pop
lods
sub
imul
cmp
inc
push
add
adc
mov
lret
cwtl
je
mov
add
inc
int3
mov
jnp
movl
enter
(bad)
in
adc
loopne
sbb
mov
sahf
dec
pop
mov
ret
cld
dec
and
sti
sbb
lds
xor
into
inc
test
js
enter
cmc
ss
mov
push
leave
sbb
leave
loopne
int
testl
push
jae
push
push
sub
mov
dec
testl
pop
xchg
pop
fwait
pusha
xchg
ret
nop
mov
push
xchg
mov
(bad)
loope
and
push
push
call
sbb
rcr
xchg
dec
(bad)
and
cmp
inc
mov
repnz
test
pop
xchg
add
pop
push
leave
xchg
jnp
shlb
xlat
rclb
(bad)
(bad)
sbb
and
cmp
inc
pop
fcoml
std
adc
push
popa
imul
test
inc
push
jne
in
mov
or
test
adc
mov
push
mov
(bad)
push
push
mov
inc
out
mov
add
sti
push
dec
pop
lret
roll
rclb
dec
xor
andps
cli
test
xabort
sbb
inc
jmp
stc
in
cmp
lea
xchg
jae
jns
popa
dec
xor
daa
push
push
cmp
imul
mov
or
inc
inc
mov
imul
xchg
lret
cld
add
clc
mov
inc
repz
movsl
inc
out
sbb
lret
lret
bound
push
dec
xchg
je
test
aad
adc
and
(bad)
arpl
movsb
jb
addr16
sbb
jg
push
ret
movsl
and
inc
gs
mov
pop
aad
jecxz
into
add
add
dec
dec
pop
xlat
loop
add
adc
les
loop
cld
lods
inc
sahf
and
xchg
xchg
popa
add
scas
imul
cmpsb
bound
imul
movl
les
xchg
and
rol
mov
pusha
mov
mov
in
xlat
das
in
push
(bad)
sub
mov
ja
loope
faddl
inc
incl
(bad)
inc
jno
push
or
(bad)
lahf
jg
(bad)
cmc
pop
push
xchg
outsb
and
add
sub
adc
jle
mov
insb
dec
(bad)
mov
or
pushf
pop
cs
js
and
stc
inc
sti
pop
adc
mov
mov
mov
(bad)
(bad)
stos
mov
cmp
mov
ja
push
into
(bad)
xor
das
filds
dec
inc
or
adc
aad
and
inc
push
scas
add
sbb
push
xor
jp
and
scas
xchg
daa
les
add
in
add
scas
and
mov
(bad)
popf
mov
pop
lock
popa
out
sbb
outsl
jmp
cwtl
addr16
enter
jmp
cs
hlt
cmp
jne
(bad)
adc
pop
ja
jo
imul
sub
jecxz
jno
addr16
mov
subl
cld
in
jo
mov
mov
pop
mov
mov
rorb
pop
push
dec
sbb
out
fdivrp
es
cmc
in
inc
add
dec
and
add
out
cld
cmp
pop
sahf
xchg
je
negb
out
repz
xchg
dec
mov
or
cwtl
xchg
cmp
cmpsl
add
xlat
and
xorl
xchg
ljmp
scas
leave
mov
mov
inc
inc
jg
test
movsb
mov
insb
repnz
arpl
jae
test
ficoms
sub
xlat
es
mov
add
test
mov
adc
push
jns
inc
jl
notb
ret
cmpsb
adc
sbb
pop
subl
aas
data16
ret
sbb
popa
lcall
push
pop
imul
adc
adc
mov
mov
or
pop
not
in
push
jno
or
sbb
in
ds
cld
and
mov
cmc
mov
pop
sub
lret
push
mov
popa
mov
inc
and
stc
or
loope
sub
lret
scas
inc
push
vmwrite
sbb
push
cmp
mov
ds
lods
mov
repz
and
lcall
pushf
out
push
loope
pop
and
mov
lcall
loop
fwait
and
xchg
(bad)
imul
inc
mov
push
out
and
add
hlt
mov
sbb
int1
adc
cltd
inc
fmul
or
sbbl
(bad)
hlt
mov
pusha
jbe
ljmp
(bad)
push
mov
adc
inc
lret
lock
(bad)
pusha
add
push
frstor
(bad)
negb
out
je
scas
jnp
sti
mov
adc
mov
fs
jmp
pusha
push
addr16
pop
scas
or
mov
and
jae
lods
or
out
push
jnp
adc
sub
sbb
xchg
push
repz
jl
outsb
add
or
add
xchg
xor
sub
stc
xlat
push
push
lock
ror
push
or
fimull
cld
lods
aad
dec
imul
jnp
pop
jo
scas
sahf
fistps
push
mov
inc
dec
jbe
sbb
dec
xchg
inc
xor
lret
cmp
pop
imul
xchg
shll
push
dec
sub
inc
xchg
lret
sbb
pop
lock
adcl
sbb
loop
and
mov
push
pushf
and
fwait
mov
sbb
and
fld
int3
mov
cwtl
or
popa
pop
jnp
lea
mov
adc
dec
inc
stos
aas
inc
lods
add
lds
add
dec
into
sbbl
mov
bound
pop
sub
ljmp
lods
push
xchg
call
sbb
sub
in
adc
pop
jp
xor
cmp
dec
lret
push
or
into
loopne
inc
jp
xchg
xchg
push
adc
pop
mov
lret
call
add
nop
scas
push
(bad)
dec
xor
in
adc
fisttpll
xchg
push
sbbl
mov
cmp
pusha
adc
adc
push
add
testl
xchg
fisubrs
or
sub
pop
jo
pop
push
out
lds
sub
pop
ret
xchg
pusha
push
xor
mov
ret
outsl
pop
cltd
sub
add
adc
test
stos
out
lock
inc
or
mov
lods
mov
mov
push
cli
pop
mov
xor
sub
cmp
pop
push
adc
and
cs
add
cltd
pop
pushaw
sti
roll
sub
sub
(bad)
and
in
pop
fcomps
das
test
in
mov
int1
ret
xor
scas
add
xor
xchg
push
in
push
cmc
out
adc
fs
lods
push
pop
or
mov
mov
das
(bad)
sub
or
in
pop
cwtl
sub
mov
clc
pop
fst
in
add
cmp
nop
hlt
pop
jnp
(bad)
sbb
nop
pop
test
mov
lods
ja
rclb
jmp
popf
or
loopne
adc
pop
xor
jp
xchg
ja
repnz
pop
mov
jmp
js
mov
jns
mov
adc
xor
xchg
(bad)
pop
(bad)
xchg
mov
popa
xchg
outsl
cmp
cmpsb
sarb
xchg
sahf
cmc
adc
pusha
imul
adc
dec
test
xchg
mov
cmc
cmp
inc
sahf
push
(bad)
fwait
jne
movsl
pop
dec
jmp
aaa
ficomps
divl
add
test
inc
stc
pop
pop
cmp
popf
or
aam
rcrl
outsl
