jbe
jb
cmp
into
mov
and
push
sub
xor
test
push
push
mov
pop
cmp
in
(bad)
push
xorl
xchg
mov
aam
pop
jnp
pushf
mov
jae
jo
in
or
iret
imul
xor
lds
jb
xchg
mov
adcl
mov
shlb
sbb
or
lret
mov
xorl
mov
insb
mov
jge
ja
sbb
xchg
into
aad
mov
jecxz
idiv
xchg
jns
push
lods
aaa
jge
out
fidivrs
movsl
inc
pop
push
insb
aam
fnstcw
jno
adc
ljmp
loope
leave
mov
cmp
sbb
lods
push
mov
call
fisttpll
es
add
jge
shr
adc
cmp
bound
pop
pusha
repnz
and
or
in
push
ljmp
(bad)
in
jle
(bad)
mov
mov
add
gs
xor
cltd
out
aaa
bound
sbb
enter
outsb
sahf
dec
xor
in
jnp
(bad)
lret
cmp
adc
repz
jbe
sbb
add
cli
add
push
fsts
mov
test
cmpb
in
inc
jmp
mov
fimuls
in
imul
mov
fs
pop
aaa
dec
add
sahf
adc
mov
clc
(bad)
jge
and
add
popa
outsw
cmp
insb
sub
data16
mov
sarl
push
int1
push
aaa
fs
aas
sbb
mov
test
in
jmp
shll
xlat
inc
mov
or
lcall
push
sub
inc
stos
mov
mov
jmp
lock
xchg
ret
cld
xchg
mov
(bad)
push
(bad)
out
add
jmp
or
mov
shrb
popa
int1
push
lods
mov
imul
lods
addb
das
aaa
xor
loopne
hlt
pop
sti
imul
addr16
adc
imul
mov
aas
fisubs
inc
int
hlt
xchg
or
cmpsb
std
inc
in
popf
js
dec
sub
fyl2x
popa
mov
cmc
cmp
out
mov
pusha
into
ret
ret
pop
repnz
add
mov
out
inc
lcall
call
jne
sub
test
inc
mov
out
inc
cs
mov
adc
push
pop
leave
les
or
mov
inc
add
jmp
adc
jns
adc
sub
notb
call
pop
dec
std
add
sbb
ret
pop
jo
idivb
arpl
mov
mov
sub
mov
in
stos
loopne
cmp
cmp
ror
mov
sbb
fnsave
push
lret
scas
xor
mov
inc
pushf
pusha
or
clc
mov
xchg
sub
into
sub
jmp
and
test
and
and
push
das
out
shrl
in
xlat
mov
inc
in
rcrb
lea
mov
mov
ret
sbb
sbb
mov
mov
repz
rolb
mov
arpl
fisubrl
addb
or
shrb
add
mov
xlat
dec
jne
rcrl
jmp
aad
test
stos
add
cs
push
rclb
pop
repz
xor
mov
les
xor
aam
les
mov
ds
in
jmp
jnp
in
fcoml
clc
push
xor
mov
push
sub
int1
negb
loop
mov
jne
fimull
mov
or
ja,pn
pop
lcall
scas
jne
arpl
pop
nop
out
mov
jp
int1
jl
leave
bound
xor
jmp
dec
stos
or
mov
into
adc
push
pop
mov
mov
fwait
sub
pop
out
or
scas
mov
ljmp
xor
fists
lock
add
mov
orb
xor
(bad)
outsl
iret
roll
mov
ret
leave
dec
xchg
andl
mov
push
dec
dec
sbb
(bad)
jp
outsl
jo
sbb
pop
push
mov
mov
scas
rcll
std
popa
in
sbb
test
cwtl
jge
and
sbb
test
pop
jmp
jae
outsl
or
push
fisubl
das
repnz
mov
insb
ljmp
or
in
aas
push
fldt
cwtl
stos
pop
add
orl
lahf
pop
push
sbb
push
cmpsl
pmovmskb
xlat
add
rclb
insb
test
in
jg
and
inc
cmp
sbb
js
outsb
in
sti
inc
fcoms
or
loopne
or
mov
es
shrb
xor
push
add
inc
ret
push
rclb
lea
xor
je
aad
pusha
ret
int
mov
test
ret
sarb
psubsw
mov
subl
aas
out
ds
out
mov
adc
pop
gs
mov
xor
mov
imul
(bad)
out
jmp
mov
push
or
aaa
loopne
adc
pop
sub
mov
push
push
fldenv
inc
fisubl
sbb
mov
out
repz
pop
ret
scas
cltd
xor
dec
les
mov
je
testl
pop
jnp
pushf
(bad)
mov
mov
adc
push
pop
jnp
mov
loopne
cmp
shrb
lahf
cmp
ret
inc
cwtl
add
roll
dec
dec
int3
cmpb
or
fbstp
mov
insb
ds
jge
(bad)
jmp
xchg
lahf
loopne
cmc
lret
les
xor
(bad)
ljmp
adc
clc
sbb
nop
loopne
cli
cltd
xlat
xor
mov
(bad)
loope,pn
push
mov
fwait
leave
jne
cmc
incb
fsubrs
daa
ret
xchg
shl
sub
lds
call
nop
addps
add
cli
in
sub
dec
jle,pn
(bad)
movsb
shrb
jmp
push
or
push
or
imulb
stc
daa
insb
push
bound
xor
jns
or
mov
pop
(bad)
mov
imul
jmp
aad
repz
cli
xchg
scas
fsubr
leave
movsl
mov
aam
xchg
pop
push
(bad)
mov
(bad)
repz
sti
ror
xchg
pop
addb
pushf
in
ljmp
sbb
sbb
cltd
call
shrl
outsl
aas
cmp
pop
aam
sub
mov
rorb
mov
gs
mov
iret
arpl
mov
rolb
pop
xlat
data16
lock
adc
dec
mov
dec
jl
mov
push
ret
mov
subl
out
inc
pop
inc
call
bndldx
pushf
adc
movsb
mov
rolb
imul
xor
out
add
outsl
fisubrl
and
sahf
ret
xchg
pop
mov
jo
jnp
xor
repz
cmp
cmp
adc
pop
in
movsl
and
(bad)
jg
sti
pop
pop
sub
es
movsl
iret
shl
add
sub
insl
sarl
xchg
mov
das
adcl
lock
push
add
push
jge
shll
aaa
jle
mov
in
cs
push
cmp
gs
orb
fwait
jae
inc
and
cmc
js
int
aam
add
cltd
enter
sub
push
arpl
or
std
aad
ss
mov
dec
lret
(bad)
clc
js
pop
jne
pusha
shr
xor
ret
jmp
std
cli
and
pop
(bad)
(bad)
cmp
mov
mov
dec
lods
mov
lcall
jge
push
lret
or
aad
mov
int3
aas
(bad)
scas
les
divb
ds
mov
mov
sub
loope
or
jb
xchg
mov
push
dec
das
test
cli
leave
and
ret
fadd
sarl
int3
aas
rolb
popf
adc
popf
mov
fdivrl
repz
adc
inc
ljmp
add
sbb
(bad)
fwait
jge
xlat
addr16
dec
ds
jg
aam
rcrb
sub
xchg
int3
rorl
(bad)
sbb
je
mov
js
enter
(bad)
bound
sbb
xor
push
pop
xchg
sub
rcrl
inc
mov
push
repz
jns
jmp
inc
dec
bound
mov
push
xchg
lret
daa
and
mov
sub
cmp
push
bswap
out
popf
repz
cmc
rolb
fstps
mov
mov
lahf
lods
ss
sahf
arpl
(bad)
xor
in
enter
pop
out
mov
in
test
leave
leave
sbb
fcoml
(bad)
jp
mov
sbb
into
mov
add
out
cmp
push
mov
lds
out
pop
xchg
and
std
mov
rorb
mov
inc
