xor
and
inc
pop
(bad)
dec
ficoml
dec
inc
pop
call
or
xchg
or
pop
sbb
es
push
pop
xor
push
sbbl
popa
mov
int3
es
sahf
faddl
loop
sbb
in
shl
push
push
or
call
ss
test
(bad)
and
(bad)
dec
(bad)
pushf
jmp
(bad)
lods
dec
or
(bad)
lock
xorl
mov
add
lods
lahf
adcl
push
fsubrp
adc
(bad)
not
cs
test
sbb
out
jp
add
mov
out
xchg
or
jo
pusha
inc
and
in
cmp
fnstsw
orb
(bad)
and
push
fiadds
jl
fs
popa
inc
inc
jle
pusha
test
sub
rcrl
inc
sub
lret
out
loop
cmp
inc
fcmovnu
aaa
les
or
push
and
sahf
rep
es
pusha
in
subl
mov
xlat
or
push
arpl
xor
(bad)
dec
pusha
out
cmc
cmp
sub
xchg
ret
and
aam
clc
jecxz
adc
out
ljmp
loop
repnz
gs
adc
shl
popa
lret
mov
loopne
inc
in
sahf
(bad)
push
mov
dec
pop
sub
ds
mov
orl
push
jbe
mov
mov
inc
pop
fstpl
cmp
jle
in
(bad)
mov
(bad)
lahf
dec
es
sbb
call
ret
mov
imul
out
adc
les
lods
push
cmp
xchg
outsb
jns
add
in
repz
xchg
rcrl
shlb
mov
js
jp
dec
mov
int1
mov
(bad)
es
mov
or
pop
jbe
outsb
stos
call
cli
dec
and
rcl
sub
imul
sbb
pop
shlb
jns
in
or
imul
js
popf
out
pop
das
xchg
movsl
cmpb
mov
fisubs
dec
leave
imul
fsubrl
xchg
rcrl
fsubrp
pop
std
fisubrl
or
push
mov
adc
lds
fnstsw
pop
popa
xor
mov
in
out
cld
and
mov
in
cld
pop
and
mov
lahf
lcall
cwtl
push
push
adc
(bad)
sub
in
pop
inc
cld
cmp
cmpsl
orl
cmp
xchg
jno
fsts
insb
xchg
stos
mov
jp
daa
addr16
in
adc
add
pusha
pop
and
pop
outsb
xor
pop
iret
sub
push
sbb
mov
cmpsl
jne
mov
pop
addr16
iret
das
mov
fucomi
scas
dec
cmp
ja
or
or
fs
insl
adc
jp
adcl
testb
aam
iret
xor
xchg
pop
loop
fs
cmpsb
stos
popf
push
sbb
loope
ss
cmp
and
fbld
out
lods
outsb
adc
mov
xor
lods
movsl
(bad)
lock
cmpsb
or
mov
sbb
loopne
leave
int3
fstps
xlat
out
or
loop
cmpsb
sbb
in
mov
sahf
daa
jns
pusha
les
mov
(bad)
cmp
cmp
mov
movsb
(bad)
cmpsb
fsubs
push
xlat
mov
popf
pusha
mov
lahf
or
insl
pop
(bad)
nop
mov
loopne
pusha
and
ret
inc
es
insl
inc
arpl
sub
or
lahf
sbb
movsb
jge
inc
(bad)
xorb
sub
and
mov
mul
push
push
ja
daa
stos
sbb
shlb
lahf
test
pusha
mov
push
lret
mov
lahf
lods
lcall
push
fwait
sbb
out
push
add
movsl
cmpsl
cmp
mov
leave
repnz
and
cmp
mov
lret
adc
(bad)
fbstp
cmpsl
and
cmpsb
inc
repz
mov
and
xor
enter
stos
insb
cmp
pop
push
sub
xchg
pop
out
mov
ss
ljmp
pusha
hlt
fnstcw
leave
xchg
imul
pop
lods
mov
imul
ret
push
xchg
in
push
push
mov
mov
popf
je
and
ret
pop
lret
inc
dec
or
xor
jbe
push
sub
sbb
mov
fwait
mov
andb
lea
cmpsb
int3
int3
scas
movsb
pop
dec
jae
(bad)
pop
sbb
mov
test
push
lret
push
ljmp
cmp
outsb
mov
stos
shl
shlb
lds
jg
mov
movsl
inc
add
loop
jnp
sub
cltd
xor
mov
jmp
mov
cmp
xchg
divl
cltd
inc
std
cmpsl
(bad)
xchg
into
jle
adc
(bad)
in
xor
fnstenv
out
mov
sub
jmp
insl
movl
stos
inc
divl
mov
pop
aam
fildll
pop
pushf
pop
daa
(bad)
aas
dec
inc
push
mov
daa
(bad)
pushf
lret
mov
scas
enter
or
lahf
fcomps
sarb
(bad)
mov
jg
insl
cmp
add
mov
adc
dec
sbb
ficoms
pushf
cmp
mov
movsb
xchg
outsl
jmp
fnstsw
mov
sub
lds
sbb
imul
fisttps
andb
inc
push
cltd
inc
xchg
pop
push
jecxz
sbb
out
scas
jge
out
cmpsb
popa
in
scas
(bad)
sub
jp
addr16
sub
scas
daa
jnp
fwait
xor
sbb
push
dec
mov
mov
into
sti
lods
stos
mov
inc
pop
jecxz
test
mov
call
js
xor
mov
lret
int
aad
cmp
loope
in
mov
ret
push
mov
mov
lea
iret
mov
ljmp
test
mov
aas
cmp
mov
ljmp
push
call
jbe
loopne
test
push
jmp
in
jbe
int3
mov
dec
lret
xchg
fldcw
lahf
xchg
insb
mov
push
stos
call
jmp
mov
idivb
das
push
mov
int3
or
inc
lahf
mov
mov
jb
fildll
xor
out
mov
mov
test
ret
pop
push
xor
cmc
inc
cmc
push
ret
mov
pusha
mov
repnz
and
adc
mov
movb
add
fwait
add
test
cmpb
add
cmc
hlt
(bad)
popa
xor
pop
fidivrl
shll
ss
in
pusha
push
pop
push
adc
jl
push
mov
sub
pop
mov
test
pop
or
mov
enter
inc
adc
loopne
ret
cmp
dec
mov
rcr
nop
pop
mov
mov
ss
nop
ss
push
(bad)
aad
bound
sahf
data16
mov
and
sub
or
jae
add
push
enter
ss
push
jb
mov
pop
jmp
pop
ds
repz
or
and
mov
sub
subl
inc
jno
dec
mov
scas
sahf
out
fbld
loopne
subl
(bad)
push
fadds
or
mov
pop
scas
outsb
mov
add
xor
xchg
lea
inc
sub
sbb
lret
shrl
pop
cmp
rolb
(bad)
(bad)
out
bound
(bad)
out
shlb
iret
addr16
add
cmpsl
scas
mov
orb
push
shll
pop
pop
xor
push
pop
mov
jbe
push
dec
andl
aad
adc
adc
imul
cmpsl
dec
lcall
leave
dec
outsb
call
bound
imulb
jge
stos
repnz
data16
lret
int
pop
mov
xor
jnp
ljmp
loopne
and
sub
movsl
sbb
push
aad
dec
sbbb
jge
(bad)
sbb
int3
mov
aas
cmpsl
inc
syscall
ret
int
data16
add
inc
xchg
jecxz
leave
sbb
push
xchg
out
hlt
pop
cmpsb
inc
(bad)
xor
dec
popf
test
fmulp
mov
fcmovb
inc
shrl
push
out
(bad)
mov
dec
cmpl
pop
xchg
aaa
daa
lods
sbb
stos
addr16
mov
mov
xchg
inc
mov
pop
(bad)
xchg
mov
jecxz
fldt
fs
mov
out
pop
sub
jo
jge
(bad)
or
cltd
popf
pop
dec
push
inc
out
aaa
cmp
nop
adc
cmp
mov
in
popa
scas
xchg
scas
mov
