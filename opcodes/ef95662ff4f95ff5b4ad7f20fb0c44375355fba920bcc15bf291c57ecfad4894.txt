imul
adc
add
addr16
cmpsb
cmp
jge
sub
fwait
movsl
mov
push
mov
in
clc
and
xor
jne
jno
pop
cld
push
lcall
dec
nop
imul
rcrb
insb
aas
or
mov
nop
xchg
dec
je
mov
sti
push
loop
pop
cmp
imul
mov
aad
lcall
sbb
loope
mov
adc
xchg
clc
push
in
jo
in
stos
mov
scas
cmp
mov
or
sbb
mov
lret
ret
loopne
mov
and
mov
stos
mov
sub
into
jae
lds
cmpsl
xor
jb
js
sbb
jp
and
hlt
mov
jo
(bad)
movsl
mov
fnstenv
test
cmp
popa
push
push
(bad)
inc
xchg
push
or
loop
idivl
push
shrl
cmp
in
mov
xchg
jb
fs
repnz
in
push
cmp
pop
or
in
popf
mov
and
xchg
punpckhbw
jecxz
jae
aam
mov
lahf
inc
xor
ljmp
int3
out
pop
je
cmp
xor
fdivl
jbe
pop
push
pop
inc
cli
pop
(bad)
lcall
sbbl
sub
ss
push
pushf
dec
lods
jge
dec
(bad)
jge
jno
xchg
pop
dec
lret
xor
mov
sbb
fisttpl
fstps
pop
xor
cmpb
dec
cltd
test
xor
into
hlt
leave
enter
pop
xchg
jmp
jno
inc
movsl
scas
inc
lea
leave
fcmovu
aas
int1
loope
out
lcall
repnz
ret
imul
(bad)
cmp
mov
stc
xchg
xchg
and
cmp
cmp
dec
push
pusha
out
xlat
ja
cmp
pop
inc
adc
mov
xchg
dec
adc
mov
inc
and
mov
xlat
nop
mov
jmp
cmpsl
sbb
cmp
cs
lea
fninit
call
push
inc
cmp
mov
sti
mov
in
adc
inc
in
push
arpl
mov
imul
mov
add
jne
out
and
bound
pop
mov
sbb
cwtl
bnd
(bad)
jnp
mov
xorb
daa
pop
fisubs
mov
in
loopne
repnz
sarl
fsts
dec
dec
test
sbb
cmp
out
xor
cmp
repnz
sarb
push
stc
and
cmpsb
jns,pn
mov
dec
adc
into
inc
(bad)
gs
mov
mov
sbb
hlt
dec
stc
movsb
mov
or
lods
mov
add
mov
jmp
jo
dec
mov
jno
scas
lods
sbb
fimull
inc
xchg
xchg
arpl
shrl
xchg
inc
aas
leave
push
mov
mull
inc
or
(bad)
imul
in
sub
adc
inc
shl
xchg
fstpl
pop
mov
lcall
push
xor
mov
cmp
xorl
fwait
add
roll
add
pusha
lahf
push
xor
repz
repnz
(bad)
fsubrl
fmuls
jb
ret
cmp
sub
jne
mov
out
pop
clc
xchg
sub
call
xor
int3
out
pop
repz
inc
pop
cs
fs
push
fnstsw
mov
leave
mov
cmpsl
push
lds
sbb
aas
gs
test
sbbb
ret
push
push
push
aad
sti
jnp
mov
sbb
xor
xchg
addb
int
pushf
sti
xchg
je
xchg
xchg
and
fsts
push
out
add
out
jne
mov
jnp
sbb
leave
fwait
sub
jae
fsubr
sbb
stc
or
dec
push
mov
filds
(bad)
mov
pop
mov
add
and
test
mov
loop
data16
xchg
stc
cs
xor
pop
sub
loopne
mov
xchg
ljmp
mov
lret
loope
mov
aas
cmp
cmp
mov
stos
aaa
rolb
jecxz
(bad)
mov
int1
cltd
movsb
jmp
stc
stc
pop
inc
push
jge
and
das
test
xchg
pop
xchg
popf
jne
jns
dec
sbb
ret
mov
js
das
pop
jns
inc
or
cmpsb
cltd
hlt
push
lods
push
jb
jb
sbb
pusha
mov
mov
jmp
xchg
mov
xchg
sub
jne
loopne
jmp
(bad)
mov
jne
into
inc
pushf
cmp
xor
xchg
xor
jecxz
mov
ja
and
incb
mov
pusha
fcompl
dec
and
movsb
xchg
lea
(bad)
(bad)
push
mov
bound
data16
repz
push
(bad)
mov
cmpl
test
cmc
decb
cwtl
add
adc
jno
fistl
mov
xchg
ret
aas
inc
ljmp
xor
dec
push
sub
jge
ftst
aas
push
sub
lea
into
outsb
xchg
mov
mov
xor
(bad)
insl
pop
out
lods
jbe
lahf
push
enter
or
pop
int1
mov
mov
push
fwait
mov
adc
arpl
in
mov
mov
push
loopne
jp
int
imul
lods
dec
xor
test
fs
lahf
adc
inc
andl
jbe
xchg
fwait
mov
iret
dec
mov
das
mov
test
push
ja
arpl
inc
adc
push
add
mov
dec
mov
fadd
dec
xchg
flds
lcall
mov
mov
jecxz
push
imul
test
inc
cmp
cmp
add
stos
xor
lret
clc
mov
push
lret
subl
jmp
fdivs
popf
(bad)
jno
mov
imulb
nop
addps
pop
sub
inc
gs
pop
stos
xor
pusha
orb
test
mov
cs
inc
pop
dec
sub
dec
adc
sbbl
add
scas
and
(bad)
xchg
mov
xlat
imul
xor
sub
jo
mov
mov
nop
bound
mov
test
out
adc
mov
dec
scas
sub
loope,pn
push
cld
in
pop
orb
cmp
mov
stos
stc
out
mov
mov
sbb
dec
dec
jns
je
fisubrl
out
cmp
jle
ss
xchg
das
mov
je
(bad)
and
loope
adc
test
je
cmpl
xchg
jb
push
pop
outsb
rorl
adc
sahf
fstpl
pop
jo
pop
ljmp
or
mov
ljmp
inc
jae
add
es
jns
out
mov
mov
repz
mov
imulb
test
jecxz
cmp
out
test
dec
mov
cmpsb
push
imul
inc
jno
aaa
test
mov
mov
aaa
and
mov
adc
xchg
iret
dec
jo
push
mov
mov
cltd
jne
jp
xor
cmp
mov
outsl
cmp
rorb
or
sbb
mov
je
mov
xor
loopne
arpl
aad
stc
faddp
ds
je
pop
xchg
or
imul
mov
inc
dec
out
adc
adc
fcoms
and
pop
cmc
sub
loope
orl
xchg
xchg
xchg
jmp
dec
dec
stos
push
(bad)
test
adc
xor
sub
mov
dec
cmp
xchg
and
popa
cmp
je
jmp
push
movsl
fwait
cltd
fistpl
dec
xchg
lcall
sbb
mov
cld
(bad)
push
fs
fimuls
rclb
add
jecxz
push
out
push
adc
cld
(bad)
pop
shll
jge
mov
mov
roll
add
loope
mov
sbb
jmp
pop
and
test
pop
mov
jmp
inc
fldenv
push
jl
popa
sub
push
inc
in
mov
xchg
int1
test
push
cli
fsubr
arpl
in
ss
mov
loopne
lret
xchg
jb
dec
push
mov
jo
xor
pusha
mov
(bad)
pop
mov
lahf
mov
fisubrl
lea
pop
jno
aad
enter
test
mov
out
push
xor
cmpsb
(bad)
pop
out
xchg
je
mov
jl
addl
add
sbb
mov
pop
nop
push
ds
cmp
mov
mov
or
push
xchg
rclb
in
fildl
mov
shr
and
mov
cmp
inc
or
stos
imul
mov
jl
fs
cld
mov
fcmovnbe
dec
xor
mov
gs
insl
insb
sub
and
sub
push
pushf
