cmp
int
jge
or
jne
sbb
mov
push
cmpsl
lcall
movsl
out
jnp
out
push
addl
mov
inc
push
push
inc
imul
mov
clc
pop
sub
shrb
mov
les
mov
in
jp
fdivrp
push
jb
je
push
mov
jmp
pop
(bad)
mov
test
xor
insl
lds
mov
sbb
insl
pop
dec
sub
int3
les
or
cltd
adc
mov
push
mov
jne
inc
addr16
mov
arpl
movsl
lds
pop
push
jne
(bad)
lea
pop
fmull
(bad)
(bad)
sub
movsb
cmc
xor
mov
or
loopne
stc
sarb
movsl
ds
fiadds
and
sbb
jnp
xchg
sbb
and
repnz
out
(bad)
and
inc
sbb
fmuls
xchg
pop
loope
hlt
insl
jle
cwtl
cmp
fbstp
inc
nop
orb
cmp
mov
inc
or
pusha
push
ljmp
test
pop
subb
cmp
lret
daa
mov
lea
outsb
insl
fstp
roll
addr16
outsb
pop
(bad)
mov
cmp
add
inc
jge
dec
frstor
jns
sbb
cmc
mov
add
pop
mov
mov
and
fwait
mov
int
mov
ljmp
lds
add
inc
out
and
inc
xor
lahf
sbb
ret
mov
repz
pop
inc
dec
in
push
insl
test
inc
not
jmp
sbb
dec
mov
xor
push
test
pop
fs
inc
(bad)
adc
(bad)
fwait
push
xor
(bad)
xor
pushf
dec
xor
(bad)
cmp
sub
inc
mull
rsqrtps
in
jns
movsl
out
pushf
popf
inc
ret
dec
fcmove
divl
or
inc
add
cmp
popa
gs
jbe
loopne
loope
jb
push
insl
mov
dec
movb
inc
mov
cmp
push
movsb
dec
lods
mov
shll
xchg
adc
test
fidivrl
cli
jge
sbb
gs
sub
das
or
jne
cwtl
hlt
clc
jnp
xchg
flds
dec
out
je
cs
fcompl
ds
jg
cwtl
roll
lock
shrb
test
fisubl
dec
jp
sbbl
movsl
adc
in
test
insb
movsl
inc
xchg
inc
lock
push
out
pop
rcrl
push
xchg
ror
pop
out
inc
add
repnz
scas
or
inc
add
pop
add
insb
clc
or
movsl
idiv
lahf
mov
les
cli
aaa
ficoml
fcmovbe
mov
mov
add
call
adc
pop
sub
adc
pop
stos
cmpsb
(bad)
scas
or
pop
jbe
nop
call
sub
or
aad
mov
decl
(bad)
dec
stos
(bad)
xor
xor
data16
dec
rcl
push
xor
test
movsb
adc
sub
imul
dec
clc
int3
ja
or
push
or
aas
insl
cmpsb
sbb
mov
inc
std
(bad)
sbb
ret
pop
xlat
mull
hlt
sub
ds
jb
push
clc
or
mov
inc
push
xor
ds
out
xor
testl
out
(bad)
movsb
sub
cli
gs
push
into
push
push
int
jl
adc
xchg
or
mov
and
sub
std
ror
lea
int1
cmp
pop
lods
stos
mov
and
rcrb
sti
push
rorl
in
hlt
(bad)
les
stos
xchg
mov
xor
pop
popa
shlb
cwtl
sbb
notl
fcmovne
pop
sbb
popf
dec
std
ss
les
int
lret
push
sarb
loop
cmp
cmpsl
cmp
jns
or
xchg
xchg
cmpsb
in
push
inc
outsl
dec
sub
jne
inc
xchg
js
test
cld
cwtl
movsb
cmpl
xchg
cmpsb
inc
push
add
mov
inc
mov
testl
jns
mov
jle
jge
jb
ss
mov
mov
les
mov
sub
into
lahf
(bad)
aam
rol
ud1
aas
decl
sti
fmul
xor
pop
sbb
inc
dec
imul
(bad)
in
pop
pushf
jge
push
(bad)
mov
out
push
out
mov
jmp
lcall
loop
cld
lds
xor
imulb
outsb
sbb
push
mov
scas
sub
sbb
mov
cs
enter
jle
inc
dec
out
sbb
fdivr
pop
fcmove
push
out
mov
addl
jge
mov
push
loopne
mov
inc
sub
je
cld
or
(bad)
dec
jge
xchg
inc
(bad)
fldl2t
insb
cmp
dec
(bad)
dec
inc
je
jmp
cmp
push
test
inc
inc
adc
xchg
push
push
add
mov
call
xchg
je
inc
xor
fwait
lods
mov
(bad)
enter
mov
fisttpll
mov
cmp
repnz
in
or
scas
push
int3
cmpsb
jge
iret
sub
cld
mov
imul
push
in
pop
pop
insb
sahf
mov
xor
fdivr
jns
repz
imul
inc
sub
inc
cmp
mov
ljmp
(bad)
jno
adc
insb
lahf
mov
pop
stc
ffreep
sub
jmp
xchg
push
mov
test
push
pop
andl
jmp
les
clc
cmp
xor
jg
xchg
push
xchg
pop
je
mov
lcall
lods
stos
shrl
je
imul
xchg
cmp
jno
mov
movsl
fidivs
sub
mov
cmp
in
push
ja
cmpsl
pop
popf
pop
xor
pop
dec
xchg
iret
xchg
lea
in
push
mov
mov
sbb
jmp
mov
mov
nop
sub
loopne
sbb
popf
mov
sub
out
fisubrl
repnz
jns
aad
xchg
pop
inc
lea
cmc
adc
sub
mov
hlt
insb
xchg
sub
inc
or
jo
lea
jno
fiaddl
pop
mov
aaa
sub
addr16
movsl
xchg
xchg
jne
movsb
ret
stc
lcall
shl
mov
test
mov
aaa
int1
shlb
cs
repnz
xor
mov
(bad)
push
repnz
jmp
pop
jb
lret
lret
test
clc
gs
dec
sub
cld
aaa
rcrl
outsb
into
jne
mov
in
inc
ljmp
fs
xor
jnp
aaa
mov
int3
push
sbb
div
popf
in
xchg
(bad)
es
pop
adc
jmp
shr
sub
repnz
push
xchg
inc
inc
cld
lahf
jnp
pop
jecxz
addl
mov
fidivs
das
push
xlat
(bad)
xor
mov
std
sbb
scas
pop
sahf
popf
mov
inc
imul
xor
lds
pop
lahf
mov
dec
aad
fwait
jo
lds
or
lahf
shlb
adc
aam
or
push
in
mov
sub
lds
push
xor
inc
cli
or
mov
add
mov
dec
cmp
jg
jb
insb
ljmp
pop
xchg
out
xchg
push
xlat
ss
jge
movsb
add
popf
mov
or
int1
cwtl
or
cmp
pop
cli
and
cmp
psubsw
jp
out
aad
xor
cltd
xor
sbb
sub
int3
mov
sub
frstor
xchg
sbbb
add
pushf
stos
call
ret
std
mull
push
inc
pop
inc
les
in
fyl2xp1
or
aad
or
mov
mov
mov
out
xchg
out
pop
push
std
add
add
cmpsl
mov
pop
dec
hlt
adc
xchg
mov
loopne
xchg
insl
sbb
inc
adc
imul
or
imul
xchg
fcmove
sbb
imul
outsl
stos
sub
cmp
inc
xlat
cmp
jae
(bad)
push
in
push
inc
and
jle
push
int3
xor
inc
jne
fwait
sbb
aad
xchg
sbb
and
push
cltd
dec
add
xor
aas
pop
bound
xor
xor
mov
jae
lds
mov
sub
mov
adc
and
xchg
out
stos
test
add
popa
sahf
fstps
or
fsubrl
jle
xchg
mov
push
inc
imul
ja
