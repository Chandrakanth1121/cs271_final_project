xchg
xchg
xlat
inc
leave
sti
dec
int
sti
mov
sub
cmp
fstpl
cmpl
lcall
cwtl
jns
and
lret
adc
xlat
arpl
(bad)
jne
xchg
into
sub
ficoml
or
xchg
mov
test
insb
jg
and
ljmp
outsl
(bad)
push
clc
(bad)
and
sub
mov
dec
xchg
mov
loope
test
mov
push
loopne
inc
jle
out
inc
loope
mov
and
test
pop
sarb
mov
inc
xchg
sbb
mov
jnp
mov
xchg
jae
test
out
int3
jle
mov
fldenv
scas
xchg
lods
arpl
push
mov
insb
mov
cwtl
and
mov
xlat
mov
dec
clc
jp
clc
adc
mov
push
cld
pop
add
jae
stc
jp
or
aaa
mov
jbe
inc
sub
daa
push
loope
call
adc
mov
rcll
or
lahf
xchg
fs
push
test
inc
jne
jl
pop
jp
add
sub
ja
add
hlt
test
es
dec
fisttps
int
outsb
lea
fsts
jl
mov
mov
mov
mov
xor
mov
xchg
lret
ficomps
mov
add
sub
ss
loope
roll
cmpsl
mov
test
adc
in
inc
add
jbe
arpl
rorb
rclb
arpl
(bad)
push
jbe
insl
or
xchg
pop
fs
lds
jge
inc
cld
lret
in
mov
subl
bound
push
(bad)
inc
je
mov
jnp
repnz
ja
mov
mov
addr16
push
push
loope
punpcklwd
inc
adc
adc
jno
xor
std
loop
push
dec
add
push
jo
mov
movsb
punpcklbw
rcrb
int1
or
fcomp
xor
pop
ds
push
fs
addr16
inc
fists
(bad)
lock
fimuls
pop
inc
ffreep
dec
shl
aam
dec
cld
js
js
xor
fistps
jle
add
dec
rclb
cli
pop
jne
sub
push
ret
xchg
scas
insl
and
jg
sub
movsb
jl
stos
xchg
cmc
and
ret
sub
out
scas
adcl
inc
push
pushf
mov
loopne
inc
js
mov
cmp
repz
repz
ret
mov
push
daa
jecxz
mov
imul
pop
xchg
scas
repnz
test
inc
orb
rclb
add
jg
sub
arpl
sub
lcall
pop
and
dec
lahf
aam
iret
out
sbb
and
sarl
inc
in
dec
mov
adc
adc
or
push
ljmp
fbstp
mov
fimuls
sahf
mov
jb
add
mov
ficoml
xor
pop
addr16
lea
add
inc
repnz
aas
xchg
into
xor
push
push
xor
xor
mov
jne
mov
jno
sbb
or
std
push
sbb
lods
enter
cmp
cwtl
(bad)
(bad)
ljmp
(bad)
xor
das
cwtl
lds
add
jle
xor
test
mov
mov
pop
xchg
cmp
clc
cmp
mov
enter
cmp
pop
es
fwait
and
mov
mov
jge
push
hlt
mov
int1
lods
fidivs
mov
stos
loop
movsl
jmp
mov
rclb
outsb
xor
mov
mov
push
js
adc
mov
lods
dec
adc
jno
xchg
dec
negb
fs
sahf
in
push
lock
stos
loope
mov
mov
pushf
roll
insl
into
mov
jns
out
lret
mov
push
sbb
mov
inc
test
and
mov
addr16
sbb
jmp
add
and
and
xchg
bound
xchg
addr16
and
push
inc
lea
lds
mov
ja,pt
pop
sub
in
ret
jmp
stc
nop
(bad)
repnz
inc
xchg
pop
sub
and
outsl
lea
int3
pop
sbb
mov
pop
xchg
or
into
je
je
in
inc
gs
push
jo
sub
adc
mov
addr16
mov
fdivrl
aas
push
pushf
inc
dec
dec
nop
aam
(bad)
xor
call
mov
pop
mov
mov
pop
adc
cmpsb
cmp
cwtl
add
loop
jbe
sbb
xchg
faddl
lock
mov
adc
mov
decb
stos
xor
jo
sbb
add
xor
jb
jnp
sahf
mov
mov
dec
pop
iret
sub
jmp
and
test
jns
neg
js
pushf
into
push
insb
pop
clc
movsb
sub
(bad)
cmp
push
push
inc
in
sbb
cli
fidivs
pop
sbbb
mov
mov
daa
in
and
add
shl
aaa
inc
pop
mov
xor
imul
sbb
(bad)
stc
ljmp
int
repz
push
push
cwtl
jno
cmpsb
cmp
mov
or
jnp
mov
(bad)
(bad)
jl
outsb
jmp
mov
lret
push
add
jg
rcrb
insl
jmp
int1
mov
sbb
mov
cmp
rcl
repnz
xchg
adc
arpl
xor
jmp
inc
dec
testl
(bad)
std
(bad)
outsl
sbbl
mov
(bad)
cltd
pushf
cmp
cltd
movsl
scas
cmp
inc
ss
movsl
pushf
movsb
je
ficompl
jmp
and
dec
or
or
add
inc
neg
inc
stc
mov
rorb
or
loope
loopne
call
andl
lock
cld
insl
cwtl
and
add
adc
fidivl
stos
jp
loopne
(bad)
mov
xchg
push
nop
xchg
jg
adc
jl
jecxz
loope
dec
stc
xor
lret
jae
lock
ds
cmp
pop
inc
mov
daa
add
sub
push
dec
push
insl
push
shrb
inc
imul
jns
hlt
mov
adc
lret
outsb
xchg
sahf
sbb
or
ja
xchg
out
fs
and
sbb
mov
inc
pop
lahf
ret
inc
inc
rcl
mov
in
mov
jle
cld
rcrl
lea
fistl
inc
add
fisubrl
stos
cwtl
mov
scas
and
sub
add
movsl
mov
xor
push
mov
sahf
scas
adc
dec
push
idivb
in
or
outsb
xor
xlat
div
ss
jl
(bad)
mov
in
daa
jno
js
mov
orb
jae
push
lahf
fcomip
sbb
insb
aam
lds
mov
lods
sarb
test
aas
loopne
pushf
dec
test
xor
jns
pop
dec
addr16
jp
jl
cmp
aad
xchg
cmp
mov
and
mov
lret
out
jne
scas
imul
in
mov
pop
push
dec
jnp
cmp
inc
jmp
jbe
inc
jo
inc
mov
or
pushf
xchg
xor
cmp
pop
cld
nop
push
xchg
loop
xchg
cmpsb
add
pusha
ret
cmp
jl
cmpsb
movsl
or
or
jp
shlb
or
or
cmpsl
into
xchg
mov
pop
cmp
sti
fsubs
adc
push
sub
mov
jle
sbb
mov
stc
cmc
cmp
cwtl
mov
jg
pop
cmp
sbb
adc
xchg
dec
xchg
leave
xlat
mov
(bad)
dec
iret
xor
inc
rolb
cmp
and
jp
outsl
jo
sarl
jno
and
pop
adc
and
popa
arpl
jge
(bad)
mov
movsl
es
ljmp
jae
repnz
pop
fsts
inc
(bad)
cmp
cmpsl
shr
(bad)
jle
xor
movd
pop
xchg
xchg
pop
sbb
loope
lods
xlat
push
xchg
xchg
push
(bad)
arpl
shl
ds
jge
lret
scas
into
and
pop
in
jbe
out
mov
leave
fwait
cwtl
xchg
jle
test
mov
dec
xchg
movb
sub
in
mov
sbb
sbb
mov
shrl
jge
push
outsb
push
and
in
inc
aaa
xchg
push
mov
aam
cmp
cmp
add
cmp
mov
push
lcall
outsl
add
sub
or
dec
or
cmpsl
xchg
mov
and
in
xchg
push
push
jno
cmp
shll
jg
dec
ss
scas
