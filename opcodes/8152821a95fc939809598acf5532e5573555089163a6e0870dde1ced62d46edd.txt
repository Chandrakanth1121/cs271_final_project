cmp
xor
push
mov
or
(bad)
imul
mov
pop
jns
lea
leave
nop
jg
xchg
into
imull
fmull
sbb
sub
pop
cmp
lret
mov
sub
xlat
xor
push
mov
daa
lods
push
aaa
pop
xchg
sbb
ret
repz
incl
fs
stos
pop
jbe
enter
xlat
push
jno
pusha
mov
jae
loope
pop
jno
adc
add
dec
sub
mov
push
cmp
mov
sub
lea
mov
in
cmp
sbb
stc
scas
sub
inc
insl
inc
fld
arpl
lret
pushw
fmuls
pushf
mov
cmpsb
leave
mov
push
addb
in
fisubl
mov
adc
cmp
ret
int1
add
mov
push
fwait
jp
dec
out
push
adcb
cmp
sub
lret
sbb
sub
mov
cld
stc
pop
and
add
addb
aam
je
dec
repz
daa
xchg
mov
scas
cmpsl
push
aam
data16
shll
mov
cmp
push
daa
pop
dec
jo
add
or
or
mov
xchg
adc
fsubrl
lock
aaa
call
adc
outsb
loop
cmpsb
adcl
jl
mov
and
lret
sub
jnp
arpl
xchg
aas
movsb
xchg
inc
paddsb
fisubl
and
sub
data16
outsl
fwait
divw
sub
jno
jge
adc
adc
into
mov
dec
test
test
mov
dec
add
je
and
sbb
(bad)
clc
fnstenv
jle
daa
sbb
loop
cmc
outsb
mov
stos
xchg
xor
fwait
iret
enter
leave
into
int1
loopne
stos
sar
test
lret
repz
fldln2
inc
sbb
pop
ret
loope
stos
ljmp
push
rol
mov
movb
mov
les
sbb
mov
sub
cmp
mov
in
or
pop
jle
nop
rorl
jae
out
sub
push
mov
pop
ret
mov
jp
push
out
lods
push
cli
(bad)
xchg
rcl
cwtl
dec
and
lcall
push
jb
fwait
sbb
and
xchg
pop
pop
in
inc
jmp
into
push
rcll
dec
cmp
mov
inc
adc
mov
and
cli
jge
inc
mov
jg
dec
fistpl
ret
jmp
dec
(bad)
mov
pop
or
inc
insb
and
les
sub
xchg
jg
fmull
pusha
mov
ss
mov
mov
int1
xchg
jle
loope,pt
int3
adc
cmpsb
and
and
dec
pop
cltd
ret
pop
repnz
mov
or
mul
adc
arpl
lods
testb
jecxz
scas
(bad)
aam
sub
mov
push
mov
shlb
outsb
iret
sub
jl
arpl
xchg
lcall
push
cmp
xor
in
in
aam
loopne
in
mov
mov
xlat
std
mov
sti
test
aas
or
and
rcrb
in
add
int
arpl
fnstcw
(bad)
aam
ljmp
int
aaa
lods
stos
pop
xor
cli
cli
push
or
cmp
or
in
stc
mov
cmp
lea
ret
sbb
aaa
(bad)
loopne
iret
mov
mov
fs
loope
or
dec
pop
stc
pushf
push
cmc
lock
pusha
lods
xchg
je
add
push
imul
movsb
pushf
xchg
out
test
sub
jnp
fsubr
xor
mov
sbb
inc
cld
inc
daa
dec
es
sbb
jmp
inc
out
fs
lea
js
push
ds
insl
faddl
mov
sbb
lods
or
and
add
stc
roll
lds
sbb
xlat
mov
insl
pop
xchg
jecxz
and
popa
orl
xchg
sbb
cld
pop
cmp
xor
jge
dec
jne
jno
fmull
(bad)
loope
xor
sbb
and
repz
mov
repnz
sub
or
adc
pop
lcall
sarb
cmp
loop
xchg
sbb
dec
or
nop
inc
fcomps
dec
out
fst
fisubs
sbb
std
loopne
std
jmp
pop
movsb
fisttpll
(bad)
mov
dec
pop
mov
test
cmp
cmp
ret
add
mov
add
dec
cmpsl
decb
xchg
mov
add
xchg
loopne
jge
xlat
pusha
fnstcw
ss
inc
lret
sub
mov
iret
mov
jnp
insl
addl
popa
push
aas
int3
pop
test
enter
int1
push
addr16
jns
push
pop
cmpsl
cs
mov
sbb
dec
jge
sub
and
and
jg
lea
fisttps
xchg
xor
push
cld
testb
dec
xor
push
inc
enter
mov
hlt
lea
ficoms
adc
lea
pushf
sbbl
scas
cld
jg
adc
repz
and
jns
adc
push
je
push
les
and
and
mov
idiv
xchg
sbb
or
pushf
sbb
popf
mov
cwtl
add
int3
mov
cmp
jnp
movsb
jmp
mov
mov
sarl
inc
sti
jmp
sbb
adc
into
roll
sbbl
cmp
inc
out
xchg
outsl
jbe
sub
jo
pop
dec
pop
and
mov
stc
mov
daa
adc
cmc
gs
adc
pop
adc
sbb
xor
sub
mov
es
push
add
gs
jo
xlat
jno
shll
fsubp
xchg
addl
les
sbb
sub
cltd
mov
adc
call
push
imulb
mov
mov
lods
dec
shll
mov
shr
hlt
xlat
mov
jo
repnz
lret
mov
fildll
mov
mov
insl
push
mov
push
mov
lret
add
lods
xchg
cmp
mov
cmp
andb
add
(bad)
jae
or
sbb
mov
sbb
jbe
cmp
cld
int1
in
dec
or
sti
outsb
(bad)
es
sbb
outsb
jae
addb
lods
rclb
shl
stos
push
jl
xor
mov
int
scas
cltd
int3
and
loop
roll
filds
mov
test
sub
xchg
pop
mov
push
adc
adc
lahf
mov
pop
adc
mov
push
jnp
and
mov
cli
insl
jle
ss
pop
inc
cli
sub
mov
sbb
rolb
push
(bad)
lds
xchg
push
and
mov
mov
nop
fldt
test
dec
xchg
shll
bound
aas
sub
loop
mov
mov
mov
or
dec
gs
jmp
sti
in
(bad)
ss
cmp
sub
add
xchg
mov
pop
mov
cwtl
xchg
call
mov
push
and
test
or
(bad)
mov
es
xchg
push
and
imul
loopne
and
jge
pop
loope
dec
test
andb
arpl
cs
sbb
xor
bound
mov
dec
sbb
jge
xchg
mov
ljmp
inc
cmp
dec
jge
or
lret
cs
mov
push
clc
cmp
(bad)
sbb
ret
mov
push
jge
jne
fcmovbe
push
fwait
adcb
mov
or
dec
jbe
xchg
ret
outsl
sub
mov
shrb
sub
add
pop
mov
in
nop
push
sub
sarl
mov
and
dec
sbb
lods
shll
push
lods
aaa
call
stos
add
outsl
and
mov
jl
and
mov
ss
dec
rol
xchg
jbe
addb
cltd
sar
mov
std
stc
mov
jae
loop
push
sbb
je
shr
jle
dec
out
jae
sti
mov
and
adc
pop
inc
sbb
stc
scas
cmp
out
pop
jb
pop
cmpsb
sbb
(bad)
pop
xchg
sbb
je
enter
xchg
outsl
pop
sbb
iret
pop
and
lock
repnz
or
testb
mov
cli
fstps
hlt
xchg
and
sbb
pop
int3
xchg
pop
jge
pop
lds
adc
and
fistpl
sbb
leave
mov
and
decb
sbb
clc
iret
imul
xchg
(bad)
out
jmp
xchg
xor
xchg
lods
fwait
out
scas
and
jl
mov
mov
stc
call
cmp
stc
or
clc
sti
stos
adc
