and
cmpsl
push
addr16
ret
(bad)
hlt
add
fdivl
stos
dec
fiadds
or
fwait
mov
xor
inc
mov
out
mov
or
pop
mov
nop
dec
jbe
into
jb
addr16
popf
ljmp
int
loop
sahf
out
add
sbb
aad
push
xchg
shl
cmp
out
daa
(bad)
ljmp
adc
cmp
push
pop
mov
stc
mov
cmpsb
adc
sbb
mov
aaa
jle
adc
(bad)
into
sbb
cmp
addr16
out
insl
mov
cli
adc
jecxz
adc
outsb
mov
int3
jae
push
adc
push
into
inc
imul
ss
cwtl
add
fidivs
mov
outsl
adc
mov
mov
cmpsb
cmp
ljmp
mov
rorb
push
clc
xor
rol
pop
pushf
xchg
jbe
add
loope
cli
push
pop
mov
push
(bad)
xor
dec
pop
cs
jbe
xlat
lds
dec
sbb
das
lret
cmp
(bad)
cli
pop
xchg
lret
out
adc
insb
xchg
xor
or
gs
push
xchg
mov
adc
adc
cld
shl
push
sahf
insb
mov
dec
xchg
jmp
pop
xchg
cmp
or
lea
into
dec
inc
filds
sub
mov
push
sbb
push
cs
rcr
ljmp
xchg
(bad)
and
jl
push
in
stc
cwtl
test
add
es
sbb
pop
or
stos
and
pop
push
dec
xchg
jp
pusha
fiadds
lods
shr
mov
popa
mov
clc
cmpsl
mov
es
orl
adc
jl
hlt
aaa
stos
xchg
(bad)
xchg
js
aaa
popf
sub
ja
outsl
xor
aas
gs
jno
mov
mov
loop
pop
push
pop
fs
push
sbb
jl
xchg
into
jp
add
dec
ds
aaa
mov
mov
or
bound
pop
cmpsl
cs
test
ret
pop
sbb
sbb
mull
push
(bad)
fucom
ds
clc
scas
das
push
mov
adc
pop
cwtl
movsb
sub
add
in
pop
mov
mov
xchg
sbb
or
cmp
push
pop
ja
sbb
movsb
dec
xchg
or
jge
in
dec
jle
sub
mov
cwtl
rcrl
and
outsb
push
roll
jl
stc
cs
jmp
(bad)
xchg
data16
push
pop
mov
popf
(bad)
cltd
addr16
add
pop
js
ja
inc
jmp
add
pop
aaa
push
sub
out
(bad)
setbe
jne
(bad)
cli
scas
xchg
adc
notl
fnstsw
mov
lods
dec
mov
sbb
jmp
push
jl
das
out
add
ficoml
aaa
aam
pop
pop
or
jecxz
jno
xchg
lock
bnd
ss
lock
pop
cmp
js
das
stos
(bad)
add
cmp
sbbl
adc
jo
filds
aad
movsb
out
sbb
addr16
jle
xor
xchg
aaa
sub
subb
mov
sbb
out
mov
and
or
add
push
sub
cmp
stos
add
mov
mov
loope
scas
jl
jnp
pusha
scas
pop
test
int1
xchg
lods
inc
stos
dec
outsb
dec
mov
ror
xor
add
pushf
adc
xchg
stos
and
aaa
aad
aam
inc
and
mov
(bad)
xchg
push
push
xlat
and
nop
pusha
mov
inc
and
mov
test
mov
inc
jecxz
into
cmp
dec
xchg
cmpsl
inc
mov
xchg
xchg
xchg
sarb
cs
flds
dec
scas
add
rclb
fwait
cmp
push
fistl
xor
jne
lahf
push
jl
negb
mov
cmpsl
in
mov
in
cmp
enter
fldcw
adc
inc
dec
xor
fs
dec
dec
lea
fidivrl
or
test
mov
rol
pop
repz
outsl
xor
xchg
loope
popa
cli
repz
pop
fcoms
add
add
pop
mov
sbb
lds
imull
std
push
outsl
mov
sti
inc
dec
fsubs
pop
(bad)
scas
pop
push
inc
rclb
sbb
adc
je
cmpb
addr16
mov
jbe
cld
fldenv
les
mov
sub
mov
in
push
adc
cmp
scas
sbb
mov
loop
xchg
repnz
iret
nop
movsb
adc
add
pop
dec
sbb
jns
negl
repz
jecxz
xchg
push
mov
xor
lock
in
pop
mov
dec
shr
in
repz
dec
outsl
add
lret
enter
jl
lahf
loop
jge
pop
inc
out
dec
aaa
xchg
sbb
dec
js
lods
outsb
dec
cmp
pushf
mov
adc
ds
mov
push
pop
outsb
loope
stos
mov
pop
jge
cs
aad
cmp
dec
push
dec
fcmovbe
or
push
(bad)
repnz
stos
mov
jae
push
jp
dec
cmpsl
stos
dec
ficompl
in
adc
aaa
es
mov
lret
(bad)
push
lret
dec
mov
mov
daa
fnclex
and
inc
jl
lea
(bad)
pop
fimull
cmp
mov
mov
mov
aaa
sbb
pop
in
das
movsl
fldl
dec
aad
sbb
cltd
xchg
or
scas
add
xchg
inc
cmc
pop
adc
testb
jmp
sbb
or
pushf
shll
push
sub
bound
mov
add
daa
adc
dec
dec
mov
mov
add
pop
push
mov
lock
add
aam
stos
jne
xor
jl
imul
and
ffree
xor
mov
and
dec
sub
cld
outsb
pushf
push
mov
rclb
inc
jge
mov
insl
jne
sub
and
dec
or
sub
push
in
imul
xchg
push
pop
popa
cs
pop
dec
std
mov
push
add
pop
dec
xchg
(bad)
jmp
xor
imul
dec
lods
adc
fdivl
aam
out
loop
imul
sbb
sahf
hlt
lds
popa
jo
fidivrs
pusha
sbb
cmp
outsb
jno
mov
adcb
stos
or
and
andl
shlb
push
pop
xor
(bad)
ss
gs
mov
xor
roll
(bad)
push
and
sub
add
cmpl
xlat
adc
push
fwait
test
push
stos
jae
loop
data16
push
lret
(bad)
arpl
push
shl
mov
pop
xor
adc
outsb
lds
dec
cmovne
fildl
mov
out
jo
mov
ficoml
sub
mov
daa
mov
leave
jecxz
mov
cli
neg
xor
gs
cmp
not
xchg
dec
divb
lahf
and
mov
ljmp
push
in
cmp
test
out
cmc
mov
push
leave
dec
or
xchg
cmp
jae
pop
rcrb
cmpsl
push
sbb
rol
sub
push
cli
mov
cmp
loop
sub
mov
cmp
mov
mov
les
popf
push
jle
sarb
jbe
push
sti
and
(bad)
mov
(bad)
inc
xor
arpl
aaa
add
pop
cli
jg
(bad)
mov
fucomp
hlt
dec
jno
pop
iret
sub
sub
push
xchg
mov
dec
push
jb
pop
clc
inc
pop
xchg
push
dec
pop
xor
mov
iret
and
and
add
je
pop
mov
ja
insb
adc
daa
cmpsb
mov
in
xchg
sub
(bad)
lret
rcrb
std
ds
popa
push
dec
dec
jle
in
pop
adc
mov
mov
das
test
insb
rcrb
fcmovnu
xorl
cs
cmp
add
mov
mov
push
daa
inc
stos
jg
in
pop
popa
pop
pusha
pop
push
loope,pt
xchg
push
rorb
fisttps
xchg
rcll
into
push
xchg
loope
pop
and
movsl
sub
fldl
insl
jmp
test
int3
jle
mov
and
jno
dec
jns
adc
adc
xchg
xor
add
jmp
cmp
movb
into
and
cwtl
adc
xor
stos
