fstpl
bound
mov
mov
js
pop
cmp
pop
jecxz
aaa
imul
inc
push
dec
xor
xchg
push
ja
jg
jnp
data16
mov
dec
push
loop
xchg
and
stc
inc
mov
adc
mov
rcrl
cmc
data16
cmpsb
jmp
out
(bad)
rcrb
xor
push
(bad)
js
pop
stc
mov
loop
clc
xchg
movsb
les
sti
mov
stc
inc
inc
inc
pop
cmp
popa
enter
jmp
push
or
lahf
rolb
xor
cs
loop
jle
and
out
sub
shlb
sub
pop
cmp
sbb
and
ja
adc
jae
xchg
dec
mov
cld
inc
xor
outsl
ss
cmpsb
sbb
in
bound
and
xchg
pop
shll
dec
sar
aad
push
mov
addr16
(bad)
sbb
mov
cs
or
jb
dec
aas
and
xchg
dec
jecxz
mov
ds
sbb
fwait
movhps
mov
inc
cmc
sbb
insl
xchg
ror
popa
rorb
fdivs
dec
mov
push
xchg
int3
push
pushf
negl
repz
add
sub
mov
adc
mov
mov
sti
loope
(bad)
int
add
syscall
inc
push
push
dec
mov
pop
add
cmp
ja
clc
test
cwtl
add
test
xchg
sub
pop
add
out
adc
jb
aad
gs
out
faddl
sub
mov
lods
mov
jbe
dec
inc
cmp
(bad)
sub
dec
sub
(bad)
(bad)
je
xchg
xchg
lcall
mov
xchg
outsb
movsl
add
push
sbb
push
daa
xchg
mov
ljmp
in
adc
fldl
push
add
mov
nop
add
popf
outsb
pop
(bad)
fwait
inc
fldt
push
mov
pusha
jb
sub
movsl
add
aas
in
cmpsb
push
jbe
dec
adc
xchg
loope
scas
in
sbb
dec
push
inc
shlb
sahf
sahf
jmp
lcall
mov
loopne
(bad)
jnp
jle
xchg
lea
sbb
jb
dec
pop
jae
aad
xchg
sbb
(bad)
mov
fldcw
mov
mov
outsl
dec
std
mov
leave
push
adc
aam
addl
cmpsl
rep
int
mov
adc
jecxz
pop
mov
out
addr16
push
mov
pop
jns
jp
add
nop
popf
loopne
xor
(bad)
add
ja
popf
or
stos
movsb
lret
bound
jns
or
pop
sbb
or
inc
mov
popa
stc
xchg
mov
push
ss
aas
push
in
push
ret
lds
insb
push
adc
adc
pop
movsl
loopne
pop
sbb
adc
outsl
xchg
loopne
mov
(bad)
pop
cmp
or
dec
lea
add
lahf
dec
cmp
js
sbb
(bad)
mov
ror
imul
mov
jmp
aam
aas
bound
stos
jns
mov
inc
and
adc
repnz
cs
cli
out
and
movsb
mov
iret
cltd
inc
mov
sbb
inc
fstl
movsl
inc
jl
stos
rclb
cmp
or
insl
lahf
pop
push
repz
inc
mov
scas
jg
push
faddp
cmp
inc
or
aaa
xchg
push
jmp
movsl
leave
cmpsl
data16
and
rcrl
nop
test
sub
out
mov
test
jbe
adc
xchg
or
leave
testl
mov
add
cmp
cmp
fs
sub
xor
jo
dec
shrb
mov
lods
addr16
mov
gs
mov
adc
push
mov
sub
mov
lahf
push
sbb
popf
cmp
nop
in
fsubrl
mov
push
pop
cmp
mov
dec
int3
push
aad
int
jmp
dec
add
in
cwtl
sub
jnp
push
enter
dec
(bad)
aaa
ldmxcsr
mov
sbb
lds
stos
sub
sbb
dec
fsubrl
lods
dec
bound
call
xor
push
jno
sub
jmp
addr16
stos
lret
cld
jne
ret
aam
jge
cmp
notl
imul
fstps
(bad)
ss
dec
popa
sbb
mov
sub
mov
jne
test
xchg
mov
call
dec
fldenv
xlat
jle
stc
stos
pushf
mov
push
xor
jp
lcall
je
and
lret
jae
bnd
xor
aad
leave
cmpsl
pop
loope
aad
mov
add
adc
call
pop
dec
xchg
rcll
pop
mov
xchg
push
mov
das
into
pop
add
fwait
or
push
mov
dec
movsl
stc
and
daa
xchg
adc
(bad)
mov
dec
inc
pop
xor
add
inc
mov
or
mov
and
movl
ss
add
int
jg
dec
jno
inc
add
xchg
loope
sbb
ja
repnz
adc
fisttps
outsb
mov
insl
xchg
pop
idiv
dec
fisttps
in
pop
add
add
loop
jns
xchg
dec
mov
push
jbe
pop
clc
shll
(bad)
jmp
ror
scas
ret
and
movl
frstor
dec
arpl
ds
sti
es
fdivrl
push
mov
xchg
rcrb
jbe
mov
jg
inc
xor
jp
inc
jne
sbb
shlb
sub
dec
lret
testl
or
push
or
movsl
sar
lock
inc
pop
inc
stos
cmpsb
lret
push
test
jle
cmc
dec
add
and
fsts
rcl
jle
ja
sub
adc
fdivrs
out
pop
into
dec
push
jmp
or
in
jae
scas
ds
cmp
in
inc
es
cmpsl
int
je
shlb
xchg
cld
adc
fdivs
pushf
fdivr
test
int3
mov
test
push
in
or
bound
loop
stc
adc
movd
xchg
mov
(bad)
sti
fmulp
les
inc
dec
fwait
rorb
or
std
cmp
aaa
mov
in
add
xchg
xorl
adc
pop
shl
cld
pop
inc
jp
lock
mov
rol
lahf
mov
mov
jbe
aam
mov
shll
push
mul
les
xchg
xor
into
fs
(bad)
test
in
std
sbb
xor
enter
dec
aaa
fmulp
jle
dec
cmpsl
roll
(bad)
fisttpl
adc
ds
add
mov
test
cs
sarl
pop
ja
sbb
mov
mov
or
and
dec
cli
ret
test
jb
incl
xchg
and
mov
sti
xchg
cld
mov
xchg
inc
(bad)
movsb
add
in
add
outsl
repz
or
xchg
sbb
je
pop
outsb
gs
cli
inc
in
mov
ljmp
or
xor
mov
cli
lods
lret
xchg
pusha
or
aaa
or
adc
pop
jmp
jecxz
xor
pop
fwait
push
int3
cmp
push
mov
mov
xchg
clc
xor
insl
rorb
in
mov
add
jo
and
ret
ficompl
jae
sbb
pop
lds
ficomps
fwait
pop
shrl
and
sbbb
into
rclb
xchg
jns
mov
push
sub
je
ret
aam
pusha
inc
out
dec
jge
int
cli
and
mov
fdiv
jmp
daa
stos
push
into
incb
xor
dec
push
lock
xchg
lahf
sbb
mov
jge
and
mov
inc
jmp
jle
jae
sbb
or
(bad)
in
insl
je
add
push
adc
inc
inc
lea
mov
imulb
mov
(bad)
jbe
out
xchg
iret
dec
inc
dec
sarb
hlt
aas
pop
and
rclb
dec
sub
mov
mov
jno
or
ljmp
push
adc
inc
addl
pop
sbb
cmc
inc
std
and
adc
push
cld
das
jge
call
push
shl
pop
sbbl
or
outsb
sub
ljmp
jmp
jp
xlat
add
xlat
aaa
(bad)
ret
out
lea
in
enter
and
cs
xor
fdivrp
xor
jp
xchg
inc
push
(bad)
mov
cld
(bad)
dec
push
inc
fstps
into
