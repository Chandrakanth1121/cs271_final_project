dec
push
rcl
fs
jp
or
sbb
mov
hlt
cmc
adc
or
sbb
mov
inc
enter
push
neg
addr16
lret
leave
and
dec
out
xchg
sbb
inc
push
clc
sub
sbb
sbb
push
shrb
add
adc
mov
adc
lret
sub
mov
xor
shll
fldenv
int1
pushf
out
test
int3
or
xor
mov
gs
jle
add
iret
mov
sti
loopne
adc
sbb
mov
ret
cli
int3
cmpsb
leave
push
lret
clc
add
mov
in
add
add
xchg
or
les
int3
push
xchg
push
andl
je
sbb
fimuls
or
in
cmpsl
and
xor
enter
cwtl
scas
into
dec
arpl
iret
sub
ret
push
shlb
pop
andl
jbe
cmp
xor
mov
push
ret
jbe
sub
mov
jo
shlb
call
(bad)
scas
jbe
push
cmpl
dec
popa
push
stos
pusha
addr16
pop
sbb
mov
mov
pop
arpl
stc
xor
fs
pop
int3
mov
and
fsts
cmc
mov
lock
jg
iret
out
pusha
bound
and
xchg
ds
mov
inc
inc
in
adc
nop
(bad)
outsb
out
and
cmpsb
and
inc
dec
outsl
or
test
ljmp
fistps
nop
sbb
add
andb
out
shlw
insb
jle
(bad)
mov
mov
daa
pop
push
or
int
jge
xlat
jmp
je
es
cmp
inc
add
sub
mov
imul
add
push
jno
inc
int
pop
pop
out
fwait
add
int
sub
xchg
and
inc
aaa
or
lods
sub
outsb
mov
dec
aaa
mov
push
test
push
mov
iret
cmpsb
cmp
jbe
mov
out
and
gs
bound
repnz
pop
dec
imul
pop
sub
pop
dec
jbe,pt
inc
push
mov
jge
addr16
outsb
int
jnp
pop
pop
xor
mov
adc
psrad
out
jne
int1
fdivrs
jnp
ljmp
inc
lods
push
in
lahf
sub
in
xor
sub
fdivrs
inc
pop
cmp
mov
mov
add
in
dec
jo
or
leave
cmp
xor
mov
add
test
gs
xor
enter
xchg
jb
inc
fadds
les
(bad)
cli
leave
cld
cmp
jbe
inc
test
xchg
sub
dec
add
push
pushf
and
aas
arpl
fdivl
sbb
lea
sarb
fmull
stc
lods
(bad)
je
lock
pushf
fldt
fnstsw
(bad)
mov
mov
xchg
lea
pop
out
xor
and
sbb
lock
scas
mov
ds
fwait
adc
dec
add
xlat
loopne
arpl
add
rcr
dec
add
mov
mov
(bad)
out
int3
sbb
cmpsb
mov
lock
hlt
test
int3
mov
aam
pop
cmpsb
scas
int
add
pusha
pop
clc
pop
les
mov
imul
xor
fst
pop
insb
cmpsb
push
xor
cmp
xor
loopne
xor
mov
addr16
test
stos
lock
inc
cld
outsw
xchg
rolb
xchg
mov
xor
pop
imul
jb
inc
loope
insb
shr
out
testb
in
rolb
jg
cmp
adc
mov
test
mov
(bad)
outsl
pop
and
ss
mov
in
push
fldcw
jno
loop
mov
xchg
int
xchg
sbb
insb
mov
jno
adc
mov
push
cmp
int3
daa
pop
lret
lea
shl
jle
xchg
pop
pop
lock
mov
inc
test
add
lret
push
dec
mov
inc
pop
out
fnsave
jmp
divb
lret
insl
mov
pop
dec
jns
mov
dec
xor
or
push
add
xor
iret
(bad)
dec
cmp
xchg
inc
vpsubusw
add
push
(bad)
cmc
push
data16
ss
jae
pop
mov
cmpsb
push
das
xor
test
jne
lods
push
sbb
(bad)
das
enter
(bad)
sub
adc
mov
lods
inc
mov
outsb
xor
movsl
(bad)
pop
iret
cld
aas
subl
push
movsl
jae
push
push
lret
daa
mov
in
cltd
push
(bad)
stos
jle
xor
xchg
cmp
cmp
je
sbb
mov
adc
test
loop
cmc
pop
cld
sub
jo
sbb
(bad)
jecxz
jnp
and
ljmp
ljmp
or
dec
stos
sti
or
outsl
jno
sahf
inc
cwtl
jl
je
push
cmp
mov
cmp
in
cmc
cmp
mov
inc
push
daa
mov
xchg
popa
or
popa
xchg
or
xchg
aad
and
aad
je
jmp
add
inc
rorl
add
div
jb
hlt
cmp
fs
jbe
lcall
pop
test
ret
and
push
cld
testb
sub
mov
aad
and
in
pop
out
inc
dec
jno
ficoms
stos
in
inc
sbb
sbb
ljmp
lret
cli
fidivl
inc
jecxz
sub
rolb
outsb
ds
sbb
inc
mov
(bad)
adc
or
push
cmp
outsb
int
stc
dec
cmp
cmp
outsl
cld
jmp
stc
pop
leave
fs
push
dec
sbb
test
or
pop
mov
inc
stos
add
add
stc
lea
fsubs
cmc
or
and
je
imul
add
push
lods
or
sub
pushf
ja,pt
call
push
cmp
lods
repnz
shll
fnsave
push
inc
push
pop
das
outsb
sahf
or
push
sub
in
ja
ret
sub
movsl
and
adcb
jl
pop
insb
adc
popa
bound
lods
sub
pop
cmp
lcall
fistl
jb
or
in
mov
pop
adc
pop
je
test
dec
js
or
dec
cmpsl
and
cmc
fs
cmpsb
sub
and
xchg
aad
lods
lret
and
xchg
adc
jae
or
mov
(bad)
insb
xlat
sub
lds
xor
ret
inc
sub
dec
jnp
inc
dec
call
stos
addr16
pop
inc
jb
jbe
fs
jg
ficoml
push
jbe
mov
jnp
fs
cmpsb
aad
mov
mov
push
and
mov
cmpxchg
sub
es
out
jmp
je
out
jnp
jo
popa
fidivs
sbb
lock
iret
movsl
jmp
jnp
mov
out
mov
mov
jle
mov
add
rorb
mov
in
mov
push
movsl
lods
(bad)
mov
shrl
cmpb
fs
and
cmpsb
ds
mov
out
stos
cmc
dec
lock
cmc
lods
dec
push
jno
mov
aas
out
mov
into
dec
out
xchg
mov
repnz
dec
scas
xor
stos
xchg
adc
pop
idivl
mov
fbstp
jnp
les
fwait
in
nop
pop
mov
movsb
push
mov
and
push
imul
jge
test
movsl
jne
inc
add
mov
dec
cmpsb
jbe
bound
fcompl
sub
cmp
xchg
rclb
ss
out
rolb
inc
dec
dec
in
jmp
scas
pop
mov
shrl
and
cmp
mov
test
sub
lret
jno
and
movb
push
adc
dec
pusha
fldt
outsl
mov
mov
test
ds
cmpsl
mov
in
pusha
cmp
dec
and
push
scas
ds
mov
insb
or
sub
negl
leave
popa
ret
mov
xorl
inc
mov
out
pop
cmpsl
lcall
jg
sub
dec
fistpll
jl
add
jbe
or
pop
xchg
cmp
mov
fs
out
jnp
dec
sbb
cmp
imul
jcxz
jb
xchg
pop
add
js
sti
ss
inc
push
push
test
sti
in
mov
push
lret
stos
push
mov
sub
xchg
sub
fcompl
adc
mov
fidivl
js
cmpsb
mov
mov
sub
jo
inc
adc
