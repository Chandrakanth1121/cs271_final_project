out
sub
inc
inc
popf
jp
add
jne
pop
ja
aas
push
mov
or
push
(bad)
cmp
std
sub
cltd
lock
adc
xabort
fistpl
subb
cmp
imul
push
sub
call
cli
test
dec
out
clc
gs
dec
xor
xchg
xor
jns
adc
xchg
sahf
mov
jae
test
hlt
lcall
push
jmp
push
xor
jae
lahf
cmp
arpl
loopne
add
or
test
xor
(bad)
or
jp
mov
xor
call
scas
movsb
outsb
repz
xor
lds
inc
pop
mov
push
pop
pop
pop
pop
pop
addr16
int3
repz
aam
stc
popa
pop
rorl
and
adc
mov
cmc
mov
jno
popf
cmp
mov
out
push
ds
lods
pop
or
sahf
sti
sbb
sbb
stos
inc
add
lock
jne
ljmp
int
push
outsl
pop
in
pusha
rcrl
das
aam
cmp
cmpsl
adcb
nop
jle
ljmp
push
inc
inc
inc
bound
lock
pop
dec
dec
pop
popa
mov
push
cmp
xchg
mov
cmp
aas
push
bound
mov
mov
jns
cmpl
xlat
sub
in
loop
push
add
outsb
jp
addl
sub
inc
mov
sbb
fnsetpm(287
(bad)
jb
imul
jmp
mov
(bad)
divps
pop
sbb
(bad)
aad
cmp
pop
inc
test
push
dec
fsubrl
xchg
xchg
or
std
es
xchg
xlat
test
inc
aaa
jne
pop
std
dec
std
orl
imul
stc
(bad)
repz
fyl2xp1
sub
cmp
fidivs
les
in
xchg
mov
push
adc
xor
adc
jmp
in
sbb
int3
gs
stc
sub
jns
mov
push
fstp
lock
outsb
leave
lea
fimull
fildll
cmp
xor
inc
leave
hlt
jo
dec
adc
jl
cmp
fistpl
pop
dec
xchg
dec
lods
movb
fcompl
xchg
test
ss
jo
sub
cmp
xor
inc
in
insl
adc
push
out
pop
mov
sub
push
dec
ss
ret
test
mov
xchg
out
dec
dec
in
pop
push
dec
or
cmp
dec
mov
mov
and
sub
jge
adc
inc
arpl
push
(bad)
aam
dec
pop
jb
or
(bad)
push
and
(bad)
call
cmp
push
arpl
aas
aad
push
jp
push
lahf
cmc
cs
jge
mov
mov
popa
das
les
pop
paddusb
push
(bad)
or
xchg
out
push
repz
pand
cmc
fs
push
cmp
dec
adc
or
add
jb
test
push
mov
stos
repz
xchg
cwtl
pop
fisubs
lret
ljmp
adc
out
fists
mov
scas
sbb
and
mov
imul
fstp
push
imul
test
stc
mov
test
out
push
jnp
pop
out
fisttps
and
lock
lods
mov
sbb
mov
jmp
js
sub
adc
cli
cmp
mov
addb
orb
popa
add
fwait
xchg
cmp
subl
fsub
test
int1
addb
push
scas
inc
adc
addl
dec
test
xchg
mov
std
shlb
ficomps
mov
jmp
mov
imul
inc
aam
out
adc
insb
pop
repz
fmulp
enter
shr
and
add
add
test
call
pop
fcmovne
aam
cmc
popf
cli
stos
loopne
pop
rep
jb
fsubp
and
cmp
mov
adc
mov
dec
outsl
fists
into
jp
xchg
xchg
lahf
in
xlat
lods
nop
add
push
cmp
xor
inc
call
jg
mov
les
es
shll
jge
test
lcall
sarl
fdivl
sub
and
lds
xlat
push
pop
outsl
xor
pop
sbb
das
lcall
popw
add
ljmp
sub
xlat
push
adc
inc
xor
adc
fdiv
cmp
xor
ljmp
inc
jo
cmp
jp
and
repnz
mov
xor
aam
inc
cmp
xchg
add
std
fadds
and
dec
cmp
mov
ss
lcall
inc
jp
push
insl
jns
sub
jl
cmp
sbb
test
pop
push
lahf
jns
dec
or
shlb
fstp
popf
cmp
mov
insl
and
gs
fsubrs
arpl
(bad)
(bad)
rcr
cmp
jecxz
popf
jg
lds
pop
(bad)
lret
pop
lock
loop
mov
xorl
mov
mov
les
jl
push
push
imul
int1
or
out
mov
add
orb
int
cmp
sub
mov
jge
cmpsb
inc
mov
dec
sub
cmp
fnstcw
pop
adc
dec
fs
call
fdivl
int1
and
sub
das
aad
fidivl
cld
movsl
mov
sbb
out
dec
push
jecxz
xor
pop
test
sub
stos
xlat
sbb
outsl
pop
mov
jns
jb
iret
bound
out
jmp
dec
add
inc
jne
cmp
cltd
loope
dec
cmpb
sbb
(bad)
lahf
xchg
sbb
cmp
jae
inc
shrl
les
inc
dec
push
stos
push
mov
imul
bound
xchg
jns
mov
xchg
and
shr
push
mov
xchg
pusha
fnstenv
xor
cld
(bad)
mov
aas
cs
cmc
test
sub
shr
pop
ja
mov
inc
fcmovb
jmp
xchg
movsb
mov
xor
or
inc
(bad)
stc
leave
into
cmp
sub
mov
pushf
idivb
rcll
xchg
ljmp
cmpsb
lock
pop
dec
xchg
and
mov
cmp
pop
add
jp
push
arpl
push
popf
out
mov
loop
mov
inc
in
inc
(bad)
rol
fnsave
rol
push
clc
fildl
outsl
in
aad
push
(bad)
outsl
imul
(bad)
pusha
arpl
push
mov
pop
pusha
xlat
or
dec
mov
sub
xchg
lds
adc
cmp
fbld
in
xlat
adc
inc
cmp
cmp
popf
mov
addr16
push
call
xchg
scas
add
dec
jno
adc
push
in
cltd
pop
fsubp
cmp
jno
test
insb
jl
mov
lods
dec
cmp
(bad)
or
dec
mov
cmp
push
popf
cmp
cvtps2pd
sbb
sub
or
pop
sbb
dec
xchg
lret
push
jmp
pop
les
jecxz
xchg
dec
add
add
ror
xor
pusha
imul
mov
imull
mov
dec
jmp
idivl
pmulhuw
movsl
jns
mov
push
cmp
add
pusha
pop
push
or
stc
cmp
test
xchg
xchg
sbb
pop
daa
pusha
insb
xor
enter
notl
jge
or
mov
mov
ja
fstpl
inc
cmp
mov
adc
dec
cltd
add
jb
lahf
out
push
push
pop
dec
xorb
lods
kunpckwd
and
div
jecxz
movsl
sbb
popf
mov
cmpsb
aas
xor
sbb
add
out
dec
cmp
int
or
gs
inc
loop
dec
iret
add
in
cmp
arpl
les
fwait
cmp
pop
xor
jecxz
xchg
pop
ficomps
push
test
aad
(bad)
sar
xchg
test
loopne
mov
push
insl
xchg
(bad)
out
test
mov
fildll
or
push
sub
adc
loop
mov
pop
xor
faddp
imul
mov
and
mov
rorl
rolb
jnp
int3
or
mov
xor
divb
push
inc
pop
pop
andl
test
inc
pusha
insl
cmp
mov
(bad)
jecxz
xor
mov
fcoms
dec
lods
sub
fidivrs
insl
xchg
cmp
fimull
pop
inc
pushf
push
sub
xor
push
cmp
test
dec
jp
mov
inc
jnp
adc
mov
shll
cmpsb
cmp
sti
xor
(bad)
pop
jnp
call
(bad)
mov
test
testb
jae
push
jae
pop
cmpsb
out
xor
lret
