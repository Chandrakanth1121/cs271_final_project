(bad)
outsb
enter
and
dec
push
sub
mov
fiadds
jb
sbb
shll
fs
cmp
loop
(bad)
or
push
xlat
sbb
fdivs
ret
add
int
push
dec
cmp
mov
divl
or
ljmp
push
int3
push
ret
stos
add
mov
pop
xchg
push
roll
cmpsb
and
int3
arpl
push
xchg
shrb
push
push
(bad)
and
mov
orl
add
push
cmp
fildll
sub
xchg
jp
mov
cmpsl
or
loopne
sbb
sub
pop
sti
inc
dec
add
push
cmp
aam
shll
outsb
and
sub
jb
imul
jno
jecxz
aam
jge
jae
lds
into
insb
and
mov
cmp
pusha
push
pop
pop
and
std
sbb
or
testl
sub
sti
(bad)
(bad)
mov
shll
mov
outsb
push
pushf
mov
ljmp
stos
test
pop
movl
or
mov
daa
js
out
clc
je
adc
push
mov
imul
cltd
sub
out
jb
add
mov
cmp
in
add
mov
mov
es
in
add
es
divb
int3
or
ss
add
shlb
pop
fldlg2
shll
adcl
add
jbe
cs
mov
inc
outsb
dec
inc
adc
jle
clc
movsb
add
stos
repz
push
adc
xor
cld
daa
sub
shll
pop
out
cltd
mov
cmc
mov
inc
das
in
in
iret
xchg
push
adcl
jns
nop
loop
dec
das
test
int3
lock
mov
fcoml
test
fstl
mov
(bad)
cld
cmpsb
and
fbld
pop
out
(bad)
fsubrs
(bad)
int3
xchg
sub
sbb
mov
jge
js
pop
ret
(bad)
fists
sti
xchg
jg
insl
dec
mov
cmp
in
bound
cltd
push
mov
mov
ja
push
pop
cmc
push
(bad)
mov
add
add
call
xor
pop
inc
xchg
add
mov
mov
cmp
test
inc
test
sub
imul
jle
jne
lea
push
jne
in
jg
fsubs
ret
pop
enter
adc
outsb
rcl
xchg
aas
inc
xor
decl
jmp
inc
(bad)
push
shrl
inc
lods
arpl
mov
lret
mov
sbb
adcb
mov
push
daa
push
push
jne
cmc
jne
shr
or
stos
dec
and
popa
imul
test
or
loope
insl
scas
inc
or
stos
hlt
(bad)
pusha
insb
mov
ret
push
sti
mov
std
cmc
(bad)
rcrb
lret
shll
les
std
repnz
movsb
(bad)
jle
mov
xchg
pop
push
add
pop
pop
mov
sub
fsubl
xchg
xor
shlb
push
andb
lods
out
(bad)
aaa
jg
mov
dec
mov
dec
and
or
cmp
cmp
mov
adc
es
ret
xchg
outsl
cmp
or
aad
pop
loop
push
into
lods
cmpsb
pop
call
xchg
mov
dec
push
cwtl
int1
imul
movsb
in
jno
arpl
call
sbb
test
inc
pusha
lret
sbb
lahf
mov
jo
ds
xchg
cs
or
add
rolb
sbb
test
inc
mov
movsb
mov
jge
sub
pop
cmp
int3
jns
jle
aaa
jbe
in
test
inc
pop
lahf
inc
into
or
mov
jge
imul
mov
(bad)
mov
loope
jl
ret
push
cltd
lods
jle
lods
mov
cwtl
(bad)
out
mov
jp
cld
in
fidivl
fsubl
cmp
mov
jle
ret
xchg
adc
(bad)
fsubl
jnp
pop
stc
adc
or
mov
loopne
in
fcoms
dec
lods
mov
jnp
in
aaa
stos
xor
pushf
mov
jp
test
dec
lock
inc
in
popf
test
xorl
pop
xor
aas
xchg
and
adc
ja
mov
sub
xchg
mov
subb
insb
push
mov
scas
inc
inc
call
fimull
pop
xor
pop
mov
lods
imul
xor
daa
xchg
scas
add
std
fsts
adc
mov
adc
btc
sti
push
pop
pop
pop
pushf
xor
jle
(bad)
cmp
push
imull
jmp
xchg
mov
int
add
scas
jbe
xchg
mov
push
fnstsw
daa
int3
das
dec
rol
cld
pushf
clc
cmp
(bad)
cltd
push
mov
jle
ds
sarl
pop
mov
or
inc
mov
jno
jmp
jo
adc
pop
arpl
es
xor
or
mov
arpl
sub
popf
mov
and
mov
sbb
xchg
leave
jge
(bad)
adc
(bad)
fwait
inc
inc
das
notb
cmp
ficoml
cmc
jnp
or
jle
and
xchg
xchg
push
or
mov
adc
jl
jo
orl
(bad)
jge
sbb
adc
lret
pusha
popf
push
sbb
pop
mov
repnz
push
adc
sub
xchg
xor
pusha
jge
jmp
scas
mov
lea
fists
jnp
ds
(bad)
mov
mov
movsb
fcoml
xchg
push
hlt
xchg
sarb
or
cltd
adc
and
jbe
shrl
inc
ja
add
adc
xchg
std
jb
(bad)
fdivrs
inc
cmp
xor
inc
ss
std
pushf
jle
scas
jmp
pushf
jbe
sarb
or
repz
xlat
jp
add
mov
fsubrl
outsl
fistpll
mov
test
shlb
cmp
lret
mov
lcall
mov
jecxz
mov
pop
bound
loope
int3
and
mov
leave
mov
call
lods
mov
mov
jno
out
test
mov
into
(bad)
aaa
aam
stos
test
int3
lahf
mov
dec
jne
movb
mov
xor
ss
inc
clc
out
and
fdivs
jne
mov
cltd
jge
xor
mov
test
sub
adc
dec
sub
decb
mov
outsb
and
add
pushf
sar
mov
or
fs
mov
xchg
xorl
aad
sub
sub
jmp
sbb
or
cmp
mov
hlt
mov
mov
ret
mov
sub
sub
jmp
idiv
add
vbroadcastss
daa
mul
push
mov
aaa
or
jg
mov
jl
iret
gs
and
pop
mov
lock
std
mov
popf
jb
adc
mov
iret
sub
pop
pop
in
push
xlat
xor
pop
lock
out
cs
clc
push
push
(bad)
fcmove
ret
les
cwtl
and
mov
sbb
push
rclb
add
sub
xor
fs
jp
cwtl
cltd
sbb
jecxz
sub
loopne
pop
or
test
testl
xor
jno
pop
xor
push
int1
cmp
outsl
imul
hlt
add
popa
sti
jp,pn
pop
jl
push
add
movsl
imul
add
test
push
jge
push
cmpsl
cmp
pop
mov
jecxz
fiaddl
cmpsb
xchg
clc
mov
and
push
js
mov
aad
xor
jl
in
lcall
das
ljmp
daa
imul
aad
mov
jecxz
aaa
stos
sub
lea
adc
and
jmp
into
imulb
hlt
inc
xchg
sbb
lret
ljmp
outsl
adc
in
ds
adc
in
xchg
sbb
gs
dec
push
and
je
dec
mov
sbb
sub
pop
rcrb
xchg
push
out
xor
cmp
std
imul
fistpl
mov
xchg
lret
dec
xchg
(bad)
fwait
sbb
cmpsb
cmpsb
out
lds
xchg
(bad)
(bad)
lcall
lds
ss
test
adc
scas
inc
jo
ss
int
fidivs
fdivr
sub
inc
negl
pop
cmc
sub
cli
sahf
iret
int3
fdivs
jne
loope
fs
mov
int
cmp
stos
inc
cmp
bound
pop
or
or
iret
dec
inc
(bad)
pushf
mov
fs
add
mov
cs
not
push
add
jle
push
mov
pusha
