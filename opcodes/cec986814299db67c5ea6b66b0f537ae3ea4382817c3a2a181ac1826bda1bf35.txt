pop
data16
incl
inc
add
pop
inc
outsl
outsl
insb
gs
outsb
add
or
add
jmp
jae
add
jb
lea
sub
add
push
fdivrp
mov
add
push
insl
dec
insb
imul
add
imul
shrl
pop
pop
dec
and
add
xor
mov
jns
test
push
outsl
jb
out
lea
add
lods
jle
cld
divb
nop
mov
push
push
je
sub
out
push
in
pop
add
hlt
push
cwtl
cmp
xor
movsb
push
test
mov
arpl
mov
push
dec
bound
arpl
pop
sbb
jecxz
jae
insl
xor
or
jb
popa
arpl
add
decl
push
mov
int3
addl
jmp
lahf
in
loopne
dec
or
int3
pop
mov
in
dec
jno
xchg
jge
or
clc
sbb
out
cs
js,pn
or
mov
les
js
dec
aam
adc
inc
andb
and
push
loopne
and
and
enter
enter
mov
clc
mov
xor
and
and
and
nop
orl
mov
enter
js
nop
xchg
orl
add
xchg
sbbl
pushf
sbb
nop
adc
insb
push
push
fs
push
add
mov
sub
push
call
sub
je
movzwl
popa
cmpl
ret
pop
pop
(bad)
sbb
push
dec
(bad)
dec
sti
leave
and
in
fcos
aaa
xchg
incl
push
add
add
(bad)
mov
inc
mov
mov
ret
lea
mov
mov
out
mov
decl
fs
mov
mov
mov
push
nop
mov
add
scas
mov
jg
out
repnz
xchg
les
mov
mov
or
jg
neg
adc
add
push
mov
lcall
ficomps
mov
cmp
push
push
push
mov
mov
adc
mov
mov
add
rcrb
(bad)
mov
out
in
lock
push
or
push
or
ret
and
inc
lea
sarb
add
jmp
add
pop
jne
aaa
cmp
jle
sub
fistpll
jmp
loope
mov
sub
cmp
pop
addr16
pop
pop
push
fidivs
jle
mov
mov
xchg
cmp
jb
mov
add
call
ja
jbe
mov
mov
aaa
or
mov
popa
lahf
ja
dec
ret
jmp
pop
mov
add
pop
sub
and
sub
orb
cmpl
sub
mov
lock
jo
out
paddq
jmp
sbb
scas
pop
jo
sti
sbb
sti
jne
sbb
nop
es
mov
addl
mov
mov
and
add
and
push
int3
lock
xchg
mov
mov
test
je
mov
mov
out
mov
dec
add
add
pushf
lock
push
mov
sub
mov
push
in
int
push
pop
int1
cmp
leave
add
popf
cmpl
in
xchg
push
nop
mov
in
mov
add
mov
or
pop
int1
lock
call
sub
mov
loop
push
in
daa
out
ja
mov
add
cmp
mov
outsl
xor
cmp
jnp
sub
pop
gs
in
sbb
or
movl
filds
sbb
mov
outsl
jg
ret
sbb
push
mov
or
push
adc
ja
pop
xor
mov
mov
and
sbb
add
lock
sbb
jae
sahf
loopne
pop
sub
or
lds
mov
out
(bad)
(bad)
cmp
add
and
mov
cmp
or
or
lret
ret
or
jbe
scas
adc
sti
push
push
(bad)
ja
out
xchg
dec
jmp
ss
jae
and
sbb
repz
(bad)
gs
mov
sahf
jb
in
push
inc
or
addb
add
sbb
add
or
inc
addl
mov
fdivrp
sbb
iret
ja
clc
mov
(bad)
aas
jp
mov
or
add
repnz
shll
cmp
jg
jp
pushw
xlat
mov
push
cld
in
je
mov
nop
dec
cwtd
inc
ds
adc
jne
push
(bad)
pop
add
scas
lret
fimuls
and
movsl
and
push
mov
push
nop
insl
pop
mov
or
out
cli
jge
add
cld
ret
cmp
inc
jle
outsb
mov
sub
push
stos
dec
cmp
aas
inc
mov
nop
or
xchg
js
mov
pop
fsubs
or
call
xor
test
mov
jmp
imul
jne
or
xchg
nop
cmp
sbb
lock
sub
inc
popf
fsubs
shll
mov
jo
push
lea
incb
and
sub
lea
flds
adc
fidivs
mov
out
rorl
pop
nop
xchg
mov
imul
(bad)
ret
addr16
add
adc
jmp
mov
ja
jmp
pop
jle
addb
push
push
std
aas
xchg
push
mov
push
cmpb
xor
lods
rcll
and
push
call
sub
mov
xor
cld
std
stos
leave
jg
hlt
inc
cmp
in
mov
pop
jnp
add
rcrb
pop
push
and
push
ffree
sti
mov
mov
mov
dec
dec
push
in
lds
xchg
test
shlb
add
iret
add
pop
cmp
or
adc
xor
gs
imul
add
cmp
arpl
jmp
mov
(bad)
pop
ds
mov
cmp
adc
adc
dec
or
pop
pop
jg
adc
test
jns
add
sar
pop
jnp
adc
and
stos
sti
jle
mov
sub
mov
insl
adc
outsl
ljmp
call
jb
add
or
mov
cmp
mov
or
sbb
(bad)
(bad)
mov
jmp
cmp
jl
movl
mov
out
push
jb
pop
lahf
daa
add
or
or
mov
mov
mov
mov
mov
sub
test
cld
leave
lahf
jmp
mov
add
jbe
or
xor
hlt
push
or
push
rolb
mov
rcrb
andl
jg
pushf
loope
or
ljmp
sub
ret
sti
out
ret
testb
je
mov
xor
(bad)
jb
sub
cmp
cmp
testb
add
mov
(bad)
mov
xor
add
sti
int3
or
fsubs
test
jne
mov
(bad)
mov
cld
mov
sub
pop
ljmp
add
pop
xchg
js
int3
shll
xorb
into
jge
cld
jg
push
push
test
sub
cmp
jge
mov
scas
and
out
(bad)
jmp
daa
xlat
pop
clc
into
cs
lea
and
in
mov
dec
pop
fldln2
aad
(bad)
lds
cmp
or
fcoml
jnp
mov
jb
and
mov
xchg
mov
(bad)
mov
mov
add
ror
xlat
sub
jo
(bad)
aaa
adc
movsl
jecxz
rol
ret
nop
inc
xchg
mov
hlt
cmpsb
adc
mov
cmp
shr
cmp
inc
adc
push
pop
add
sub
jle
orl
lods
test
mov
jnp
or
mov
jle
adc
or
inc
fbld
mov
or
adc
sbb
or
pop
cmp
dec
mov
dec
cmpsb
(bad)
in
decb
and
movsl
mov
cltd
push
in
lds
or
or
loop
push
call
push
mov
cmp
popa
push
add
pop
add
xchg
repz
(bad)
sub
xor
adc
ja
lcall
add
add
mov
adc
leave
aam
loope
(bad)
psllq
les
wrmsr
sub
popf
add
pop
inc
stos
test
rol
pusha
mov
mov
sub
cmp
push
test
ror
adc
or
ljmp
lock
jecxz
sub
test
inc
pop
cmp
push
jle
adc
jg,pn
ret
int1
(bad)
mov
pop
je
pop
jmp
sub
test
sbb
mov
pop
jle
aaa
cmp
movsb
sub
pop
mov
mov
int
mov
add
repz
scas
inc
sub
xor
mov
pop
inc
aad
out
xor
cmpsb
roll
