(bad)
(bad)
(bad)
call
in
mov
imul
push
mov
add
jmp
sub
mov
call
decl
jns
pop
insl
(bad)
(bad)
(bad)
pop
ret
push
push
push
call
add
ret
pop
int1
cmp
dec
mov
sub
add
lods
mov
pop
ret
mov
push
lea
mov
mov
add
leave
mov
mov
add
add
pop
insl
fdivp
inc
mov
test
je
mov
ret
xor
push
inc
add
add
add
adc
and
fadds
je
add
inc
inc
jge
incl
cmp
jne
lea
or
dec
lock
scas
adc
bswap
mov
lea
push
sub
loopne
inc
or
jbe
fisubrs
add
call
dec
push
push
jne
mov
sbb
fidivrl
dec
fiaddl
leave
ret
pop
adc
jne
lcall
fistpll
out
mov
jmp
fbstp
cmpl
jne
xor
dec
adc
dec
sti
decl
je
push
push
push
mov
pop
rorb
call
push
ljmp
js
mov
push
shrb
pop
aam
sub
sub
mov
call
mov
call
push
push
cld
testl
or
cld
sbb
pop
lock
inc
sar
push
push
cltd
sub
mov
sar
add
or
push
jmp
test
lea
cmp
jle
xor
hlt
sub
outsl
js
std
inc
sar
add
inc
rclb
sbb
repnz
popa
(bad)
jg
rorl
rclb
push
push
push
test
sbb
pop
notl
rorb
cmpl
loop
jno
push
ja
pop
push
lea
or
int1
mov
out
lea
sub
jle
jo
pop
pop
shll
push
insb
cld
jl
xor
clc
aas
or
jp
push
stos
jl
fidivs
mov
(bad)
push
mov
cmp
je
mov
xchg
int3
or
paddd
clc
mov
jmp
lcall
mov
sete
push
std
xor
mov
(bad)
fildl
push
sub
cmpsb
mov
xor
sub
mov
and
dec
pop
pop
lcall
mov
inc
insl
sbb
cld
jmp
or
mov
imul
and
pop
cmp
lods
dec
push
jo
incb
mov
or
pop
push
cs
pop
pusha
dec
add
sub
add
xlat
into
out
ljmp
dec
mov
(bad)
mov
aam
jl
sbb
shlb
mov
ds
insb
pop
adc
int
sbb
mov
leave
ret
(bad)
in
pop
lea
push
cwtl
push
fcomp
sub
pusha
aas
sub
ljmp
daa
enter
pop
roll
push
pop
pop
sub
adc
mov
cmpb
test
adc
inc
sbb
add
xchg
pop
pop
inc
cmp
rcll
xlat
push
stos
mov
adc
aaa
push
jg
sub
std
fisubl
mov
adc
std
fwait
or
test
sti
(bad)
decl
push
(bad)
(bad)
enter
insl
sub
cmp
xchg
jle
call
sbb
test
dec
cmp
rcr
jg
push
mov
ljmp
lea
addr16
push
fstl
sar
inc
add
add
mov
call
pop
test
outsl
push
jle
mov
dec
decl
mov
lea
push
(bad)
in
adc
xor
sbb
mov
push
iret
inc
pop
mov
add
aas
frstor
mov
test
je
es
adc
pop
mov
jecxz
push
add
push
cmp
adcl
lods
and
cld
aam
or
fucomi
jge
test
or
sti
mov
test
in
cmpw
adc
dec
je
inc
mov
push
mov
outsl
shl
inc
jmp
xor
adc
loop
ficoml
xor
add
add
arpl
sbbl
test
mov
mov
test
sub
push
mov
js
test
cltd
fidivl
push
push
mov
fadds
lock
inc
push
aas
fildl
mov
or
mov
imul
in
movsl
add
jnp
call
cli
ret
lret
jbe
adc
pop
es
xor
sbb
bound
jg
add
add
lret
mov
add
push
cmp
jns
lret
mov
or
sbb
add
mov
adc
sti
xlat
mov
adc
(bad)
or
xchg
sbb
sub
mov
in
add
xor
or
in
push
femms
push
lcall
or
dec
pop
and
loope
pop
lret
add
in
fcmovnu
cmp
loop
pop
aaa
mov
jne
ljmp
sub
and
jbe
or
push
push
push
ljmp
sub
jae
outsb
cwtl
add
xchg
mov
(bad)
push
clc
jbe
out
cmp
hlt
adc
xor
outsb
push
mov
cmpsb
aas
jl
add
inc
pop
xor
(bad)
xchg
out
rol
sahf
sub
xor
div
push
ljmp
jmp
push
add
loop
in
xor
ljmp
call
and
pusha
sbb
and
shl
sti
jecxz
out
adc
push
jecxz
andl
movsl
insb
and
jecxz
dec
test
push
inc
rorb
test
jne
sub
je
cmpb
scas
mov
pop
inc
(bad)
mov
loopne
sbb
daa
jae
adc
xor
mov
add
push
dec
sbbl
xor
lock
xor
fs
cwtl
data16
inc
add
xchg
movb
cld
popf
dec
pop
or
add
mov
fadd
cld
add
and
outsb
push
sahf
lret
push
leave
pop
out
add
imull
inc
(bad)
bound
add
mov
dec
and
addr16
inc
loopne
push
movsl
pop
or
push
dec
xchg
loope
pop
xor
lock
faddl
mov
jl
or
pop
lcall
add
inc
push
pop
mov
loop
in
in
in
adc
rolb
push
push
add
add
or
sarl
subb
push
mov
outsb
push
(bad)
cld
pop
les
enter
ljmp
or
lock
mov
movsl
int
jnp
push
and
decl
cmp
je
push
and
sbb
xchg
jne
xor
inc
addl
decb
jl
mov
lahf
jne
cmp
imul
add
xorl
fstpl
cmp
mov
inc
jmp
or
adc
stos
push
addr16
jns
mov
imul
mov
xchg
jbe
fcmovu
ret
push
push
push
incb
add
enter
daa
orl
divb
jbe
sbb
xchg
dec
sbb
push
daa
daa
aas
clc
les
sti
sbb
xchg
jge
sub
out
or
mov
jmp
add
jae
enter
or
cmp
and
mov
lahf
or
and
rorl
xor
push
or
enter
and
jp
fldl
stos
mov
sub
hlt
jmp
insl
dec
les
ljmp
xlat
xor
movsb
cmp
mov
mov
cs
mov
(bad)
push
ds
lds
or
lock
xlat
outsb
ss
pop
mov
pop
pop
xor
or
inc
rolb
xchg
cmp
mov
sti
mov
movsb
push
test
push
cld
int1
and
jno
idivb
je
adc
push
nop
cmc
lcall
or
fisttpl
jne
cmp
je
les
jecxz
fldenv
fcmove
sub
mov
mov
mov
mov
mov
adc
jo
mov
or
or
in
inc
pop
jecxz
mov
jb
in
hlt
mov
jo
add
mov
push
sub
pop
cmpsb
or
add
test
jg
xor
sub
in
mov
mov
add
mov
flds
jbe
js
nop
inc
movl
clc
pop
loopne
mov
scas
movzbl
mov
fucom
jge
ret
or
add
mov
fisubs
or
pop
adc
inc
pop
add
push
adc
adc
or
mov
notb
lahf
out
cmp
jne
cmp
or
mov
sub
pop
jmp
xchg
mov
scas
jo
je
je
shrb
and
pop
mov
clc
sbb
insb
jmp
test
loopne
sub
in
(bad)
lea
mov
inc
cmp
