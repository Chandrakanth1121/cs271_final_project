mov
jg
insl
push
mov
call
outsb
(bad)
jnp
call
and
mov
push
push
xchg
out
fildl
jecxz
or
and
and
mov
and
xchg
or
pop
sbb
fcompl
rol
xchg
aas
push
mov
imul
enter
clc
xor
and
rol
sbb
and
addr16
inc
dec
adc
out
dec
sub
mov
xchg
mov
fisubl
int3
mov
leave
xchg
mov
test
jno
scas
and
fbstp
(bad)
jle
add
ret
sub
insb
rcl
orl
loope
mov
xchg
jno
std
inc
xor
es
pop
dec
lcall
sbb
mov
sub
or
gs
mov
xchg
out
sbb
xchg
popa
(bad)
pop
jnp
mov
cmp
xchg
cmpsb
pop
not
outsl
sbb
cmp
pop
jge
dec
int3
scas
push
ret
ret
sub
xchg
push
shlb
insb
sub
rcl
inc
call
mov
sub
loope
xor
dec
(bad)
pusha
cmp
je
dec
popa
push
xchg
and
adc
inc
stos
bound
add
outsb
out
mov
lods
jbe
sbb
je
fdivl
fbld
int1
fbstp
mov
jle
mov
cld
and
(bad)
(bad)
xchg
xor
xorb
or
mov
jmp
mov
imulb
and
dec
leave
outsl
ss
lea
das
lods
mov
out
in
sbb
fdivrs
ret
ljmp
call
mov
sub
mov
or
pop
mov
mov
lcall
stos
sbb
mov
mov
(bad)
orb
int3
sub
test
dec
lea
movsl
fs
das
and
(bad)
fbld
lret
inc
movsb
pop
push
push
push
sahf
outsl
in
adc
ret
mov
push
ret
push
or
enter
sub
inc
pop
int
dec
fisubrl
mulb
mov
push
les
(bad)
test
int
fstpl
and
dec
fiaddl
xchg
mov
jne
cmp
(bad)
int
push
lret
mov
cmp
sub
mov
mov
imulb
stos
add
fidivrs
lcall
and
fidivrl
lea
aad
mov
xor
dec
mov
jbe
dec
xor
mov
movsl
fidivrs
faddl
and
fmuls
fsubl
fisubrl
dec
fiaddl
lret
jge
add
dec
xor
lea
cmp
push
outsb
jp
imul
scas
mov
xor
cmp
test
outsb
xor
lea
dec
pusha
xor
repnz
xchg
pusha
mov
in
and
mov
insb
xchg
jg
cmp
fcoml
cmp
mov
cmp
mov
mov
insb
pmaddwd
aaa
dec
xor
fisubrs
and
subb
js
hlt
and
sbb
insb
insb
mov
lcall
inc
mov
mov
fistpl
mov
pop
daa
mov
push
into
or
or
rcrl
xor
rorb
mov
sub
jmp
xchg
sbb
(bad)
or
negb
shl
sahf
sbb
sbb
fimuls
lret
or
out
or
sbb
rorl
mov
shlb
out
xchg
sbb
fimull
(bad)
nop
into
aas
loope
sarl
jg
rorb
repz
sbb
outsb
rcrl
div
out
sbb
sbb
sti
or
sbb
outsb
fdivrs
(bad)
push
repnz
dec
sbb
xchg
lret
cmc
negl
nop
into
cmp
pop
sarl
jg
rorb
repz
sbb
rcrl
neg
(bad)
js
pop
shll
cmp
adc
in
shrl
repz
pop
imulb
(bad)
inc
in
shl
adc
sub
push
mov
pop
div
aad
enter
ficomps
xchg
(bad)
xor
jg
cli
(bad)
mov
aad
or
(bad)
jge
lock
jb
jge
jno
xchg
ja
mov
pusha
dec
aad
jp
fiaddl
mov
jne
and
jp
jno
lea
test
push
xor
aaa
dec
fiaddl
les
mov
mov
je
insb
pop
jnp
cmp
jecxz
inc
pop
add
dec
fisubrl
xor
sbb
call
out
movsl
outsl
xchg
dec
pusha
xchg
jbe
and
and
pushf
insb
shl
lods
mov
mov
jle
cmp
xchg
popa
xchg
ja
and
popa
pop
movsl
lods
daa
cmp
mov
fiaddl
arpl
pusha
stos
pushf
insl
and
fidivs
les
ss
insb
jmp
or
out
add
mov
js
push
mov
sbb
into
cmp
lcall
cmpsl
mov
dec
xor
enter
inc
testb
add
xor
xchg
push
inc
mov
cmc
ror
orl
orb
(bad)
mov
add
dec
aad
jne
and
xchg
enter
adc
ljmp
mov
cmp
fidivs
js
int
push
adc
mov
iret
int
stos
push
or
jnp
pop
push
(bad)
aaa
popf
mov
sarb
ficoms
out
repnz
cmp
adc
mov
or
addr16
dec
hlt
sarb
std
sbb
lret
movzbl
mov
rorb
subb
(bad)
out
pop
mov
pusha
sti
dec
xor
dec
in
mov
jl
rclb
or
dec
or
ds
mov
enter
hlt
iret
out
pop
or
pop
mov
aaa
cmp
outsl
sub
fildl
jbe
pop
inc
xor
fiaddl
aaa
inc
jmp
cmc
jg
cmp
dec
fiaddl
cmc
dec
fadds
lcall
(bad)
dec
mov
aad
mov
aad
jbe
adc
fxch
out
pop
or
mov
sub
aaa
cmpsl
sbb
aaa
dec
fiaddl
fldcw
xchg
dec
fiaddl
lods
sbb
das
dec
fiaddl
xchg
out
mov
pop
in
or
in
pop
into
aaa
dec
and
out
es
jno
repnz
aam
repnz
mov
push
xchg
les
inc
int
mov
push
pop
pop
mov
outsb
or
int3
outsl
add
testl
push
inc
insl
sbb
test
fdivr
cmpsl
cmp
dec
popa
pushf
adc
fs
mov
into
adc
test
mov
fisttpl
jmp
mov
xchg
out
adc
add
push
test
jl
aam
stc
fildll
mov
aam
push
or
add
dec
pop
push
fwait
sbb
cli
mov
xchg
mov
movsb
ss
cld
dec
out
jecxz
dec
loopne
out
push
arpl
mov
or
push
mov
inc
xchg
mov
xchg
add
incl
adc
loopne
fmulp
loopne
jp
cmp
add
xchg
and
xchg
jp
pop
add
or
out
sub
jnp
adc
sbb
sbb
outsl
add
cmpsb
in
or
in
mov
pop
xchg
cli
movsb
ds
dec
mov
add
or
xchg
mov
xchg
dec
cmc
jl
and
arpl
fstpt
in
ret
dec
or
cli
mov
aam
mov
sbb
mov
out
(bad)
int
fisttpl
or
in
pand
or
in
add
dec
leave
or
in
pop
fisttpl
or
in
sbb
dec
leave
or
in
pop
fisttpl
or
in
adc
dec
leave
or
dec
inc
dec
xlat
ret
mov
push
dec
inc
or
roll
mov
cwtl
cli
rcrb
jmp
sbbb
flds
lahf
insb
lds
push
cmp
sbb
lret
pop
dec
xor
scas
push
dec
jne
cmp
mov
inc
inc
push
incl
incl
xor
scas
push
dec
jne
daa
movsl
jle
cmp
int
scas
inc
inc
push
incl
decl
pushf
sub
dec
jne
sub
fisttps
sahf
xor
scas
dec
inc
push
incl
dec
mov
rorl
add
xor
pand
rorl
mov
ss
sbb
in
pop
fisttpl
or
in
adc
xchg
dec
leave
ffreep
rorl
xchg
and
mov
cmpsl
insb
lds
scas
dec
inc
pop
incl
sbb
xor
pop
fidivrl
int
ror
mov
xlat
dec
mov
cld
cmp
sbb
sbb
insl
push
dec
dec
in
ret
(bad)
or
ret
