fistpl
in
sub
push
push
push
lea
or
and
xchg
aas
jnp
negb
lcall
push
push
add
push
rclb
in
ja
adc
mov
inc
cld
push
push
or
ds
push
(bad)
div
not
or
push
or
(bad)
sub
out
pop
push
into
testl
pop
pop
pop
leave
ret
in
add
repz
sar
adc
push
jb
jo
setl
and
insl
sti
out
pop
add
add
test
jne
and
cmp
aas
and
push
mov
sbb
push
cmp
push
pop
aaa
rol
and
cmp
fs
lea
fdivr
mov
andl
movl
(bad)
pop
sub
in
outsb
clc
add
inc
and
je
push
inc
push
xor
dec
mov
das
sbb
lods
push
dec
mov
insl
andl
ljmp
in
ja
add
orl
stos
jo
dec
hlt
pop
mov
(bad)
(bad)
je
or
jbe
movb
aas
add
faddl
popa
cmp
xor
or
cmp
pop
int3
bound
idiv
push
xor
push
push
imul
xchg
pusha
ret
out
sub
push
mov
dec
je
pop
add
stos
lcall
data16
rcll
jno
cmp
arpl
popf
int3
pop
inc
push
push
adc
mov
add
dec
add
xchg
mov
xchg
std
pusha
add
xchg
jmp
push
mov
pop
ret
sub
cmpsb
mov
hlt
push
jb
and
hlt
mov
pop
fadd
mov
inc
push
mov
pop
push
js
add
cmp
pop
cmp
aam
sbb
sub
sahf
inc
mov
sub
shl
or
adc
pop
fildll
(bad)
push
sbb
sbb
leave
cmp
setne
mov
add
push
push
mov
or
adcl
in
push
push
mov
nop
push
xchg
(bad)
jmp
push
xor
pop
mov
div
add
mov
jb
(bad)
int3
and
int1
repnz
(bad)
pop
repz
or
test
subl
or
fs
imull
inc
hlt
(bad)
push
inc
xor
mov
(bad)
xor
push
or
das
jo
pop
and
cmp
fdivs
inc
mov
sub
dec
call
loopne
sbb
mov
andb
cld
add
stos
xor
mov
negl
ds
adc
inc
aad
mov
and
fwait
inc
pop
stos
inc
xor
pusha
leave
push
jnp
push
xor
add
pop
adc
gs
mov
cmp
push
mov
mov
pusha
ja
in
push
das
pop
stos
pop
pop
movsl
and
mov
push
add
mov
in
or
repnz
or
inc
pop
enter
push
or
push
jle
push
mov
mov
jle
loopne
pop
xchg
dec
inc
xchg
das
movsl
adcb
xchg
pop
fcomps
and
or
in
hlt
int3
jmp
cmp
in
mov
mov
sbb
or
lret
in
or
cld
push
mov
hlt
lock
call
in
(bad)
aam
jb
jl
test
js
pop
cs
lret
addb
mov
pop
cs
xchg
movsb
dec
push
lods
mov
lret
in
mov
repz
cs
enter
or
int3
add
mov
iret
test
mov
push
cmp
push
iret
pushf
sub
testl
andb
push
and
jle
inc
mov
add
or
pop
or
out
mov
xchg
cwtl
mov
in
mov
shlb
out
push
push
je
call
cld
push
rclb
push
pop
orl
movsl
jge
pop
or
sbb
sbb
frstor
sbb
and
popf
shr
subb
sbb
pushf
xor
sbb
add
or
inc
xchg
lea
int
mov
add
xor
push
nop
sarb
cmp
xchg
jo
adc
add
out
cs
and
jo
xor
and
inc
pop
shlb
cmp
je
cmp
repnz
jg
imul
rolb
je
(bad)
mov
aam
push
push
and
jmp
push
dec
push
push
scas
mov
push
sarl
mov
clc
ja
inc
in
mov
mov
mov
push
xor
ret
mov
jl,pt
out
jmp
mov
enter
orb
pop
mov
push
ret
and
xor
fdivrp
add
or
ret
or
mov
ljmp
mov
push
and
test
mov
mov
push
inc
push
sub
xor
pop
fidivrl
loopne
shlb
cld
int1
fiadds
push
mov
add
mov
mov
push
dec
pop
sahf
add
push
mov
fdivrs
cli
popa
or
imul
adc
loopne
lods
pop
cmp
cmpsl
paddsb
aam
mov
mov
jns
adc
daa
add
fisubrl
push
lahf
push
daa
add
imul
push
xor
ss
and
xor
mov
pop
mov
and
jl
mov
enter
clc
push
bound
idivb
and
das
adc
xor
pop
push
sbb
(bad)
xchg
(bad)
dec
sub
jns
xor
dec
xchg
xchg
pop
mulb
mov
cmp
pop
and
cmp
mov
cmp
push
(bad)
nop
mov
sub
aaa
push
pop
push
in
aas
adc
cmp
pop
jne
xor
or
push
into
xchg
daa
orl
push
test
inc
mov
xor
inc
pushf
push
sbb
inc
mov
cmpsb
mov
lahf
jo
jmp
inc
sub
push
sub
pop
ret
test
push
lods
push
add
shrb
mov
push
push
and
push
sbb
imul
xchg
mov
ret
cmp
lea
jmp
jmp
lret
test
pop
or
inc
sbb
ret
mov
xchg
int
call
clc
repnz
loop
push
add
jbe
cs
push
in
jns
xchg
pop
mov
jl
outsb
sbb
and
dec
lock
or
xchg
ss
js
lock
cli
mov
fistpll
in
push
xor
call
fnstcw
int
negl
hlt
loope
mov
daa
push
and
outsl
xchg
or
push
push
adc
push
mov
push
sbb
mov
mov
insl
lods
adc
pop
rorb
xorb
je
jb
sub
push
inc
movzwl
roll
push
nop
xorl
jl
mov
loopne
fsub
xchg
jnp
loopne
test
enter
xchg
clc
js
nop
sbb
cmp
xchg
cltd
imul
jo
mov
les
in
or
pop
insl
dec
movsl
push
popf
xor
idiv
xlat
xor
int1
inc
push
ss
(bad)
and
pop
ret
add
and
adc
mov
sub
jns
test
jge
hlt
pop
sub
adcb
sub
xor
outsl
jl
js
push
dec
nop
push
xchg
mov
ja
jmp
jmp
push
mov
or
cltd
pop
inc
(bad)
jg
sbb
push
xor
pop
xor
lea
in
shlb
clc
fwait
div
stos
stos
stos
mov
rorl
pusha
daa
sbb
aam
shll
repz
mov
sub
fnstcw
imulb
inc
inc
sti
in
push
inc
push
pop
xor
out
and
sub
cmp
mov
mov
cmp
cmp
push
push
loop
jmp
dec
and
inc
addr16
lods
dec
cs
gs
cmp
insb
pusha
jnp
push
loop
xchg
push
cmp
mov
cmpsl
mov
add
cmp
loopne
lcall
mov
sarl
js
mov
shlb
or
push
leave
ror
and
jecxz
and
mov
jle
imul
jle
jne
cmp
call
push
cmp
inc
and
or
hlt
or
push
out
adc
and
cs
lods
loope
add
mov
nop
inc
out
sbbl
or
ds
add
bound
sbb
push
push
push
ret
lcall
test
jno
or
jecxz
xchg
insl
imul
dec
fcomps
cld
or
mov
