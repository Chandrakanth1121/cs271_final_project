or
cld
cs
adcb
mov
mov
test
leave
in
xor
repnz
(bad)
scas
mov
cltd
pop
aas
ret
xor
lcall
push
jb
fstps
imul
mov
jmp
mov
jmp
mov
xchg
and
in
xor
repnz
(bad)
mov
xchg
adc
test
sbb
mov
test
mov
cmp
repnz
clc
cmc
jns
lds
push
cmp
pushf
push
cmp
xor
shll
cli
adc
(bad)
sti
cmp
imulb
mul
dec
lcall
mov
sbb
clc
fwait
push
outsl
adc
es
retw
es
shrl
adc
inc
jmp
mov
jmp
mov
xchg
and
jge
shlb
aas
and
clc
pop
imulb
cmp
lcall
push
sahf
jb
xchg
mov
jne
shlb
mov
push
fwait
and
adc
cmp
jp
lcall
cs
das
test
mov
adc
cli
xchg
insb
cmp
lcall
push
sahf
jb
xchg
jmp
outsb
adc
ss
es
push
(bad)
dec
(bad)
lret
xor
sbb
jp
lcall
cs
das
test
mov
adc
notb
cltd
sub
mov
cmp
cli
mov
adc
movd
insb
cmp
das
test
jns
xor
mov
adc
cmp
clc
mov
sbb
clc
mov
adc
es
retw
es
push
dec
mov
out
adc
inc
jmp
mov
and
mov
xchg
and
in
xor
clc
pop
(bad)
scas
out
nop
pop
das
jle
repnz
adc
test
jb
pop
gs
jb
outsb
adc
aaa
scas
adc
mov
mov
push
jle
pop
mov
adc
aaa
fwait
adc
mov
(bad)
sub
inc
test
sbb
jp
cmp
add
adc
xor
adc
mov
nop
movsb
mov
pop
stos
mov
adc
xor
adc
mov
nop
movsb
mov
pop
stos
lahf
jno
es
jecxz
scas
test
xor
mov
xchg
ljmp
push
ss
adc
js
sub
fimuls
es
mov
and
xchg
loopne
outsb
adc
aaa
pop
adc
mov
mov
pop
jle
int3
mov
adc
shl
and
sbb
jp
lcall
cs
das
test
mov
adc
xacquire
(bad)
insl
adc
cmp
xor
cmp
xor
jp
mov
cs
xor
mov
push
cmp
adc
inc
jmp
mov
mov
push
and
repnz
mov
fwait
pop
(bad)
(bad)
mov
mov
jmp
mov
gs
pop
leave
in
xor
clc
pop
(bad)
mov
jmp
mov
jmp
xor
xchg
sub
lret
inc
cmp
adc
mov
fwait
jno
stc
fs
(bad)
repz
cmp
lcall
jne
add
fbld
mov
push
scas
out
dec
push
shl
daa
mov
fwait
jp
jbe
mov
jmp
test
leave
jge
xchg
and
clc
pop
imulb
mov
sti
push
dec
into
div
scas
notb
stos
sub
bnd
mov
fwait
push
jp
push
adcb
(bad)
xchg
cltd
push
sbbb
lret
dec
(bad)
sub
xor
inc
inc
jmp
mov
jmp
scas
xchg
push
sub
out
repnz
daa
mov
fwait
sub
(bad)
mov
mov
jmp
outsb
mov
popa
sbb
mov
mov
and
lcall
repz
mov
test
leave
in
xor
repnz
(bad)
mov
jmp
mov
jmp
scas
xchg
cli
fs
(bad)
push
repz
repnz
pop
(bad)
(bad)
mov
mov
and
mov
gs
pop
leave
in
xor
clc
pop
(bad)
mov
jmp
mov
jmp
xor
xchg
cmp
cli
jp
jp
jbe
ss
jb
mov
es
pop
inc
cmp
cmp
scas
jl
adc
repz
fdivrl
mov
pop
(bad)
stos
cmp
idiv
fs
sar
mov
mov
jmp
mov
and
test
leave
jge
pop
mov
adc
push
xor
test
clc
pop
idivb
xchg
lcall
push
shlb
test
push
aaa
es
xchg
ljmp
jne
adc
imul
push
and
jp
stos
scas
outsb
adc
jle
(bad)
or
test
repz
fwait
(bad)
stc
push
stos
jb
pop
mov
jae
je
repz
mov
je
jmp
mov
cmp
scas
jp
adc
jb
cltd
ss
sbb
orb
es
jp
es
xlat
insb
mov
xor
adc
jns
adc
mov
fwait
insb
ret
and
stc
push
ds
das
test
cmp
testb
mov
aam
cmp
sbb
pop
outsl
(bad)
adc
xor
outsb
xchg
lcall
sub
pop
cmpl
mov
xchg
out
es
ja
int1
repnz
imul
bnd
(bad)
or
fwait
jb
jp
out
cmp
sub
lcall
(bad)
stc
mov
(bad)
mov
xor
int1
aam
aaa
das
test
cmp
in
push
jb
adc
pop
ret
xor
out
dec
dec
shl
sub
xchg
push
scas
push
xchg
sub
ret
push
jnp
mov
xchg
ljmp
xlat
bound
out
lahf
cltd
and
adc
mov
mov
and
stos
repnz
add
clc
repz
outsl
adc
es
in
cmp
cld
xor
lret
xor
popf
ja
(bad)
popf
jae
out
pop
lcall
stos
xor
cmp
sub
imull
mov
xchg
and
cmp
lahf
shlb
dec
adc
mov
mov
imul
adc
(bad)
mov
mov
insb
sahf
adc
fwait
pop
(bad)
jge
sub
pop
dec
dec
sub
dec
out
lret
aas
mov
scas
mov
pop
fdivr
outsl
popf
outsb
nop
repnz
cmc
xchg
sub
sbb
push
notb
adc
(bad)
mov
test
jb
cmp
iret
sub
repnz
sub
sti
popa
daa
cmp
cwtl
xor
mov
add
loop
mov
xchg
xor
popf
repnz
xor
fwait
jb
jle
int1
fstpt
imul
jmp
mov
fs
in
and
lcall
push
iret
mov
mov
outsl
shrl
js
test
imul
paddsb
es
jmp
mov
jo
cmp
jge
das
cmp
test
xor
cli
sbb
aas
rclb
(bad)
xchg
pop
fdivrl
addr16
leave
int1
shrl
fmuls
es
push
dec
ret
es
sti
shld
cmp
outsl
cltd
xor
jge
cmp
stc
imul
outsb
adc
mov
stc
pop
mov
adc
push
jae
mov
xor
subb
notb
sbb
jno
xlat
push
jp
and
cmp
lds
ss
dec
mov
jge
data16
adc
notb
sbb
(bad)
jb
mov
xor
jnp
dec
sub
test
lds
ss
dec
mov
jge
xor
adc
jae
shl
sbb
push
dec
mov
mov
subb
mov
out
shl
sbb
push
dec
mov
jne
cmp
xor
push
jbe
and
cmp
adc
mov
(bad)
je
neg
cmpsb
je
xchg
and
shl
sbb
push
dec
mov
jne
cmp
cmp
push
je
and
cmp
(bad)
sti
shrl
xor
cmp
and
notb
iret
sti
jae
sbb
mov
in
imul
daa
xorb
imul
(bad)
xchg
jae
call
mov
cltd
not
outsb
or
mov
adc
mov
pop
stos
jg
adc
aas
mov
scas
mov
nop
movsb
mov
outsl
adc
aas
mov
scas
mov
nop
movsb
mov
outsl
adc
cmp
cld
aas
ret
xor
lcall
xor
mov
add
mov
dec
mov
xor
mov
(bad)
push
mov
and
lock
mov
xor
mov
repnz
xchg
jns
out
push
adc
mov
adc
xor
adc
mov
cltd
lock
and
cmp
rclb
mov
cmp
(bad)
out
int1
xor
xchg
scas
