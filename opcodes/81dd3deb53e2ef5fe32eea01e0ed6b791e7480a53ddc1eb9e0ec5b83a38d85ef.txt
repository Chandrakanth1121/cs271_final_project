cltd
push
call
sbb
jmp
bnd
mov
pop
mov
pop
std
dec
pop
into
out
xchg
enter
cmpsl
push
mov
sti
lret
xor
js
mov
push
jg
arpl
jl
and
adc
js
or
es
push
das
mov
jmp
jnp
xchg
loopnew
jo
gs
pop
mov
cwtl
out
lcall
pop
xchg
lods
fisttps
stc
cwtl
xor
mov
jnp
(bad)
insl
push
lret
jae
mov
test
stos
imul
(bad)
arpl
dec
jmp
jp
(bad)
insb
iret
daa
add
sub
xlat
push
xlat
ja
adc
test
cmp
les
pop
(bad)
sti
xchg
pop
mov
lds
test
cmp
sbb
adc
sti
orb
imul
stc
pop
test
repz
bound
(bad)
in
loopne
lea
(bad)
fistpll
sub
xchg
pop
dec
push
cmpsb
xchg
mov
loope
jo
popa
adc
cmpsl
or
mov
movb
push
(bad)
sub
aam
mov
iret
mov
loop
xor
fistps
movsl
test
faddl
test
cld
stos
fcomip
mov
push
hlt
pop
add
jae
sbb
lea
fs
fiadds
push
popa
mov
xchg
aam
adc
cmpsl
mov
mov
pop
call
shll
filds
pop
pusha
aad
adc
dec
add
popa
sti
mov
and
dec
fidivs
and
popa
enter
push
sub
or
cmpsl
es
in
xlat
(bad)
dec
pop
push
jle
aaa
lahf
das
xchg
sbb
push
sbb
jbe
xchg
(bad)
adc
sti
dec
mov
pop
pushf
push
mov
loopne
adc
test
push
adc
test
and
push
(bad)
mov
insb
jo
fists
cmpsb
dec
movsl
xor
add
and
call
lret
int3
test
mov
jbe
lcall
push
pop
cld
fs
insb
jg
jnp
ret
movsb
dec
dec
jbe
pop
pop
inc
out
lods
xchg
clc
jnp
xchg
mov
ja
fs
mov
cmp
mov
pop
movl
and
jecxz
je
push
bswap
rorl
jo
lods
or
lods
jl
add
movsl
test
lcall
int
movsl
dec
dec
sti
out
cmpsl
mov
test
xor
jp
(bad)
or
addb
or
aaa
out
lahf
inc
(bad)
mulb
cld
cmpsl
daa
mov
xchg
pop
pop
addr16
xchg
cmp
fstpt
(bad)
call
out
cli
sbb
das
inc
sbb
dec
out
cmpsb
cmp
ljmp
xchg
mov
and
roll
sub
psrld
xchg
inc
jne
add
shll
push
lret
clc
sahf
dec
dec
sub
out
add
xlat
mov
or
jl
mov
dec
pushf
or
(bad)
adc
in
notl
insb
sbbl
movsl
pop
daa
jbe
andb
sub
stos
ja
(bad)
fs
stos
outsl
out
push
push
jns
ljmp
pop
lret
lea
adc
pop
mov
loope
dec
insl
(bad)
(bad)
sahf
push
pop
shrl
in
fists
pop
scas
psrlw
dec
cmc
push
add
(bad)
lahf
lods
mov
std
jmp
and
es
stc
daa
cmpsl
gs
inc
pop
addb
push
inc
test
lods
(bad)
packsswb
insl
pop
jmp
das
lret
or
fwait
cmpsl
rcrb
imul
push
add
lret
lcall
jg
push
or
cmp
push
outsb
hlt
pop
mov
jmp
mov
fiadds
xchg
repz
in
inc
lret
pop
aaa
dec
add
cli
adc
je
sar
fidivrl
pushf
push
xchg
mov
call
push
jl
int
les
ficompl
std
sub
lock
lock
mov
bound
xlat
fistpl
ficompl
(bad)
cmp
mov
stc
mov
pop
push
xchg
aaa
mov
lret
xlat
xor
out
arpl
or
xchg
adc
cld
and
add
pop
adc
jl
jl
and
fisttps
or
out
(bad)
pop
dec
adcl
pusha
cmc
cmp
push
inc
pop
inc
call
outsl
ret
loop
out
dec
loope
dec
outsl
shrb
into
mov
push
push
scas
and
(bad)
daa
push
std
sbb
sbbl
sbb
push
inc
sbb
inc
push
cmpsl
mov
xor
outsb
addl
lods
mov
(bad)
pop
jo
inc
int3
mov
add
jp
cmp
sub
ret
push
repz
pop
lahf
imul
push
cltd
mov
ret
imul
sub
out
(bad)
movsb
cmp
dec
xchg
pop
sub
das
dec
test
sti
push
inc
add
rol
(bad)
sti
inc
lock
lock
push
push
leave
pop
test
cmpsl
clc
jb
in
ret
xor
adc
push
pop
test
leave
bound
mov
imul
fwait
and
cmpsb
pop
xchg
dec
mov
iret
push
and
mov
lock
or
(bad)
xchg
pop
inc
std
adc
in
outsb
pusha
insl
int1
std
inc
inc
and
mov
mov
mov
jecxz
call
sbb
popa
arpl
inc
lret
jne
add
addr16
mov
add
mov
cld
inc
je
ret
test
dec
mov
std
ficomps
ss
or
push
out
cmpsl
ja
mov
xor
and
je
aaa
(bad)
repz
std
mov
jae
xchg
pop
push
out
mov
mov
addr16
mov
push
(bad)
fnstenvs
(bad)
add
sbbb
addb
bound
stos
dec
and
test
popa
out
(bad)
pop
push
add
imul
push
iret
fcompl
jge
cmp
rorb
xchg
push
sub
mov
and
fwait
xlat
sub
sbb
lods
push
scas
jno
adc
push
jo
popa
pxor
popa
out
iret
cltd
pop
pop
mov
mov
add
mov
pop
lahf
push
add
stos
or
incl
es
rcll
jmp
push
aas
jnp
test
lahf
xchg
mov
aaa
mov
into
(bad)
imul
xlat
inc
(bad)
js
sbb
roll
shr
xor
outsl
jo
data16
lea
out
rcrb
inc
jb
cmp
cld
arpl
in
xchg
add
test
cmc
out
pop
add
sub
rcr
adc
sub
loopne
mov
inc
out
fstpt
jge
mov
loope
call
fnstsw
enter
inc
nop
inc
jg
pop
out
repnz
lret
fsts
mov
repnz
sub
mov
xchg
(bad)
insl
sub
and
push
mov
call
stos
xor
xor
imull
sbb
cmp
fnsave
xchg
sbb
dec
cmp
inc
repnz
cltd
push
adc
es
sub
outsb
cmp
and
ss
and
call
jnp
rol
stos
inc
pop
xchg
loop
loopne
orb
int3
popf
stc
imul
inc
xchg
xchg
pushf
jb
fildl
and
mov
andb
(bad)
mov
push
xor
mov
arpl
int1
add
mov
iret
jbe
outsl
int
inc
fbld
inc
inc
or
loop
insb
addr16
push
mov
int1
pop
cmc
in
das
lds
push
push
shlb
stos
sbb
insb
cmp
inc
hlt
push
adc
push
in
out
in
mull
and
incl
xchg
rcrb
(bad)
mov
adc
mov
testb
jns
pop
outsl
pop
inc
lahf
cmp
jns
es
lods
cltd
jle
cmpsl
and
push
pop
jns
or
gs
and
push
add
hlt
mov
cmpsb
aaa
mov
xlat
imul
jo
xchg
pop
dec
rdmsr
cmp
imul
rcrb
or
cs
mov
fwait
mov
push
jecxz
dec
orl
push
jb
inc
push
shl
ljmp
fadds
fstpt
jne
xlat
iret
std
and
jp
mov
pop
cld
popa
addr16
pusha
call
