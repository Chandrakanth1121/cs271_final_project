out
mov
mov
hlt
push
add
std
jnp
xor
adc
pusha
(bad)
sub
in
jns
loopne
and
push
movsl
lds
sbb
imul
out
daa
pop
gs
xchg
jae
sti
add
js
test
adc
xchg
sub
cld
ljmp
imul
ret
dec
test
mov
jl
(bad)
cli
push
rcrl
popa
movsl
loopne
shl
adc
mov
push
adc
stc
lds
add
ja
rcll
and
mov
pop
(bad)
sbb
fdivl
cmpsl
test
sbb
pop
(bad)
and
rcr
xchg
arpl
pop
push
sar
push
jns
jae
xor
cmp
lds
sarb
inc
ljmp
dec
xor
jg
jno
pop
dec
(bad)
fsincos
sbb
jge
push
rclb
test
stos
loop
ror
sbb
in
popf
jp
std
push
lahf
sbbb
incb
out
aaa
mov
dec
insb
lock
inc
xor
lods
lds
push
das
mov
mov
push
mov
mov
adc
popf
adc
cmp
jne
xchg
test
loop
pop
xchg
xchg
test
mov
xchg
xchg
push
jns
lea
adc
cmpsl
sbb
mov
sub
vmwrite
mov
xchg
ror
test
fadds
int3
add
sub
mov
or
sahf
loopne
jl
mov
adc
mov
and
pop
ss
jbe
dec
sub
jno
inc
xor
add
pop
adc
add
cmp
jl
mov
outsl
aaa
popf
dec
xor
sub
fwait
rcll
cmp
imul
add
pop
mov
fwait
mov
jae
pop
testb
adc
(bad)
test
test
ror
stc
pusha
jne
outsl
mov
insb
orb
inc
in
jbe
adc
or
cli
push
addr16
pop
jg
mov
xlat
cmp
push
pop
mov
push
dec
insl
idivb
test
inc
xor
dec
ja
push
xor
popf
lahf
iret
movsb
jo
in
xchg
mov
xchg
pop
pop
pop
aad
push
sub
and
xor
out
rcl
ja
arpl
cmpsb
mov
hlt
mov
lock
incb
push
adc
add
std
rcl
mov
lods
push
push
mov
and
unpckhps
sbb
pop
cld
outsb
pxor
xchg
je
push
call
dec
hlt
fcoml
sbb
sub
inc
cmp
cwtl
cmpsl
xor
sbb
adc
or
int3
sub
out
xchg
out
imul
fs
ss
pop
push
pop
cmp
pop
mov
inc
jg
aad
pop
cmpsb
testl
jg
pop
push
iret
mov
or
adc
xchg
ror
dec
push
les
in
nop
add
pop
or
nop
ljmp
xlat
push
push
and
or
dec
push
stos
iret
outsl
pop
sub
sahf
aas
test
jl
jns
sti
pop
pop
add
cmc
jmp
jp
je
and
adc
jl
pop
jle
mov
lock
add
popa
lds
adc
adc
pop
mov
outsl
pop
cmp
and
dec
xor
sbb
sbb
call
cmp
lds
and
adc
lock
or
jge
nop
push
adc
in
inc
fs
sbb
jg
int
mov
jnp
xchg
mov
push
xchg
mov
ret
adc
cltd
jp
test
push
(bad)
roll
fwait
mov
mov
pop
inc
ret
inc
faddp
sub
or
mov
stos
or
dec
jo
sbb
push
decl
xchg
repnz
cmp
int
mov
lret
sub
pop
pop
adc
aaa
out
jnp
cli
pop
fiaddl
sub
adc
inc
sbb
test
subl
and
xchg
push
add
xchg
dec
imul
mov
addr16
aaa
xlat
pop
adc
adc
adc
inc
lahf
sub
into
cmp
into
pop
xchg
inc
and
aaa
les
int
jno
push
inc
les
mov
test
inc
adc
cmc
pop
cltd
and
repz
sub
imul
adc
or
jg
push
sub
jg
mov
rcll
aaa
inc
sbb
fwait
and
and
jb
sub
xor
xor
add
(bad)
sbb
sub
cmp
das
jb
sbb
es
adc
mov
pop
push
cmpsl
pop
jp
xor
jnp
cmp
cmp
dec
push
mov
mov
dec
leave
test
cmpsb
mov
mov
rcrb
loopne
push
push
pop
sub
pop
scas
mov
xchg
rdpmc
xchg
dec
(bad)
aaa
arpl
into
mov
scas
xchg
hlt
bound
jmp
fstpt
cld
mov
dec
xchg
stos
imul
mov
adc
std
inc
repz
iret
test
xchg
adc
xor
(bad)
jle
scas
xchg
mov
fnsave
(bad)
loope
push
cmc
ret
inc
sti
and
pop
test
push
xchg
out
gs
pop
cmc
out
lea
sub
leave
test
je
(bad)
movsl
xchg
lcall
mov
adc
cmc
mov
mov
xor
add
add
xchg
fists
sti
pop
sub
mov
das
mov
push
imul
cs
int
or
xorl
in
(bad)
cmp
stos
arpl
jle
je
adc
cmovle
sbbb
jge
fs
jl
pop
cmpsb
jnp
sbb
movsb
out
cmc
sub
hlt
or
push
mov
imul
pushf
enter
add
scas
sub
jno
popa
fistpll
out
xchg
push
xor
xlat
cmp
shr
shr
and
pop
cli
lods
cmpsl
cmp
jecxz
mov
xchg
dec
add
call
addr16
movl
sub
insl
fsubs
xchg
lahf
in
aaa
test
mov
add
pop
aas
xor
call
int3
fnstenv
xchg
in
ja
mov
mov
inc
xor
sub
(bad)
mov
jbe
push
xchg
fists
daa
mov
mov
push
jae
test
arpl
xchg
mov
daa
fwait
repnz
xchg
lock
ret
inc
or
out
mov
mov
stc
loop
in
push
fisttps
cmc
jp
jo
repnz
out
test
lcall
sbb
(bad)
ds
jnp
ja
dec
push
daa
(bad)
adc
dec
fimull
fs
jno
push
dec
dec
jbe
in
push
jae
sub
inc
cmovg
aas
push
stos
push
dec
repnz
mov
xchg
adc
push
imul
test
dec
mov
sbb
jb
mov
xchg
pop
pop
int
cltd
jo
add
popa
mov
add
lods
jge
stos
test
imul
jmp
add
cltd
das
or
xchg
test
lea
adc
or
adc
divl
leave
mov
sub
or
sbb
adc
add
imul
cmp
inc
iret
push
push
addr16
test
inc
xchg
sbb
popf
mov
dec
or
add
sbb
inc
int
and
shl
cmpsl
lods
js
fsts
dec
push
mov
mov
xor
imul
cs
xchg
nop
dec
mov
xor
lahf
adc
(bad)
daa
orb
int3
xchg
andb
loopne
dec
cli
pushf
jo
ss
fwait
loop
scas
inc
dec
inc
jnp
pusha
mov
push
jl
sti
adc
dec
sub
lods
dec
dec
mov
cmp
mov
aam
jmp
add
je
pop
(bad)
jle
mov
xor
inc
cltd
je
dec
in
aaa
xchg
mov
into
call
shll
xchg
pop
ljmp
ficompl
add
outsb
push
rcrb
cmp
aam
xor
outsl
mov
fnsave
xor
dec
xor
call
push
mov
imul
inc
jg
jmp
enter
in
mov
adc
xor
mov
adc
add
cltd
std
dec
xchg
mov
and
mov
mov
sbb
movsb
ss
mov
(bad)
movsl
insb
test
xchg
dec
ja
mulb
xchg
gs
cmp
out
mov
xchg
add
movsl
je
or
adc
das
insb
dec
nop
mov
pusha
