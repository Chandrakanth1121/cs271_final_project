lock
push
add
add
add
add
add
add
add
test
add
add
add
push
cwtl
lcall
sbbb
push
xchg
fldl
imul
xchg
jecxz
push
or
fwait
sbb
and
lds
dec
xor
mov
popf
aam
adc
lock
fstp
sbb
push
aam
mov
sarb
inc
or
mov
sbb
cmp
xchg
xlat
push
sbbb
xchg
aad
stos
push
pop
aad
test
jl
out
mov
div
jbe
add
jge
and
aaa
insb
xchg
loope
pop
add
xchg
dec
push
fwait
xor
movsl
jb
jbe
fldln2
sahf
lret
dec
push
ret
mov
inc
pop
test
inc
cld
ret
popf
dec
call
sbbb
ffreep
stc
or
dec
insb
sub
jmp
sarb
fs
das
or
cld
dec
xor
or
repnz
lahf
movsl
mov
fdivrl
(bad)
xchg
movsb
or
jle
ret
js
mov
xlat
add
mov
mov
or
jno
or
mov
out
aas
divb
je
rcl
sbb
in
xor
adc
add
mov
mov
mov
loop
cs
test
pop
hlt
push
mov
out
xchg
addr16
xchg
aaa
(bad)
stos
out
add
imul
dec
test
ljmp
cmpsl
fs
jge
jecxz
pop
add
mov
(bad)
mov
data16
jg
aas
(bad)
aad
sbb
(bad)
outsb
hlt
stos
add
pop
hlt
lock
or
push
loop
idivb
aam
sub
lds
cwtl
mov
mov
movsl
or
ljmp
cmpb
add
sub
jle
mov
gs
insb
(bad)
mov
js
sbb
jmp
add
jecxz
repz
fldl
dec
movsl
lods
loope
dec
dec
lcall
inc
push
push
lea
or
fsubs
ficompl
dec
fistpl
scas
dec
rcll
hlt
dec
push
jnp
out
loopne
fidivl
clc
fidivs
jo
inc
pop
lock
xchg
sub
pop
xchg
dec
ja
je
push
or
aaa
bound
or
inc
xorb
mov
mov
ds
mov
fs
add
pushf
out
push
into
and
xchg
mov
das
jae
inc
pop
lahf
aas
jle
in
mov
push
movsl
inc
inc
cmpsb
in
arpl
test
or
into
sti
movd
fisttpll
(bad)
lret
out
xlat
and
sbb
jo
xor
adc
ret
psrlq
and
fisttpll
xchg
mov
jnp,pn
lods
jb
pop
in
adc
sub
mov
push
fmul
fsubrs
outsl
push
cmp
sarb
(bad)
iret
not
mov
adc
js
cli
mov
push
cmp
jle
pop
hlt
cmp
stos
xchg
in
dec
js
inc
cmc
sub
jg
mov
inc
sub
inc
nop
js
movsl
fisubrl
hlt
adc
ds
fs
movl
lret
mov
jl
ljmp
(bad)
jmp
call
mov
jnp
add
test
or
jbe
repz
loope
pop
push
nop
jp
push
loop
push
sub
idivb
or
cmc
fdivrp
fidivrl
sbb
push
out
bound
js
mov
jl
adc
loope
clc
add
and
sub
ficompl
out
lahf
test
add
loop
xchg
imul
aam
inc
sbb
xacquire
jmp
or
xor
or
int1
push
push
test
and
outsb
jle
test
scas
sarb
inc
popf
inc
lret
mov
add
inc
or
xchg
imul
push
jmp
xchg
sbb
dec
frstor
jecxz
rclb
push
mov
pop
pop
xor
mov
fiadds
das
dec
mov
jbe
push
inc
(bad)
mov
sbb
ja
in
mov
push
cwtl
jg
imul
ljmp
dec
orl
fimuls
or
or
sbb
ja
nop
cmpsl
jecxz
mov
xor
mull
inc
sbb
test
std
jecxz
sarl
clc
sbb
xor
push
ja
jmp
and
push
lcall
adc
je
pusha
imul
sub
push
negb
in
call
push
xchg
mov
into
pushf
sarl
in
aaa
mov
std
add
pop
in
out
sub
jae
xchg
and
jb
loope
xor
mov
movsl
cmpsl
push
fnstcw
cmp
mov
cmp
xor
mov
sbb
scas
test
cmpsl
movsb
xchg
outsb
lock
jbe
ja
jo
movsl
jae
ret
xor
jl
pop
jns
xchg
or
scas
lea
movsl
cmp
shll
or
xor
adc
sbb
push
cmp
and
arpl
sub
in
decb
sti
out
hlt
cmp
xchg
pop
js,pn
mov
incl
fstp
clc
push
mov
les
scas
dec
or
adc
mov
push
mov
sub
and
fbld
mov
jl
jne
cmp
xor
mov
cmp
xchg
adc
inc
std
stos
jo
stos
mov
sub
push
mov
in
sub
and
cmp
xchg
jns
in
xor
xchg
xchg
ret
inc
mov
andb
cmp
int1
data16
sub
pop
push
pop
aaa
(bad)
je
lahf
add
or
out
mov
xor
stos
mov
ret
xchg
and
fwait
and
loopne
dec
push
pop
jne
dec
sahf
outsl
out
sbb
add
paddq
xchg
inc
ljmp
sub
test
fcom
imul
or
shrb
insb
int1
flds
movsb
shrl
fildl
sub
pop
or
inc
cs
push
fmul
dec
or
ss
cmc
sti
inc
movsl
mov
inc
inc
fists
jecxz
stos
notb
popa
insl
jno
pop
dec
fcmovbe
cwtl
aam
test
xchg
pop
arpl
xchg
cmp
xchg
add
cld
add
rcrl
jne
in
jecxz
adc
enter
das
pusha
mov
shrl
dec
xor
testb
and
rcrb
es
call
push
push
jmp
scas
sbb
incb
sub
lds
lods
movl
mov
mov
in
mov
lods
negb
cmp
insl
sbb
shrl
fnstcw
cmp
add
ret
mov
(bad)
das
scas
pop
(bad)
das
dec
pop
sti
sbb
or
ret
outsl
jbe
sub
sbb
loop
not
dec
(bad)
hlt
add
sti
push
xchg
adc
jne
les
dec
popa
and
xchg
test
xchg
push
std
test
clc
dec
arpl
adc
mov
addr16
lret
xor
adc
fildl
and
nop
stos
movsb
mov
mov
daa
sub
int1
or
test
mov
xor
test
roll
adc
mov
jg
fsub
mov
and
mov
or
enter
(bad)
cmp
xlat
and
mov
sti
loop
rcll
jg
xor
filds
shll
negb
shlb
mov
cmp
inc
mov
data16
cmp
std
gs
xchg
leave
jne
lcall
jb
fisubl
fmul
movsl
in
cmp
lea
loopne
repz
orb
pop
mov
neg
pop
pusha
or
cld
(bad)
shl
or
adc
adc
es
mov
jo
(bad)
xchg
fsubrs
mov
(bad)
adc
jle
int1
sbb
inc
test
pop
call
ficompl
js
in
sbb
add
sbb
iret
or
aaa
fsubs
xlat
sub
mov
stos
sbb
out
insb
fstps
movsb
test
xchg
mov
mov
mov
into
pusha
imul
incl
and
lea
jmp
mov
les
and
dec
xchg
mov
push
in
repnz
sub
ds
mov
mov
mov
ret
movsl
push
dec
pop
mov
imul
cmc
jno
dec
sub
je
xchg
movsb
mov
ljmp
insb
jg
shlb
or
je
loope
or
lret
xchg
xor
repnz
push
es
add
xchg
ret
adc
pop
sub
push
mov
je
cmp
mov
mov
arpl
mov
daa
xchg
dec
sti
jle
adc
inc
pop
mull
dec
jno
ja
