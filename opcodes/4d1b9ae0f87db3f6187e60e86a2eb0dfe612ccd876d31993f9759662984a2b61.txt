shll
sub
nop
mov
xchg
adc
test
cmp
xchg
test
push
sub
movsb
and
adc
orl
mov
arpl
mov
xrelease
repnz
loopne
adc
jecxz
outsl
cwtl
es
adc
sub
lock
adc
out
xchg
jae
sub
fwait
pop
add
loope
js
adc
adc
pop
and
sbb
rclb
mov
cld
sub
je
nop
(bad)
sbb
xchg
roll
xchg
fisttpl
call
adc
int3
push
daa
xor
sub
loopne
arpl
xor
lahf
mov
jbe
xor
xchg
out
dec
js
lea
mov
add
push
fld
imul
repnz
push
push
iret
push
shrl
stc
addb
shll
push
aaa
(bad)
push
sbb
fisttps
pop
dec
call
sbb
xor
arpl
adc
(bad)
xor
jo
pop
sbb
mov
ffreep
test
arpl
and
or
xchg
xor
xor
lahf
pop
subl
xchg
xchg
cmp
sbb
jbe
sub
fistl
inc
and
shl
daa
push
xchg
adc
or
inc
(bad)
fstpt
loopne
int
adc
pusha
adc
push
aad
mov
mov
and
pop
dec
test
inc
test
(bad)
fsubrp
mov
push
cbtw
ror
das
pop
iret
mov
lcall
jecxz
rcrb
fs
fidivrs
test
mov
push
je
sti
out
out
cmpsb
push
pop
insb
outsl
pop
xchg
stos
pop
inc
mov
rorl
test
xchg
fs
jmp
jb
xlat
jp
add
test
pusha
mov
xchg
lahf
(bad)
(bad)
ja
pop
jno
and
sub
lret
sub
lret
ljmp
push
jno
pop
shlb
ss
loop
jne
mov
das
adc
lds
cli
in
push
sbb
mov
mov
out
or
int1
movsl
jl
inc
mov
dec
xchg
push
pop
daa
daa
aaa
fidivrl
or
jg
ficompl
lret
or
pop
incl
xchg
sub
push
mov
repz
and
pop
lea
jae
sahf
mov
hlt
push
or
push
dec
lods
(bad)
mov
xor
incb
or
cwtl
pushf
lahf
fidivs
inc
inc
cmp
aaa
lahf
into
int3
sbb
sub
inc
push
jne
push
add
sbb
lea
ljmp
push
arpl
std
xlat
mov
lock
cmp
jmp
hlt
movsb
inc
mov
cmp
cmp
inc
sbb
push
repz
xor
enter
in
and
add
rorb
es
mov
push
jae
or
test
xlat
adc
test
ja
es
fwait
div
dec
insl
(bad)
pop
pushf
rclb
jge
mov
push
lock
stc
sbb
sub
xlat
leave
lds
imul
leave
adc
mov
cli
xor
into
or
andb
xchg
sti
adc
jnp
test
ljmp
out
cmc
sbb
cmc
andb
pop
test
aam
jnp
rcll
pop
push
sub
push
jnp
push
roll
and
bound
cltd
lds
je
movsl
pop
int1
daa
cmp
pop
pop
imul
iret
xor
sub
scas
sbbl
cmp
das
imul
outsl
or
negl
cltd
cli
inc
imul
jbe
dec
fdivr
cs
add
(bad)
jg
leave
pop
lea
mov
inc
addr16
(bad)
popf
cmp
(bad)
jne
cmc
inc
or
add
cmp
and
adc
and
dec
xchg
mov
mov
add
sbb
and
cli
rorb
fs
cli
adc
push
push
and
in
fwait
inc
orb
mov
int3
add
push
push
rcrb
int
pop
rorl
movsb
mov
in
enter
pop
popa
adc
ret
int3
lret
add
xchg
jg
mov
addr16
(bad)
add
aam
sub
and
notl
pop
test
les
in
sub
adc
push
inc
add
ret
movsl
dec
repz
repnz
das
adc
insl
in
pop
cmp
push
sbb
push
mov
adc
sub
sub
push
pop
push
fadds
and
mov
jae
lods
imull
add
push
mov
arpl
test
sub
push
xchg
inc
xor
hlt
(bad)
pop
jge
sub
clc
pop
hlt
jo
outsl
push
test
xchg
xor
or
or
imul
(bad)
cmc
pop
xor
xchg
aas
out
push
sahf
sbbb
inc
pushf
sub
mov
mov
pop
shrl
pop
sbb
pop
call
xor
outsl
lea
cmc
fiaddl
pop
rcrb
or
push
test
out
jp
jle
push
pop
dec
sub
xchg
pushf
xor
sti
or
jnp
xor
jnp
jne
rol
xor
or
mov
lods
mov
and
bound
inc
push
rorl
andb
dec
mov
and
mov
or
xor
add
xchg
call
inc
jmp
mov
xor
add
aad
push
xchg
inc
lcall
jecxz
ret
xchg
bound
adc
mov
lea
loopne
(bad)
cmp
andl
clc
ja
stos
or
(bad)
mov
push
mov
xchg
jg
pop
shrl
mov
xor
filds
mov
rorl
pop
adc
cmp
inc
cmc
fdivl
mov
hlt
xchg
pop
dec
pop
push
popa
xor
ret
test
or
push
or
cmp
sub
(bad)
sbb
push
and
mov
and
rcrb
sbb
pushf
inc
ljmp
inc
sub
hlt
sub
loop
imul
add
pop
cmpl
xchg
nop
dec
mov
ror
testl
test
mov
push
xchg
xchg
cs
sbb
lods
notl
push
sbb
sub
mov
inc
xor
test
mov
sub
push
imul
or
sti
xor
rcr
sub
or
negl
cmp
clc
outsl
mov
dec
mov
dec
and
sbb
and
lahf
add
mov
in
(bad)
ljmp
jae
aaa
daa
mov
xor
cltd
orb
add
push
into
xchg
insb
sbb
andl
xlat
mov
add
sbb
xchg
xor
stos
rclb
xchg
mov
push
xchg
jle
stos
out
hlt
stos
add
adc
and
or
xchg
mov
xor
test
lods
inc
js
xor
adc
mov
fisubl
out
daa
and
add
mov
je
(bad)
sub
jae
(bad)
mov
pop
cmpl
gs
mov
push
in
jo
in
adc
ret
inc
cli
push
int3
push
dec
ret
testl
dec
inc
adc
dec
xchg
aam
sub
daa
pop
in
dec
xor
sub
loopne
ss
into
jb
lahf
repz
aam
jnp
inc
xchg
sub
xchg
push
dec
in
jecxz
mov
jge
adc
daa
xchg
daa
(bad)
int
push
sub
mov
sbb
xchg
or
sbb
int3
xor
pop
repz
inc
cmpsb
testl
mov
and
pop
xchg
xchg
sbb
xor
mov
ja
stos
imul
outsl
outsb
fwait
or
push
loope
cli
mov
xchg
lcall
dec
lea
and
and
mov
popf
push
ficoml
scas
repz
movsl
mov
push
dec
sbb
mov
push
sub
add
shlb
or
or
inc
fs
outsl
(bad)
call
sub
jl
mov
imul
sub
xchg
fbstp
out
xchg
sbb
shl
push
or
inc
loop
dec
out
(bad)
es
subb
sbb
inc
call
nop
inc
dec
cmc
cmp
ja,pt
inc
push
div
dec
push
inc
rcll
int
xor
and
dec
mov
les
lcall
or
imul
ljmp
cmc
jns
outsl
xor
lods
sahf
jno
arpl
sti
sbbl
inc
cmp
loope
mov
in
xor
and
jmp
sbb
fisttps
xchg
int1
sbb
push
mov
out
loope
int1
out
gs
negl
or
ja
add
xchg
pop
ljmp
ja
adc
