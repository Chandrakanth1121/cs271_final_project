iret
xchg
out
and
push
fmull
pop
iret
(bad)
jnp
and
cld
pop
arpl
adcl
and
cli
dec
(bad)
int
fistps
enter
cmp
sub
add
iret
push
cwtl
repz
or
mov
cmc
jge
out
or
mov
inc
mov
sbb
ss
popf
jae
cmp
in
aaa
into
and
leave
out
lock
(bad)
hlt
outsw
stos
shrl
jb
push
loopne
mov
notl
mov
dec
leave
inc
and
test
mov
sbb
xor
fwait
sti
into
cmp
mov
ret
lret
sub
add
test
pop
jg
fs
das
fwait
or
jle
in
in
xchg
push
in
pop
negb
inc
fldl2t
push
mov
popa
and
add
jnp
divl
xchg
xorb
int3
arpl
pop
push
lahf
lahf
xchg
jmp
mov
(bad)
jnp
cmpl
sahf
push
or
jno
mov
aaa
rolb
inc
add
(bad)
sar
xchg
lahf
aam
mov
ljmp
nop
dec
gs
mov
mov
mov
arpl
and
mov
mov
in
mov
inc
aam
inc
add
dec
jnp
sbb
inc
jns
push
in
ds
push
jge
cwtl
xor
pushf
jne
ficomps
xchg
leave
out
sbb
test
jp
xor
xchg
pop
push
cmpsb
js
outsb
fldpi
cwtl
and
out
mov
mov
mov
loop
pop
dec
popf
cmp
xchg
mov
cmp
mov
mov
imul
and
jg
or
jae
xchg
int1
pop
sarl
jl
mov
lret
adc
push
arpl
testl
outsb
jno
xchg
xchg
enter
fwait
mov
scas
xchg
fpatan
jo
cld
pop
in
push
inc
ds
jae
hlt
cmp
jp
mov
jno
or
push
dec
test
cmp
imul
adc
out
jle
pop
and
or
test
adc
xor
popf
cld
sbb
lahf
jae
les
adc
mov
inc
xchg
insb
cmp
imul
jnp
lahf
outsl
leave
jns
stos
dec
or
jo
jmp
inc
jbe
mulb
out
push
sub
dec
mov
lahf
push
pop
pop
xchg
sar
and
fnstenv
mov
adc
mov
mov
in
jnp
or
lock
add
mov
cltd
popa
mov
xor
pop
mov
add
aam
pop
lahf
test
test
rolb
xchg
loopne
pop
xor
push
cwtl
shrb
xlat
test
cmp
push
mov
in
arpl
fmull
sbb
out
mov
pushf
dec
cmp
ret
out
push
jnp
jb
cmp
cmp
test
add
xchg
jnp
push
cwtl
jnp
out
mov
sar
mov
cmpsb
jae
jge
jno
jb
jl
mov
insl
cmp
mov
dec
xchg
pop
jle
jmp
loope
cltd
in
and
or
lock
sbb
sub
inc
ss
(bad)
in
popf
bound
sbb
notl
xchg
jp
lret
sbb
push
xor
lcall
jnp
ret
mov
fadd
out
das
push
popa
ljmp
cmpb
or
sub
imul
subb
mov
mov
and
imull
or
nop
mov
xchg
stos
mov
pop
sub
sub
loopne
dec
xchg
sub
inc
clc
lds
outsl
test
and
mov
jecxz
jb
inc
cld
(bad)
and
cmc
pop
mov
pop
push
or
sbbl
pop
out
mov
xchg
fcmovb
addr16
lock
data16
pop
push
and
imulb
jl
imul
nop
les
shlb
stc
jae
cwtl
xchg
push
outsb
pop
enter
mov
dec
jp
jg
mov
ja
or
imul
sbb
dec
and
scas
cmpb
push
cmp
mov
sbb
lcall
cmpsl
pop
jb
jecxz
clc
jge
ret
mov
cmp
add
pop
inc
stos
ss
popfw
lcall
stos
fstpt
xchg
or
push
sub
fisubrl
cld
and
sti
jge
and
outsb
pop
stc
pop
cmp
rorl
ja
cmc
xor
lods
cmc
xchg
mov
scas
dec
lcall
mull
fidivrl
mov
ret
outsl
insl
cli
add
ss
mov
clc
jp
cmpsl
adc
cltd
fbstp
inc
jmp
movsb
je
jg
add
or
(bad)
cmp
lcall
jbe
xor
inc
xchg
movsl
shll
subl
inc
jp
jp
dec
pop
dec
aas
test
sbb
fwait
mov
popa
sbbl
mov
or
test
jno
push
mov
flds
xchg
xor
iret
jnp
mov
add
ret
fnstenv
pop
fisttps
pop
mov
mov
push
fiaddl
aad
jno
shll
addr16
mov
adc
fwait
pop
movsb
jbe
mov
ss
pop
inc
inc
mov
adc
clc
xchg
aas
aaa
cmp
hlt
push
sbb
dec
push
ja
lret
xorl
iret
cltd
pop
sbb
xor
(bad)
lcall
(bad)
rorb
and
je
xchg
rcr
insl
aam
stc
subb
dec
out
cli
fwait
sahf
or
ficomps
inc
mov
add
fdivs
pop
xor
shll
lods
xor
mov
adc
in
daa
mov
pop
add
push
jg
stc
lret
jle
out
sti
jnp
adc
cwtl
xchg
or
sub
push
(bad)
mov
clc
in
repz
nop
cmc
jno
(bad)
outsb
lock
cmc
and
jbe
cmp
or
(bad)
cmp
mov
loope
test
xchg
jo
sbb
push
andl
subb
std
xlat
mov
pop
jge
jl
insb
sbb
lock
push
xchg
jbe
js
stos
push
dec
addr16
dec
mov
push
(bad)
movsb
and
imul
data16
(bad)
jnp
mov
out
cmpsb
inc
std
adc
test
ljmp
js
arpl
dec
sbbl
cmp
insb
mov
into
fisttpll
push
or
sbb
or
mov
popa
sbbl
jne
cli
hlt
sarb
pop
cmp
out
lds
arpl
stc
iret
mov
sub
push
dec
pop
lods
data16
add
dec
push
fidivl
aas
push
rorb
xchg
inc
sub
std
test
jg
out
ret
mov
pop
mov
push
je
cmp
stc
shrb
or
repnz
ret
xchg
fildll
adc
test
jo
pop
xchg
lcall
add
sub
test
sub
jnp
mov
or
gs
out
bound
or
sub
lea
add
xor
inc
adc
cs
fisttpll
stos
dec
xchg
adc
dec
mov
push
lret
jnp
das
mov
push
sub
aas
add
call
and
test
loop
cld
push
xor
je
rorb
xor
int
push
test
xor
inc
sub
adc
mov
adcl
ret
(bad)
adc
mov
mov
cmp
cmp
mov
sti
addl
adc
fldenv
pop
dec
rcr
fwait
pop
xor
filds
mov
dec
movsl
xlat
data16
and
cmp
fisubrs
adc
inc
ficoml
inc
insl
inc
loop
sbb
lret
pusha
jmp
out
jmp
std
and
stc
or
jo
les
mov
jge
repnz
mov
cmpsl
lea
push
cmp
xor
rcrl
dec
sbb
das
fcomps
cmc
mov
pop
nop
mov
fsub
xchg
sub
pop
cs
fiaddl
jmp
mov
jle
mulps
std
add
cmp
adc
ss
aam
nop
mov
leave
inc
or
mov
adc
jo
add
test
notl
imul
jmp
and
jp
sahf
aam
sub
fldt
jo
or
les
dec
daa
cmc
shrb
mov
int
dec
(bad)
and
push
cmp
mov
leave
js
fisubl
mov
xchg
jo
mov
loope
add
or
test
ret
gs
add
xchg
push
rcll
test
push
test
adc
inc
ret
int3
jnp
jge
