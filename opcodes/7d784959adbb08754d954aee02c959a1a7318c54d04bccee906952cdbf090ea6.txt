mov
mov
and
outsb
enter
mov
fistpll
sahf
sub
dec
out
inc
pop
jecxz
jo
sub
mov
nop
inc
sub
int1
jge
movsl
mov
sahf
lret
jno
mov
and
fisubl
es
pushf
xor
(bad)
mov
pop
outsl
pop
dec
into
(bad)
iret
bound
je
ss
or
(bad)
mov
aaa
xor
push
cmpsl
scas
lock
or
ficompl
sbb
jbe
ss
lea
adc
mov
in
int
ds
inc
shl
fistps
mov
ret
ja
repnz
add
xorl
mov
cmp
pusha
jecxz
mov
adc
pop
push
sub
mov
mov
mov
jb
sub
aam
mov
jl
cmp
add
push
mov
inc
cmp
add
punpckldq
and
mov
xchg
xchg
add
mov
push
je
popa
push
inc
cmp
int3
sbb
idiv
mov
filds
out
adc
mov
sahf
cmp
std
cmp
sbb
adc
std
js
inc
fldt
sub
shlb
movsb
(bad)
dec
and
and
sti
rcll
jne
or
roll
leave
mov
add
loope
push
outsl
fidivrs
aad
pop
imul
(bad)
mov
mov
movsl
or
ds
xor
dec
mov
test
and
add
loopne
and
test
dec
insl
xor
mov
and
out
jo
aaa
cltd
xor
pop
push
idivl
lds
rorb
jns
les
cli
stos
daa
out
cld
mov
sahf
incl
imul
stos
adc
mov
or
scas
or
inc
inc
dec
dec
jle
enter
inc
out
arpl
jle
pop
cmp
lret
pop
cli
je
cmp
add
inc
in
jne
je
push
jg
je
aad
mov
and
xchg
clc
push
jns
pop
fwait
ss
mov
sarb
mov
adc
sub
movsl
(bad)
(bad)
xor
inc
out
add
mov
xchg
loopne
mov
or
pop
(bad)
repnz
sub
xchg
push
lods
dec
xchg
xchg
adc
les
mov
adc
arpl
pop
mov
push
adc
or
sub
cmp
sub
out
test
xlat
pop
push
movsl
repnz
in
adc
test
mov
aad
mov
jl
and
clc
lds
adc
sbbl
adc
pop
out
sti
cli
ljmp
imul
lcall
loopne
daa
movsb
stc
lds
lahf
xchg
pop
adc
mov
inc
cwtl
(bad)
fcoml
mov
xor
and
add
jle
pop
dec
cwtl
or
pop
sbb
mov
movsl
aad
mov
idivb
and
popf
dec
lea
mov
nop
add
adc
daa
xchg
push
js
mov
fdivrp
mov
ds
call
fsubrs
jge
or
mov
cmpsb
mov
and
notl
inc
mov
mov
fisubs
addr16
repz
arpl
jne
pop
cmc
lea
hlt
mov
inc
sbb
(bad)
lret
push
in
int1
movsb
xchg
mov
ret
xor
test
jecxz
call
sub
pop
mov
xor
lods
push
rcl
daa
cwtl
inc
(bad)
adc
cmp
decl
mov
insb
push
dec
mov
pop
inc
mov
pop
push
jmp
test
test
insb
shlb
ds
repnz
mov
outsl
xchg
and
rorl
xor
add
cltd
lret
fcoms
mov
enter
test
jle
add
lods
fiaddl
jae
pop
(bad)
push
or
inc
lds
lock
flds
(bad)
cmp
sbb
add
adc
outsl
push
(bad)
ljmp
mov
fs
push
in
add
fisubs
in
pop
fcmovnu
rcrb
pop
iret
lods
repz
fs
inc
dec
sbb
mov
adc
xchg
lret
ret
jecxz
sub
jmp
clc
psubsb
sbb
xchg
dec
xchg
mov
xchg
data16
call
testb
int3
(bad)
and
sbb
popa
rolb
clc
je
xchg
ljmp
jns
jle
loopne
aad
gs
js
inc
fists
and
xor
lcall
add
aam
dec
mov
xor
jmp
inc
xchg
lcall
adc
inc
pop
jmp
adc
sbb
dec
mov
pop
dec
sbb
pop
pop
xchg
pop
push
mov
or
imul
and
(bad)
(bad)
popf
addr16
(bad)
aas
pop
or
(bad)
test
rorb
adc
sub
out
sub
aad
stos
push
adc
sbb
dec
mov
add
loop
xchg
inc
int3
push
lock
enter
push
pop
mov
sbb
add
aad
push
or
push
in
sahf
dec
fisttps
fs
jp
push
jo
xchg
roll
sub
pop
mov
pop
lods
ss
lods
(bad)
sbb
or
fildll
push
outsb
mov
pusha
push
adc
jbe
std
jp
jno
adc
pushf
imul
divl
jo
rorl
jecxz
roll
lret
and
out
adcl
cmp
daa
dec
jae
fistpl
xor
dec
add
andl
or
sbb
pop
les
cld
rcr
rorb
xor
xchg
fnstenv
std
test
fisubl
cmp
sti
js
jmp
loopne
pop
ficomps
pop
mov
insl
lret
or
jl
je
mov
dec
pop
aad
jne
aas
dec
(bad)
dec
sar
pop
fs
cmp
mov
mov
add
dec
mov
mov
mov
sub
dec
popf
mov
hlt
pushf
shrl
pop
jg
cli
or
push
mov
jo
cs
mov
ja
loopne
test
jecxz
fcmovne
inc
in
push
jl
fcmovbe
cmp
adc
sbb
repnz
in
mov
cmpsl
cmc
test
jecxz
movsl
(bad)
sub
outsb
ret
inc
aad
pusha
pop
jle
jge
adc
fdivrs
xor
jle
repnz
add
iret
sbb
movsb
pmuludq
dec
mov
push
int1
mov
jo
les
jl
adc
clc
xor
inc
ja
mov
cmp
jb
pushf
lea
pop
inc
stos
inc
sub
sbb
xor
and
sbb
push
fildll
add
outsl
dec
loope
or
dec
mov
scas
(bad)
test
(bad)
xchg
sub
mov
insl
inc
and
xchg
push
jbe
fldenv
pop
std
mov
inc
repz
repz
push
push
and
add
pop
hlt
and
repnz
xor
add
pop
sub
stc
arpl
aas
push
pop
xor
mov
add
ret
pusha
arpl
insb
(bad)
pop
sbb
mov
es
bound
pop
out
fs
push
xchg
xchg
dec
cmp
adc
repz
iret
lahf
aaa
cwtl
cmc
in
jl
and
sub
mov
or
ss
jmp
pop
jne
mov
lds
outsl
xchg
mov
mov
daa
outsb
psubb
xor
xor
lock
jmp
cmpsl
sub
mov
leave
ja
lods
push
adc
jecxz
(bad)
adc
pop
sahf
dec
in
aas
imul
or
adc
xchg
mov
iret
test
and
cmc
mov
mov
push
out
push
sbb
xor
and
nop
push
arpl
into
push
mov
mov
sub
aas
sbb
fcmovnu
push
pop
dec
insl
(bad)
test
push
or
mov
xchg
inc
das
mov
call
js
sbb
insl
mov
sbb
cmp
out
ss
jb
xchg
loop
popf
orl
cmp
push
mov
push
dec
dec
xchg
std
sub
ljmp
sub
mov
lods
in
daa
lret
shrb
push
test
scas
mov
je
mov
cmpsb
fiaddl
int3
add
mov
lds
inc
add
lods
sub
jo
scas
jmp
test
ja
call
test
and
imul
mov
or
mov
js
xor
xor
add
or
mov
mov
movsl
sbb
(bad)
sub
cli
add
ret
lret
mov
fidivs
mov
pop
mov
push
xchg
shrl
fdivs
fwait
xchg
dec
mov
int3
