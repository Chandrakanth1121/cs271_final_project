jb
mov
jge
int
pop
pop
mov
cmpsl
fisubrs
pop
sbb
fistps
mov
dec
fstl
and
scas
xlat
xor
std
push
and
dec
in
push
xchg
call
lea
out
push
sbb
xor
aaa
jno
in
adc
clc
es
insb
dec
je
test
pmullw
outsb
repnz
cmp
mov
pop
jne
mov
jl
or
xchg
loop
test
(bad)
ffree
jmp
mov
test
jo,pt
cmp
dec
fildll
pop
repz
ja
add
cmp
fidivs
sahf
dec
inc
(bad)
push
xlat
stos
insb
add
mov
adc
inc
pop
adc
pop
jle
mov
jno
dec
fmuls
cmp
int
xor
push
jle
ds
mov
pop
sub
movsl
mov
mov
push
or
out
(bad)
pop
adc
pop
mov
popf
lfence
and
fidivs
ss
shlb
pop
dec
mov
mov
jns
mov
sub
jg
call
pop
add
repnz
cmp
in
mov
xor
out
(bad)
lahf
insb
out
inc
xlat
lea
lock
repz
and
cmp
iret
movsb
xor
movsb
jmp
cli
les
stos
jmp
mov
pop
add
sbb
mov
incb
mov
push
pop
mov
pop
push
dec
mov
sbb
add
jle
or
inc
out
in
inc
mov
jmp
fldenv
daa
and
ds
inc
jbe
das
sti
lret
scas
dec
(bad)
inc
push
pushf
pop
mov
jns
mov
mov
mov
enter
adc
xor
add
push
mov
xlat
fiadds
daa
div
fisubs
jae
insb
popa
outsb
pop
or
fstpt
movsb
or
frstor
std
jne
and
fstps
push
mov
jo
das
lds
test
(bad)
xchg
cs
scas
adc
shl
test
xlat
jmp
sarl
pusha
push
cld
aaa
and
rcll
sub
mov
stos
cmp
fsubr
and
loop
aaa
leave
xlat
sahf
outsb
js
aas
scas
pop
jecxz
cmp
push
cmp
and
sbb
xor
test
sbb
int1
loopne
test
cmp
sarl
sub
push
xchg
shrl
sub
xchg
es
test
push
in
shrb
aam
adc
mov
inc
imul
sub
xor
(bad)
lods
cld
mov
lods
lea
cmp
out
dec
push
or
cmp
inc
rcl
mov
repnz
inc
xor
fcoml
or
adc
xchg
gs
lahf
mov
pop
xor
lret
xchg
push
not
(bad)
or
add
pop
jle
imul
mov
and
es
mov
arpl
and
pop
sub
mull
or
outsb
enter
rcrl
xorb
dec
test
ja
stos
pop
outsb
xchg
cli
jmp
push
dec
imul
test
inc
ja
xor
mov
mov
fdivrp
xlat
scas
xchg
mov
push
add
mov
mov
jp
jp
inc
lcall
xor
pop
faddl
stos
movsb
lret
jmp
xor
jns
dec
xor
jae
testl
fcomip
mov
xor
xor
aad
data16
sbb
xor
jns
sbb
loopne
xor
push
jne
and
inc
add
(bad)
xchg
add
xlat
cltd
and
mov
mov
stos
es
movsl
add
inc
rcll
int3
cmp
lods
cmpsb
ljmp
xchg
outsl
cmc
aad
sbb
ret
nop
je
mov
xchg
pop
dec
incb
push
outsb
test
mov
mov
divb
jnp
xchg
rcrb
roll
push
adcl
out
fidivrl
andb
jnp
lods
sub
jno
sbb
and
pop
or
popf
leave
lcall
pop
mov
or
push
sbb
cmp
call
lea
notb
mov
jns
out
push
in
and
ja
jl
inc
shlb
push
nop
cmc
test
add
jl
mov
rclb
pop
adc
mov
lds
ret
inc
pop
imul
mov
mov
clc
lea
call
inc
dec
enter
cld
xor
adc
call
sbb
mul
jbe
xlat
orl
dec
jl
pop
nop
sbb
js
sbb
pop
stos
xlat
movl
inc
loopne
mov
lahf
adc
test
outsl
sbb
xchg
aad
and
mov
sub
ja
xor
sbb
jp
clc
add
int1
sbb
out
fldcw
lret
daa
lods
cltd
pop
inc
sbb
xor
scas
cmp
jmp
inc
movsb
mov
pop
fisubs
out
lods
and
test
aam
push
test
in
imul
call
jp
xchg
xchg
pop
add
imul
das
push
inc
push
sbb
out
mov
sub
push
push
loope
mov
and
ss
iret
cmpb
xor
add
xor
or
repz
jo
fldl
into
sub
mov
rclb
mov
lcall
mov
mov
push
loope
sbb
push
mov
js
mov
mov
dec
and
repz
int
(bad)
jo
xchg
jb
lret
inc
jl
call
mov
enter
xlat
mov
xor
mov
cmp
stc
mov
pop
repnz
clc
cmc
daa
sub
lahf
divb
loopne
dec
test
mov
cmp
push
mov
nop
ja
xchg
gs
or
or
int
inc
comiss
mov
xchg
jge
adc
xchg
push
jnp
jmp
jle
push
ljmp
hlt
or
or
dec
lea
loope
ljmp
sbb
nop
inc
scas
mov
and
fnstenv
adc
ret
test
mov
enter
(bad)
cmp
outsb
jns
and
cmp
and
push
negl
jae
sub
cmp
sub
(bad)
shrb
dec
add
inc
es
popa
pop
gs
jne
(bad)
xchg
and
cmp
(bad)
sub
popa
jns
in
mov
xor
pop
popf
xchg
imul
ja
inc
test
popf
pop
sbb
xor
dec
fisubrl
iret
fs
push
lahf
outsb
test
test
int3
scas
jno
push
int1
sti
ss
das
(bad)
jb
mov
ja
push
das
or
imul
sahf
mov
pop
xor
lahf
pop
fstps
je
xorl
notl
es
aaa
test
xchg
jmp
lods
sub
dec
pop
int3
or
cmc
add
mov
inc
js
cmp
push
pop
repnz
cmp
xchg
cmpsb
dec
jne
mov
aaa
inc
xchg
lahf
jge
mov
adc
jle
enter
fs
int3
pop
std
mov
pop
mov
sub
jle
push
push
or
mov
mov
cmp
add
scas
xchg
pop
mov
push
(bad)
mov
fldcw
fcomps
add
cmc
xor
mov
lods
mov
sbb
jg
push
dec
mov
outsb
xchg
jp
sub
test
je
xor
fwait
adc
js
inc
jns
push
push
or
pop
cli
sbbl
jb
add
nop
push
cs
inc
bound
in
sbb
arpl
rolb
push
dec
ljmp
add
shrl
adc
sahf
inc
add
jl
lods
lods
(bad)
sub
push
sbb
int
add
cmp
pop
inc
fnstsw
pop
mov
mov
sub
nop
mov
cmp
enter
cmp
movsb
or
incl
xchg
or
mov
sbbb
loope
inc
jnp
std
aad
iret
outsb
sub
lds
or
adc
pop
lcall
or
jg
mov
jl
sub
adc
mov
cli
(bad)
push
repz
push
mov
(bad)
scas
(bad)
aas
aam
xchg
push
mov
push
js
mov
xor
dec
call
adcl
hlt
or
and
stos
add
pop
popf
jo
hlt
iret
ds
lahf
pop
jne
pop
xchg
add
mov
dec
mov
pop
popa
jge
cs
push
test
lods
xchg
lcall
mov
mov
dec
test
aaa
sub
jnp
lods
out
cmp
daa
sti
fisttpll
scas
pop
das
xchg
