lret
adc
cmp
leave
outsl
test
cmc
pop
in
call
and
sarb
das
pushf
ret
sub
cmp
push
cltd
jae
fxch
mov
movsb
lret
ss
inc
sarb
test
jg
adc
dec
cmp
adc
push
jmp
adc
dec
dec
notl
lea
lret
lahf
lds
xor
or
jl
loopne
(bad)
cmpsb
pushf
stc
outsl
lea
sub
outsb
xor
cmpsl
repz
je
cmc
leave
xor
mov
xchg
sar
sahf
sahf
mov
xor
loopne
xchg
inc
dec
jmp
adc
in
push
fadds
add
mov
ds
js
cltd
or
push
lret
cwtl
xchg
pusha
testb
test
xchg
sub
stc
ja
push
xor
adc
clc
pop
aad
xor
imul
or
mov
dec
adc
adc
fistps
xchg
lea
sti
lret
clc
mov
sbb
test
(bad)
adc
js
bound
mov
popf
aam
mov
outsb
and
cmp
xorb
test
lret
mov
out
aam
call
cmp
nop
(bad)
cmp
lds
movsl
push
mov
dec
mov
xor
mov
stc
iret
clc
sbb
dec
add
stc
rcl
mov
add
dec
(bad)
adc
dec
stos
inc
jge
mov
xchg
mov
lods
or
lods
negb
nop
leave
add
inc
je
(bad)
dec
ficoml
jb
repz
dec
aad
lods
mov
cmp
js
(bad)
ja
adc
fildl
push
rol
jge
sbb
pop
dec
lahf
jmp
xor
(bad)
xchg
push
aad
aaa
fcmovb
dec
sbb
mov
push
pop
addb
sbb
test
ss
xor
push
xchg
sahf
fmuls
lods
pop
int
inc
mov
lcall
nop
or
insl
sbb
push
ss
(bad)
push
mov
fidivrs
addr16
xchg
cltd
mov
clc
rorl
mov
insl
push
sbb
lret
or
cmp
movsl
sahf
sahf
jge
cmc
imul
rolb
cmp
es
stc
dec
mov
push
pop
xor
repz
mov
xor
add
xor
mov
sarb
pop
sahf
add
int1
jb
enter
push
enter
nop
mov
test
nop
push
and
mov
out
cli
mov
imul
mov
push
mov
call
xor
mov
sbb
mov
lods
scas
adc
rcrl
pop
stos
mov
jb
push
push
push
pop
mov
out
jmp
test
xchg
xchg
adc
mov
xor
pop
xchg
clc
sahf
(bad)
daa
add
pop
push
pop
(bad)
adc
gs
sub
jne
ret
dec
sahf
ljmp
rcll
sar
stc
stos
inc
jmp
xchg
xor
push
fisttpl
je
pusha
gs
pop
loope
pop
shll
xor
jp
dec
fld
xchg
pop
push
mov
iret
inc
adc
adc
(bad)
xchg
dec
jmp
insl
jbe
stos
jmp
cmp
push
xor
push
lea
outsb
push
xchg
imul
movsb
popa
lea
sar
pop
jns
lea
call
xchg
popf
stc
or
subb
push
lock
pop
in
sbb
push
xchg
xor
and
xor
scas
mov
sub
fcoms
fsubl
or
(bad)
push
incl
sub
outsl
jne
mov
fdiv
cli
push
pop
pop
and
and
call
fwait
jae
dec
xchg
lret
aaa
mov
dec
cmpsl
jg
js
cmp
lcall
push
out
test
lahf
push
movnti
ret
xlat
adc
cltd
test
jg
addb
lcall
enter
fidivrl
dec
cmp
jmp
jb
repz
dec
(bad)
fs
pop
xchg
add
insl
ljmp
lret
jle
xchg
adc
cltd
lea
cmc
mov
outsb
daa
mov
lock
fcmovb
cltd
dec
(bad)
jge
fisubl
sahf
rcrl
insb
cli
vorpd
push
inc
push
dec
jge
arpl
sbb
pop
outsb
and
mov
sub
data16
inc
loopne
inc
or
outsb
mov
test
pop
or
nop
(bad)
mov
lods
add
adc
cmp
clc
ja
aaa
inc
mov
cmc
mov
push
sub
xor
sub
lret
pop
lret
pushf
xor
pop
jg
or
cmp
sub
iret
sub
out
dec
jge
sti
(bad)
shl
push
or
sti
or
adc
daa
mov
pop
jp
mov
mov
xor
cmpl
mov
mov
and
push
jge
in
pop
xchg
add
imul
mov
sbb
(bad)
mov
lock
xchg
xor
xchg
adc
push
insl
pop
add
fs
shlb
leave
xor
push
mov
jle
sbb
xchg
push
test
dec
inc
int3
leave
orl
aam
sbb
insb
adc
cs
cli
fiaddl
jp
rcll
outsl
push
mov
pop
outsl
and
outsb
adc
cs
cmpsb
cmpsb
add
inc
mov
push
pop
aad
inc
pop
or
inc
dec
xchg
and
repz
jmp
push
mov
sub
popf
xchg
jb
push
mov
inc
sub
shlb
sbb
dec
out
sub
mov
adcl
lea
sarl
(bad)
div
mov
jmp
xchg
sub
pop
movsb
into
setb
jno
xchg
adc
or
or
jp
(bad)
pop
xchg
sbb
pop
pop
adc
xchg
cwtl
push
out
sbb
sub
enter
jnp
data16
lea
fsts
jl
push
cmp
xor
pop
orb
(bad)
jnp
scas
(bad)
pop
popf
fisttps
cltd
pop
jbe
dec
enter
mov
jmp
bound
pop
push
clc
dec
pop
loope
xor
sbb
or
adc
jmp
add
adc
ret
dec
sahf
xchg
xchg
js
cmp
dec
pop
stc
hlt
test
insl
in
out
in
popa
and
adc
faddl
xchg
add
lar
adc
cli
push
js
jecxz
mov
loope
push
sbb
sub
fs
cmp
test
mov
cmp
ret
out
push
ficomps
xchg
or
sbb
inc
sub
cmc
mov
sbb
mov
jle
mov
ror
sub
jnp
push
lret
lea
mov
out
dec
lds
(bad)
loopne
or
cmp
mov
ss
lret
jo
arpl
fstpl
jmp
frstor
fwait
inc
jno
into
push
push
(bad)
sbb
jno
sub
adcb
mov
jns
frstor
lds
add
xchg
mov
fildl
mov
xor
jp
fisubl
mov
sbb
je
push
ja
xchg
sbb
inc
mov
xchg
insb
adc
cs
jp
in
xor
(bad)
xchg
sahf
sti
inc
decb
andl
jl
cmc
adc
xchg
sbb
lss
movsb
adc
add
cmp
addr16
xchg
sbb
ficoms
ficoml
in
outsl
int3
fucompp
pop
lea
sahf
push
mov
jle
adc
or
aaa
cmpl
jmp
push
push
shll
jae
not
xchg
add
cld
data16
int
(bad)
adc
std
test
arpl
cld
stos
mov
lret
add
gs
lds
sbb
xchg
ljmp
test
mov
call
or
sahf
mov
sbb
test
inc
jl
ret
mov
xchg
rclb
dec
xorl
stos
dec
xchg
nop
cmpsl
int
roll
push
cmp
xchg
fidivs
cmp
cmp
clc
pop
adc
sti
movsl
jb
roll
test
aas
sti
push
aas
repz
cmc
sub
pusha
jmp
scas
popa
jp
jo
adc
iret
push
mov
aad
fnstenv
nop
mov
sbb
insb
jb
xchg
loopne
push
out
arpl
add
loopne
xor
outsl
sub
sbb
fildll
mov
jnp
psadbw
jno
mov
pop
mov
sbb
roll
data16
inc
add
shlb
lea
or
ss
add
(bad)
rclb
xchg
div
jbe
push
std
dec
push
