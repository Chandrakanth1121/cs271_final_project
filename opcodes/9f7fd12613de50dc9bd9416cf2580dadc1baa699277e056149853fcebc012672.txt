popf
mov
lahf
fstl
lret
int3
mov
mov
xchg
lret
mov
dec
(bad)
mov
(bad)
in
imul
mov
or
sbb
adc
(bad)
not
into
mov
cmp
adc
mov
xchg
xbegin
mov
cmpsl
xor
ret
and
bound
or
mov
xchg
stc
fistps
cmp
cs
fstpl
popa
mov
inc
ret
rcll
ja
lahf
mov
mov
ds
xor
ret
mov
shlb
sbb
cmpsb
ljmp
push
imul
or
pop
fcmovnb
sub
cmp
push
mov
mov
pop
leave
add
out
xor
xchg
cmp
mov
lret
(bad)
cmpsl
hlt
add
bound
sub
jp
inc
rorl
dec
sub
cmp
lea
les
stos
mov
dec
jg
orl
xchg
push
test
(bad)
movsl
(bad)
fwait
pusha
push
push
daa
test
mov
add
inc
pop
or
sbbb
test
hlt
pop
imul
imul
out
ret
ret
outsb
fbld
push
stos
jecxz
xchg
or
inc
(bad)
and
adc
lcall
cmpl
ret
inc
xor
out
jecxz
xor
sbb
xchg
inc
cmpsl
fs
lds
and
mov
je
dec
mov
jne
and
jl
pop
mov
mov
imul
dec
mov
cld
lcall
ficoms
(bad)
andb
jl
leave
xchg
mov
daa
ret
shrl
pop
hlt
(bad)
push
lea
das
sahf
rorl
in
movsb
(bad)
cld
push
out
mov
and
(bad)
mov
mov
push
push
imul
push
fdivp
aas
scas
jne
jb
xchg
mov
(bad)
cmpsb
lahf
pop
jge
jbe
mov
outsl
cmpsl
(bad)
pop
(bad)
arpl
aad
dec
cmpsl
lds
ljmp
mov
mov
test
push
je
dec
pop
lret
cmp
and
out
daa
add
xchg
orl
fsubl
sub
dec
sbb
stos
mov
les
lods
das
cmp
mov
lahf
fwait
stos
bound
jo
add
inc
xchg
push
(bad)
gs
mov
data16
pop
dec
inc
out
int
daa
movsb
sbb
test
mov
add
push
pop
sbb
sub
xchg
call
fisubrs
sahf
mov
jo
call
orb
imul
les
ds
mov
push
fcoms
fbstp
mov
pop
lahf
add
insb
stos
lea
fsubl
pop
jmp
mov
dec
mov
lea
andl
mov
mov
or
cmc
bound
repnz
frstor
outsb
jb
shll
or
mov
cmp
sub
cmp
arpl
inc
xchg
scas
hlt
ret
je
push
rcll
xorl
mov
inc
pop
in
roll
mov
inc
dec
pop
popa
lock
ja
cmp
shl
pop
gs
xchg
mov
mov
xlat
jmp
sbb
sub
cmp
dec
sbb
sti
filds
aas
shrb
testl
in
imul
inc
les
mov
mov
mov
mov
lret
inc
mov
mov
push
add
(bad)
clc
addr16
sub
inc
sbb
lea
dec
mov
inc
shll
cmp
cmpsb
jl
jl
pusha
mov
mov
inc
dec
mov
xchg
push
in
xor
inc
or
mov
mov
sbb
push
dec
adc
pop
sub
push
test
cltd
stos
ret
popf
mov
push
mov
popa
mov
inc
jecxz
loope
stos
cmp
xlat
jo
push
sub
adc
xchg
jb
jae
stos
and
push
inc
test
out
out
les
imul
sub
xchg
paddw
call
aad
sub
ret
push
scas
jbe
dec
stos
outsb
xchg
pop
cmc
out
fdivrs
pop
int3
imul
jp
sub
jl
daa
nop
and
addr16
es
cmp
stc
in
mov
divb
mov
out
push
(bad)
mov
shlb
mov
scas
and
adc
jp
(bad)
pushf
sti
(bad)
outsb
mov
dec
stos
jmp
pushf
push
insl
lds
adc
inc
dec
pop
mov
arpl
adc
sbb
inc
stos
data16
inc
subl
mov
and
dec
adc
into
push
cmpsl
push
jp
in
and
outsl
inc
enter
nop
xchg
div
cmp
push
std
dec
mov
cmp
ljmp
mov
mov
test
cld
cmp
adc
sahf
mov
push
mov
sar
xor
mov
pop
stc
loope
sub
dec
jnp
lds
fs
fwait
lds
sti
jecxz
test
cmp
test
test
sbb
cmp
aas
ja
xor
movsb
jmp
dec
ljmp
dec
mov
ror
iret
cmc
or
mov
gs
mov
or
in
xchg
in
inc
mov
mov
push
movl
mov
xor
mov
push
lock
jnp
xor
mov
adc
mov
inc
inc
mov
inc
sub
dec
fwait
lgs
mov
jno
ja
xor
jp
fs
call
insl
mov
into
leave
cmp
and
push
mov
push
loopne
dec
lret
mov
dec
loope
push
nop
pop
int3
jge
sub
arpl
and
adc
inc
(bad)
add
and
loope
sub
dec
int1
fldt
adc
call
(bad)
aad
and
fcmovnu
jle
pop
call
xor
mov
(bad)
stos
mov
cld
adc
shlb
loope
or
out
push
jbe
fwait
in
xchg
rcrl
dec
sub
movsb
adc
rorb
lds
adc
ss
rolb
mov
jbe
xchg
js
(bad)
ds
sub
xchg
and
fstpt
loop
int
pop
pop
loope
jge
fidivrs
sub
dec
fistps
addl
cmpsb
imul
jns
xorl
pop
repnz
adc
fldl
xor
mov
sbb
mov
mov
(bad)
mov
aaa
outsb
sti
inc
outsb
(bad)
iret
dec
mov
sbb
xor
addb
lods
xchg
or
stos
pop
stc
mov
cmp
jne
iret
mov
pop
in
movsb
adc
or
fs
mov
dec
out
in
fisttpll
mov
jns
push
cmpsb
inc
jnp
not
sbb
jmp
and
mov
ret
clc
push
sysenter
jb
iret
sbb
inc
cmp
outsb
out
int
sti
outsl
stos
shll
lea
add
(bad)
es
xchg
jp,pn
jne
fcmove
loope
sahf
int
ret
fs
ja
lcall
mov
cltd
xchg
iret
jecxz
leave
sub
push
push
stc
add
xchg
fistpll
movsb
dec
jbe
mov
add
shrb
(bad)
mov
sbb
cs
ret
push
mov
imul
push
xorl
jns
adcl
shlb
mov
into
imul
popf
leave
dec
test
xlat
les
les
mov
int
rcrl
lret
pop
cltd
int3
lods
notl
cmp
sub
mov
sbb
idivl
xchg
mulb
pushf
cmp
mov
xor
loopne
cwtl
or
dec
out
subl
or
sub
sub
ret
stos
mov
lret
push
jae
jb
sub
sbb
int3
mov
jae
xor
xchg
push
loopne
mov
jmp
dec
jmp
or
bound
lcall
pop
les
xchg
inc
jecxz
dec
mov
out
push
xorb
aam
gs
test
fwait
adc
jmp
test
loopne
push
loope
test
xchg
adc
ret
sbb
jb
sbbl
inc
mov
or
cmp
jmp
sub
cmp
ret
sub
subl
mov
lahf
lcall
frstor
or
sub
les
jmp
cwtl
jno
push
sbbl
call
or
mov
jl
cltd
das
xchg
vdivpd
mov
imul
dec
sub
cmp
dec
std
mov
mov
jmp
adc
cmp
lahf
mov
jle
adc
inc
mov
jb
cmp
leave
test
sub
shrb
pusha
arpl
int
push
fnop
xchg
lods
jmp
arpl
out
(bad)
lret
mov
add
pop
jae
leave
nop
mov
insl
mov
dec
fildl
