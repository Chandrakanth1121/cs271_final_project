xor
xor
add
pop
and
imul
in
(bad)
jle
rex.wr
imul
(bad)
add
add
mov
ret
data16
sub
mov
xor
fdivrs
leave
movl
sbb
int3
out
cmpl
movslq
add
(bad)
(bad)
jns
push
rex.rb
push
(bad)
mov
mov
test
je
mov
jg
call
movsb
mov
jl
sbb
adc
out
xchg
ret
(bad)
in
call
jge
sbbl
je
xor
xor
sub
nop
mov
mov
pop
movzwl
(bad)
cli
or
add
addl
(bad)
jbe
nop
clc
sbb
test
setne
jmp
adc
shr
jns
insl
mov
(bad)
mov
rex.r
rex
rex.wrx
lock
mov
jns
xchg
ja
(bad)
(bad)
cmp
(bad)
outsb
push
xchg
lea
outsb
lock
add
mov
clc
sub
rex.w
rex.wr
fwait
mov
call
sbb
mov
cmovno
push
push
stos
and
jnp
or
add
adc
adc
jo
jmp
outsl
cmp
je
add
(bad)
mov
lods
clc
lock
rex.w
rex.w
test
cmp
(bad)
cmp
rex.wrx
adc
out
clc
imul
(bad)
jg
fcoml
(bad)
test
(bad)
add
fdiv
ret
or
es
call
mov
mov
adc
adc
(bad)
in
std
sub
call
shl
movabs
sbb
shl
cmp
call
and
(bad)
out
jle
test
jle
or
fisttpl
or
call
fstpl
jle
mov
call
lock
sbb
sbb
rcll
(bad)
clc
fbstp
(bad)
out
(bad)
clc
std
loope
movl
cmpsb
call
in
mov
loopne
int3
add
mov
mov
(bad)
rex.wxb
mov
or
leave
(bad)
mov
sbb
sarl
shlb
and
pop
pop
pop
sub
lock
fildll
test
pop
out
(bad)
or
mov
(bad)
fldz
sar
push
or
out
imul
cmp
xchg
jmp
xchg
adc
test
outsl
push
imul
cmpsb
leave
mov
fbld
cmp
(bad)
(bad)
sub
xchg
mov
jmp
sbb
jg
in
add
xchg
lret
add
movsl
add
sbb
rex.w
sbb
leave
cld
cs
add
or
(bad)
(bad)
cli
(bad)
outsl
int
cmp
push
and
sub
out
(bad)
mov
andb
outsl
rcl
cs
mov
sbb
call
add
mov
pop
hlt
cmp
mov
rex.rb
(bad)
(bad)
fisubrs
rex
and
repnz
rcll
scas
xor
je
jb
sub
jrcxz
or
add
mov
xchg
repnz
add
rex.x
lcall
add
add
rex.w
data16
lock
push
(bad)
ja
pop
sarl
jl
nop
rex.wx
pop
ret
gs
ds
push
pop
mov
(bad)
mov
or
(bad)
jno
in
sub
call
jle
add
jg
lods
and
movsxd
clc
out
loop
(bad)
cli
(bad)
adc
addl
es
test
rex.wxb
lods
add
popf
xorb
call
in
{rex2
rex.w
(bad)
loopne
call
(bad)
test
cmp
add
mov
adc
shr
xchg
nop
cwtl
jns
pushf
and
lods
mov
mov
cs
mov
xlat
mov
(bad)
(bad)
sub
loop
rorb
mov
jo
jg
movabs
enter
sbb
rex.wrb
rex.wrb
out
sbb
cltd
divl
or
(bad)
jns
mov
sbb
rcrl
mov
ror
movsxd
mov
pop
div
(bad)
and
jo
xor
jo
xchg
push
mov
ficomps
xchg
(bad)
nop
cwtl
pop
add
(bad)
in
jrcxz
mov
adc
sbb
(bad)
pop
adc
add
je
testb
(bad)
push
nop
sahf
jge
loopne
std
cmp
jns
cmp
lret
(bad)
lock
push
fwait
jo
stos
xchg
loop
(bad)
and
xchg
push
rcrb
(bad)
jl
xor
and
movsb
pushf
call
jmp
xchg
(bad)
je
push
ret
jle
shll
mov
adc
cmp
mov
cwtl
int3
out
sub
fldt
fwait
data16
movsxd
rex.wr
lea
ret
(bad)
mov
mov
in
mov
xor
mov
(bad)
in
{rex2
xchg
out
adc
movsxd
add
mov
clc
shr
jmp
(bad)
jle
cmpb
out
push
add
adc
jmp
(bad)
cwtl
ja
jae
rex.wb
mov
sub
jmp
pop
(bad)
rex.wrb
jrcxz
rex.rx
stos
movsb
xchg
neg
data16
rex.wxb
clc
add
mov
add
sbb
fidivrl
cmc
add
loopne
fisttps
cmp
jb
rex.wx
push
add
add
(bad)
outsl
out
mov
mov
ret
(bad)
(bad)
rex.wrb
mov
(bad)
or
adc
fcoms
sub
mov
(bad)
push
mov
fisubrl
fyl2x
shrl
mov
(bad)
call
movabs
rex.wrb
filds
adc
fcomip
pop
scas
sub
cmp
sbb
lret
mov
imul
ds
je
movsl
sub
lock
adc
xchg
fnstenv
rex.wr
add
loopne
add
rex.rb
sbb
sub
fdivp
xchg
cmp
movsl
and
(bad)
test
mov
xchg
rex.rxb
ds
lock
cld
jmp
rex.w
mov
jmp
es
(bad)
mov
(bad)
(bad)
add
mov
rcll
imul
hlt
(bad)
fcoms
stos
in
(bad)
movsl
enter
or
add
stc
mov
mov
nop
add
(bad)
(bad)
out
movabs
iret
(bad)
cmp
add
mov
adc
add
cmp
add
call
xchg
(bad)
(bad)
lock
push
pop
or
cli
scas
xor
mov
or
rex.x
push
jp
imul
mov
imul
enter
mov
sbb
insl
jns
xlat
xor
adcl
loopne
(bad)
rex.wx
shlb
mov
imul
(bad)
(bad)
(bad)
sar
iret
(bad)
push
jl
adc
jl
ret
rex.xb
(bad)
cmp
adc
mov
xor
jb
rex
and
(bad)
xchg
push
(bad)
and
sub
mov
call
mov
mov
(bad)
ss
mov
scas
(bad)
cwtl
sub
cmpsb
rex.wrb
sahf
andb
sbb
xchg
rex.wb
out
add
rorl
sub
ds
mov
(bad)
div
out
cmp
lea
rex.wrx
fcompl
push
bsf
or
clc
outsl
cmp
rex
adc
and
test
xor
lea
rcrb
jo
mov
movabs
movsb
push
mov
sti
cmp
xor
fiadds
out
loopne
and
or
test
repz
push
xchg
(bad)
(bad)
xchg
cmp
jrcxz
mov
cmp
add
(bad)
cmp
cmp
sbb
hlt
xor
int
(bad)
(bad)
mov
cmp
lock
mov
add
pop
in
nop
(bad)
(bad)
mov
(bad)
rex.wrx
fs
xor
ret
clc
lahf
ffree
sahf
mul
rex.wrxb
mov
(bad)
shrl
cmp
jne
(bad)
adc
jno
(bad)
jle
jmp
sbb
jbe
insb
xchg
push
fcompl
and
lea
jns
int
xchg
imul
cltd
xchg
imul
jb
mov
in
xchg
(bad)
xchg
scas
push
{rex2
scas
sbb
cs
mov
repnz
(bad)
mov
cmp
xchg
cmpsb
in
and
pop
sahf
mov
sbbb
sahf
(bad)
cmc
add
outsl
flds
sbb
add
outsl
push
cmp
cmp
xor
test
test
sti
(bad)
sbb
push
cwtl
and
lock
ret
adc
(bad)
xchg
push
or
repz
sarb
(bad)
and
lret
xchg
lea
(bad)
outsl
cmp
adc
push
jns
lret
pop
(bad)
(bad)
rex.r
rex.wxb
repz
mov
pop
in
sub
mov
mov
fucom
cmp
cmp
stos
cmc
rex.xb
(bad)
in
xchg
mov
cwtl
add
xchg
(bad)
rex.rb
clc
shlb
fstpt
push
cmp
movsl
and
mov
cmp
or
faddl
(bad)
fnstenv
jmp
pop
xlat
ret
or
push
loopne
adc
hlt
xor
(bad)
orb
xchg
je
movabs
mov
cmc
add
adc
cmp
cmp
movabs
nop
xor
rex.wxb
test
sub
