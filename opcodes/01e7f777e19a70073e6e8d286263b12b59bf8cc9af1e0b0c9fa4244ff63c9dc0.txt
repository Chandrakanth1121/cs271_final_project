mov
mov
xor
fisttps
hlt
roll
sub
shlb
out
dec
rcll
jno
jg
rorl
lahf
xor
decl
push
push
mov
cmp
(bad)
ret
lret
cmc
and
aas
andb
out
xchg
mov
rclb
xor
stc
xorb
push
cmc
and
xorb
in
dec
adc
jge
dec
scas
iret
or
cmp
shl
testb
fs
cmp
add
(bad)
mov
fistpll
mov
movsb
jae
sbb
stos
aam
jl
aas
push
sbb
fmull
push
repnz
lret
mov
mov
fcomps
subb
xorb
scas
fwait
xorb
lahf
mov
dec
enter
jae
adc
clc
adc
or
mov
adc
mov
xchg
mov
jge
add
(bad)
adc
mov
repz
stos
fwait
adc
or
or
or
iret
adc
or
push
adc
or
or
dec
out
dec
lcall
adc
push
dec
cmp
push
sub
adc
mov
adc
vmwrite
adc
(bad)
sbb
mov
imul
inc
adc
push
push
jno
daa
push
pusha
adc
dec
repz
adc
setae
xchg
dec
lret
add
inc
adc
push
sbb
cmp
int3
sbb
lock
adc
das
dec
push
movsb
adc
push
lret
dec
adc
push
shll
(bad)
hlt
test
mov
jl
adc
xchg
lea
mov
jg
jmp
push
insb
xor
jmp
adc
xor
push
adc
push
(bad)
jae
ds
adc
jl
imul
sub
mov
dec
leave
imull
loope
adc
push
xor
push
lea
jmp
adc
wrmsr
add
sbb
faddl
in
sbb
sub
ret
in
pop
sar
xchg
cmpsl
out
jmp
out
aas
inc
nop
ja
rorb
cltd
out
pop
mov
out
fwait
adc
out
shr
jge
dec
ds
popa
and
dec
pushf
lret
mov
repz
pop
mov
out
or
cs
mov
sub
sarb
shrl
je
pop
mov
mov
xor
add
nop
dec
imul
sub
and
mov
in
fimuls
jmp
pop
and
sub
xor
pop
xorb
mov
adc
xorb
cs
insl
jmp
mov
jne
add
cmpsb
daa
add
mov
mov
pop
roll
mov
enter
imul
daa
(bad)
mov
add
jge
xorl
mov
fcompl
js
or
movsb
lods
mov
das
lret
je
cli
sub
enter
push
pop
enter
pop
mov
loope
mov
lods
cmp
nop
push
dec
call
testl
lahf
out
out
enter
inc
mov
cmp
push
cltd
enter
jmp
push
popa
dec
insl
and
sahf
mov
loopne
cld
fnsave
sti
loope
push
popa
dec
fistpl
adc
inc
stos
je
xchg
mov
imul
mov
mov
pop
dec
cmp
mov
cmp
pop
hlt
mov
outsl
and
clc
cmpsb
mov
mov
xor
mov
mov
in
sahf
cmpsb
aaa
loopne
jg
xor
loop
in
adc
in
sbb
xchg
jecxz
add
cld
xor
lret
add
out
cmp
xchg
cwtl
(bad)
int1
xor
and
or
sbb
loopne
mov
mov
push
stos
add
jp
test
mov
sub
fildll
jp
fucomip
lahf
xchg
mov
push
fistps
imul
mov
test
dec
repz
lret
cwtl
dec
mov
sbb
fildl
pop
pop
dec
test
xor
jg
test
mov
pop
roll
or
jne
xor
daa
sti
into
test
dec
adc
fs
dec
js
xor
shlb
test
or
mov
mov
fucom
xlat
test
or
int3
cmpsl
enter
mov
les
(bad)
nop
int1
push
pop
pop
std
pushf
test
leave
(bad)
push
mov
(bad)
push
xchg
(bad)
divb
adc
pop
mov
xchg
push
add
add
add
add
add
inc
pop
push
test
roll
or
test
or
mov
push
mov
mov
or
xorl
push
fstl
test
or
dec
and
jg
inc
test
popa
out
imul
pop
fbstp
in
repnz
xor
addl
iret
dec
jp
xor
mov
lods
test
(bad)
ss
cmp
jg
mov
test
or
stos
(bad)
mov
dec
mov
mov
test
enter
lea
aad
sarb
jne
mov
shrb
test
enter
sub
insb
frstor
pop
cmpsb
cmp
mov
inc
iret
popf
std
mov
(bad)
jmp
and
adc
xor
xor
xor
and
ljmp
mov
or
pop
fldl
xchg
add
jmp
and
sbb
inc
pop
jmp
nop
mov
aad
xchg
xchg
mov
xchg
dec
psubusb
pop
pop
repnz
insl
mov
dec
adcb
mov
xchg
mull
pop
mov
push
mov
jl
dec
cmp
or
inc
xor
pop
mov
push
dec
adc
mov
ffreep
jbe
dec
xchg
mov
pop
hlt
and
lods
leave
pop
daa
jbe
xor
pop
adc
lret
or
pop
mov
into
je
(bad)
pop
cmpsl
pusha
mov
or
jne
or
jg
mov
dec
les
insb
mov
pop
add
aad
xor
inc
or
push
or
or
lea
rorl
pop
in
mov
addb
xchg
xorl
or
push
xorb
pop
int
xchg
xorl
fisttps
xchg
pop
add
xorl
popa
mov
cmp
fistpl
int
orl
xor
adc
jmp
jnp
orl
pusha
cmp
xor
cmp
add
xor
or
iret
mov
cmp
aam
loope
dec
sub
push
mov
mov
mov
push
sbb
aaa
fmull
dec
cmp
sbb
int
sarl
test
dec
sub
orb
ja
push
push
sbb
(bad)
jnp
enter
xor
mov
into
lock
jo
push
add
into
sub
data16
mov
add
mov
sbb
mov
insb
movsl
pop
mov
sub
or
test
leave
or
xor
outsb
cld
leave
mov
dec
adc
mov
mov
xchg
mov
or
jge
mov
or
mov
nop
rol
cld
int
xor
int3
xchg
mov
and
test
les
xchg
lock
decb
jb
sub
xor
add
sbb
das
(bad)
sbb
and
push
cld
mov
mov
lock
sbb
mov
test
rorb
aas
lea
enter
cmpsb
mov
imul
xchg
and
out
mov
stmxcsr
jge
loopne
mov
mov
gs
frstor
jno
and
frstor
and
fmuls
cmp
cwtl
push
jmp
pusha
dec
in
pop
lahf
xchg
iret
jbe
dec
mov
add
dec
(bad)
add
inc
sbb
roll
mov
int1
fimuls
mov
cltd
or
dec
dec
push
adc
xchg
xchg
out
jnp
mov
pop
add
mov
dec
(bad)
cmp
push
mov
repnz
fistl
push
test
lea
fcmovne
and
and
arpl
mov
push
pop
mov
adc
sub
leave
pop
push
xor
mov
inc
out
fidivl
scas
jno
mov
inc
or
xchg
inc
cmpsb
(bad)
dec
outsb
loope
cltd
mov
iret
xchg
push
test
sbb
adc
xchg
push
inc
shrb
jne
and
xchg
push
inc
ficomps
xlat
sahf
test
cwtl
stc
pop
push
pop
cmpl
std
push
iret
test
test
mov
roll
push
dec
xlat
sbb
dec
scas
pop
mov
mov
mov
xor
xor
sarb
out
loop
lds
xor
mov
mov
popf
cmpsb
push
mov
push
dec
adc
mov
inc
xchg
ja
cmpsb
push
dec
dec
into
xchg
iret
(bad)
enter
mov
mov
or
int1
mov
dec
