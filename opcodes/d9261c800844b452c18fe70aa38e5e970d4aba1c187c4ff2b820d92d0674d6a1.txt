pusha
push
xor
add
add
dec
add
add
add
add
add
movsl
add
push
lods
in
add
repnz
add
add
add
add
add
add
add
nop
add
add
add
add
xor
add
sub
add
or
add
or
add
add
add
add
add
add
add
add
sub
js
movsb
lcall
inc
in
mov
cmpsb
divl
push
jmp
sahf
adc
out
pushf
jb
fldenv
adc
(bad)
loope
(bad)
pushf
outsb
fdivl
xchg
aam
lea
in
js
sub
out
sub
test
adc
pop
sub
cmp
sub
inc
pusha
frstor
imul
das
push
push
or
test
cmc
mov
and
mov
mov
es
cmp
inc
iret
mov
pop
push
cmp
(bad)
mov
sub
lcall
dec
sahf
dec
je
and
mov
or
or
xor
stc
clc
sub
lods
clc
out
in
popa
push
cmp
or
loope
dec
(bad)
aam
into
add
and
add
add
mov
sbb
psubd
lcall
jno
inc
cmova
xchg
xchg
sahf
xchg
inc
data16
js
enter
or
shll
push
add
add
stos
movsl
sbb
ss
add
or
inc
mov
ret
scas
push
mov
mov
push
enter
out
pop
out
inc
mov
pop
dec
adc
(bad)
add
inc
int
and
int3
or
ret
mov
jp
inc
jno
fsubrs
ret
cmp
shlb
stos
ljmp
push
jnp
xlat
add
add
push
xchg
out
mov
mov
ss
xor
into
mov
and
pop
add
stos
leave
sub
in
and
xchg
and
push
je
in
int3
sti
xor
mulb
xchg
adc
jbe
xchg
cmpsb
mov
pop
insl
call
sbb
mov
sbb
xchg
pop
pop
inc
popf
sub
or
mov
sbb
inc
add
mov
(bad)
cmp
(bad)
fsubl
jecxz
fwait
push
sbb
lods
cmpsb
dec
push
lock
push
mov
loope
outsb
mov
or
iret
and
loop
mov
(bad)
xchg
mov
fisttps
aaa
cmp
lret
push
fwait
repnz
mov
xor
jnp,pt
xlat
inc
sti
das
scas
jge
mov
sbb
push
ret
(bad)
mov
test
popf
jp
ja
pop
in
mov
add
je
into
xchg
cmp
cmp
push
xchg
mov
mov
mov
inc
movsb
fistl
xor
pop
shll
push
out
dec
inc
mov
je
(bad)
push
xorb
into
sbb
mov
ja
int1
xor
repz
xchg
mov
pop
aad
cmp
lods
negl
(bad)
sbb
xchg
test
mov
push
sbb
and
and
fwait
imul
xchg
mov
js
bound
jge
out
push
loop
ss
mov
fdivr
pop
push
add
mov
adc
sub
mulb
lods
adc
pop
cmp
jl
push
inc
mov
cs
push
mov
mov
imul
std
push
adc
leave
movsl
clc
aas
lahf
addr16
push
lods
mov
push
push
cmpsb
xchg
ffree
push
orb
mov
pusha
bnd
add
mulb
xchg
xlat
(bad)
fnclex
cmp
push
int
adc
jle
aad
int3
div
push
adc
xor
out
popf
ja
inc
aam
imul
and
jb
sbb
pop
adc
fucom
decl
cmp
add
bndldx
repnz
(bad)
(bad)
(bad)
bound
sahf
(bad)
rcrb
lret
inc
ret
jne
push
(bad)
cld
pop
push
jmp
jmp
jmp
jecxz
lret
xor
out
sbb
or
sbb
sub
mov
and
ficoml
mov
mov
mov
pop
mov
subb
das
mov
push
mov
mov
mov
mov
and
cmpsw
pop
mov
scas
cmpsl
push
cltd
mov
(bad)
push
mov
iret
push
lea
idivb
mov
mov
and
aaa
mov
mov
xchg
orl
lods
movsb
aas
xchg
xchg
(bad)
lea
sub
mov
xchg
push
popa
dec
popa
push
popa
pop
bound
popa
pop
pop
add
jle
fiaddl
bound
jbe
imul
inc
pop
bound
in
imul
push
push
ljmp
push
loop
lret
(bad)
std
and
ljmp
test
std
(bad)
and
fstps
loop
lret
js
sbb
ljmp
mov
xchg
lea
dec
adc
dec
dec
jo
jge
inc
shrb
dec
jl
stc
inc
adc
jge
inc
mov
dec
cs
mov
pop
dec
add
inc
test
dec
jle
stc
inc
push
dec
push
jo
jge
jl
jl
jl
jl
inc
movsb
dec
xorb
jg
ss
and
xchg
or
cmp
cmp
cmp
and
sub
cmp
push
push
ds
and
ds
insb
add
out
xor
xor
xor
adc
dec
cmp
xor
clc
arpl
ja
aam
outsl
clc
insl
(bad)
insb
lret
(bad)
call
out
shl
cmp
jp
cmp
pop
lock
fsts
push
out
lret
clc
(bad)
lock
fnstcw
dec
out
shl
sbb
ret
lret
xchg
lret
int3
lret
repz
or
mov
mov
xor
(bad)
cmc
(bad)
clc
scas
ret
or
mov
mov
xor
(bad)
cmc
(bad)
clc
ljmp
faddl
vaddsubps
(bad)
clc
scas
ret
or
mov
mov
xor
(bad)
cmc
(bad)
clc
scas
ret
or
mov
mov
xor
(bad)
cmc
(bad)
clc
scas
ret
dec
ljmp
or
cmc
(bad)
clc
repz
and
cmp
imul
xor
push
sub
jl
sbb
xor
aad
pusha
cmp
or
push
sub
add
push
add
ds
jle
jle
jle
imul
inc
cmp
jbe
pop
xor
imul
jbe
pop
jnp
add
nop
jbe
jle
inc
push
adc
mov
imul
inc
ja
adc
out
out
out
(bad)
aad
push
jb
lahf
out
fcomps
(bad)
lret
int1
insl
out
mov
call
out
dec
(bad)
iret
in
int1
js
and
fdivrs
xchg
ss
jbe
push
sub
sub
xchg
cmp
jns
sbb
adc
cs
das
dec
cmp
jl
mov
nop
mov
pushf
mov
mov
mov
fnstenv
shrl
and
fwait
mov
pushf
mov
mov
mov
xchg
mov
xchg
xchg
cltd
scas
loopne
loopne
loopne
notl
call
call
shll
loopne
stos
fdivp
shll
xchg
idivl
mov
test
adc
sub
daa
xchg
sbb
xor
adc
daa
lcall
add
loope
std
sub
daa
into
sbb
xor
or
loope
mov
shll
rcl
rol
incl
loopne
ret
insl
leave
xchg
rol
mov
out
pusha
loopne
mov
push
xchg
xor
mov
aad
sti
aam
lret
lea
ret
int
xchg
lock
aam
lret
mov
std
std
mov
in
lret
pusha
loop
rol
(bad)
ret
std
std
popf
lock
lret
inc
loop
shlb
pushf
push
push
sbb
adc
das
mov
sbbl
mov
adc
loopne
mov
sbb
xor
sbb
adc
cmp
mov
sbb
adc
repnz
repnz
repnz
cmp
shll
gs
cli
xor
jns
and
data16
lock
in
cli
pop
repnz
or
imul
js
inc
and
jo
pop
and
xor
mov
pop
test
adc
jp
jb
push
test
adc
xor
test
mov
test
jnp
pop
test
push
mov
test
outsb
xchg
sbb
lcall
ds
cmpsl
or
hlt
cmp
(bad)
ds
add
or
cmpb
aad
fldl
(bad)
movsb
