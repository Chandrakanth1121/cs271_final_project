mov
(bad)
shl
mov
xor
mov
mov
sahf
ja
jbe
push
inc
mov
ret
adc
xor
sbb
xchg
mov
lock
mov
or
sub
cmp
movsl
xor
outsl
jl
inc
test
push
int3
jg
stos
or
xor
xor
pop
std
adc
adc
jmp
fildl
daa
pop
adc
mov
int3
fwait
outsb
iret
jl
fwait
hlt
or
leave
test
das
scas
and
test
and
(bad)
and
pop
jge
xchg
rcl
xchg
in
push
mov
mov
int
sbb
xor
loope
sub
jecxz
inc
lcall
outsl
out
dec
and
xorl
mov
lret
xlat
out
fisubrs
std
jg
pop
imul
les
cmp
leave
in
mov
(bad)
loopne
cs
xchg
cmp
test
mov
das
insb
inc
push
cmp
scas
fimull
mov
hlt
inc
cmpsl
out
xlat
jmp
idivl
mov
test
jb
mov
mov
stos
xor
(bad)
addb
orl
mov
mov
cmp
jp
std
adc
mov
cwtl
mov
mov
(bad)
inc
int3
clc
dec
jle
das
xchg
dec
cmp
add
aad
pusha
pusha
das
orl
pop
popa
out
sub
sub
out
in
lods
int1
leave
xchg
sbb
enter
(bad)
addr16
nop
and
insl
xor
or
(bad)
push
lock
rcrl
and
imul
out
fwait
xor
loop
cmp
mov
les
mov
pop
ret
or
popf
push
in
data16
jl
push
popf
cltd
xchg
movsl
jmp
adcb
daa
pop
push
push
sbb
shll
(bad)
js
adc
ja
jo
sub
mov
hlt
out
imul
popf
sbbl
out
loope
adc
sub
mov
sub
mov
inc
mov
and
test
push
jb
lock
fldcw
pop
xor
jno
mov
mov
xchg
add
xchg
xor
pop
xor
mov
mov
insl
pop
adc
aam
add
int1
lock
jb
out
push
es
inc
lods
jb
imul
(bad)
in
je
mov
stos
stc
dec
(bad)
dec
cmpsl
cmpsb
shlb
cmpsl
jle
cltd
outsb
and
inc
bound
lods
push
xchg
jecxz
leave
es
imull
sbb
pop
insl
dec
inc
xor
push
leave
push
cmp
mov
mov
mov
jnp
cmc
push
mov
pop
dec
mov
dec
out
pusha
xorl
push
xor
push
sbb
shlb
mov
mov
fisttpll
inc
sbb
pop
subl
loop
mov
filds
call
les
insl
dec
pop
loopne
push
adc
iret
and
xchg
sbb
mov
sti
cmp
ret
inc
xlat
test
cs
sub
ss
pop
loopne
mov
inc
(bad)
and
xor
leave
lret
ja
out
adc
xchg
pop
and
test
lea
pop
cvttps2pi
lock
xchg
in
in
shlb
push
jge
push
inc
jno
rcll
pop
mov
leave
into
inc
(bad)
mov
das
out
mov
adc
imul
sbb
lods
iret
rcrb
and
push
sti
cmp
in
lock
adc
xor
addl
jmp
mov
push
sbb
adc
xchg
stos
xlat
push
mov
inc
mov
inc
add
ret
add
aas
cmp
in
mov
in
jnp
xor
cmp
pop
adc
scas
arpl
jo
movsl
incl
or
cld
movsb
mov
je
dec
fstpl
jbe
inc
pusha
sbb
cmp
pop
dec
add
inc
lea
test
jmp
arpl
(bad)
clc
fiaddl
lea
(bad)
or
pop
aaa
fbstp
add
mov
inc
xchg
mov
push
push
test
mov
mov
sub
fidivs
inc
adc
fbstp
xchg
mov
ja
imul
out
mov
adc
out
stc
(bad)
jge
dec
sub
adc
add
scas
or
cs
sub
sbb
out
test
loop
notl
push
or
mov
hlt
cmpsb
or
inc
cwtl
cld
mov
xchg
dec
mov
mov
pop
mov
push
das
cltd
mov
xchg
adc
dec
jg
mov
add
xor
or
pop
jnp
cmp
fisttpll
jp
add
stc
and
rolb
adcl
stos
pop
fdivrp
pusha
sub
aas
jo
mov
mov
divb
xlat
repnz
cmp
pusha
cmp
cmp
enter
iret
add
cmpb
(bad)
(bad)
insb
imul
and
mov
sub
mov
xor
mov
mov
xorb
cmp
mov
and
jb
(bad)
lcall
es
sbb
jnp
adc
pop
sub
and
sbb
ja
sarb
out
cmp
adc
sub
or
es
nop
mov
(bad)
jge
ret
sub
xchg
movsl
mov
cmp
fsubl
jg
or
test
jns
push
imulb
je
jl
int
mov
scas
fsubrl
cmp
sti
mov
stos
stos
adc
ljmp
or
fidivl
adc
aas
inc
das
loopne
int1
jge
mov
jae
test
dec
adc
and
in
or
sub
xchg
push
insl
es
cmpsb
(bad)
mov
jns
jb
lods
mov
dec
cmc
daa
syscall
incl
push
pop
iret
outsl
pop
insl
xchg
xor
dec
add
out
inc
adc
sbb
cli
cmp
xor
aas
dec
sbb
or
test
jg
lret
mov
mov
sbb
mov
sbb
inc
pop
push
shl
pop
mov
xor
bound
push
jp
test
push
mov
sub
mov
xchg
pusha
loope
and
fs
mov
stc
xor
out
push
inc
push
jge
das
pushf
xlat
aas
sbb
and
jg
roll
into
fstpl
(bad)
jmp
jne
mov
xor
and
adc
push
mov
dec
imul
loope
clc
clc
inc
loope
xchg
mov
jns
or
gs
lret
add
nop
call
nop
lock
adc
lret
sbb
mov
scas
ljmp
ljmp
imul
mov
es
pop
inc
mov
jno,pn
rclb
sti
sub
or
mov
mov
push
dec
(bad)
pop
xchg
dec
jl
ja
outsb
gs
fldcw
pop
std
fwait
mov
shlb
push
aam
cmp
cmp
jmp
mov
insl
mov
(bad)
clc
adcb
lahf
pop
jns
inc
pusha
int
jae
ljmp
notb
xchg
stc
test
push
pop
bound
cwtl
xchg
xorl
jmp
add
ss
and
jmp
adc
pop
xor
or
sahf
aad
mov
loope
out
push
sbbb
lcall
jno
imulb
rcrb
imul
pop
insb
cltd
adc
xor
mov
pop
adc
das
into
xor
dec
dec
stos
stc
fwait
xchg
call
repnz
pop
lods
inc
add
or
in
mov
int
jb
pop
adc
add
ja
cmp
xor
das
jmp
fsts
faddl
mov
lret
inc
push
lods
add
ljmp
cmp
inc
orl
mov
sbb
bnd
mov
mov
int3
mov
push
xchg
or
psllq
mov
pop
insl
mov
fcom
stos
stc
or
sub
fiadds
sub
aaa
iret
adc
cmp
in
ljmp
pop
sub
lcall
cmp
xorl
cld
sti
pop
jmp
push
push
sub
mov
xor
adc
push
out
leave
and
(bad)
jo
les
or
das
rcrl
push
movsb
xor
sarl
(bad)
xchg
xor
(bad)
lods
dec
xchg
aas
or
or
lock
dec
xchg
ret
(bad)
arpl
fwait
inc
dec
xlat
pushf
and
inc
(bad)
xor
jg
adc
loopne
ljmp
aam
adc
lods
push
pop
cmpsl
inc
mov
popf
mov
lcall
sti
jecxz
sub
cltd
adc
mov
lret
cld
xor
push
