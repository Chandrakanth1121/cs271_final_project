xor
and
xchg
insl
int
jl
push
orl
dec
lods
jne
cmc
push
mov
gs
mov
sub
pop
fs
jl
or
daa
sbb
int
jl
push
sub
push
sub
push
sub
push
orl
dec
mov
mov
gs
xchg
scas
lret
fs
adc
xchg
inc
sbb
add
push
pop
dec
inc
or
xchg
xor
sahf
outsb
arpl
lret
or
mov
cltd
scas
and
je
andnps
add
rclb
xchg
jae
pop
adc
xchg
inc
pop
inc
push
rolb
add
insb
sbb
adc
leave
xchg
insl
int
jl
push
sub
push
sub
push
sub
push
orl
dec
lods
jne
inc
(bad)
jl
int
mov
push
int
ret
xchg
push
cmp
jne
subl
and
adc
cwtl
inc
fwait
add
subb
jl
jo
in
test
ja
fisubl
pop
out
xchg
adc
adc
sbb
(bad)
adc
enter
les
push
leave
xchg
notb
and
adc
cwtl
inc
fwait
add
addb
jl
jo
and
shlb
pop
out
xchg
adc
adc
sbb
(bad)
adc
dec
sarb
dec
xor
je
mov
and
xchg
adc
add
int
adc
dec
test
add
jg
int
mov
and
sbbl
xchg
push
sub
and
jl
int
xchg
xchg
jae
pop
adc
xchg
inc
pop
inc
push
rolb
int
jl
xchg
fsubs
sub
push
sub
push
sub
push
orl
dec
lods
jne
cmc
push
mov
gs
test
add
jg
int
adcl
mov
and
xchg
adc
add
int
ficompl
lock
sbb
adc
adc
add
int
ficompl
into
adc
pop
subl
xchg
int
inc
pop
push
push
cld
lock
xor
push
dec
and
lret
sbb
into
and
push
dec
and
sti
lret
sbb
rclb
sub
mov
push
add
add
add
push
int
inc
ffreep
adc
jp
pop
lahf
clc
adc
add
jle
int
ficompl
push
orl
adc
add
jle
int
inc
sbb
or
jb
inc
out
xchg
adc
adc
sbb
(bad)
adc
dec
cmp
int3
mov
xchg
and
fisubl
pop
xchg
rcrb
dec
(bad)
and
je
xchg
and
fs
scas
pop
fwait
add
orb
jl
(bad)
or
insl
int
jl
movb
out
push
addl
subl
cmc
adc
and
push
sub
push
sub
push
orl
dec
test
leave
rcrb
mov
gs
sub
push
sub
push
addl
(bad)
lcall
mov
xchg
rcll
int
jl
jbe
js
xchg
ja
fwait
xor
sbb
fstp
push
xchg
sbb
int3
or
push
sbbl
fwait
push
adc
(bad)
and
pop
sub
push
orl
dec
stos
jne
inc
xor
jp
mov
jno
scas
ret
cwtl
mov
sahf
ja
fwait
pop
daa
add
insl
cwtl
sarb
cwtl
mov
push
inc
push
or
push
jbe
and
je
and
push
rolb
dec
xlat
and
je
and
xlat
and
dec
push
je
xchg
mov
adc
push
push
add
out
push
sub
push
sub
push
addl
xchg
adc
or
push
jbe
and
push
sub
push
sub
push
cmpl
ficompl
popf
cmpsb
xorl
into
pusha
je
and
bound
jl
pop
orl
dec
test
leave
rcrb
mov
gs
sub
push
sub
push
addl
xchg
ja
outsw
stos
pop
jb
push
or
push
jbe
and
push
sub
push
orl
dec
test
leave
rcrb
mov
gs
sub
push
sub
push
addl
daa
lcall
fstps
and
je
mov
fstps
add
int
jl
mov
mov
and
inc
int1
adc
pop
cmc
cwtl
inc
or
enter
aas
adc
flds
xor
daa
jmp
je
and
sub
test
sub
push
sub
push
sub
push
orl
dec
stos
jne
inc
mov
mov
jno
scas
ret
ret
dec
das
and
int
or
ja
data16
mov
push
add
ja
and
jl
dec
push
add
push
cwtl
mov
loope
cmp
xchg
inc
xchg
ja
and
jbe
and
adc
pop
jb
pop
dec
inc
or
test
ja
fwait
jo
jae
rclb
jbe
add
sbb
add
add
push
mov
lds
addl
sbbl
xchg
mov
leave
leave
mov
sbbl
adc
leave
add
int
jl
adcl
push
int
inc
sbb
adc
leave
insb
orl
jge
orb
pop
int1
add
fs
xchg
cltd
shll
mov
xorl
or
adc
pop
cmp
lea
pop
mov
and
divps
rolb
jbe
insb
popf
insb
mov
add
or
inc
or
sub
and
cmp
addl
xor
jbe
je
jo
and
push
xorl
inc
adc
sbb
enter
hlt
adc
mov
rcrl
cmp
sahf
stc
adc
add
add
int
enter
xchg
and
subl
negl
int
inc
sbb
pop
dec
push
insb
mov
xchg
mov
mov
adc
cmpl
scas
add
fs
push
sahf
or
sub
adc
xchg
inc
pop
inc
push
shrb
push
xchg
adc
pop
je
imul
lret
push
dec
test
lret
cs
push
les
test
daa
add
into
adc
test
jecxz
addr16
adc
das
and
je
imul
push
sub
push
addl
jbe
and
mov
jl
sbb
mov
int3
cwtl
js
dec
test
lret
cmp
lret
sbb
pop
and
mov
jg
popf
inc
xorl
jl
and
add
adc
out
push
sub
push
sub
push
cmp
sub
adc
ja
pop
int
jl
xor
adc
push
or
push
cmpsl
adc
push
int
push
jg
xchg
pop
sbb
adc
ja
push
test
int3
adc
add
xor
adc
pop
push
adc
xchg
aad
int
cld
je
adc
addr16
add
adc
jle
int
add
cmpl
pop
je
mov
and
jl
add
subb
into
and
dec
and
adc
dec
jl
lret
pop
int
mov
and
sahf
cmp
or
push
dec
fstpt
into
ja
test
or
push
je
mov
and
fs
iret
adc
push
sbbb
je
push
int
sbb
add
and
xchg
fisubl
sbb
jb
adc
pop
sbb
jl
inc
cmp
int
popa
jb
adc
sbb
pop
push
int
jg
dec
push
jl
int3
adc
sahf
xor
test
pop
mov
xor
cld
xchg
xchg
pop
xor
cld
xchg
xchg
test
into
jmp
push
int
jg
je
xchg
das
and
int
sbb
adc
mov
or
adc
jg
int
add
mov
inc
sbb
leave
outsb
int3
adc
cmpsl
or
push
lret
lret
xchg
inc
dec
test
pop
int
shrl
dec
lods
in
int
mov
adcl
(bad)
pop
int
loop
xchg
xchg
enter
test
movsb
adc
adc
or
jl
dec
lods
std
add
jg
int
pop
pop
dec
lods
cld
add
jg
int
inc
sbb
int
sub
std
adc
mov
sahf
fs
or
push
lret
sbb
mov
sahf
gs
or
push
dec
push
add
mov
pop
pop
dec
test
add
jg
int
or
dec
enter
ja
mov
