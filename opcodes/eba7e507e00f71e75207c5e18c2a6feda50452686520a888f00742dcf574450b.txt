out
mov
out
inc
inc
and
sub
imul
leave
aaa
add
mov
outsl
in
scas
dec
push
inc
js
mov
mov
fldl
sbb
push
repz
cmpsb
xchg
pushf
add
adc
push
fldl
mov
push
jmp
mov
adc
mov
cmp
in
inc
xorl
jmp
jg
mov
cmp
xor
add
add
adcb
xlat
dec
jb
or
jmp
clc
cmp
mov
cwtl
gs
das
mov
xor
lahf
inc
sub
fwait
test
adc
dec
lods
scas
xchg
pop
dec
jnp
inc
bound
fistpl
(bad)
lea
cld
nop
scas
cmp
adc
cld
jb
aam
(bad)
dec
mov
jmp
imull
inc
sbb
fwait
mov
and
inc
fildl
xor
scas
add
or
jnp
and
mov
aas
lret
(bad)
xor
insl
mov
cmp
dec
mov
add
push
inc
mov
mov
inc
xor
mov
xor
xor
mov
add
xor
std
into
sti
push
clc
mov
ret
and
cs
push
imul
jnp
out
jb
xacquire
fldl
stc
xchg
mov
mov
or
mov
test
cmp
cmp
jle
jg
fsubrp
jns
sti
popa
sub
scas
jmp
lret
push
aam
ret
fcompl
int3
jo
scas
lahf
cmp
cmp
mov
insb
push
aam
mov
or
xor
lahf
mov
push
xor
push
test
imul
sbb
pop
(bad)
lea
jae
dec
jecxz
aaa
pop
jmp
fildll
sbb
or
push
pushf
std
stc
inc
call
repz
and
rcr
mov
or
neg
xchg
push
repnz
push
xor
inc
pop
repnz
and
sti
add
jl
jae
jle
xor
popa
cmpb
push
xorl
adc
stos
(bad)
pop
hlt
aas
xchg
int3
cmp
loopne
lods
mov
xor
test
pop
fnstcw
(bad)
int1
adc
movl
inc
pop
hlt
loopne
inc
cwtl
jae
popa
xor
dec
jmp
and
ljmp
mov
push
je
adc
out
add
lcall
call
mov
mov
pop
adc
inc
out
sub
pop
push
and
fstl
movsl
mov
cwtl
fwait
inc
stc
xor
sarb
sub
jmp
orl
ds
mov
daa
imul
stos
ficompl
mov
push
inc
lcall
ficoms
faddl
dec
sbb
jne
sbb
jmp
xlat
adc
cs
call
or
aad
cmp
xchg
cmp
mov
mov
div
or
pusha
xchg
push
dec
xchg
shl
push
push
repz
in
(bad)
push
sarl
sub
pop
push
mov
pop
lea
incb
sbb
bound
idivl
xor
or
adcb
(bad)
add
addr16
inc
pusha
adc
lret
lods
lahf
inc
pusha
push
xor
inc
mov
aas
push
insl
fldcw
sub
inc
push
mov
dec
sbb
in
inc
call
dec
push
rorb
movsb
or
and
cmp
fdivl
dec
dec
in
sub
int1
clc
pop
adc
inc
ja
fiadds
adc
fldl
jg
cmp
and
add
in
inc
inc
insl
sbb
js
cmc
cli
jmp
inc
lods
dec
push
inc
out
and
mov
cmp
mov
js
pusha
cmp
and
or
and
jmp
push
stc
mov
mov
cltd
ds
stc
loope
jmp
mov
mov
xrelease
jb
xchg
inc
xor
sbb
sbb
push
test
jmp
xor
frstor
faddp
xchg
ds
mov
xchg
xchg
sub
gs
lcall
and
mov
sub
cmp
lods
cmp
add
int1
test
inc
dec
arpl
loopne
xor
iret
lret
or
cmp
(bad)
les
bsf
xor
aad
scas
dec
inc
jbe
or
ljmp
inc
or
cmp
imul
popf
dec
inc
ds
inc
or
aaa
sub
arpl
stc
push
pop
stos
cs
lret
stos
jecxz
xor
sub
adc
(bad)
leave
sbb
fstps
stos
jge
mov
pop
adc
sub
sbbl
or
inc
and
add
mov
inc
sti
sub
loopne
sbbb
jl
and
push
push
js
inc
add
sbb
adc
lahf
nop
imul
mov
sub
mov
into
aad
rol
dec
sub
dec
or
imulb
pop
push
inc
fwait
stos
jp
adc
(bad)
loopne
adc
(bad)
xor
push
push
rorl
jmp
shr
in
or
xor
add
mov
pop
shrb
subb
sub
mov
(bad)
jmp
jg
add
pop
imul
push
lea
mov
lods
in
bnd
pop
cmp
cmp
xor
rolb
mov
dec
mov
pusha
add
das
movsl
filds
pop
repz
mov
jae
pop
or
rcr
cmp
mov
inc
adc
clc
aaa
test
loope
js
pop
and
jp
add
cmp
or
mov
movsb
idivl
test
xor
test
cmpb
add
jle
sbb
xchg
dec
repz
mov
inc
test
rorb
les
orl
outsl
std
inc
int1
dec
ljmp
xchg
inc
test
xchg
push
movsb
inc
mov
push
mov
cmp
or
out
stos
cmp
pop
loope
mov
test
dec
or
mov
xlat
sbb
out
sbb
addl
call
call
mov
adc
shlb
lcall
mov
cmp
adc
stc
mov
or
xor
cmp
mov
repnz
and
cli
arpl
arpl
call
mov
jae
cmp
pop
cmp
mov
insl
add
divl
cmp
ret
mov
fstp
mov
pop
cmp
push
jbe
(bad)
lret
shlb
cmc
cmpsw
outsb
je
insl
stos
insb
and
sub
inc
pop
pop
jns
cmpb
inc
jb
mov
int3
pusha
jg
sbb
shr
push
fdivp
mov
fdivrs
add
mov
in
mov
pushf
add
cmp
ja
cmp
dec
das
clc
mov
push
ds
xchg
mov
ffree
jecxz
mov
lea
lret
sub
lahf
fmull
sahf
int1
daa
std
mov
and
jecxz
adc
lret
inc
aad
lahf
int1
rdpmc
push
insl
adc
int1
pop
and
pop
(bad)
cmp
mov
stc
add
or
sarb
in
sbb
xor
lods
arpl
ljmp
test
push
inc
jno
pop
daa
psllw
(bad)
and
fstl
inc
cwtl
(bad)
nop
loope
push
add
lret
and
xchg
sub
sub
add
fisubrs
sti
aas
push
sub
int3
push
aas
cmp
and
mulb
aam
adc
xlat
jecxz
jns
(bad)
xor
lea
(bad)
sbb
outsb
scas
push
fiaddl
adc
outsl
insl
cmp
in
pop
pop
aad
pop
hlt
push
jns
inc
push
fistpl
mov
push
xor
lret
movsl
dec
cmp
test
add
shlb
mov
push
(bad)
fdivrs
stos
ss
and
push
cmpsb
mov
xor
out
cmpsb
and
cmp
stos
jbe
pop
mov
mov
mov
arpl
aaa
sbb
cmp
cmp
mov
outsb
cltd
enter
movsl
loopne
inc
inc
push
sahf
adc
mov
mov
and
es
and
inc
in
outsl
and
sbb
pushf
lahf
shlb
aas
shl
loopne
scas
cmp
mov
push
js
outsb
lret
push
push
sub
sbb
addb
movsb
and
shll
add
and
inc
cmp
sub
test
push
out
pop
mov
jno
mov
cld
or
cmpsb
loop
lret
(bad)
inc
int
cmp
jno
pop
jmp
jp
in
add
pop
sub
cmpsb
xchg
inc
push
stc
insb
add
(bad)
push
scas
sbb
fcmovnb
test
jb
sub
test
repnz
