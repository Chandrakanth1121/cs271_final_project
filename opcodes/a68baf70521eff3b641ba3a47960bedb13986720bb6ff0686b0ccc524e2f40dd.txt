mov
cmpsb
shl
or
setno
movsb
out
mov
in
int1
add
cmc
mov
add
mov
test
fdivrl
or
pop
inc
pop
int1
testl
cmpsl
pop
out
rclb
mov
(bad)
cmpsb
loop
insb
adc
imul
add
in
mov
decl
lods
lea
test
add
mov
add
test
mov
push
push
mov
jmp
adc
fdivl
addr16
sahf
add
out
cmpsb
ljmp
push
sbb
insl
mov
xchg
fs
mov
int
xchg
add
stos
mov
out
loop
or
lods
xchg
jg
(bad)
cli
pop
mov
mov
adc
insb
or
cmc
add
add
push
pop
fstps
movsb
lcall
sahf
xor
enter
addr16
add
mov
ljmp
cwtl
lods
ljmp
out
sbb
insb
fisttps
add
cmp
dec
pop
in
jmp
pop
mov
mov
int1
popf
jl
add
xchg
mov
(bad)
dec
inc
jge
adc
xor
add
dec
mov
lds
cmpsl
mov
std
movsl
jecxz
pop
or
call
sub
(bad)
jo
stos
repnz
push
fsubs
jb
sub
data16
(bad)
mov
mov
mov
out
rcrl
cmpsb
add
push
xchg
jne
iret
cwtl
into
inc
or
call
add
xchg
daa
add
or
dec
iret
xchg
(bad)
jp
imul
adc
mov
pop
rcl
cs
dec
xor
adc
and
popa
push
pop
movsb
inc
xor
fnstsw
mov
scas
push
daa
pop
in
jae
dec
loop
add
popa
cmp
enter
push
rsm
jecxz
adc
lea
jmp
out
xor
into
mov
adc
cmc
lock
mov
shl
adc
jle
(bad)
push
movsl
lea
or
pop
dec
(bad)
(bad)
(bad)
out
lahf
mov
or
in
mov
cli
jp
popa
dec
out
mov
and
test
test
add
pop
or
adc
mov
lahf
sbbl
xchg
ret
popa
xchg
inc
or
mov
xchg
movl
scas
ret
das
inc
fnstcw
fists
pop
(bad)
xchg
and
sub
mov
fdivs
mov
xor
lahf
cmpsl
mov
adc
ret
and
out
dec
sub
insl
mov
sub
mov
cmp
sbb
mov
cltd
sbb
pop
(bad)
enter
xchg
add
xchg
mov
fisubrl
and
mov
xchg
(bad)
jp
fbstp
dec
xor
das
mov
(bad)
pop
lcall
leave
subb
sub
in
adc
iret
imul
int
sbb
xchg
xlat
pushf
scas
mov
add
add
ret
jo
jge
inc
js
xchg
push
cwtl
into
xchg
jg
(bad)
jo
rcrb
inc
dec
push
movsl
sub
sub
lea
rcll
pusha
xlat
sti
and
popf
shrl
rcll
mov
dec
xor
pop
(bad)
(bad)
adc
sti
mov
dec
mov
pop
sbb
imul
cmc
add
jge
mov
push
cmp
stc
and
fmuls
out
hlt
lret
adc
xlat
add
dec
xchg
dec
cwtl
or
bound
inc
insl
(bad)
enter
loop
pop
pushf
lcall
scas
(bad)
jbe
ret
cmpsl
inc
pop
push
and
xchg
lea
bound
add
fptan
push
jmp
xchg
mov
cmpsl
add
imull
xchg
dec
cmc
cmp
ficoms
jno
and
in
dec
add
or
jb
cli
or
sub
subb
cli
push
xchg
pop
movsb
push
pop
mov
mov
mov
and
xor
push
jb
and
or
shll
scas
sub
int
dec
and
and
mov
int1
sti
inc
adc
lods
outsl
jg
test
lahf
mov
cmp
ret
shr
(bad)
insl
xchg
xchg
push
lret
insb
dec
lds
test
cmp
adc
je
jb
mov
(bad)
int3
mov
popf
cmpsb
std
jg
cmpsl
push
mov
out
in
push
insl
movsb
lock
adc
lahf
xchg
mov
dec
or
stos
and
adc
mov
pop
add
mov
das
and
mov
pop
(bad)
cmc
lret
ds
mov
jo
jg
or
adc
sarb
or
pop
cld
sub
loop
es
pop
movsb
es
mov
ror
in
push
mov
ficoms
xchg
(bad)
out
stc
dec
xchg
(bad)
adc
cmpsb
leave
cmp
lcall
data16
cli
ret
out
imul
adc
cmp
sub
mov
xchg
ss
cmp
js
pop
or
jg
ficomps
xchg
jno
and
add
xor
or
repz
out
adc
movsl
push
adc
push
aas
iret
or
xlat
mov
adc
enter
xlat
subb
or
das
add
jle
js
pop
out
or
mov
xchg
addb
pop
cli
clc
jp
or
mov
and
mov
add
cld
or
insb
cmp
dec
in
iret
dec
rcrl
inc
call
aam
mov
mov
push
xorb
mov
xchg
rcr
jmp
mov
insb
sbb
xlat
mov
cmp
fmull
loope
and
scas
jno
inc
jmp
ss
sbb
inc
dec
xor
xlat
adc
fidivl
sbb
push
adc
push
mov
xor
sbb
ss
nop
add
adc
lcall
rcrl
lcall
inc
test
or
mov
adc
inc
movsl
adc
mov
xchg
xor
inc
adcb
ja
mov
mov
stos
xor
rorl
sahf
stc
call
in
movb
testl
mov
sahf
int
loop
sub
shl
adc
subl
mov
xchg
and
in
les
int1
les
ret
and
sarb
int3
push
fldcw
and
jge
push
test
mov
inc
cwtl
jno
adc
aam
xchg
dec
lods
(bad)
lea
jb
mov
mov
outsl
fdivrs
movsb
and
xorl
cmpsb
stos
push
enter
cmpsb
or
sbb
jle
inc
gs
lret
mov
cmpsl
int
mov
cmpl
stos
pop
pusha
dec
lret
out
and
call
dec
jb
adc
xchg
adc
cmpsl
cli
in
adc
sub
pop
adc
mov
add
xchg
xchg
pop
sbb
pop
loopne
(bad)
aas
mov
(bad)
jle
xchg
adc
sub
mov
push
adc
into
and
outsl
add
out
test
mov
cmpsl
in
xchg
in
sub
aas
repz
sahf
outsl
enter
jns
adc
std
and
mov
cmpsl
stos
int
shlb
push
and
mov
adc
or
mov
xchg
hlt
popa
mov
mov
push
jg
daa
(bad)
sub
adc
jo
mov
push
out
jge
fcmovb
add
stos
aad
xchg
xchg
add
in
adc
mov
aad
aaa
xchg
jnp
mov
test
lea
push
in
lods
int
sbb
mov
mov
sub
sub
mov
daa
sbb
xlat
cld
push
pop
pop
idivb
or
clc
mov
sbb
jmp
fwait
push
mov
vpperm
lret
sbb
idiv
cmpsl
orb
shll
cwtl
dec
dec
lea
pop
iret
sbb
mov
aam
(bad)
(bad)
sbb
std
and
or
mov
fsubrl
add
dec
mov
ffree
push
and
push
and
(bad)
jg
push
ljmp
pushf
push
pop
cmpsb
shl
mov
cmp
xor
sub
xadd
sbb
xchg
pop
mov
popf
aas
shrb
xchg
xchg
sbb
push
flds
xor
mov
mov
dec
xorb
xcrypt-ctr
cmpsl
sbb
gs
or
das
pusha
cmp
mov
mov
cmp
inc
jnp
fnsave
cmp
scas
test
dec
loopne
in
or
loop
add
(bad)
fldt
xchg
mov
add
lea
jmp
ja
xor
cmpsb
push
xchg
out
test
lcall
mov
cmp
sbb
lcall
push
