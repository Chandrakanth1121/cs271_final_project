gs
into
cmp
fwait
out
xor
add
mov
es
add
add
in
cmp
jns
repz
aaa
jnp
xchg
aam
roll
repnz
rcll
inc
push
xor
jecxz
hlt
cmp
mov
and
xor
hlt
or
push
iret
mov
xchg
xor
mov
add
fcoml
mov
sub
divl
popf
pop
scas
stos
inc
adc
sub
pushf
andl
or
enter
xor
and
add
int3
pop
cmp
mov
cmp
outsb
dec
fs
jb
cmp
and
and
cmp
xchg
sbb
mov
arpl
push
(bad)
daa
movsb
jg
sub
xor
cmp
mov
xchg
jl
sti
push
ljmp
(bad)
call
insl
inc
mov
xchg
sub
mov
cmp
xlat
movsb
dec
clc
push
aam
ret
mov
fisubrl
mov
cwtl
aaa
pop
push
pop
push
xchg
jecxz
or
dec
jno
fs
xchg
arpl
cmpsl
mov
or
repnz
push
jp
push
mov
cmc
jbe
insb
(bad)
inc
imul
leave
cwtl
stos
xor
ds
and
xchg
ficompl
rcrb
stos
push
and
ja
jmp
jmp
sbb
sub
cmpsl
sub
xchg
daa
mov
in
or
mov
jmp
jg
ja
xchg
or
pop
imull
add
push
mov
aam
js
cwtl
dec
lret
sub
(bad)
xor
add
jl
jecxz
mov
shrb
loope
and
mov
aas
mov
int1
add
cmp
push
call
push
jg
mov
pop
cmc
mov
cmp
mov
lahf
add
jo
dec
ja
cmc
inc
xchg
and
popa
cs
lret
sti
popf
lods
push
(bad)
lcall
fmull
pop
inc
outsb
ret
movsb
jmp
adc
addr16
lods
add
mov
pop
lods
cmp
addr16
push
out
mov
or
mov
xor
into
dec
cmpsb
or
call
out
mov
leave
sbb
mov
cmp
lahf
int3
iret
mov
inc
xchg
jb
push
stos
inc
out
push
leave
mov
sub
data16
inc
sub
cltd
imul
mulb
mov
pop
cmp
cmpl
ret
sub
out
adc
push
aad
sarb
add
cmp
xlat
and
cmc
test
(bad)
out
pop
jo
xor
dec
rolb
js
lahf
popa
mov
test
pop
setne
daa
xchg
jmp
mov
pop
(bad)
je
add
int3
jge
lcall
out
xchg
andl
add
lret
filds
adc
(bad)
in
and
cmp
popa
sbb
das
fst
adc
sub
add
jge
clc
out
adc
leave
ds
fmull
stos
xchg
xchg
sbb
push
or
imul
xchg
lret
test
lods
mov
sub
lcall
or
ljmp
cli
dec
(bad)
loope
insb
pop
and
notb
sub
mov
int3
cmp
mov
lcall
pop
and
pop
xor
mov
notb
daa
subl
push
add
xchg
mov
aaa
dec
into
sub
sahf
add
divl
inc
aam
mov
jl
inc
out
scas
out
cmp
mov
add
mov
xchg
mov
sbb
int3
jmp
cli
jecxz
jecxz
pop
sub
je
cmpsl
xchg
push
pop
stos
and
shll
mov
aas
adc
add
jle
imul
std
pop
enter
orl
mov
lahf
rcl
loope
push
and
mov
pop
mov
int
pop
add
out
jae
arpl
fldl
xchg
jg
hlt
in
pop
pop
dec
imul
sbb
sub
pop
shr
aam
pop
add
das
aaa
out
mov
inc
sub
cmp
pop
sub
push
push
mov
mov
popa
adc
add
sbb
pop
mov
inc
xor
mov
sub
sahf
dec
sub
jns
aad
int3
xchg
adc
fwait
gs
aaa
add
cmpsb
pop
jmp
andb
cmc
jo
pop
mov
dec
pop
push
pop
adc
pop
ret
sbb
jnp
lods
out
inc
test
push
sbb
lret
sbb
xor
arpl
lds
cmp
mov
dec
push
push
rorb
inc
sbb
int1
aas
fwait
rcr
lock
repnz
jnp
(bad)
loopne,pt
xchg
outsb
dec
(bad)
(bad)
ja
mov
sbb
mov
xchg
loope
push
or
sbb
fs
cmpb
outsb
jns
xchg
mov
fnstcw
dec
outsb
push
adc
jbe
js
inc
aas
mov
cmp
in
jb
dec
fisttps
repz
jmp
add
imul
arpl
mov
scas
repnz
xorb
jo
ficomps
popa
in
rcrb
out
add
test
cmp
cmp
dec
(bad)
xor
push
negb
test
xchg
lods
pop
inc
int
pop
out
out
out
int3
dec
pop
movb
test
xor
and
dec
mov
cmp
into
imul
pop
insb
rclb
rol
test
inc
sbb
mov
test
xor
mov
mov
or
mov
in
pusha
gs
cmpsl
and
(bad)
popa
mov
scas
testb
sti
fwait
dec
inc
mov
sbb
lret
push
pop
mov
mov
aas
(bad)
push
inc
ret
xchg
push
push
jnp
js,pn
inc
or
jg
test
xchg
fs
shrl
cmp
in
sub
inc
(bad)
pusha
sbb
outsb
mov
ds
fcmovb
jmp
ficoms
ficoml
xchg
mov
fbstp
gs
scas
loop
dec
push
out
test
repz
push
shrl
xor
mov
pop
jle
sbb
xchg
and
adc
xchg
std
and
adc
mov
xor
nop
mov
push
push
cmp
mov
data16
sbb
repz
add
jecxz
add
xchg
ds
sbb
or
(bad)
xor
dec
xchg
enter
lds
pop
into
add
fidivs
outsb
pop
andl
push
out
xor
arpl
cmpsl
xchg
pop
jl
dec
add
jl
pop
pop
addr16
je
mov
add
mov
shll
rol
cmp
sub
pop
adc
mov
mov
mov
call
pop
adcl
fs
adc
mov
out
sbb
lcall
mov
into
sahf
mov
sbb
push
(bad)
mov
ret
stc
int1
jae
popf
out
fbld
push
out
cli
mov
mov
jb
scas
inc
sub
je
out
mov
push
cwtl
adc
das
jb
mov
xchg
negb
dec
cwtl
dec
mov
adc
jbe
sub
and
inc
mov
pop
jmp
out
mov
cmpsb
stc
push
or
lret
mov
es
call
pusha
arpl
or
pop
imulb
addl
or
aaa
push
ds
add
mov
mov
push
push
movsb
popf
(bad)
stos
(bad)
push
lods
mov
cmp
ffree
mov
popa
sbb
or
mov
or
cltd
daa
xor
out
sti
lds
lcall
hlt
jmp
loope
cmp
mov
mov
shl
xor
pop
out
fnstenv
fsts
mov
fsubl
imul
add
setne
into
xor
dec
jno
adc
xchg
(bad)
sub
lcall
xchg
mov
testb
xchg
out
mov
push
fisubrl
and
jle
(bad)
push
and
cmc
mov
dec
xchg
or
repz
fcoml
jo
out
pop
test
xchg
pop
lahf
sub
push
dec
and
cmp
pop
sub
inc
sbbl
inc
lds
mov
test
pop
xlat
mov
fdivrl
inc
jne
push
or
jo
push
mov
rep
inc
loopne
push
mov
js
mov
fcmovne
test
lods
shlb
mov
pop
jmp
pop
inc
dec
out
arpl
add
in
sti
outsb
ljmp
mov
sbb
or
call
mov
cmc
fs
push
mov
adc
lds
sub
out
jnp
push
insl
dec
cmc
fbstp
mov
pop
jns
pop
loop
