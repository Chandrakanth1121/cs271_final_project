call
add
pop
inc
add
or
xchg
mov
cmp
mov
add
mov
fldl
sbb
inc
mov
lods
mov
fidivl
cmpsl
or
jnp
mov
in
mov
pop
insb
adc
xchg
jp
push
push
xchg
sbb
(bad)
push
adc
scas
xchg
push
inc
daa
xor
loop
sub
loop
das
mov
mov
stos
add
mov
fwait
sbb
pop
ret
sbb
sar
mov
sbb
rcrb
sbb
enter
ss
test
mov
sar
and
mov
jecxz
ja
sbb
push
andl
ds
sub
out
adc
inc
(bad)
jl
xchg
push
fs
(bad)
lcall
cmp
inc
repnz
push
mov
jp
jmp
add
(bad)
add
mov
xchg
jl
gs
loopne
add
inc
or
sbb
add
fnsave
push
test
xchg
sarb
inc
sahf
orl
nop
mov
sub
aas
push
fcoml
mov
stos
orb
aam
mov
int
ds
jmp
test
and
cmp
pushf
push
je
inc
sub
insl
int
mov
shlb
dec
mov
pop
mov
cmp
enter
mov
add
xor
das
data16
adc
ret
in
test
aaa
testl
outsb
pop
add
rolb
insb
out
stos
cli
(bad)
mov
add
pusha
ss
mov
in
test
mov
in
(bad)
push
xorb
pushf
and
mov
div
push
mov
ret
push
jb
mov
jp
mov
cmc
aaa
or
dec
fidivrl
scas
push
lods
aam
popa
in
(bad)
mov
lahf
push
push
(bad)
sahf
cmp
out
mov
adc
sub
shll
stos
int1
cmp
enter
sar
mov
push
adc
and
aas
aad
inc
jo
xlat
jbe
xchg
sub
mov
rolb
cld
sahf
push
into
bound
sti
sarb
enter
add
pushf
ljmp
adc
or
xorb
out
scas
std
frstor
dec
cmp
mov
jbe
test
aas
js
subb
and
lock
pop
subb
adc
loopne
jb
mov
sub
jb
shrb
mov
je
or
cmp
jno
int3
lahf
into
lds
xchg
mov
sub
lds
ud0
je
ljmp
pop
loopne
jle
inc
testl
lcall
add
mov
sbb
mov
jle
ret
jmp
int3
fstpl
jnp
sub
flds
xchg
push
push
inc
mov
push
inc
fldcw
(bad)
mov
sub
or
out
enter
aaa
test
jns
xchg
pushf
lods
mov
cmp
cmp
mov
loop
inc
ds
jns
sti
jge
mov
insl
jnp
xor
xchg
sti
fdivs
sbb
mov
push
dec
mov
shlb
xor
stos
cmp
add
add
ss
xchg
xchg
jnp
sub
or
ljmp
pop
aam
inc
pop
mov
js
mov
mov
push
nop
pushf
mov
pop
jle
jne
xchg
faddl
xchg
lods
std
mov
xchg
fcoml
adc
mov
shr
fcompl
inc
loop
push
movsb
jp
lock
xchg
(bad)
gs
mov
xchg
cmp
jg
hlt
(bad)
in
stos
ss
dec
lea
xlat
sbb
ret
out
mov
or
insl
movsl
mov
cltd
lahf
sbb
jbe
or
mov
movsl
mov
and
idivl
cld
inc
lods
ss
filds
pop
(bad)
mov
test
cmp
xchg
adc
dec
repz
pop
sahf
pop
daa
push
lret
rcl
fimuls
in
sahf
subb
mov
in
ds
and
mov
roll
dec
iret
mov
xor
out
jnp
dec
xchg
add
imul
mov
and
cmpsb
inc
mov
push
hlt
push
arpl
insb
sbb
mov
xor
xor
mov
mov
cmc
xchg
into
std
mov
and
pop
pop
mov
jg
aad
flds
push
mov
adc
inc
aaa
push
mov
cli
cwtl
xorb
out
mov
xchg
mov
test
mov
lock
xchg
xorb
mov
xchg
cwtl
in
call
ffree
jg
hlt
cmp
mov
pop
fldt
xchg
mov
aas
int3
add
js
mov
or
mov
in
inc
mov
push
add
fbstp
bound
call
les
mov
cmp
sbb
fucomp
jecxz
cmp
addb
fs
int1
mov
mov
xchg
push
mov
fs
cmp
inc
xchg
adc
mov
inc
pop
lcall
jb
sbb
fdivrl
xor
imul
adc
dec
push
lods
add
aaa
push
cwtl
(bad)
mov
cmp
sbbb
push
mov
ret
imul
xchg
mov
insb
int3
and
dec
fistpll
out
mov
jo
je
mov
cs
fbstp
xchg
mov
pop
cmp
ds
lcall
lahf
or
xor
mov
imul
xor
test
sbb
mov
call
lea
loopne
pop
cld
mov
mov
ret
scas
mov
mov
mov
movsb
sbb
jo
fwait
lea
cltd
sub
xchg
inc
pop
(bad)
fwait
and
sbb
fcompl
cmp
outsb
mov
sbb
stos
dec
pop
push
mov
sub
js
xchg
leave
daa
and
pop
cmp
arpl
scas
pop
sahf
xchg
mov
stc
xchg
xor
push
jge
rcll
inc
ljmp
adc
push
lock
xor
test
xor
pop
scas
mov
push
popf
out
mov
push
push
jb
fwait
sbbl
sbb
sbb
popf
gs
add
loope
mov
ficomps
fwait
dec
xchg
push
push
mov
test
pop
test
stos
dec
xchg
push
sub
inc
cmp
jae
pop
shlb
mov
ret
mov
sti
mov
sub
mov
xchg
lret
negb
adcb
jecxz
mov
cmpsb
test
add
push
adc
inc
adc
jnp
push
ret
jl
inc
mov
or
test
sbb
rclb
xchg
cmc
(bad)
ja
cmpsl
pop
lcall
out
out
scas
cmp
fmuls
cmp
ror
cmp
sub
sbb
mov
pusha
mov
cmp
fs
arpl
call
in
push
pop
in
out
cmp
mov
xchg
pop
or
aaa
sbb
sti
popf
jns
mov
pop
cmpsb
mov
scas
fdivrs
idivl
cmc
lods
push
lea
(bad)
jne
rcr
or
and
movsl
mov
sub
mov
orb
adc
cmpsl
das
add
dec
adc
push
mov
xchg
dec
leave
add
(bad)
sbb
or
inc
mov
and
gs
cmp
cmpsb
lcall
movsb
sbb
inc
sub
int
stos
jle
mov
mov
les
iret
push
xchg
test
imul
sbb
das
or
inc
xchg
orl
fidivrl
sbb
push
mov
xor
adc
movsb
clc
jno
mov
rorl
adc
addr16
lcall
or
mov
outsb
push
mov
negb
jl
push
test
leave
cmp
jge
popa
mov
or
or
sbb
push
fistpll
or
inc
mov
addr16
mov
jo
mov
imul
mov
jecxz
xchg
shll
call
cs
in
inc
and
xchg
dec
ja
sub
test
sti
cmp
dec
jecxz
nop
pop
add
(bad)
in
lret
mov
cmp
popa
movsl
adc
lods
mov
inc
xchg
imul
shlb
setne
dec
enter
ja
dec
sbb
pop
push
inc
test
sub
sub
add
mov
fwait
add
cmc
ret
iret
daa
sub
imul
jb
xchg
mov
cmp
cli
sbb
xor
dec
mov
sub
in
(bad)
pusha
out
xor
adcb
add
pop
jecxz
adc
insl
sub
mov
xchg
add
subl
inc
add
jnp
mov
jl
pop
in
sti
shrl
and
movsb
movsb
mov
xchg
pop
lret
lret
je
aaa
mov
test
xchg
push
adc
