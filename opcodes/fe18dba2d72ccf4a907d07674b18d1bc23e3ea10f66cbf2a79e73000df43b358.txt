lds
jp
(bad)
xchg
xchg
repnz
jl
aaa
mov
lock
xchg
pop
movsb
lods
push
popf
dec
lods
adc
pop
xchg
jae
repz
xor
sbb
test
cwtl
int3
fwait
add
sbb
sbb
stos
js
pop
xchg
xchg
or
xor
add
jg
mov
xchg
lret
(bad)
sub
mov
sbb
stos
lret
addr16
xchg
or
lret
clc
push
mov
dec
cltd
fidivrs
pusha
push
adc
mov
lcall
out
int1
adc
mov
pop
lock
das
jnp
call
shrb
mov
push
rcll
push
pop
mov
push
adc
outsl
cmp
sub
loope
add
das
or
loopne
dec
lock
and
sahf
repz
das
gs
mov
push
or
push
add
inc
leave
and
adc
pushf
adc
cli
into
jmp
cmp
js
cmp
jg
ficoml
jae
and
js
cmpsl
ljmp
push
sub
out
(bad)
push
jbe
add
subb
xchg
arpl
test
lods
jne
rcl
je
xchg
xchg
call
pop
rcll
xor
cmc
shrl
clc
imul
out
ret
das
xor
cli
in
cmp
mov
push
mov
jnp
(bad)
xor
adc
stc
fsts
jb
mov
sub
scas
push
sub
xchg
mov
mov
sub
mov
and
and
push
mov
jge
int1
push
(bad)
clc
push
inc
in
flds
pop
dec
push
or
or
out
jno
xor
xor
jmp
cltd
jge
hlt
repnz
xchg
add
cmpsl
repnz
(bad)
or
mov
andb
lahf
mov
dec
pop
pop
jne
repnz
inc
cmp
pop
clc
scas
jnp
jbe
mov
test
leave
cli
and
sub
add
jae
es
xor
pop
aas
jne
ret
xlat
jae
mov
mov
xchg
xchg
adc
call
inc
xor
movb
sarl
popa
fimuls
loopne
dec
mov
mov
dec
add
pop
pop
(bad)
pop
outsb
int3
out
das
xchg
lods
mov
sbb
lods
or
xchg
test
sbb
xchg
mov
or
(bad)
xlat
pop
(bad)
repz
jbe
imul
mov
or
pop
sub
cmpsb
cs
inc
sahf
ds
out
adc
int
shrl
cmp
mov
inc
sub
push
cwtl
leave
jecxz
out
pop
jecxz
std
cltd
lea
adc
push
or
cwtl
arpl
mov
int
xor
sub
cmc
int1
ljmp
sbb
leave
xchg
adc
mov
arpl
jge
lods
cli
mov
mov
mulb
clc
sbb
idiv
lods
hlt
jae
inc
add
flds
xor
push
(bad)
sbb
sar
(bad)
negl
sub
sbb
pop
nop
js
mov
popf
xchg
rolb
test
xchg
stos
jle
scas
out
cmp
or
(bad)
je
fdivl
fsub
mov
sahf
push
mov
daa
enter
aaa
xchg
popf
cmp
push
fidivrs
sub
aas
test
adcb
adc
call
pop
iret
adc
gs
xor
mov
scas
mov
repz
sub
mov
push
movsb
aaa
xchg
pop
cmp
xchg
adcb
and
mov
(bad)
movsb
scas
mov
mov
xchg
in
sbb
fs
push
add
inc
lea
pop
aad
adc
(bad)
xchg
insb
cli
cmp
or
cmc
fdivrs
ret
mov
subb
xchg
sarl
imul
repz
lcall
les
pop
adc
adc
jle
mov
shrb
testb
dec
xchg
imul
ds
lcall
testl
sahf
dec
sub
lock
jl
js
and
ljmp
in
lods
out
push
loope
dec
push
fstl
and
xchg
or
movsb
je
inc
out
mov
ds
pop
xorl
adc
mov
sbb
mov
sbb
xchg
xchg
sbb
jb
xchg
sbb
cs
mov
xlat
adc
sub
int3
push
ds
pop
ljmp
xlat
adc
sbb
adc
jne
xorl
lcall
pop
adc
sbb
in
les
xchg
dec
fstpl
inc
push
int3
xor
and
mov
push
enter
pop
frstor
std
dec
repz
add
add
fldenv
pusha
push
test
negb
mov
lea
add
jbe
rcl
add
mov
adc
xlat
mov
scas
test
push
je
repz
xchg
aad
push
mov
es
xchg
(bad)
cmp
orl
lea
fiadds
jno
std
loope
pop
outsl
(bad)
fidivl
jmp
sub
inc
(bad)
lds
scas
inc
sahf
lcall
cwtl
adc
pop
mov
nop
int1
xor
into
push
cmp
call
jmp
mov
sar
clc
sub
mov
adc
aad
cltd
push
mov
push
lods
inc
push
sti
cmp
add
subb
(bad)
adc
mov
rorl
jbe
pop
mov
inc
push
int
aaa
(bad)
int
lea
scas
sub
xchg
lea
(bad)
out
pop
lock
mov
xchg
pop
push
fnstcw
insb
xor
inc
aam
shl
push
push
and
(bad)
mov
shll
xchg
push
add
mov
jmp
stos
inc
mov
mov
push
std
fcoml
repnz
stos
out
mull
sub
jmp
loope
xchg
sti
cld
addb
push
jle
adc
in
xchg
(bad)
sub
mov
add
mov
test
sbb
enter
enter
cwtl
push
dec
push
idiv
scas
push
rclb
cmc
popa
jp
repnz
bound
inc
loope
pusha
add
add
aam
xchg
pop
ret
rcrb
inc
(bad)
es
mov
mov
xchg
(bad)
sbb
rcll
or
ljmp
ss
pusha
insb
ds
xchg
push
and
(bad)
lock
jle
adc
lock
cmp
cmp
loop
out
fsubs
fsub
fistps
(bad)
stc
es
inc
xchg
cmp
xchg
fs
and
fistps
movsb
cld
push
push
add
adc
test
sbb
cmp
jmp
in
int1
push
push
inc
xchg
mov
rol
mov
in
aad
xor
sbb
push
outsl
push
sbb
mov
loopne
pop
lret
adc
fdivs
or
leave
xorl
mov
pop
adc
inc
stos
in
push
lock
jg
pop
mov
ret
imul
jmp
movsb
xchg
fimuls
mov
push
mov
lret
cltd
in
lret
cmp
int1
pop
out
fidivl
mov
addb
mov
(bad)
mov
push
hlt
xor
jbe
pusha
cmpsl
mov
out
(bad)
repz
pushf
push
gs
fs
jp
mov
test
inc
call
sbb
adcl
xchg
pop
inc
mov
mov
adc
mov
insl
mov
rclb
scas
ljmp
jo
mov
stos
sbb
inc
mov
cld
fdiv
xor
loop
lock
std
dec
lea
pop
scas
scas
push
mov
sub
cmp
jb
sub
int3
mov
xor
lods
inc
or
adc
pop
mov
cmpsb
and
lea
pop
xchg
mov
add
dec
push
jo
dec
mov
xchg
push
daa
xchg
mov
pushf
std
inc
rorb
xor
xlat
(bad)
loopne
(bad)
gs
xchg
aaa
jns
dec
repz
loop
insl
push
cmp
push
hlt
inc
mov
or
and
xchg
jb
cmp
adc
inc
xchg
and
addr16
into
loop
orl
(bad)
jle
and
xchg
cmp
lock
in
in
jno
sub
push
js
aaa
aas
pop
stos
dec
push
sbb
push
or
(bad)
fwait
cmc
rorl
test
aas
inc
xor
cmp
insl
adc
rclb
ja
out
in
push
lret
xchg
lock
lret
mov
xor
dec
ret
xchg
adc
out
sbb
mov
push
call
repz
repnz
mov
xor
jnp
mov
push
insl
notb
mov
