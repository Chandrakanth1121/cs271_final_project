pop
lock
in
jbe
scas
fldcw
movsb
cli
lret
repnz
ret
add
pop
shrl
xchg
iret
aam
lea
in
daa
add
push
insb
xor
mov
or
nop
pop
pop
xchg
push
adc
sahf
add
mov
fcoms
out
lret
mov
fsubrp
out
or
ljmp
adc
sub
sbb
lret
in
sbb
mov
add
jae
scas
loope
dec
mov
or
adc
mov
cltd
and
loopne
outsb
inc
or
jmp
test
std
push
insl
pop
mov
jmp
int1
mov
jne
pop
mov
neg
inc
pop
in
push
add
push
mov
xor
mov
pop
shr
pop
mov
and
fbld
loop
in
out
inc
mov
xchg
fisttpll
pop
mov
leave
int
cltd
out
cld
mov
xor
mov
and
sbb
das
scas
or
add
fisttpll
repz
or
add
jge
lret
int
push
mov
enter
into
insb
orb
push
sahf
add
(bad)
test
pusha
or
xchg
add
adc
aad
xor
nop
testl
aad
fwait
push
dec
clc
mov
mov
fadds
pushf
xor
mov
in
mov
stc
in
cmc
(bad)
iret
lds
dec
or
mov
imul
xchg
fistpll
out
and
push
xchg
add
iret
push
mov
or
dec
lret
sub
cli
dec
mov
nopl
mov
xor
push
xchg
sbb
sub
mov
xor
test
push
adc
pushf
push
pushf
fs
jb
das
insb
jle
cs
loop
fsubl
mov
hlt
push
or
imul
cmp
sub
hlt
dec
pop
repnz
in
mov
test
inc
dec
testl
cmp
inc
inc
aas
lea
dec
or
add
idiv
inc
clc
(bad)
enter
mov
fs
jge
cmp
xchg
xchg
stos
dec
mov
shrb
fmuls
xchg
and
inc
test
pusha
jl
ror
mov
psubsb
mov
fstpl
adc
cmp
adc
ret
test
fiadds
adc
add
push
leave
cmp
dec
or
insb
mov
rolb
sub
inc
mov
jmp
cmp
mov
cmpsb
jg
jmp
movsl
gs
loop,pt
out
outsb
jno
pop
and
add
outsb
pop
add
fbld
cmpl
push
push
lret
mov
push
cmpsl
push
xor
pop
mov
pop
js
in
pop
pop
dec
mov
push
cmp
sti
xchg
pop
mov
(bad)
scas
clc
dec
in
jmp
and
movsb
int
or
pop
inc
insl
xor
inc
fldcw
xor
insb
loope
fldcw
jp
sub
mov
xor
fwait
subl
les
add
add
mov
mov
leave
(bad)
aaa
xlat
aaa
hlt
pop
movsb
imul
in
and
or
rcr
stos
jmp
(bad)
mov
dec
xor
lds
cmp
and
cmp
fsubrs
and
stos
popf
mov
(bad)
jg
lods
in
sub
or
in
loop
add
or
pop
inc
outsb
or
in
sub
js
call
outsl
mov
cmp
jmp
in
sbb
or
inc
jnp
ret
mov
loope
xlat
inc
cmp
aaa
inc
out
add
gs
in
add
call
test
xlat
outsb
add
mov
test
lahf
inc
lcall
rolb
ret
ffreep
movsl
in
inc
pop
sarb
xchg
push
js
mov
mov
insl
xchg
mov
clc
stc
jecxz
stos
(bad)
mov
mov
lret
gs
inc
(bad)
fildl
adc
addl
int3
pop
add
xchg
repz
sbb
je
dec
inc
inc
imul
mov
clc
fcompl
xchg
clc
test
add
leave
aad
inc
cmp
sbb
std
insl
dec
cli
mov
mov
pop
out
lret
das
push
pop
(bad)
xchg
cs
adc
lret
rolb
test
push
push
or
cld
stc
mov
das
sub
sbb
ds
cwtl
jl
pusha
mov
popa
shrb
decb
movsb
jns
dec
or
lods
ret
nop
cmpsb
sub
stos
imul
lods
gs
inc
sbb
mov
test
repnz
shlb
insb
cli
outsb
pusha
imul
push
xchg
xor
mov
inc
or
inc
insb
stc
mov
outsb
lods
xor
inc
fistpll
imul
hlt
ret
sbb
mov
call
sbb
xor
stos
jecxz
push
mov
push
mov
mov
jecxz
pop
enter
cmp
add
es
push
or
adc
pop
dec
scas
imul
sub
and
adc
out
bound
mov
(bad)
sbb
inc
mov
dec
xor
cmp
clc
inc
jno
faddl
stc
pop
jp
or
pop
jl
cmp
inc
pop
pop
and
mov
dec
sub
stos
sbb
test
data16
push
iret
into
sbb
pusha
das
loop
das
loopne
sub
or
lods
inc
adc
rcrl
adc
andb
mov
popa
or
dec
push
push
xlat
pop
subl
ja
adcb
stc
clc
scas
dec
pop
dec
out
(bad)
pop
(bad)
cmp
cmpsb
xor
out
xchg
sbb
testb
mov
out
mov
mov
mov
sar
or
jnp
adcl
jns
or
rcrb
push
std
ror
push
inc
pop
(bad)
or
sbb
out
dec
xor
pushf
popa
jo
xchg
mov
add
das
les
pop
mov
leave
lods
xchg
out
fadds
in
bound
push
dec
lds
in
test
stos
in
out
ret
inc
adc
or
xchg
int
daa
je
out
push
inc
enter
sub
inc
adc
or
jmp
pop
pop
(bad)
(bad)
xor
pop
xor
inc
add
lds
cltd
mov
jnp
add
fldl
xchg
mov
sbb
xchg
pop
scas
add
push
sti
mov
test
notb
jp
cld
test
and
sbbb
mov
xchg
sub
fwait
dec
push
mov
in
stos
xchg
aas
repnz
jne,pt
out
scas
repz
jle
adc
mov
fs
mov
jns
bound
sub
inc
pushf
pop
sub
add
and
fisubrs
xchg
inc
or
mov
scas
cs
in
lret
xlat
imul
iret
xor
add
std
testl
stc
fidivrs
lock
inc
xchg
push
notb
or
into
mov
jmp
mov
faddp
lods
std
sti
or
lret
sub
push
hlt
cmpb
and
adc
and
or
cmpsb
out
xor
aaa
rcrb
mov
out
(bad)
fcoml
shlb
xchg
fwait
mov
or
outsl
push
dec
fnstenv
jl
pop
lret
or
jle
imul
pop
rorl
cmp
leave
movsl
loopne
das
inc
mov
push
enter
jns
imul
adc
lret
xor
dec
aam
adc
mov
jo
roll
mov
add
lock
or
scas
push
xlat
or
repz
mov
mov
mov
xchg
add
ja
inc
xchg
push
push
jo
lret
jmp
out
sar
mov
pop
stos
stos
sahf
outsl
mov
jmp
test
lds
jno
insb
addr16
xor
test
and
xor
(bad)
lock
xchg
jne
xchg
ja
mov
dec
mov
nop
mov
add
sbb
xchg
mov
repz
andb
fwait
jl
lock
dec
ja
dec
minps
iret
or
fcmovnu
leave
addr16
bound
in
push
sahf
lret
lock
xor
jne
jge
xor
mov
scas
lcall
shll
add
cmp
mov
enter
cmp
pop
inc
ljmp
cmc
js
inc
fistps
call
pop
xor
mov
iret
insl
and
into
je
cmp
jno
dec
push
loopne
push
test
in
dec
dec
xor
mov
inc
