in
mov
sub
pop
aas
outsl
xlat
sub
mov
inc
(bad)
outsb
mov
mov
pop
mov
sub
push
mov
scas
je
iret
and
and
gs
nop
push
lahf
inc
mov
or
(bad)
adc
inc
cmp
popf
fstl
sbb
addr16
shrb
in
mov
push
popa
gs
ljmp
mov
jg
shll
pop
dec
fucomp
dec
inc
outsl
(bad)
mov
mov
xor
xor
outsb
mov
xchg
jne
bnd
push
out
push
sub
jl
in
pop
push
jb
xor
inc
jmp
aaa
inc
popa
mov
push
add
or
iret
mov
cli
sub
mov
mov
into
mov
or
jae
fwait
pushf
push
jns
jbe
and
mov
out
or
pop
out
(bad)
mov
push
and
mov
movsb
xor
fbld
mov
popa
mov
add
dec
ret
mov
adc
cltd
jbe
in
pop
push
and
cmp
int
fnstcw
mov
rorl
adc
xchg
aad
sub
xlat
dec
iret
pop
xor
ss
dec
(bad)
leave
xchg
add
lea
andl
inc
jle
pusha
ret
mov
sub
andl
jno
add
pop
sti
repz
(bad)
movsb
lret
sbb
jge
push
jp
mov
shll
imul
xchg
cmp
xchg
and
cmpsl
fdivrl
adc
repz
lea
into
sarl
sub
js
aam
int3
inc
jle
adc
inc
cmpsl
movsb
adc
xchg
xor
and
dec
test
js
ret
push
sub
add
(bad)
std
push
(bad)
(bad)
or
sbbl
mov
jo
push
popf
fsubp
jle
out
add
sbb
mov
pushf
(bad)
xor
iret
dec
or
fistl
pop
(bad)
lea
push
dec
fsubl
test
and
mov
sub
pop
fs
push
jno
mov
mov
pop
push
push
inc
(bad)
aaa
sbbl
mov
shrb
fisubl
stos
stos
inc
inc
es
ds
mov
dec
scas
xchg
jg
sarb
mov
add
cmp
push
rorl
and
fs
sub
in
inc
arpl
lret
test
pop
inc
rclb
cmp
jmp
in
cmp
xchg
pop
arpl
or
jl
dec
adc
inc
mov
int3
sub
cwtl
aad
mov
adc
outsl
popf
shrl
jle
leave
stc
lds
shlb
test
cld
pop
pop
push
mov
mov
sbbl
roll
jge
mov
mov
xor
dec
ret
cmp
jl
jg
cld
mov
(bad)
inc
and
sbb
mov
(bad)
and
nop
jbe
mov
sbb
loope
push
push
dec
ror
scas
lea
jb
jae
fwait
mov
mov
iret
cmp
insb
stc
fnsave
fs
or
aad
adc
roll
insb
mov
or
add
dec
ljmp
mov
lret
xor
and
dec
das
jb
ret
frstor
mov
xchg
push
cmp
pop
and
jns
and
lods
inc
push
xchg
adc
xchg
xchg
(bad)
sbb
dec
xor
push
adc
mov
xor
loope
loopne
add
inc
cmp
mov
addr16
aaa
lods
mov
dec
subl
dec
mov
pop
cmp
pop
gs
push
push
scas
push
bound
push
fbstp
rclb
xlat
test
mov
test
int3
mov
int3
mov
push
addb
push
and
jecxz
enter
lret
cmp
sahf
fisubrl
cmpsl
mov
lods
shrb
sub
in
rolb
sbb
xor
and
sub
in
sbb
or
fidivl
push
inc
sarl
lret
and
nop
mov
xor
in
cmp
enter
mov
sub
mov
push
aas
test
jno
and
push
pop
leave
or
mov
lea
call
dec
ret
pusha
or
sub
push
imul
fs
or
into
dec
dec
mov
iret
daa
xchg
push
mov
xchg
add
xor
cld
iret
stos
inc
xchg
mov
adc
dec
cltd
jmp
cmp
inc
or
cmp
out
add
xchg
scas
loop
out
push
xor
test
push
dec
xchg
and
pop
adc
movsl
subl
ljmp
adc
jecxz
jge
loope
mov
jmp
lret
ja
cmpsl
(bad)
mov
frstor
fsubr
in
mov
and
daa
cltd
and
xchg
dec
popa
daa
sub
mov
mov
mov
xor
popa
and
inc
rcrl
and
jge
or
mov
cwtl
mov
mov
mov
fisubrs
shll
xchg
push
jb
xor
dec
rolb
mov
pop
sbb
je
repnz
ret
das
leave
loopne
and
sbb
and
cmp
nop
int3
mov
pop
int
xchg
ja
inc
stos
mov
cmp
pop
(bad)
sub
push
dec
popa
sub
int3
lahf
mov
cld
cmp
adc
add
pop
dec
cmp
and
or
(bad)
in
ljmp
adc
cmp
xchg
cmp
lock
fsubl
pop
dec
dec
paddq
xchg
sti
pop
dec
sbb
mov
inc
add
and
cmp
jmp
(bad)
fildll
jmp
ds
pop
mov
(bad)
fisttpll
int3
jmp
jecxz
xchg
inc
inc
mov
dec
jp
mov
sub
jl
lret
mov
pusha
dec
jge
jecxz
mov
sub
xchg
mov
jno
outsl
adc
shll
mov
or
mov
test
xchg
(bad)
cmc
mov
out
das
stos
xor
jl
hlt
add
imul
pop
outsl
inc
xchg
cmp
js
inc
lock
jbe
or
xor
jns
frstor
jmp
es
jle
fstp
mov
cmp
mov
mov
adc
stos
push
add
jne
stos
ret
sub
or
mov
push
cmpsb
pop
stos
orl
pop
cmp
lods
loope
jo
int
jg
pushf
std
int3
ds
jnp
inc
iret
sbb
inc
push
pop
and
push
jb
dec
(bad)
sub
push
pop
mov
mov
pop
jecxz
push
ljmp
out
mov
and
std
xor
xchg
insb
sbb
adc
xor
adcb
pop
in
xchg
jmp
or
mov
cltd
xor
jle
and
(bad)
push
leave
(bad)
jne
int3
pop
sbb
inc
cltd
fsubr
mov
fcompl
jns
jbe
fistpl
cmp
es
mov
and
in
mov
sbb
mov
xor
aad
les
(bad)
sub
aam
outsb
test
mov
fcompl
xor
mov
insb
popa
lret
imul
ret
fs
stos
ret
jae
out
in
call
and
mov
sbb
mov
add
cltd
aaa
gs
bound
add
aam
adc
mov
mov
push
dec
mov
int1
cmpsl
cmp
test
jbe
sbb
aaa
push
out
sub
js
jmp
push
je
fbstp
mov
lds
pop
pop
(bad)
movsb
mov
push
or
and
xchg
jno
test
shr
clc
lret
rcr
or
js
pop
xchg
in
leave
and
jg
push
outsb
fucom
(bad)
dec
out
fistpll
sti
push
xorl
inc
rclb
int3
xlat
lods
popf
or
and
cmp
xchg
push
xchg
arpl
loop
jno
push
add
movsb
cmc
or
xchg
das
xchg
(bad)
jb
data16
test
loop
cmp
mov
jb
mull
sub
pop
clc
sbb
and
filds
pop
push
iret
roll
pop
int1
(bad)
jno
lea
hlt
rcll
and
mov
lret
dec
out
out
lret
xlat
mov
add
iret
dec
inc
lahf
cs
lds
imul
test
cli
pop
decb
call
inc
je
lods
xchg
mov
(bad)
push
enter
int
stos
xor
jle
sbb
push
fmuls
add
cmc
call
push
cmpb
lret
addb
jecxz
