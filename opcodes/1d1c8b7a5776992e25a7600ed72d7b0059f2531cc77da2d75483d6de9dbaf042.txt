jne
nop
mov
sub
jnp
dec
adc
call
sub
xor
jo
cltd
pop
dec
or
test
push
or
je
pop
sub
imul
jbe
jnp
js
out
inc
gs
sbb
int
adc
dec
das
aas
sub
fwait
pop
jp
sbb
and
mov
inc
data16
pop
mov
dec
or
pop
pop
mov
lea
pop
(bad)
inc
jne
and
and
push
and
and
adc
scas
and
addr16
or
shrb
or
dec
jae
jb
and
jno
pop
jecxz
in
aaa
or
sbb
pop
xchg
(bad)
aas
imul
(bad)
int1
sub
sub
dec
or
dec
iret
xor
out
pop
adc
xor
mov
add
or
cld
cmp
pop
and
sub
and
dec
xchg
pop
iret
pop
add
movsl
ret
lds
seta
movzwl
cmovge
pushf
ror
pop
rcr
bt
sbb
mov
add
jmp
dec
test
stc
neg
jmp
lret
movzbl
shl
add
mov
xor
xor
ror
sar
xor
not
xor
xor
not
sbb
movzbw
jmp
xor
test
xor
cmp
cmc
test
add
jmp
test
xor
clc
jmp
stc
bswap
cmc
clc
ror
cmc
not
ror
cmp
stc
clc
xor
cmp
xor
jmp
inc
dec
inc
rol
stc
cmp
push
inc
ror
inc
xor
inc
movswl
inc
test
inc
test
dec
arpl
clc
inc
test
dec
test
dec
add
jmp
movzbw
rol
setbe
mov
inc
xor
not
dec
xor
sub
shl
mov
mov
test
cmp
lea
xor
add
rol
test
test
sub
test
test
xor
stc
xor
test
cmp
add
jmp
stc
add
xor
stc
not
rol
cmc
cmp
xor
clc
ror
stc
bswap
stc
test
xor
add
jmp
mov
or
mov
lea
clc
mov
cbtw
or
and
sub
add
rcr
cmp
mov
cmp
test
xor
cmp
test
lea
cmp
jmp
cmc
cmp
bswap
cmp
clc
test
add
cmc
clc
stc
ror
stc
cmc
neg
cmc
cmp
xor
test
add
jmp
inc
jmp
push
ret
push
ret
lea
cmc
cmp
xor
cmc
clc
ror
jmp
jb
popf
xor
cmpsb
push
sahf
jg
xor
mov
pop
xchg
imul
mov
dec
jns
mov
shlb
ret
xchg
adc
mov
loopne
inc
cmp
lret
and
xor
shll
imul
hlt
test
xor
aas
push
sub
popa
in
bound
xorl
mov
scas
nop
cmp
test
adc
lahf
pop
mov
addr16
(bad)
movsb
sub
sbb
stc
cmc
dec
js
jnp
sbb
xchg
loope
mov
rorb
xlat
cltd
pop
and
lds
or
stc
dec
rcll
mov
(bad)
lahf
imul
in
outsb
clc
push
push
ja
pop
mov
aas
cli
mov
pop
iret
call
shr
xchg
js
sub
int1
pop
add
push
out
xor
xor
jns
mov
dec
fdivrs
mov
imul
test
sub
mov
aas
push
das
daa
adc
inc
jne
or
ss
mov
insb
pop
sbb
addr16
xor
ljmp
fs
int3
push
sbb
or
inc
adc
aas
rclb
mov
sbb
mov
cs
pop
push
mov
(bad)
pusha
inc
fcmovnb
int1
push
nop
lcall
(bad)
push
dec
fcmovu
push
jecxz
test
shr
xor
cmp
jbe
push
cmp
or
sbb
fucom
jo
adc
or
inc
push
cltd
hlt
fwait
mov
sbb
cmpsb
pop
xchg
inc
push
push
scas
cmp
sbb
stc
inc
xchg
cltd
jae
mov
hlt
and
enter
scas
cmp
or
inc
adc
push
sub
inc
cli
ror
mov
dec
pop
lret
inc
iret
popa
add
mov
cld
push
push
dec
in
cmp
sbb
pop
push
mov
stc
pop
push
call
cmp
fdivr
cmc
in
outsl
and
adc
int1
lea
andb
daa
push
lcallw
rcrb
lea
frstor
loop
into
popf
xor
shlb
hlt
lahf
pop
(bad)
fadds
xchg
add
push
gs
jns
std
test
ja
cwtl
push
push
cmc
loopne
xor
and
inc
sti
xor
push
mov
inc
out
pushf
xor
lods
mov
repz
stc
adc
cmc
mov
cmp
adc
in
stc
mov
fiaddl
stos
nop
dec
loop
insb
mov
or
lea
stc
ret
inc
loop
mov
lcall
fimull
and
add
mov
mov
cmp
stc
lea
jmp
dec
jmp
ret
cmp
sbb
add
cmp
cmp
clc
mov
shl
bsr
cmovle
mov
or
rcr
mov
sar
neg
mov
xor
stc
rcr
pop
lea
mov
clc
jmp
inc
cmp
jmp
add
jmp
jmp
mov
jmp
bswap
jmp
cmc
ror
sub
rol
jmp
inc
dec
stc
inc
xor
jmp
movzbw
inc
mov
sub
btc
lea
sub
or
not
rcr
not
xor
shl
and
movswl
bswap
mov
bswap
pushf
shr
mov
pop
bt
sbb
bsr
mov
clc
cmc
add
cmp
clc
cmc
xor
rol
sub
ror
bswap
jmp
mov
rcr
mov
btr
push
shr
movzwl
cpuid
test
sub
cmp
test
test
mov
clc
mov
mov
btr
mov
pop
ror
mov
test
add
xor
cmp
bswap
xor
clc
test
not
cmp
stc
xor
stc
bswap
cmp
xor
test
add
jmp
push
xor
inc
sub
dec
bts
cmp
pop
test
dec
arpl
inc
cmp
dec
add
jmp
mov
shr
lea
xchg
movzwl
movzbl
not
xadd
lea
sbb
cmp
clc
xor
rcr
bts
bts
ror
add
neg
dec
cmovbe
stc
jmp
movzbw
mov
lea
bt
imul
movzwl
mov
bswap
pushf
bts
movzbw
pop
sub
shl
mov
xor
jmp
movzbw
mov
cmc
clc
lea
test
not
test
not
clc
and
movswl
mov
movswl
pushf
pop
mov
test
stc
add
test
xor
stc
xor
cmp
clc
neg
clc
jmp
mov
mov
lea
mov
btr
mov
add
cmc
xor
jmp
mov
btc
bsr
lea
mov
xor
cmp
neg
lea
xor
ror
xor
cmp
cmp
xor
jmp
mov
bsr
push
mov
jmp
inc
stc
xor
add
jmp
inc
movzbl
inc
not
inc
ror
inc
mov
dec
movzwl
shl
movzwl
dec
sub
dec
sbb
mov
inc
not
clc
inc
test
sar
inc
not
inc
and
jmp
test
sub
neg
clc
jmp
shl
mov
test
cmp
add
cmp
test
test
xor
cmp
xor
jmp
mov
mov
shrd
xor
cmc
add
xchg
mov
mov
bswap
movzwl
cmovle
pushf
rcr
pop
and
mov
test
lea
cmp
xor
not
stc
cmc
add
stc
clc
ror
jmp
mov
movswl
cmovne
setg
pushf
btc
pop
or
rcr
mov
lea
cmc
stc
xor
rol
clc
cmp
add
jmp
clc
not
stc
or
cwtd
mov
setns
cmovno
cwtd
pushf
adc
sar
pop
mov
stc
lea
clc
xor
test
test
cmp
not
test
jmp
rol
bswap
cmp
lea
stc
test
xor
test
add
jmp
jmp
inc
jmp
inc
