sbb
jl
fistpll
push
adc
mov
les
sub
insb
dec
pop
cmp
fsubl
data16
inc
cmp
push
sahf
pop
sti
stos
js
out
nop
sbbb
dec
mov
imul
mov
mov
(bad)
push
gs
pop
fs
out
test
mov
in
mov
je
push
lds
sbb
xor
test
dec
loop
adc
mov
cmp
inc
jns
xchg
cltd
adc
add
inc
xchg
enter
and
adc
mov
pusha
clc
rclb
int
test
popf
adc
or
fst
insb
or
(bad)
pop
inc
std
mov
sahf
pop
mov
mov
fs
(bad)
sub
jns
mov
push
aas
or
pop
inc
loope
nop
fstpl
fmuls
ja
sti
loope
sbb
sahf
aaa
mov
in
cmc
shlb
inc
sub
push
cltd
dec
lahf
bound
sbb
imul
adcl
mov
les
pop
add
mov
jp
pop
adc
dec
cli
mov
mov
jl
mov
(bad)
adc
xchg
in
adc
in
ret
int3
sub
sbb
sub
aad
out
push
inc
in
sbb
and
mov
les
and
xchg
inc
xchg
dec
adc
xchg
pop
int1
shll
into
notl
inc
pushf
idivl
add
cmp
aaa
mov
cmp
ds
dec
xchg
sti
cmp
and
mov
cmp
out
jmp
xor
push
imul
fnstsw
and
test
jnp
shlb
inc
ja
sbb
fwait
pushf
xchg
and
adc
out
push
mov
cld
sbb
and
pop
lahf
cli
sbb
gs
scas
subl
dec
xchg
ret
scas
cmp
jge
addb
rorb
or
inc
outsl
ja
gs
jg
jno
in
ficompl
xchg
andl
arpl
loope
pop
and
or
dec
jo
loope
in
(bad)
shll
pop
aas
mov
pop
lock
fcoms
bound
cld
addl
outsb
es
inc
push
mov
adc
jns
push
mov
fldl
jge
adc
push
repnz
arpl
cmp
and
out
(bad)
lcall
push
and
jae
negl
lock
push
cwtl
sub
outsb
jo
int3
pushf
push
and
ja
dec
mov
dec
rorl
mov
sahf
sti
mulb
lea
loop
and
cmp
ret
mov
subl
xor
xchg
inc
push
push
jmp
mov
cmp
out
adc
mov
add
(bad)
cld
dec
and
mov
repnz
dec
orb
push
add
pop
push
and
mov
adc
(bad)
lock
aam
push
cmp
inc
cmpsb
int
mov
pop
aas
inc
mov
cmc
imul
pop
inc
imul
cltd
cmp
add
mov
outsb
shrb
insb
add
push
dec
test
add
mov
push
add
jbe
jns
mov
sub
push
stc
pusha
and
or
lea
mov
push
out
pop
sbb
inc
sbb
adc
adc
mov
aad
sub
ret
aas
scas
sub
cmp
addr16
fwait
jo
pop
push
pop
fstpl
sub
popa
fwait
sbb
mov
and
gs
insb
movsl
mov
ljmp
dec
js
adc
fimuls
imul
mov
push
push
mov
mov
mov
ljmp
ds
lea
xor
push
lods
xchg
pop
push
popf
jb,pt
mov
push
pop
push
imul
mov
jp
inc
pop
mov
pop
mov
rcl
js
pop
outsb
push
ret
aaa
mov
(bad)
fstl
test
aad
jge
cmpsl
or
push
sub
jecxz
xchg
into
adc
dec
pop
movsl
lahf
sbb
cltd
ds
ja
jg
cmpsl
mov
mov
mov
mov
inc
fsubl
in
xor
sub
pop
cmp
mov
push
jb
push
and
mov
jmp
jle
(bad)
imul
dec
ja
and
cmp
jmp
push
lods
das
xchg
test
hlt
xchg
lods
cmp
pop
adc
push
or
push
cmc
je
scas
out
adcl
push
or
inc
cli
jg
or
xchg
xor
pop
push
dec
rcl
cmpsl
jae
leave
jns
cmp
into
push
mov
jp
sbb
jns
sbb
movsb
outsl
or
loope
mov
mov
mov
add
add
mov
push
sbb
push
mov
mov
cmp
imul
bound
imul
xlat
cmp
push
cmpb
and
sub
sbb
jle
andl
inc
push
dec
ret
mov
out
ds
inc
xchg
cmp
inc
and
in
inc
int1
cmp
push
bound
fbld
dec
pusha
xchg
lods
pusha
jmp
mov
cmp
clc
repz
andb
sarb
push
outsl
pop
inc
bound
stos
pusha
xchg
fs
mov
xor
dec
mov
aad
(bad)
jnp
ljmp
in
pop
push
mov
dec
inc
sbb
dec
and
inc
sbb
and
jg
stos
fsubs
inc
sbb
dec
sti
test
andb
pusha
push
xchg
add
lcall
mov
cld
pop
pop
stos
fcoml
cmp
hlt
fwait
sarl
dec
mov
pop
mov
lcall
push
and
sarb
xorl
mov
push
sbb
and
and
jg
rorb
leave
jmp
pushf
andb
xchg
fwait
dec
mov
jne
inc
adc
pushf
mov
sbb
hlt
push
data16
sarl
addb
mov
push
xor
jle
sti
out
push
pushf
and
jnp
mov
xor
cmp
and
dec
and
xchg
inc
cmpb
push
and
inc
jb
mov
std
mov
pop
xor
ss
fistpl
(bad)
cwtl
call
push
mov
add
and
into
xlat
sti
lea
outsb
and
pop
hlt
(bad)
inc
sbbl
hlt
mov
ja
aaa
jl
int
push
xlat
push
adc
sub
xchg
mov
std
aad
jle
lret
cltd
cltd
testb
and
adc
es
adc
pop
jmp
cmp
cmpsb
jle
mov
fldt
inc
jmp
inc
movsb
ja
push
cmp
fs
add
(bad)
jge
add
pusha
mov
pop
push
jae
outsl
ret
stos
clc
(bad)
mov
popf
subl
jbe
cmp
iret
ja
adc
xor
adc
xchg
subl
push
sbb
inc
sub
or
push
adc
push
sarb
mov
pop
add
sbb
insl
dec
inc
outsb
push
xlat
aas
cmp
xchg
mov
gs
jle
push
pop
inc
xor
cmpsl
mov
stos
xor
js
sub
mov
rol
fcmovnu
dec
adc
fcoms
inc
stos
movsb
adc
les
push
cltd
add
imull
cmp
test
inc
inc
jmp
pop
movsb
cmp
push
(bad)
cmp
leave
mov
loop
mov
dec
movntps
sub
sti
leave
pop
sbb
inc
into
or
cltd
sub
js
test
sub
xlat
insl
xor
push
inc
dec
pop
jno
mov
jge
and
push
xchg
rclb
hlt
sub
sti
imul
mov
(bad)
mov
call
pop
adc
cltd
push
in
pop
pop
aam
lret
lahf
out
mov
push
sbb
daa
in
and
jae
and
push
fucomp
sbb
mov
popf
cmp
xor
bnd
add
inc
inc
add
sbb
idivb
xchg
and
cmp
xchg
(bad)
pop
xor
and
outsb
iret
test
loope
sti
dec
sarb
incl
mov
xor
add
je
pop
jb
pop
xchg
pop
pop
pop
and
adc
mov
dec
into
sub
mov
mov
fnstsw
(bad)
lock
jg
add
add
and
sbb
cmp
arpl
shl
andb
out
jp
sub
test
or
nop
adc
cmp
je
(bad)
outsl
test
sbb
es
push
roll
jge
aaa
decl
and
