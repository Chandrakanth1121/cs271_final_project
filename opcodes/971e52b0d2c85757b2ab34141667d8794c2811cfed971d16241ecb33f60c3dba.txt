pop
outsl
pop
pop
lods
sbb
xor
sahf
sub
pop
mov
das
cmp
xchg
cmpsl
pop
xchg
js
je
repnz
add
imul
(bad)
int1
in
daa
hlt
in
loopne
lods
cs
pop
notl
std
xlat
jae
jge
xor
lcall
and
sbb
daa
xchg
(bad)
out
pop
ja
adc
lds
pop
push
push
addr16
mov
je
insb
xchg
popf
pop
fidivs
xlat
cmp
mov
outsb
in
cwtl
jne
pushf
pop
aad
add
in
shl
sub
rcr
(bad)
fcomps
or
add
adc
jbe
xchg
push
mov
xchg
push
or
(bad)
mov
adc
xor
data16
xor
sbb
lret
mov
xchg
jne
stc
fmuls
mov
and
imul
loopne
pop
int
lcall
sbbl
dec
fwait
push
mov
insl
pop
sbb
lcall
push
pop
cmpsb
cmpsb
add
gs
iret
clc
stos
sbb
lock
and
loopne
xchg
adc
(bad)
xchg
int3
jno
pushf
inc
jle
popf
xchg
sub
addr16
mov
sahf
fstpl
jnp
and
mov
adc
or
xchg
jg
and
hlt
es
push
jne
cmpsb
sub
je
stc
popa
out
cmpsb
cmp
jae
jnp
out
pop
jno
pop
cmp
pop
lock
rorb
cld
into
sub
xlat
and
shl
adc
shll
insl
hlt
pushf
and
push
incl
or
popf
dec
int1
stos
xor
push
gs
and
or
fiaddl
adc
or
push
clc
lahf
inc
push
ficompl
lds
in
or
rcll
jne
inc
les
lds
int
in
jg
test
or
fwait
mov
sarb
pop
sahf
xorl
mov
cs
rclb
sub
jo
jecxz
test
out
pop
inc
mov
outsb
push
pop
popf
pop
xchg
jg
(bad)
adc
and
sub
shlb
fcomip
out
mov
mov
popa
enter
in
popf
xor
add
(bad)
lods
cmp
es
xchg
imul
je
mov
(bad)
lret
adc
mov
jb
fstl
or
and
sub
insl
mov
(bad)
lret
xchg
test
jl
bound
js,pn
push
in
movsl
sarl
movsl
pop
cwtl
mov
popf
pop
out
nop
fadds
jns
mov
into
mov
lcall
adc
jp
push
xchg
rcrb
imul
inc
sbb
sbb
mov
add
xchg
cmpl
lds
repz
mov
mov
jno
call
out
int
imul
xchg
mov
rolb
and
cmp
xchg
cmp
jge
inc
into
or
push
push
sti
sub
cmp
adc
adc
test
repz
mov
dec
or
fisubs
xchg
in
fdivp
out
mov
leave
sbb
push
adc
imul
fwait
add
fwait
lcall
ljmp
xlat
test
popa
enter
pop
jbe
int1
(bad)
mov
lcall
ffreep
int
push
cmpsl
ss
cmc
rorb
addr16
mov
add
adc
imul
test
(bad)
pop
shl
fcmovbe
xchg
inc
inc
insl
mov
test
shrl
sbb
popa
jg
loopne
pop
xor
cmp
mov
notl
(bad)
inc
cmp
mov
jp
inc
jp
shll
aad
jno
test
movsl
cwtl
mull
test
sbb
push
adc
ja
or
push
xor
xchg
aas
fnstenv
mov
mov
mov
std
out
in
mov
out
adc
ffree
push
ja
or
pop
jne
mov
jne
lea
repz
fnstsw
push
es
cld
addb
loop
xchg
popa
repz
lods
lret
push
adc
pop
cwtl
pusha
std
mov
outsl
add
sub
dec
(bad)
insb
push
clc
xchg
add
or
in
sbb
jg
insb
out
push
rorl
je
mov
add
hlt
es
xchg
int1
jmp
mov
test
hlt
or
in
mov
pop
nop
cmp
mov
roll
pusha
adc
mov
mov
outsl
pop
pusha
mov
pop
out
(bad)
and
push
push
clc
nop
scas
and
insl
in
scas
jmp
jno
pop
sahf
popf
shl
dec
addl
push
xchg
dec
int3
stos
jno
lods
mov
jl
sbb
jp
(bad)
imul
cmp
stos
out
add
pop
bound
xchg
cmp
adc
shlb
sbbl
test
inc
xchg
test
inc
or
loop
xchg
(bad)
jge
stos
(bad)
xchg
je
xor
cmp
push
adc
jno
sar
cmp
cmpsb
and
stos
and
nop
fwait
add
cmp
xchg
push
aad
jns
push
add
sbb
pop
cld
(bad)
fs
js
add
xchg
fstl
add
(bad)
sub
adcb
mov
mov
mov
mov
aam
add
faddl
sub
cmpb
inc
aaa
mov
aad
sbb
sarb
inc
std
je
(bad)
xchg
(bad)
cld
int
sub
jp
push
sbb
sub
jle
mov
jns
notb
adc
jp
out
gs
(bad)
mov
stc
stos
loopne
mov
mov
pop
cmpsb
mov
adc
mov
xchg
mov
cmc
es
data16
negb
in
clc
mulb
rcll
outsl
jb
test
rolb
aam
je
pop
outsl
inc
pop
xchg
out
int1
pusha
lea
lret
jg
fwait
scas
push
bound
sbb
jb
nop
popf
push
dec
sahf
cmp
xchg
das
push
sub
in
adc
rolb
test
jle
(bad)
int1
jne,pn
out
outsb
sbbb
rclb
adc
xchg
push
pop
pop
sbb
fwait
(bad)
xor
jae
std
xchg
mov
adc
arpl
mov
in
jo
in
fldcw
cmpsb
mov
imul
lahf
decl
sbb
(bad)
faddl
shrl
add
sbb
mov
jo
dec
xor
add
insb
jns
popf
test
jp
push
out
dec
xchg
lods
lcall
lcall
xlat
mov
jae
mov
cltd
mov
jmp
push
mov
inc
test
fstpt
mov
mov
push
inc
mov
lods
xor
in
push
ret
test
xchg
jmp
mov
push
adc
fsubrs
in
add
gs
shr
int
sub
pop
cmpsl
dec
popf
dec
cmp
rorl
cmp
daa
fwait
xchg
sub
inc
lcall
and
(bad)
std
pop
test
in
adc
jle
lcall
(bad)
push
mov
mov
imul
lahf
outsl
mov
add
xchg
mov
push
push
gs
cltd
pushf
enter
xor
out
mul
dec
cmp
push
frstor
(bad)
sub
decl
pop
push
adc
sub
popa
xchg
dec
scas
outsb
mov
lret
dec
cs
addr16
loope
mov
(bad)
inc
xchg
scas
lea
jb
dec
cltd
add
inc
popf
xchg
pop
push
jl
popf
cmpsl
scas
movb
cmpsb
call
pop
loope
aas
rorl
ret
test
sbb
sub
cltd
mov
pusha
sub
and
call
fistpll
mov
mov
decb
mov
jnp
mov
out
das
cmp
cwtl
mov
adc
mov
adc
inc
test
cmp
jp
in
test
sub
sbb
mov
addr16
outsb
jno
xchg
mov
jmp
cltd
mov
nop
mov
bound
and
jae
out
mov
jg
and
push
gs
xlat
mov
mov
arpl
fisubrs
add
jp
lcall
out
pushf
pop
lahf
and
or
jne
dec
lcall
out
test
cs
push
outsl
xchg
js
mov
push
add
adc
ficoms
daa
nop
mov
cltd
jo
out
out
mov
add
lea
shlb
subl
iret
xchg
mov
add
aaa
cli
push
xor
jo
add
(bad)
xchg
pop
les
pop
inc
or
arpl
mov
test
mov
