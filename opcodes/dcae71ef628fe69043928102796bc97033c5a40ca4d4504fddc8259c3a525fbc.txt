lock
lret
mov
cmpb
pushf
(bad)
(bad)
jbe
mov
xchg
out
adc
or
mov
mov
out
jbe
xchg
dec
push
and
jge
and
enter
cmp
bound
int3
jo
rcrl
pop
push
dec
or
cld
pop
xchg
leave
lahf
out
push
cs
into
nop
xchg
mov
lret
push
mov
sahf
daa
adc
and
(bad)
cmp
mov
and
and
or
imul
mov
stos
lret
fdivs
pop
push
pushf
push
sub
sub
imul
and
cmc
jmp
out
sbb
test
mov
dec
adc
dec
pushf
mov
iret
daa
adc
xchg
int
call
cli
sbb
and
push
mov
imul
push
add
shl
mov
(bad)
dec
loop
push
test
ja
jl
or
jg
popf
movsb
es
pop
popa
daa
mov
into
xor
mov
dec
sti
test
jbe
stos
sub
gs
mov
fcompl
jle
mov
jl
mov
jo
or
or
cmpsl
loopne
mov
pop
xchg
int
jne
mov
mov
adcl
sbb
adc
add
test
lret
shlb
jae
sahf
dec
cs
push
xor
rcl
test
jne
lret
cmp
int3
push
mov
sbb
outsb
xor
dec
adc
or
outsl
fimull
pop
mov
xor
cltd
mov
add
inc
rorb
(bad)
and
xor
loope
adc
insb
int
ret
test
les
ficompl
mov
jp
push
cmpsb
xorb
(bad)
jnp
pusha
aas
push
mov
sub
push
mov
scas
pushf
in
jmp
test
jecxz
inc
movsb
mov
cmp
sbb
(bad)
xchg
aam
adc
movb
lret
lea
fisttpl
cli
and
sbb
outsb
xchg
stos
fucom
out
cld
and
outsb
fwait
int
xchg
xchg
hlt
jmp
int1
mov
dec
inc
sarl
hlt
jns
scas
adc
push
and
outsl
cmp
push
cmpsb
out
xchg
andb
push
or
flds
out
push
aad
xchg
out
cmpsl
xchg
mov
sbb
mov
or
mov
dec
xchg
add
dec
jno
mov
ficomps
andl
orb
mov
mov
xor
jl
lods
gs
rcrb
push
cli
or
jo
ss
js
dec
xchg
scas
outsb
adc
or
dec
sub
push
and
sub
int
push
xor
lea
jmp
or
popf
mov
loope
imul
cmp
pop
loopne
popa
cs
outsl
dec
cmpsb
(bad)
push
ja
enter
movsb
sti
pop
push
jecxz
mov
outsb
lcall
pop
push
stos
out
xchg
sti
pop
jns
pop
into
xchg
xor
mov
sbb
pushf
jmp
lahf
mov
ljmp
cmpsb
test
dec
test
pop
jne,pn
pop
popf
adc
xor
aaa
jo
gs
xchg
subl
push
es
sub
aad
pushf
pop
and
ret
dec
mov
mov
pop
jp
shlb
or
cmp
into
out
dec
scas
xchg
bnd
enter
lret
call
pop
cmp
push
pop
jmp
lret
sbbb
loopne,pt
fistpll
pushf
stc
lahf
hlt
(bad)
arpl
inc
mov
leave
or
sbb
mov
push
xchg
inc
popa
and
dec
dec
push
inc
in
cmp
dec
pushf
sahf
loopne
hlt
dec
(bad)
xor
(bad)
push
jb
pop
int3
push
iret
cmp
and
jmp
fbld
sub
(bad)
mov
stos
scas
cmpb
pop
andb
add
xchg
lods
xlat
clc
lahf
mov
ret
or
sub
arpl
dec
adc
mov
out
add
dec
mov
xchg
or
movb
xor
jmp
iret
inc
rorl
(bad)
xchg
pop
sbb
out
adc
cmpsb
iret
push
mov
mov
mov
lea
fstpt
mov
sbb
in
jmp
xchg
jge
fcomi
enter
dec
movsl
adc
jl
test
aam
mov
iret
pop
jl
sbb
sub
mov
pop
cmc
pop
jo
push
in
mov
jne
imul
inc
push
jle
and
xor
pusha
sahf
sbb
mov
inc
xor
lds
adc
loope
adc
fidivrl
mov
ret
aas
pop
pop
xchg
fcmovne
mov
sub
mov
outsb
dec
outsl
sbb
push
out
cltd
iret
push
and
data16
rcr
pop
mov
adc
mov
data16
int3
inc
pop
inc
or
daa
sbb
jb
jecxz
in
mov
pusha
das
lods
push
stos
aam
aad
sahf
xlat
out
sbb
int
cmpsb
mov
iret
or
or
sbb
cwtl
mov
push
xchg
adc
inc
scas
std
mov
lods
inc
repz
push
inc
and
pop
aad
lahf
test
or
push
rcrb
dec
push
test
mov
sub
sbb
cwtl
outsl
mov
into
imul
add
aam
jae
sub
pushf
repz
or
and
leave
(bad)
mov
and
pushf
xlat
imul
mov
cmp
push
pop
mov
jmp
out
and
push
repnz
and
lods
(bad)
cltd
int1
cwtl
mov
loope
sahf
pop
mov
test
inc
inc
mov
cmpsl
pop
sbb
pop
mov
push
gs
push
xchg
sub
test
loopne
pop
lock
cmp
call
enter
add
mov
push
int
rcll
shl
mov
mov
popa
mov
xor
mov
sub
sub
(bad)
lret
add
mov
push
and
addr16
adc
insb
test
jae
sahf
cmp
pushf
push
lret
mov
dec
fs
int
xchg
sti
add
lahf
add
arpl
jbe
sub
lahf
ds
aaa
or
sbb
rcr
ljmp
mov
mov
ljmp
pop
pop
adc
mov
xor
rorb
out
pop
call
int
fs
mov
push
mov
leave
mov
push
or
(bad)
sahf
mov
dec
mov
arpl
orl
jb
jae
inc
movsl
xchg
lret
push
sub
push
lahf
xor
push
xchg
rol
ja
xlat
imul
int3
addr16
sbb
dec
mov
(bad)
jns
lea
idivl
pop
loopne
xchg
mov
mov
in
or
orl
jbe
orl
sub
pop
test
xchg
xor
dec
leave
mov
adc
cmpsb
sbb
jne
inc
adc
sub
sbb
push
sub
mov
mov
sysexit
push
mov
or
cmpsl
aaa
add
sti
bound
mov
movsl
(bad)
dec
daa
mov
pop
int3
psllq
sarb
out
inc
push
mov
fldcw
scas
adc
push
arpl
int1
repnz
cmovnp
xor
(bad)
call
xchg
xchg
cmp
mov
hlt
shrl
push
fdivl
movsb
push
int1
jmp
movsb
fs
lret
pop
push
mov
or
adc
or
jbe
pop
rcrl
loopne
lods
push
mov
xor
xchg
mov
mov
fmul
jle
jns
cmp
and
fldt
or
(bad)
adc
scas
lahf
into
jmp
and
lret
fsubr
adc
and
mov
aas
in
int1
lcall
dec
stos
jle
mov
add
dec
sahf
scas
jnp
sbb
adcl
ret
jo
insl
jge
idivb
rcl
nop
imul
push
pop
out
jnp
mov
(bad)
jp
push
sub
imul
sbb
nop
pop
jg
lock
xor
stos
pop
inc
and
mov
mov
push
or
mov
cld
push
les
jnp
dec
test
jmp
xor
or
dec
cmp
or
mov
pop
rolb
sbb
push
rclb
mov
iret
mov
repnz
mov
mov
inc
cwtl
push
imul
(bad)
pop
nop
daa
int3
cmp
xchg
xchg
stc
dec
shlb
and
movsb
pop
jnp
push
xchg
xor
dec
lahf
