mov
imul
inc
fidivl
arpl
cwtl
xchg
mov
stos
int
pop
cmc
sbb
push
stos
insb
cmp
dec
sub
mov
bound
sbb
gs
das
into
scas
sahf
call
adc
notb
xchg
jo
ss
pop
inc
and
jnp
mov
lods
popf
inc
ss
push
in
inc
(bad)
insl
push
ds
cmp
and
test
pop
int3
jg
cli
inc
fldl
dec
mulb
adc
push
sbb
mov
push
sti
xor
jbe
adc
fbld
scas
imul
movsl
mov
cmpl
stc
dec
add
test
dec
dec
sbb
pusha
outsl
rolb
cltd
xor
in
dec
jae
jl
cld
cmp
rol
xor
mov
mov
mov
leave
xchg
lds
data16
dec
mov
lret
in
sub
aaa
gs
jno
int
sub
mov
out
cmp
mov
lret
pop
je
or
ss
sti
cmp
int
(bad)
in
sub
fisubrl
jl
push
mov
xor
mov
cmp
adc
push
repnz
ret
mov
dec
pop
or
pushf
pop
outsl
insl
fidivl
sbb
aaa
sub
fcompl
ljmp
or
fs
outsl
or
cmp
fcomp
dec
mov
clc
cmp
xor
push
push
push
pop
out
jmp
jg
out
sub
pop
or
fnsave
daa
fmull
pop
subb
inc
mov
jo
idivl
and
xor
xchg
negb
sbb
cmp
fmuls
pop
inc
test
ror
inc
fnsave
jp
out
or
test
shll
dec
lea
std
fnstsw
mov
cmp
sti
mov
std
lahf
push
mov
cmp
insb
mov
pop
arpl
push
jmp
int3
dec
pop
(bad)
push
out
lret
adc
data16
loope
adc
pop
sub
incl
sbb
into
mov
out
stc
xor
xchg
das
shlb
or
pop
andb
insl
in
pop
xor
lods
stc
or
mov
pushf
push
ljmp
jnp
pop
aad
jae
and
ret
mov
push
sbbl
test
jp
sbb
mov
ret
imull
enter
frstors
cmp
xor
mov
push
ret
loopne
inc
imul
pop
or
pop
fdivl
ret
daa
mov
mov
test
xchg
fistl
push
scas
lret
add
inc
repz
addl
sbb
and
scas
ljmp
mov
jbe
rcll
mov
aam
xor
dec
in
inc
add
or
enter
sub
mov
out
out
xchg
sbb
ficoms
loop
movb
jmp
es
outsb
(bad)
fsubs
push
rorb
pop
mov
lds
fldl
jno
xlat
lea
mov
cmc
or
popf
dec
jmp
or
fwait
push
inc
popf
js
sbb
add
mov
test
fwait
out
dec
in
push
xor
push
mov
pop
xor
data16
pop
pop
mov
aam
repz
std
jne
enter
negb
stos
adc
inc
push
div
adc
sbb
notl
popa
(bad)
in
clc
and
mov
pusha
dec
insb
adc
(bad)
push
(bad)
mov
sbb
pop
iret
ja
das
cmp
outsb
mov
mov
je
(bad)
pop
in
ljmp
out
(bad)
fstpl
fcmovu
outsl
jno
adc
clc
lret
loop
xor
xchg
sub
push
mov
dec
aad
push
dec
movsl
rcll
aaa
pop
and
data16
subl
mov
sarb
adc
sub
sub
iret
enter
test
popf
mov
pop
mov
aam
aaa
ljmp
cs
mov
sub
popa
ljmp
pop
pop
out
jecxz
mov
out
jmp
je
add
popa
dec
xchg
pop
jg
cld
mov
cmpsb
cld
sarb
mov
adc
popa
scas
inc
stos
dec
subb
lcall
or
pop
dec
cmc
cmp
jo
push
fs
jge
pushf
xchg
jo
and
fsubrs
out
lret
scas
fstpl
xchg
jl
int3
inc
add
out
nop
sahf
aas
jnp
cli
dec
enter
jno
cwtl
mov
cmp
xchg
clc
push
pop
in
shl
jge
in
mov
mov
pushf
pop
or
cmp
mov
movsl
gs
mov
(bad)
ds
and
add
jmp
jmp
fcoml
out
xor
aas
add
ja
or
mov
mov
das
sbb
stos
and
adc
push
mov
sbb
das
jp
ss
jg
adc
ret
cmpsl
test
mov
push
pop
iret
and
cltd
ds
outsb
rorb
hlt
jno
fwait
addr16
pop
repnz
outsb
pop
lock
fbld
outsb
(bad)
cmpsl
xlat
dec
or
sub
mov
cli
jg
xor
pop
xlat
dec
int1
sbbb
in
cltd
clc
ret
insb
iret
xchg
inc
ret
(bad)
mov
fsubs
sub
in
xchg
xchg
loope
push
mov
cmc
(bad)
mov
leave
sub
mov
push
mov
xchg
sub
insl
add
sbb
stos
xchg
mov
sub
add
stos
xchg
fnstcw
pop
pandn
or
mov
clc
(bad)
cmp
or
mov
cmp
inc
xchg
dec
ret
inc
loope
pop
pop
cs
push
sub
cs
fcompl
pop
daa
test
push
cmp
int
rcrl
shl
pop
mov
mov
mov
sahf
jnp
(bad)
sbb
and
ret
lret
lea
in
es
es
inc
and
sbb
xlat
pop
loopne
repz
in
mov
and
cmp
jb
inc
(bad)
pushf
enter
(bad)
stos
lret
lds
popa
inc
sbb
adc
dec
pop
cmp
push
lahf
jg
jp
(bad)
xor
sbb
sbb
loopne
imul
or
or
outsb
jl
data16
xchg
mov
mov
xchg
movsw
inc
out
std
push
xchg
mov
clc
mov
xor
stos
jo
add
fxch
mov
mov
out
mov
add
mov
nop
dec
mov
sub
mov
cmp
repz
test
xchg
dec
int
popf
sub
fs
push
xchg
and
test
jmp
addr16
dec
mov
xor
lret
or
pop
sbb
adc
test
inc
inc
shr
jle
xchg
aad
shll
lret
xor
mov
dec
push
mov
rclb
scas
push
andl
dec
or
cmp
pop
xor
adc
mov
in
jmp
xor
and
sbb
adc
mov
mov
fildl
mov
mov
sbb
xor
outsb
mov
in
pop
jecxz
mov
mov
into
mov
dec
les
mov
jb
dec
add
jb
(bad)
daa
fstps
add
or
je
aad
mov
add
add
push
mov
jg
movsl
cmpsl
xor
ret
bnd
or
mov
fcomp
xchg
aam
sub
in
and
jne
xchg
push
int3
dec
xlat
dec
inc
insb
ret
jle
les
(bad)
mov
xchg
inc
inc
or
pand
lock
imul
or
daa
sub
repz
dec
imul
orl
push
imulb
or
test
ret
mov
mov
mov
aad
mov
out
pop
fimull
push
jae
pop
cmp
mov
leave
sub
addr16
dec
sub
cmp
(bad)
push
mov
xchg
test
pop
mov
lcall
loop
std
mov
mov
int
pop
xchg
pop
pop
ret
js
mov
pusha
inc
into
push
xchg
cmp
push
mov
xlat
test
mov
fsubl
push
aam
mov
and
xchg
xor
dec
(bad)
mov
jmp
ja
sub
and
xchg
jbe
dec
jo
xchg
sbb
xor
and
mov
xchg
mov
out
xor
mov
shlb
push
lcall
mov
jcxz
add
outsb
push
jmp
inc
add
repz
repz
and
jb
jne
enter
(bad)
pop
cmpsl
(bad)
ror
clc
lret
xor
