int1
cwtl
decb
pop
jno
mov
iret
pop
dec
mov
data16
pop
fs
mov
mov
ret
cwtl
out
and
xchg
xor
inc
sub
ja
push
push
mov
shl
jb
shr
insb
in
scas
cmpsb
lea
(bad)
cs
jns
int
push
inc
shlb
lock
fidivl
ret
pop
cmc
(bad)
push
add
and
pop
repz
shlb
stc
movl
pop
stc
addr16
mov
out
ret
mov
stc
push
pop
stos
je
push
cmpb
cmp
push
mov
jg
std
adc
jo
cmp
popf
dec
lret
push
mov
rclb
mov
outsb
jle
xchg
xchg
(bad)
pusha
imul
pop
imull
push
scas
push
aaa
xor
lea
push
jae
xor
pop
rorl
in
jb
pop
fmuls
xor
sbb
xchg
push
jbe
call
push
imul
pop
or
cmovb
cltd
sahf
inc
sti
je
mov
fsubp
mov
sti
xchg
mov
shlb
mov
cmpsb
xchg
jecxz
out
jns
aam
pop
movsb
mov
mov
in
dec
mov
roll
cmp
bound
pop
push
aad
out
sub
je
bound
jg
mov
xor
out
stos
sti
push
in
xchg
rcr
fs
pop
jp
scas
push
lock
data16
xor
cld
pop
push
ret
fcos
sub
cmpsl
jge
inc
mov
push
(bad)
es
mov
jb
cmp
bound
movsb
int1
insb
cli
sub
aas
push
mov
jne
push
add
or
inc
ds
bound
sub
jae
mov
hlt
mov
lahf
js
loop
adc
or
xchg
push
ja
and
mov
push
lock
cli
fisubrs
dec
inc
add
sbb
push
out
cmpsb
repnz
fs
pop
sub
mov
add
cli
sub
dec
fs
pop
mov
aad
sbb
jno
repz
mov
add
es
jmp
ds
ficomps
mov
ss
aam
cs
lahf
arpl
sbb
es
in
lret
adc
jmp
mov
int1
arpl
ja
mov
jae
mov
sub
jns
sbb
ljmp
and
inc
dec
jae
fstps
outsb
cmp
or
or
sub
inc
dec
pop
roll
lret
hlt
push
idivb
adc
xor
and
prefetch
or
and
dec
dec
test
mov
bound
xor
cmp
pop
ss
lds
popa
aaa
loope
xor
jmp
popf
aad
xor
out
lahf
mov
in
aaa
daa
mov
gs
scas
push
ss
ret
lea
ss
push
inc
arpl
addr16
js
mov
sub
add
dec
xor
add
fidivl
cmp
xor
stos
xchg
xchg
push
dec
inc
cmp
stos
loopne
fsubl
pop
fdivr
popf
or
adc
subl
push
xor
faddl
sub
outsb
add
or
in
xchg
(bad)
dec
movsb
aad
jmp
jae
clc
adc
sub
fbstp
gs
xor
sub
pop
mulb
int1
and
pop
jo
cs
xchg
outsb
jno
wbinvd
add
js
imul
inc
dec
sbb
mov
jp
repnz
or
inc
adc
aas
cld
xlat
sbb
xor
mov
push
dec
mov
fdivrp
push
call
inc
int3
add
pusha
or
cmovle
jg
cmpsb
or
mov
adc
xlat
hlt
ds
andb
std
pop
mov
jne
stc
repnz
sbb
cmpsl
push
xor
push
jecxz
pop
and
lea
lock
cwtl
sahf
dec
sub
inc
sbb
std
mov
daa
or
shrl
jl
ljmp
sti
out
xor
lock
lock
int
loop
xchg
mov
jmp
pusha
cs
je
cmc
or
and
outsl
inc
cmp
aad
inc
loopne
fsubs
loop
jnp
(bad)
ja
mov
movsl
jmp
sub
lcall
nop
cmovo
movsb
jno
adc
dec
repz
sti
push
aad
lahf
cmpsl
mov
and
stos
push
fld1
scas
sub
sbbl
repnz
inc
add
pop
jnp
mov
negb
jmp
js
enter
movsb
jecxz
andl
and
bound
clc
arpl
fnsave
adc
je
jge
cmp
lea
stos
xor
jne
add
(bad)
rclb
in
aad
jmp
pop
mov
stc
or
(bad)
sub
jb
es
cmp
jge
jno
mov
mov
cmp
out
cmc
xchg
sub
into
mov
xor
rolb
pop
xor
arpl
sub
mov
sbb
mov
sub
out
sub
jns
outsb
jb
sbb
or
push
adc
ljmp
cltd
push
inc
(bad)
sub
stos
fstps
jp
outsl
(bad)
arpl
inc
or
(bad)
xchg
adc
mov
popa
outsb
mov
int
imul
xor
add
jecxz
pop
adc
leave
out
inc
sub
xchg
jb
in
xchg
repz
jge
add
flds
jecxz
xorb
cs
mov
sti
repnz
lods
lret
pop
arpl
bound
inc
mov
push
aaa
xchg
clc
jne
pushf
in
adc
rorb
pop
adc
sbb
adc
cmp
movsb
std
sarl
es
pop
mov
jo
jge
ds
xchg
adc
adc
adc
mov
sub
sbb
stos
aam
jno
out
insb
push
stc
andl
add
add
and
insl
insb
and
pop
push
bound
leave
(bad)
mov
mov
push
shr
xor
adc
dec
loop
mov
add
neg
jo
jnp
add
push
sbb
out
das
loopne
mov
mov
int1
shrb
lods
ret
ret
sub
xor
faddp
mov
loop
stc
ds
mov
fs
subb
push
mov
shl
push
fldt
pop
add
add
out
push
ret
aad
je
lock
jl
mov
clc
pop
jo
repz
dec
std
fdivr
adc
shl
insl
in
mov
aaa
lea
push
imul
jp
imul
fdivrs
scas
sar
sbb
sbb
jbe
popf
pop
pop
imul
sbb
jae
pop
or
pshufw
fisubs
inc
adcl
(bad)
outsl
(bad)
and
push
mov
scas
pop
xor
inc
out
inc
in
outsb
xor
sbb
(bad)
pop
cli
or
dec
push
lret
and
sahf
andl
xchg
imul
test
lods
pop
lahf
adc
int1
ret
dec
inc
push
cwtl
inc
mov
cmpsl
not
add
adc
test
fwait
subl
cmpsb
int1
xchg
xchg
outsl
movb
(bad)
(bad)
push
jne
mov
insb
movsb
ret
inc
mov
es
push
mov
pushf
add
adc
cmp
mov
xor
jne
int
rorl
lret
sbb
(bad)
div
cltd
pop
add
imul
add
test
dec
shr
in
sbb
insb
jl
ljmp
fbstp
mov
movsl
scas
mov
pop
mov
xor
fwait
scas
je
mov
loop
fsubp
xchg
ret
outsb
ja
jo
dec
scas
mov
daa
pop
and
fs
sub
outsb
push
lahf
inc
dec
pop
pusha
add
pop
out
and
sbb
(bad)
mov
push
fistps
xchg
mov
cmc
rcr
mov
movsbl
push
int1
in
add
xchg
xchg
sub
pop
lea
loop
leave
shrb
cmc
fisubrl
test
out
ds
(bad)
cs
cmp
or
mov
push
sub
adc
lods
pop
es
cmpsl
repnz
aad
jb
test
push
js
in
jb
mov
sbb
(bad)
dec
pop
mov
pop
xor
jo
lahf
dec
jmp
(bad)
lods
xchg
add
mov
xor
movsl
mov
mov
inc
aas
add
test
test
and
mov
push
add
and
adc
scas
dec
sti
js
(bad)
sbb
inc
sbb
push
das
loopne
lahf
