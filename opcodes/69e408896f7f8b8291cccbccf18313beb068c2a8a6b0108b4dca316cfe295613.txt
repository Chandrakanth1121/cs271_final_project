sbb
fwait
sub
stos
jno
sub
xor
in
jae
out
push
insb
rex.wxb
imul
(bad)
ret
cmpl
(bad)
(bad)
mov
pushf
fcoms
xor
push
test
test
push
stos
sbb
mov
(bad)
push
(bad)
movabs
xor
and
or
jno
xlat
xor
jrcxz
push
(bad)
xor
(bad)
loopne
and
jbe
mov
xchg
lahf
jno
out
sbb
rex.rxb
subl
push
or
stos
mov
mov
test
in
(bad)
mov
cmp
cs
(bad)
(bad)
(bad)
(bad)
xchg
lret
(bad)
call
pop
(bad)
cmp
outsb
hlt
pop
(bad)
(bad)
(bad)
mov
jg
jge
js
pop
sti
out
(bad)
sti
fisttpll
fcomip
lock
pop
out
movsl
jle
or
retw
sbb
in
(bad)
cmp
(bad)
or
sti
movabs
jb
mov
rex.x
rex.rxb
pop
lret
push
outsl
out
insb
cmc
pop
insl
or
and
jae
xchg
insl
movabs
scas
in
scas
mov
ja
pop
sbb
and
jne
sbb
lahf
and
jno
(bad)
testl
bnd
repz
jns
add
pop
(bad)
or
(bad)
sbb
sub
jbe
(bad)
stos
sub
test
(bad)
ret
mov
(bad)
fistps
pop
imul
(bad)
imull
adc
xor
int3
xlat
push
cmc
cmp
xchg
loop
shlb
xchg
fisttpl
mov
push
fiaddl
add
imul
mov
lea
pop
jge
repz
pop
(bad)
jle
push
jg
mov
adc
(bad)
(bad)
fsubs
sbb
or
mov
xchg
(bad)
mov
int1
mov
(bad)
push
jbe
in
xchg
or
sub
lods
test
gs
scas
cmp
adc
mov
and
mov
fcomps
mov
cmp
jle
adc
test
adc
xor
addr32
rex.wrx
data16
std
adc
test
jg
pop
and
js
(bad)
mov
add
test
stos
mov
data16
sub
xor
cmpsl
cmp
mov
clc
or
fadds
xchg
xchg
sahf
sub
shr
or
nop
popf
(bad)
fs
leave
adc
(bad)
xor
xor
mov
repnz
imul
cmp
(bad)
jge
rex.wrx
(bad)
xor
cli
push
mov
xchg
out
add
insl
(bad)
jo
movsl
jg
(bad)
addr32
lods
jno
or
mov
jno
jae
mov
ds
sub
pop
xchg
hlt
adc
(bad)
loopne
and
in
and
(bad)
mov
fidivs
shrl
(bad)
push
mov
xchg
(bad)
{rex2
int1
jbe
(bad)
fwait
sub
(bad)
cmc
(bad)
cli
add
fsubrs
(bad)
pop
lahf
std
rex.wrx
rex.r
faddl
mov
shll
sub
(bad)
pop
pop
ret
push
and
out
or
xchg
out
jo
xor
cli
ss
imul
xchg
jae
(bad)
mov
movabs
sub
loop
rex.rx
(bad)
xorps
mov
andl
xchg
(bad)
iret
adc
(bad)
mov
fisttpl
mov
inc
mov
sbb
addb
pop
addr32
adc
or
mov
cmpsb
sbbl
pop
or
sub
sbb
(bad)
(bad)
(bad)
lahf
xlat
jmp
mov
stos
mov
movabs
mov
xchg
cmpl
jmp
pop
(bad)
sub
xchg
(bad)
xchg
movabs
negl
jmp
cmp
loope
int
rex.wrb
cmp
stos
subl
gs
lret
pop
sub
mov
pop
(bad)
in
decl
ja
mov
movabs
jne
(bad)
int
or
rex.wb
(bad)
add
jmp
fwait
mov
test
or
xchg
(bad)
xor
or
mov
mov
cmp
(bad)
jge
mov
(bad)
pop
insl
insb
rep
sahf
cld
or
lret
pop
clc
lock
add
ret
mov
adc
loop
adc
add
fmulp
insb
sub
lea
lret
test
xchg
rex.wrx
fs
mov
push
mov
xchg
fcmovne
out
adc
rex.wrb
outsl
jno
fsts
mov
jae
loope
(bad)
addr32
cmp
outsl
and
rex.wrxb
and
fdivrp
int1
in
(bad)
xchg
add
fstpt
(bad)
rex.wrxb
adc
ss
fistpl
std
rex.rb
xor
in
outsb
loope
nop
xor
not
xchg
(bad)
sub
pop
out
xchg
lea
out
or
adc
repnz
xchg
or
xor
xchg
and
mov
or
add
idiv
sbb
(bad)
jo
jl
mov
jmp
movabs
(bad)
pop
popf
cmp
rex.wr
push
fcomps
(bad)
test
cli
mov
hlt
xchg
sub
adc
jno
(bad)
cmp
push
fiadds
or
jae
fnstcw
sub
and
ja
test
rcrb
jae
mov
(bad)
test
xor
fildl
xchg
test
int1
add
sbbl
in
pop
(bad)
rex.rb
xchg
push
fcomip
(bad)
jno
pop
(bad)
je
adc
test
jb
or
fidivrl
rex.wb
data16
or
sar
sub
rex.wr
(bad)
mov
add
mov
adc
jae
test
int
movsb
jrcxz
insl
ret
ror
rex.wx
pop
imul
test
in
push
int
mov
lods
(bad)
xor
jrcxz
lahf
in
sub
jno
mov
jle
je
insb
jrcxz
rex.rxb
fsubp
(bad)
repz
cmp
faddl
(bad)
cmp
sbb
xchg
cltd
jb
jae
in
or
out
movsl
test
add
rex.wx
sti
mov
push
rolb
pop
jno
stos
stc
repnz
jb
rex.wrxb
(bad)
rex.wrx
gs
xchg
pop
pushf
mov
push
ss
ss
jo
mov
sub
sahf
mov
out
in
add
(bad)
ja
test
in
(bad)
in
adc
pop
cmpsb
add
(bad)
es
rex.w
rex.wb
fs
int3
out
rorl
xchg
fildl
jl
es
movabs
(bad)
(bad)
push
xor
pop
repz
push
(bad)
(bad)
push
adc
rcrl
mov
rex.wx
and
roll
xlat
movabs
(bad)
loopne
and
(bad)
mov
or
xlat
(bad)
xor
lret
popf
mov
push
sub
(bad)
jrcxz
rex.rx
rex.wxb
cli
enter
out
rex.xb
mov
sbb
mov
loope
mov
add
and
(bad)
mov
push
jge
push
add
mov
or
(bad)
in
(bad)
and
repnz
inc
movsl
cmp
mov
stos
rex.rxb
jmp
insl
push
rorl
sub
out
subb
shll
xchg
stos
sub
bts
sub
jnp
orl
movl
sti
addb
cmpsb
lret
cmpsl
mov
sahf
lods
nop
mov
xor
push
movabs
pop
iret
fwait
(bad)
or
(bad)
sbb
mov
shl
cli
sbb
adc
out
adc
jb
(bad)
sbb
sub
mov
pushf
push
in
fwait
iret
clc
rclb
xchg
pushf
sbb
and
push
pop
movsxd
xchg
lret
rex.wrxb
adc
clc
cmc
rex.wr
rex.wb
xchg
lods
fidivrl
lods
insb
rex.wrb
repz
insb
fs
loop
sub
fwait
(bad)
xor
jp
sahf
pop
mov
mov
stos
lahf
push
repnz
rex.rb
out
js
scas
(bad)
(bad)
cmp
fmuls
and
mov
xchg
imul
sbb
mov
call
push
and
lahf
mov
cmpsl
test
mov
rex.rxb
fucomip
push
pop
(bad)
stos
cld
cmc
push
movabs
xlat
push
xchg
int
fistl
pop
cmc
sti
rcr
mov
and
insb
mov
add
add
lods
pop
sub
fmuls
pop
and
mov
sbb
jns
(bad)
movsb
repz
fwait
insb
mov
imul
push
(bad)
mov
rcl
or
in
pop
jp
rex.xb
outsl
mov
fld
insl
rex.rxb
cs
and
xor
outsb
sarl
xor
outsb
std
(bad)
(bad)
rex.rx
adc
test
mov
pop
pop
(bad)
(bad)
pop
(bad)
insb
mov
(bad)
jbe
rex.rb
rex.wxb
jle
insb
cmp
movabs
imul
and
cmc
cmp
(bad)
mov
test
loopne
movabs
loopne
imul
enter
