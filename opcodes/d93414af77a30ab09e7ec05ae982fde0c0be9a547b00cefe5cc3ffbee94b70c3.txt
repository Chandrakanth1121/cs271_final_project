and
mov
je
adc
cmc
imul
dec
push
mov
pop
aad
das
push
jbe
sbb
fcmovnbe
jle
or
fs
in
mov
leave
mov
in
lea
ljmp
cmc
imul
dec
push
mov
pop
aad
das
push
and
mov
sbb
loop
mov
push
sub
frstor
sahf
dec
fsubs
and
sarl
sarl
fbstp
lcall
mov
fs
mov
ds
inc
pop
sbb
xor
sbb
(bad)
int3
cmp
and
push
mov
cmpsb
mov
mov
cmc
ljmp
cmc
ljmp
loope
xor
sbb
jp
mov
jecxz
cmp
shr
and
popf
fisttps
aaa
repz
xor
arpl
mov
jae
mov
jae
rcrl
(bad)
leave
mov
pusha
add
cmp
gs
loopne
repz
pop
mov
cmp
xchg
frstor
push
mov
fisttps
aaa
repz
xor
arpl
mov
pop
cmp
in
testb
jp
stos
flds
mov
pusha
add
cmp
gs
loopne
repz
pop
mov
cmp
xchg
xor
push
sbb
fldl
jg
filds
jne
mov
dec
or
mov
pusha
repz
mov
mov
cmp
and
push
sbb
(bad)
lret
cmp
and
push
mov
mov
jmp
jp
movsb
hlt
ljmp
cmc
ljmp
loope
xor
pushf
pop
aad
das
push
inc
and
dec
jmp
and
ja
mov
fldl
jg
filds
mov
inc
mov
in
inc
xor
popf
fs
and
or
xchg
jne
mov
je
sub
push
add
cmp
cs
cmp
mov
cli
mov
xchg
arpl
and
js
xchg
jmp
cli
mov
stos
arpl
and
jbe
xchg
jmp
cmc
xchg
fisubl
gs
jp
push
sub
in
popa
test
cmp
mov
mov
bound
or
mov
je
insl
sahf
fs
and
or
mov
xor
pop
dec
jns
sbb
bound
shl
repz
pop
mov
cmp
movsb
cmp
fistpll
jg
filds
sbb
(bad)
jle
subb
jae
rep
fs
pop
insb
filds
jg
mov
push
adc
ljmp
fstl
cmp
popf
bound
push
cltd
push
lea
ljmp
loope
xor
xchg
pop
aad
das
jne
imul
cmc
ljmp
pusha
jp
ja
and
jo
add
mov
mov
data16
fstp
jae
in
fisttps
xchg
inc
addr16
rcl
jp
popa
fldl
subb
bound
push
mov
ljmp
jecxz
xor
sbb
jns
mov
jecxz
cmp
rcr
lret
dec
mov
(bad)
fnstenv
pusha
mov
(bad)
and
arpl
pop
and
jp
push
test
push
adc
and
push
and
push
test
push
lret
push
js
fs
cmp
adc
ljmp
cmc
fcomip
jle
xchg
push
arpl
pop
and
jp
push
imul
adc
ljmp
pushf
jns
push
push
cmc
cmp
aaa
or
sbb
mov
les
cmp
pushf
jecxz
xor
xchg
pop
aad
das
jne
imul
cmc
ljmp
fstl
gs
and
jp
push
cltd
push
lea
imul
dec
push
mov
pop
aad
das
jne
imul
cmc
ljmp
pusha
jp
data16
and
push
and
mov
fisttpll
xchg
and
movsb
bound
push
jo
sarl
repz
data16
sbbb
and
push
je
daa
fsincos
pop
sbb
push
stc
jbe
ss
push
mov
adc
ljmp
cmc
ljmp
jecxz
xor
sbb
cmp
xchg
jecxz
cmp
fs
sarl
dec
mov
mov
pop
ljmp
xor
jp
push
sub
(bad)
pop
or
inc
scas
mov
sub
jns
pop
mov
dec
mov
and
leave
xor
arpl
lcall
inc
push
lahf
(bad)
rcr
jge
dec
sub
int
frstor
dec
imul
andb
mov
mov
cmp
fwait
movsb
fs
andl
cmpsb
bound
pop
push
mov
cmp
pop
push
cmc
cmp
insb
repz
jae
lods
pushf
mov
lds
push
add
inc
cmp
lcall
cmpl
gs
loopne
or
cs
jg
inc
jle
sbb
adc
mov
sarb
jne
gs
mov
fsubs
sahf
dec
fsubs
adc
adc
and
mov
xchg
cmc
mov
push
rclb
stos
fsts
sub
adc
or
pop
repz
pusha
fnsave
mov
fisttpll
rorl
cmc
imul
imul
sbb
push
and
and
mov
jp
push
sub
(bad)
mov
inc
pop
and
mov
lea
jbe
lods
fidivl
fsubl
sarl
jecxz
dec
and
filds
jle
jge
sbb
jge
je
fildll
push
je
test
inc
lret
leave
cmpsl
fcomip
jle
and
xor
mov
frstor
jo
fldl
jg
fucomip
repnz
jg
lahf
fs
sub
dec
lea
fistpll
sbb
push
or
data16
addb
sbb
fisubrl
mov
pop
movsl
fnsave
xchg
push
xor
sbb
imul
mov
test
dec
mov
or
fs
jle
xchg
gs
and
jp
push
popa
push
mov
fists
jg
les
pusha
cmc
xor
sbb
cmc
mov
sbb
fisttpll
shrl
or
sbb
ljmp
cmc
ljmp
or
mov
data16
jp
push
sub
in
push
inc
fcompp
and
mov
leave
cmp
cmp
adc
fisttpll
loope
inc
sbb
push
or
pop
loop
movsb
jecxz
inc
xor
sbbb
fcmovnbe
mov
push
pop
lds
cmc
xor
fbld
jmp
fs
pusha
mov
mov
cmp
inc
jg
and
popa
push
or
fs
sahf
jecxz
inc
mov
daa
jne
mov
daa
jne
mov
je
add
fnsave
push
jg
stos
cmp
xchg
xor
(bad)
pushf
rcrb
mov
test
dec
fsubl
dec
xor
out
adc
pusha
mov
mov
movsl
js
mov
fnsave
and
rclb
mov
loop
mov
cmp
push
test
adc
pusha
mov
mov
popa
js
mov
fnsave
test
je
mov
pop
stos
cmp
jp
mov
in
adc
pusha
mov
mov
jbe
andb
out
test
inc
cld
arpl
cmp
fs
int1
sahf
jae
(bad)
in
push
and
pusha
mov
frstor
test
je
mov
jbe
mov
(bad)
fldcw
cli
cmp
fs
ljmp
inc
shlb
(bad)
jle
fisttps
jg
filds
popf
gs
or
pushf
pop
mov
inc
shlb
push
xchg
(bad)
and
je
into
jle
imul
lcall
fnsave
sbb
push
cmp
mov
jmp
fildl
lcall
fsts
fildl
fsave
and
popa
mov
jmp
fbld
aaa
fcmovnbe
jle
addb
jp
in
testb
jp
scas
fimull
cmp
mov
fs
ljmp
bound
lahf
ret
lods
mov
pop
repz
movsb
fs
mov
and
mull
push
testl
mov
mov
mov
cmp
mov
frstor
mov
and
sbb
mov
mov
and
cmpsl
fs
lahf
popa
jg
cmpsl
fs
lahf
pop
jg
test
jns
lahf
pop
jg
test
jns
pop
xor
out
call
loop
jmp
jp
mov
push
jns
xchg
pop
mov
cmp
in
je
jecxz
jne
mov
frstor
cmp
les
cmp
cwtl
in
bound
mov
lcall
inc
and
mov
movsb
or
cmp
mov
call
push
dec
mov
ljmp
je
cmc
cmpl
sahf
dec
fsubs
sahf
dec
fsubs
sahf
dec
fsubs
and
(bad)
out
xchg
clc
mov
jo
imul
fldenv
int1
scas
ja
mov
cli
adc
insl
dec
xchg
out
cmp
adc
imul
in
push
and
pusha
mov
in
in
das
subb
(bad)
aam
insl
dec
sub
