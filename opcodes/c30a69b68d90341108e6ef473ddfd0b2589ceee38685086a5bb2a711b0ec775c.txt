xor
push
(bad)
imul
cmp
sbb
imul
mov
push
adc
add
fadds
rex.wb
add
lcall
fildll
ret
nopl
data16
add
sub
mov
xor
enter
movl
sbb
out
or
ja
pop
je
mov
add
mov
test
je
mov
or
(bad)
insb
fstl
or
mov
(bad)
ds
(bad)
jg
cmpl
je
xor
(bad)
(bad)
sub
add
mov
fdivrs
sbb
lret
cmp
add
enter
in
mov
jne,pn
movzwl
loop
or
or
mov
xchg
(bad)
jbe
mov
sbb
outsb
jbe
ret
lea
rex.b
lret
xorl
neg
js
pop
mov
(bad)
(bad)
or
add
outsb
lock
(bad)
scas
or
adc
scas
{rex2
test
loopne
out
cmp
mov
rex.wx
ss
nop
(bad)
cmp
movabs
push
push
push
push
push
sub
or
mov
ror
xlat
rep
js
mov
and
cld
loope
add
gs
xor
sbb
(bad)
(bad)
mov
mov
jmp
cmp
je
add
call
lret
mov
outsl
nop
call
xor
jne
xor
iret
in
sti
mov
cmp
push
and
adc
jmp
rex.rxb
cmp
add
(bad)
sahf
or
pop
mov
movsl
xor
call
mov
jl
jge
call
mov
(bad)
pop
adc
rex.w
sti
cmp
xchg
std
(bad)
incl
mov
rex.x
loopne
(bad)
loope
jmp
add
pushf
nop
mov
sbb
pop
lock
int1
xchg
test
je
and
(bad)
adc
shlb
adc
mov
xor
(bad)
and
test
enter
push
pop
jne
jmp
pop
loope
mov
push
jg
insl
ss
jo
clc
movabs
add
mov
mov
cld
cmp
pop
sbb
clc
decl
in
shl
mov
rex.x
(bad)
test
insb
cmp
loope
(bad)
lea
xor
or
fistl
ds
push
pushf
loopne
add
idivb
int1
insl
mov
rex.r
rcrl
lcall
ffree
or
mov
(bad)
lea
rex.w
jns
sub
jmp
iret
adcl
clc
mov
rex.wr
(bad)
ds
add
jp
imul
cmp
rex.wr
(bad)
cmp
sbb
imul
or
pop
pop
pop
pop
pop
pop
or
add
pop
xchg
add
jg
xor
xchg
add
mov
(bad)
or
popf
or
iret
movsxd
push
movl
jl
cmpsb
out
xchg
jmp
sarl
pop
cmp
out
iret
sub
mov
nop
xchg
loope
rex.xb
in
pop
insl
adc
adc
in
(bad)
movsl
sub
mov
call
imul
jne
sti
ficomps
jne
add
sete
shl
lods
nop
add
out
sub
or
(bad)
(bad)
rex.xb
add
lahf
cmp
jbe
in
(bad)
cmpl
sbb
insb
and
jl
add
sbb
sub
jb
sbb
mov
mov
ret
rex.wx
jmp
add
jnp
notb
jmp
int3
add
fs
rex.wrb
insl
orl
mov
jge
mov
lock
scas
pop
rcrl
and
jmp
jne
cld
sar
lods
leave
jge
xor
rex.wr
out
sbb
fistpll
(bad)
xchg
rex.w
mov
loope
sub
(bad)
jnp
scas
pop
add
fisttps
(bad)
and
add
data16
test
cmpl
jne
xor
jle
or
int
(bad)
sub
je
js
ss
(bad)
movsbl
(bad)
jbe
add
shll
fnstenv
out
and
call
push
add
rex.xb
sub
sub
shll
pop
mov
and
fmull
fistpl
scas
std
sti
(bad)
and
rex.wrx
data16
pop
es
rex.rx
mov
pop
(bad)
adc
cmp
jne
and
jge
lret
jne
sub
outsl
data16
sbb
outsl
mov
rex.wrb
mov
(bad)
jne
mov
adc
insb
jne
rex.wx
add
jle
call
(bad)
sub
imul
decl
outsl
mov
push
adc
(bad)
jg
(bad)
loope
in
add
add
mov
pop
add
adc
add
(bad)
and
sub
(bad)
(bad)
rex.w
xlat
test
cmp
jo
mov
ret
xor
cmp
enter
sub
in
xor
and
out
pop
sahf
jnp
sub
or
add
enter
jp
ret
not
xchg
lea
mov
sbb
sbb
ljmp
insb
mov
cmpb
je
test
je
cmpb
fadd
ret
shll
cmp
sbb
movsb
jo
(bad)
out
sbb
repnz
enter
ds
ss
js
cmc
test
sbb
jnp
outsl
je
movsl
rex
mov
jg
sub
push
es
add
stos
rorl
shl
rex
(bad)
sub
loop
(bad)
or
(bad)
ds
adc
rex.wr
jns
cmp
lea
(bad)
sarb
or
fsubp
xchg
cmp
mov
{rex2
cmpl
rex.wb
shl
test
push
sarl
cwtl
leave
jne
idivl
rex.wrb
(bad)
ljmp
jl
shlb
in
cmp
mov
or
(bad)
mov
jp
cmp
xor
xor
in
(bad)
mov
rex.r
es
(bad)
fcmovne
xchg
testl
mov
jae
nop
pop
sbb
mov
mov
insl
push
enter
and
add
sub
add
nop
or
sbb
jge
sub
sbb
clc
mov
add
jne
or
pop
xor
rex.wxb
rex.b
push
imul
mov
bsf
sarb
mov
rex
ret
enter
push
cld
add
(bad)
and
xchg
or
{rex2
mov
rolb
pop
lea
add
(bad)
(bad)
mov
adc
(bad)
(bad)
jrcxz
ds
ja
or
ret
testb
sub
in
repnz
rex.w
movsb
xor
lahf
xchg
out
xchg
{rex2
or
(bad)
jno
push
cmp
sbbb
fiadds
xchg
jbe
rex.rx
rex.wrxb
rex.wr
mov
(bad)
movabs
rex.rxb
fwait
adc
lea
jns
rex.r
jo
test
mov
es
push
mov
push
sbb
jbe
outsl
jg
sbb
xorps
rex.wx
mov
add
mov
loopne
add
mov
(bad)
jrcxz
sub
adc
add
sahf
jmp
pop
jle
add
sbb
mov
cvtps2pi
add
or
and
or
out
cmp
js
or
and
mov
rex.wb
add
xchg
cmpsl
stc
jg
adc
(bad)
lea
lea
lea
adc
imul
pop
xor
(bad)
cmpsl
jge
out
adc
(bad)
enter
pop
stc
adc
lret
shll
dec
rex.x
repz
mov
cli
or
mov
adc
hlt
rex.wr
add
rex.wr
jmp
fsts
xchg
cmp
fiaddl
iret
sbb
rex.x
jmp
sub
scas
stc
in
jle
out
sbb
mov
cmp
jmp
mov
and
jbe
add
ds
(bad)
and
and
(bad)
lahf
out
addr32
jb
fs
and
std
repz
(bad)
pop
sbbl
int3
repz
iret
movabs
movabs
sbb
mov
out
mov
sti
movabs
imul
negb
mov
mov
movsl
or
adc
mov
out
mov
jo
mov
cmpsb
cmp
mov
in
mov
leave
mov
sbb
sti
jp
(bad)
{rex2
or
data16
movabs
push
adc
sbb
and
cmp
jl
xor
rex
or
(bad)
rex.wrxb
repz
adc
(bad)
sbb
jo
xor
shll
jge
sub
cmp
fucom
in
(bad)
loopne
(bad)
push
cmpsb
adc
rex.wrx
repnz
rex.wrb
xlat
xchg
jl
cs
rex.wrxb
xchg
(bad)
cs
lea
in
movsb
int
sbb
fimull
xor
fbstp
cmpsl
cmp
fcomi
cmpsl
movabs
mov
pushf
cmp
rex
push
jle
and
lahf
sub
sub
mov
(bad)
movsxd
scas
push
(bad)
pop
in
xor
(bad)
push
es
movsxd
stos
xlat
(bad)
fists
rex.rx
push
fmuls
out
mov
lods
and
jle
lret
xchg
or
popf
jle
sbb
add
mov
(bad)
out
fadds
add
cmpb
cmp
(bad)
fiaddl
out
rex.b
mov
