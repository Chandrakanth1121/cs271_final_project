ljmp
js
int1
jmp
push
push
loopne
cmpsl
lds
cli
mov
inc
(bad)
mov
das
lea
inc
add
xchg
movsl
and
jno
push
(bad)
incb
adc
jb
jbe
fnstcw
jmp
pop
shrl
data16
jl
sub
jmp
mov
push
jae
pop
push
loop
cmc
lods
inc
sbb
cwtl
jns
sub
sahf
(bad)
iret
ljmp
mov
mov
aas
(bad)
jae
sub
sbb
jno
xchg
fstpt
(bad)
push
xchg
and
jbe
clc
pop
push
jp
pop
fmull
pop
mov
test
inc
pop
out
negb
jmp
or
and
int1
pop
mov
ja
dec
inc
fs
mov
inc
shll
cmp
mov
out
jnp
ja
shlb
cmpsl
jmp
es
aas
dec
repnz
mov
fdivrs
mov
inc
(bad)
(bad)
out
loope
cmp
xchg
repnz
or
mov
or
movsl
jb
adc
mov
notl
jp
xchg
ret
popf
mov
mov
mov
iret
pop
mov
call
dec
cs
add
cmc
mov
es
mov
(bad)
mov
push
movsb
into
xchg
loope
pop
push
sub
inc
pop
out
push
mov
lods
call
ficoms
pop
inc
push
cwtl
leave
mov
pop
ja
data16
in
mov
mov
sub
dec
cmp
scas
mov
lds
cmp
imul
mov
(bad)
mov
dec
lret
xor
pop
add
xchg
cld
xchg
jo
loope
dec
in
push
les
das
pop
sbb
sub
in
dec
loope
mov
mov
or
xchg
aas
add
xor
popa
dec
imul
outsl
inc
aas
jle
mov
dec
dec
insb
mov
sbb
mov
les
xchg
xchg
imul
xor
jle
mov
stos
jae
loop
cmp
enter
push
xchg
xchg
mov
es
mov
mov
lret
push
adc
push
add
or
(bad)
mov
mov
dec
je
dec
dec
popf
test
mov
mov
jnp
je
into
or
xor
bnd
ljmp
inc
push
dec
dec
arpl
and
lea
pushf
repz
(bad)
pop
mov
addb
gs
std
mov
sub
push
mov
pop
pop
add
jns
xchg
pop
jnp
insb
mov
(bad)
cmpsl
ret
sarl
jge
xor
cmp
add
dec
je
cmc
xor
fs
bound
mov
int3
aam
pushf
cli
mov
(bad)
das
jecxz
out
xor
test
int
dec
mov
add
inc
cmp
in
cwtl
leave
sbb
inc
insl
das
hlt
stos
ja
shrl
mov
jnp,pt
fmuls
adc
pop
jbe
push
mov
jge
adc
aas
mov
push
insb
jae
fldlg2
fimuls
inc
jo
jns
ss
(bad)
xchg
fbstp
xor
ljmp
pop
mov
cmp
stos
pop
fcoml
in
adc
flds
call
inc
loopne
mov
scas
repz
sbb
aam
out
adc
and
dec
sbb
stos
sub
cmc
cmp
push
out
pop
jnp
faddl
into
adc
out
das
cmp
jge
movsl
test
shl
adc
js
jl
ljmp
jnp
xchg
jecxz
ss
and
lret
and
or
scas
in
mov
nop
mov
jb
dec
cli
pop
lock
pop
sbb
ret
enter
inc
sbb
test
inc
adc
mov
loope
pop
cwtl
mov
lcall
fldcw
insb
mov
jmp
mov
jp
addr16
cmp
or
mov
jecxz
dec
adc
xchg
pushf
das
add
jnp
inc
int
movsl
imul
cmp
xchg
js
ja
xchg
jecxz
add
push
cmp
or
(bad)
push
int3
mov
repz
pop
push
loope
mov
pop
mov
xchg
in
shrl
xor
jge
jne
int1
pop
ss
sub
mov
inc
push
cli
mov
mov
dec
lea
cmp
cmp
cmp
push
int1
xor
lods
push
xor
dec
and
scas
pop
loope
ja
sub
sub
mov
std
mov
gs
xchg
stc
mov
push
out
idivb
inc
mov
pop
loop
jbe
xchg
cltd
pushf
mov
fisttpll
lods
push
and
fnsave
push
push
jne
push
stos
in
sti
sti
xchg
xchg
int1
int
cwtl
stos
scas
xorb
stos
loop
jg
jae
fstps
fbstp
daa
cmp
insl
loop
andl
popf
pop
outsb
xchg
in
xchg
lret
jp
pop
repz
jb
filds
dec
into
push
repnz
mov
lock
sbb
rorl
int
xchg
adc
fs
out
or
hlt
pop
orb
loope
loop
mov
mov
xchg
mov
out
mov
dec
adc
jp
jmp
cmp
lea
add
adc
mov
clc
fcom
mov
and
mov
popf
add
lahf
aaa
sbb
outsl
or
arpl
sub
fisttpll
int3
mov
in
xor
divl
stos
ljmp
int
sti
mov
mov
insb
jb
mov
les
shlb
push
int1
mov
ja
jmp
and
pop
movsb
nop
ss
mov
call
sub
dec
lret
mov
lcall
push
daa
and
lret
popf
mov
scas
xorb
dec
pop
xchg
mov
fnstenv
ficomps
add
cld
jmp
test
mull
add
int3
dec
or
aad
popa
js
aad
add
push
xchg
lret
rclw
xor
shll
repz
out
cmp
push
adc
sahf
ror
call
xor
jmp
and
adcb
and
enter
xor
iret
and
sbb
daa
clc
mov
cltd
inc
mov
inc
push
mov
sub
adc
jns
call
jbe
in
outsb
sub
fcmovbe
mov
jb
loop
das
out
and
sti
dec
in
mov
sub
mov
cmc
inc
jecxz
lret
mov
outsb
aad
das
sbb
sbbb
lods
mov
lods
dec
lods
arpl
aam
(bad)
xchg
jb
bound
jno
shlb
sub
lock
stos
in
jp
push
dec
push
je
jae
(bad)
ss
repz
ljmp
dec
jb
ss
insl
ss
fimull
lds
repz
cmp
pop
push
shlb
jl
inc
jne
je
aam
sub
mov
jo
mov
cmp
dec
es
or
push
jg
cs
inc
cmp
ret
xor
cmp
dec
mov
out
lret
mov
inc
or
mulb
lock
pop
pop
fsub
gs
sub
jno
out
pushf
xor
inc
call
cmpsb
jb
in
stos
ret
push
clc
mov
in
jb
push
pop
test
or
xor
(bad)
in
(bad)
in
pop
and
mov
in
enter
add
xchg
xor
int3
adc
xor
aaa
sbb
dec
fwait
scas
hlt
jno
fimuls
arpl
push
cmpsl
sbb
loope
js
jb
gs
stc
cmp
and
ds
mov
pop
push
fmul
std
jmp
dec
sbb
mov
test
push
jmp
out
xchg
inc
sub
mov
fwait
sub
rep
je
mov
aaa
push
cmc
cmp
insb
in
je
enter
leave
mov
cmp
or
lret
and
mov
and
cmp
pop
xchg
or
jle
ja
mov
clc
and
xchg
int3
ljmp
fsub
jle
mov
lods
lock
test
dec
in
sub
rcl
lods
pop
jno
push
es
adcl
adc
or
cmp
pop
inc
jo
dec
push
out
ficoml
adc
inc
xchg
or
cmp
loope
dec
(bad)
clc
mov
imul
test
fwait
or
and
stos
lret
data16
push
repnz
jl
inc
adc
sti
jle
mov
ss
inc
and
jbe
fidivrs
jne
sahf
xchg
mov
cmc
