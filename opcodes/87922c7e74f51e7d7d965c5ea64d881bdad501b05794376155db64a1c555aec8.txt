test
aam
lret
mov
bound
add
fcoms
xrelease
pop
jle
mov
mov
xchg
orl
cmp
mov
in
lods
cltd
pop
fistps
cmp
or
roll
mov
mov
adc
(bad)
(bad)
fadds
pop
sarb
mov
test
mov
adcb
inc
repnz
(bad)
aas
adc
mov
imull
pop
push
xchg
mov
push
adc
mov
sbb
or
push
cmovle
inc
js
subl
inc
push
cmpsl
repz
arpl
out
xchg
jno
cmp
and
inc
mov
test
pop
or
pop
push
enter
pop
cld
pop
in
cmp
jle
cwtl
into
push
bound
sbb
fcmovbe
jg
pop
push
mov
popa
fiadds
rcrl
dec
iret
std
test
pusha
aam
jns
into
or
dec
lods
rorl
sbb
test
test
cmp
lcall
jl
mov
jbe
cmp
pop
and
push
jae
sbb
bextr
push
movsl
cmp
inc
pop
pusha
iret
sarb
pop
mov
repz
add
sar
imul
rcll
or
pop
xor
out
ljmp
clc
push
add
dec
inc
push
inc
pop
fnsave
mov
inc
xor
nop
dec
lods
jp
mov
mov
sub
pusha
or
fsubs
(bad)
push
bound
bound
and
push
into
inc
mov
cmp
ljmp
push
lret
(bad)
shlb
repnz
push
loope
mov
add
mov
ljmp
lods
push
mov
loopne
(bad)
es
lret
leave
daa
mov
push
fidivl
pop
stos
data16
jg
adc
pop
cmp
cmp
or
ror
push
enter
inc
xchg
pop
cltd
ret
mov
push
xchg
mov
pop
pop
sbb
mov
push
jmp
xor
jg
inc
jmp
imul
movsl
(bad)
xchg
test
xchg
test
test
ja
fistps
fdiv
mov
push
mov
pop
pop
loope
inc
jg
imul
cmp
push
cld
mov
xchg
adc
fstpl
inc
loopne
inc
jo
push
fdivrp
cmp
scas
enter
and
or
xchg
call
mov
xor
pusha
gs
sub
mov
push
and
pop
sbb
addr16
fwait
mov
jmp
cmp
xchg
loope
sub
xor
(bad)
ljmp
repz
sbb
adcl
dec
jno
test
pushf
cli
xorb
out
sub
jge
fldt
fidivrs
out
ret
rol
pusha
sbb
test
inc
inc
(bad)
or
stos
sbb
mov
push
fimull
(bad)
or
push
xchg
mov
enter
rcll
leave
fisttps
mov
push
leave
fstpt
inc
lcall
pop
popa
(bad)
sub
(bad)
push
pushf
mov
xlat
pop
adc
fs
bound
fs
mov
test
jg
cltd
loopne
mov
dec
inc
jle
cld
in
ss
out
and
dec
mov
xor
lcall
addr16
mov
enter
inc
(bad)
or
sbb
push
or
shl
dec
sbb
out
outsl
pop
add
(bad)
xor
add
push
inc
inc
pop
sub
mov
xchg
test
fcmovnb
push
xor
fmull
hlt
or
or
jge
cmp
nop
jne
sbb
fsts
jmp
ret
pop
insl
lahf
sub
or
fnsave
rcl
test
xchg
(bad)
adc
fsubrl
sub
or
shrl
mov
cmp
sbb
xchg
(bad)
pushf
mov
push
lds
lea
sub
mov
mov
dec
pop
push
adc
jp
adc
mov
sub
mov
add
adc
sbb
xchg
mov
mov
mov
cli
adc
(bad)
xchg
lahf
pop
rcll
sbb
mov
pop
push
es
bound
rolb
popf
mov
mov
ljmp
repnz
lret
decb
sahf
(bad)
mov
ret
pop
mov
xchg
jmp
mov
imul
mov
into
push
loope
lcall
les
or
xlat
fs
adc
mov
pop
roll
push
int1
cmp
mov
lret
pusha
sbb
into
pop
fstp
dec
mov
fstl
sbb
pusha
movsb
aas
jge
pop
outsb
mov
repz
(bad)
xchg
adc
(bad)
pushf
data16
xchg
loope
add
leave
idiv
mov
dec
dec
pop
mov
repz
pop
fcoml
scas
lds
fildl
add
xchg
pop
inc
inc
out
or
jge
rcrb
and
sbb
sbb
push
call
xchg
jecxz
(bad)
mov
cmp
or
mov
add
cli
mov
mov
mov
and
js
mov
arpl
scas
pop
mov
pop
lods
roll
xlat
jns
data16
or
dec
or
leave
mov
xor
lea
hlt
sahf
repz
incb
aaa
aad
xchg
sub
or
out
mov
cwtl
stc
add
add
mov
inc
or
mov
popa
les
in
fcom
pop
dec
leave
mov
out
shll
push
fninit
in
sahf
fwait
(bad)
and
pop
mov
jle
sahf
or
loopne
andb
shll
ja
mov
push
or
popf
xchg
push
and
add
scas
into
call
cmpsl
lds
call
fnstsw
mov
jecxz
inc
cmp
mov
xor
loopne
xchg
loopne
mov
bnd
addr16
mov
cmpsb
lods
loop
xchg
in
xor
ficoms
xchg
into
pushf
cltd
stos
jbe,pt
fadds
jbe
mov
das
inc
inc
mov
mov
mov
scas
mov
pop
dec
mov
and
mov
xchg
(bad)
sbb
xchg
test
cmp
mov
sub
xchg
leave
xlat
cwtl
cmp
out
nop
sub
out
and
dec
push
scas
or
shlb
or
mov
mov
int
or
rcl
daa
inc
dec
arpl
inc
sbb
ss
mov
pop
sarl
mov
adc
inc
in
mov
lcall
push
mov
cmp
pusha
(bad)
mov
fwait
mov
lret
mov
mov
fistps
test
test
arpl
movsb
shl
lret
rclb
jns
adc
xlat
loop
iret
mov
mov
push
push
mov
gs
xlat
mov
jg
mov
(bad)
adc
sbb
or
pop
adc
pop
sbb
loopne
sbb
dec
or
in
orl
push
jmp
mov
add
adcb
repnz
inc
clc
inc
(bad)
sbb
pop
ja
fistl
cmp
outsb
add
mov
xchg
push
int
jb
iret
(bad)
out
mov
arpl
adc
insb
mov
or
out
jne
test
mov
mov
jb
shlb
bswap
inc
xchg
fs
fbstp
(bad)
bound
popa
or
(bad)
pop
popa
cli
adcb
mov
xchg
shll
sbb
and
fisubs
iret
sahf
mov
sbb
fdivrl
push
jae
(bad)
int3
xchg
aam
sbb
inc
add
frstor
in
add
test
stos
rol
out
mov
mov
and
mov
data16
jmp
sbb
add
xchg
pop
(bad)
sub
fistl
rol
stc
arpl
aam
push
mov
jbe
sti
lods
pop
fwait
push
add
xchg
dec
xor
lret
mov
in
mov
dec
mov
mov
test
or
push
cwtl
shrb
and
mov
inc
and
jbe
test
pop
lret
rol
cld
jecxz
dec
mov
jle
mov
ja
fadd
js
ret
in
outsl
testl
mov
ds
and
clc
das
jle
inc
xchg
int3
loope
mov
fists
lret
sbb
jmp
rolb
push
dec
nop
sar
inc
inc
push
loopne
adc
cwtl
xlat
in
test
sahf
xor
or
clc
test
mov
scas
repz
pusha
add
add
ja
pop
or
enter
aaa
mov
pop
push
push
test
push
add
in
pop
(bad)
rorl
aam
lahf
add
push
out
adc
in
lods
push
xchg
std
adc
jne
fstpl
loop
(bad)
mov
mov
mov
jmp
(bad)
popf
