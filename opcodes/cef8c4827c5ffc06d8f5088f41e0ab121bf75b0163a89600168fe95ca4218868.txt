add
dec
xchg
and
(bad)
jmp
inc
add
arpl
nop
and
and
fistps
stos
ljmp
test
clc
push
or
pop
out
jns
loopne
sbb
xlat
sbb
addr16
sbb
cmp
cwtl
jo
cmc
out
cmp
nop
leave
sbb
aas
loope
std
test
arpl
movsb
nop
gs
xchg
fistpl
inc
adc
add
push
mov
jmp
xchg
bound
aam
sti
pusha
test
add
jno
and
call
or
rcrl
outsl
(bad)
jp
sbb
cmc
(bad)
sti
mov
and
fisttps
clc
and
jnp
cwtl
loop
inc
xchg
pextrw
jne
arpl
xor
aam
xchg
arpl
jae
pop
jmp
jg
sbb
gs
and
sti
push
push
shrl
cs
test
das
jno
sbb
xor
fs
xor
stc
call
mov
test
mov
movsl
gs
lea
sti
filds
arpl
scas
mov
xchg
jae
dec
or
add
in
gs
in
bound
push
sub
ret
and
jbe
pop
and
lock
mov
test
gs
(bad)
fstpt
mov
test
bound
mov
ljmp
cltd
nop
mov
sti
xor
jo
js
or
jne
(bad)
sub
cwtl
fdivr
dec
xchg
arpl
xor
or
(bad)
cli
jae
pop
adc
pop
fdivrl
mov
call
out
sub
mov
or
into
xlat
or
pop
stc
mov
inc
test
out
xchg
jno
imul
scas
sti
mov
lock
fcomip
repz
add
stc
sub
dec
bnd
pop
loope
and
arpl
xor
xchg
pop
(bad)
out
xchg
bound
aam
push
popf
call
(bad)
mov
and
xchg
jns
pop
pop
shlb
shlb
jns
mov
sbb
jo
inc
cs
ret
leave
mov
fcompl
pusha
movsb
jno
push
test
mov
add
pop
or
add
jne
mov
sbb
dec
call
cltd
adc
(bad)
bound
jl
addr16
xchg
mov
fldenv
cwtl
stos
adc
or
mov
xchg
cmp
aad
jnp
imul
fcompl
pusha
movsb
jno
inc
inc
stc
out
xor
andb
or
lods
push
dec
pop
(bad)
arpl
xchg
ret
call
fmul
add
int1
mov
gs
add
xchg
js
mov
out
cmp
cmc
js
loope
in
fwait
stc
xor
sub
(bad)
stc
fdivl
test
nop
stos
sti
mov
lock
in
outsb
(bad)
insb
and
pop
push
shrb
in
sub
mov
xchg
fistpll
xor
in
clc
push
out
gs
mov
jns
daa
pop
mov
fisubl
xor
in
(bad)
fcomi
mov
cmc
lahf
test
add
jo
lods
jmp
shll
fdivl
and
aam
push
rcl
or
andb
shll
mov
cmp
(bad)
arpl
jno
gs
sbb
in
lcall
stos
jne
xlat
dec
jnp
pop
sbb
stc
in
daa
and
adc
bound
fs
arpl
push
add
clc
aad
gs
cwtl
nop
mov
sti
xor
mov
dec
dec
jnp
cwtl
movsl
mov
in
jnp
mov
mov
ficomps
mov
jns
std
add
jno
xchg
stos
pop
in
sbb
mov
and
arpl
test
inc
fcomps
jnp
cwtl
cmp
push
mov
adc
lds
and
sub
sbb
inc
mov
cmc
mov
add
fistpll
add
adc
fstpt
cltd
call
mov
dec
fmull
ret
call
std
popa
pop
inc
lock
dec
ficoms
mov
add
add
clc
mov
fcomi
lods
mov
ftst
sub
add
fnstsw
cli
out
fildll
mov
incl
arpl
(bad)
leave
jb
xchg
jmp
pand
push
fimuls
pop
jno
and
in
add
pop
stc
add
sti
inc
js
loop
imul
pusha
mov
mov
sub
shlb
add
clc
mov
and
jge
mov
add
mov
push
jp
call
les
stc
xlat
cmc
add
xor
jo
mov
arpl
lea
or
out
mov
stc
das
stc
mov
push
out
cmp
push
xchg
ret
stc
xchg
mov
and
ficompl
int1
cli
xor
lods
and
adc
add
pop
pop
add
xchg
pusha
jge
mov
das
faddl
rorb
mov
and
fwait
jo
jns
in
pop
fistps
add
add
or
dec
fmuls
lret
lods
(bad)
fistl
ret
jmp
loopne
cli
push
fmull
fistpl
jae
in
sub
out
jnp
and
ficoml
leave
or
dec
cmp
int1
jecxz
lahf
movsl
add
cmp
pop
mov
pushf
in
(bad)
fcompl
mov
test
das
jmp
cltd
mov
mov
sbb
jne
in
push
mov
mov
out
add
adc
in
or
cmp
cwtl
dec
gs
loop
xchg
call
fsubrl
jnp
sbb
jnp
lods
cmp
call
syscall
fcmovnbe
flds
mov
xorb
mov
push
xlat
inc
loope
daa
sti
xchg
subb
out
cld
xchg
arpl
mov
mov
mov
push
cli
sti
sbb
(bad)
xchg
fildl
lock
jecxz
lds
shrb
movsb
and
mov
jns
scas
cmp
clc
jp
out
mov
sbb
xlat
pop
jge
movsb
js
out
out
jnp
lcall
adc
jb
test
mov
pop
jns
popa
push
(bad)
mov
fldl
push
cli
jo
mov
ficoms
lea
fsubr
lods
add
pop
scas
jecxz
dec
(bad)
sub
and
pop
es
ss
xchg
movsl
shll
gs
fs
adc
cmc
(bad)
pop
sub
fmuls
push
sbb
lret
push
jno
jle
int1
dec
push
jge
arpl
add
adc
test
leave
dec
out
pop
mov
push
mov
push
les
nop
outsl
in
xchg
xchg
fwait
cwtl
push
cwtl
pop
outsl
imul
ja
sub
(bad)
int3
cmp
pop
pop
in
dec
sahf
imul
sti
outsb
cmp
fwait
lods
fidivl
fadd
(bad)
mov
insl
ret
out
js
cwtl
dec
ljmp
repz
sub
xor
pusha
mov
sbb
sahf
aaa
pop
aas
fwait
sbb
jne
sub
in
in
cmp
add
sub
jne
cmp
jns
imul
xor
sub
mov
sahf
popf
adc
xor
out
cmp
leave
bound
ret
pop
adc
jne
xchg
(bad)
insb
adc
mov
imul
stos
push
pop
subl
or
mov
jmp
jp
lods
imul
adc
pop
jb
push
xlat
ret
sub
cmp
xor
add
lret
ds
mov
sti
int
in
xor
push
mov
sti
int1
imul
imul
jns
push
pop
bound
hlt
in
popa
push
sub
xchg
in
pop
dec
dec
dec
aam
mov
faddl
mov
inc
mov
push
lret
(bad)
mov
mov
jecxz
inc
pop
aad
andb
cmp
inc
stc
loope,pt
jno
jmp
out
adc
int3
jg
jno
int1
lods
jae
pop
mov
clc
cwtl
jecxz
mov
jmp
gs
xor
pop
(bad)
lret
loope
pushf
mov
pop
fwait
aad
andl
rorl
lds
repz
xor
leave
lcall
loope
inc
int1
test
daa
push
xor
movsb
pop
es
lcall
fstps
(bad)
pop
mov
dec
adc
test
cmpsb
(bad)
lods
das
cmp
dec
cld
and
xchg
mov
push
clc
clc
push
aad
sbbb
cmp
mov
and
push
pop
ljmp
orl
negl
stos
out
mov
fnstsw
dec
cli
mov
scas
enter
lret
decl
jne
jecxz
push
inc
pop
addr16
pop
