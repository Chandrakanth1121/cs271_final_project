jne
adc
aas
data16
mov
(bad)
sbb
sbb
mulb
jge
adc
push
sub
fdiv
out
jnp
add
jl
mov
in
test
jno
push
ds
jg
cs
sub
insl
or
loopne
mov
xchg
lahf
call
mov
xchg
jg
push
add
adc
mov
inc
aaa
mov
popa
mov
push
add
lods
cmp
dec
pop
pop
push
or
out
clc
or
test
mov
xchg
or
mov
aam
aas
cmp
cmp
cltd
in
jb
aad
scas
mov
jns
cmpsl
add
js
stos
pop
fcomi
out
sub
orl
stos
jge
outsb
(bad)
iret
enter
or
pop
mov
and
lahf
pop
jle
or
sub
sub
addr16
imul
inc
outsb
inc
out
pushf
xor
sub
(bad)
sub
movsl
call
and
adc
adc
mov
mov
outsb
pusha
jne
inc
andb
or
ss
je
aaa
xor
dec
add
iret
push
test
xor
fs
pushf
cmpsl
cmp
fwait
mov
xor
jmp
in
xor
shlb
outsb
jmp
lcall
gs
in
roll
adc
sub
cmc
dec
repnz
scas
xor
jbe
ljmp
dec
lods
cmp
ror
stos
aam
int
inc
pop
imul
push
aaa
pop
mov
outsl
scas
(bad)
(bad)
aaa
nop
sarl
push
adc
aad
fwait
mov
sbb
dec
stc
insl
jno
jbe
gs
inc
mov
imul
imul
mov
call
xor
enter
cmc
cmpsb
inc
jne
(bad)
popa
push
jbe
frstor
push
cmpl
cmc
inc
cmp
or
jno
imul
fisubs
fistpl
mov
stos
fs
xchg
loope
push
adc
push
ret
cs
dec
push
orl
inc
test
outsl
jns
adc
cld
push
aad
jno
mov
pop
pop
scas
popa
adc
pop
push
lea
sbb
lret
xor
popa
jno
sbb
ss
imul
push
(bad)
adc
in
cld
das
lret
aaa
movsl
imul
movsb
mov
cmp
mov
bswap
int1
inc
fbld
and
call
mov
stos
or
and
(bad)
jg
int3
(bad)
mov
enter
test
sahf
outsl
push
sbb
mov
int3
fiadds
lock
mov
outsb
lods
jb
fwait
shlb
stos
dec
scas
insl
xor
lods
andb
mov
xchg
jns
pop
repnz
stos
jne
sbb
shrb
add
pusha
divl
js
inc
js
in
push
mov
fwait
sub
push
aas
hlt
addr16
(bad)
pop
xor
aam
int3
pop
xchg
sub
inc
out
pop
xchg
loop
insl
fs
shr
jg
cmp
adc
imul
inc
mov
dec
filds
jecxz
mov
xchg
subl
xchg
lods
push
sub
arpl
js
push
sub
out
cwtl
in
sub
stos
(bad)
sahf
inc
push
or
sbb
inc
inc
iret
adc
(bad)
push
aam
out
and
or
test
xor
mov
fs
dec
cli
test
push
sahf
add
lea
les
fs
sub
cld
sub
mov
xchg
sub
lock
or
xchg
jle
mov
(bad)
cmpsb
mov
push
push
cmp
imul
or
mov
je
inc
aas
insl
xchg
mov
stos
push
dec
push
and
lods
(bad)
pop
lret
cmp
jno
(bad)
pop
xchg
cmp
subl
and
or
push
loop
out
fnstsw
add
jae
and
daa
mov
nop
sbb
jmp
mov
repnz
fisubrl
cmp
cs
dec
call
mov
push
mov
aas
jmp
scas
stos
leave
jl
out
mov
pusha
lret
add
ja
stos
inc
ja
sahf
in
imul
nop
xchg
mov
pop
jecxz
cmp
aam
(bad)
cmpsl
xor
mov
adc
into
test
inc
cmp
adc
mov
or
addr16
out
shl
push
or
gs
std
das
cs
stos
push
push
xchg
push
push
out
mov
cld
enter
or
adc
sahf
jb
popf
mov
or
cmpsl
xlat
mov
xor
test
and
pop
test
mov
dec
(bad)
fs
outsb
insb
mov
pop
andb
jecxz
and
push
shr
(bad)
enter
sbb
jmp
incb
dec
fs
jg
mov
int1
push
iret
cltd
outsl
xor
xchg
sbb
or
test
dec
xor
mulb
decb
cmp
cmpsl
imul
add
adc
and
jbe
scas
sub
mov
cmp
pop
subb
std
fwait
bound
int3
jmp
sub
insb
dec
add
shll
sbb
adc
test
lea
mull
push
bound
or
lock
inc
xor
fistl
jp
mov
adc
mov
push
divl
pop
lea
shr
mov
loop
aas
fstpt
inc
mov
enter
and
lcall
cmp
push
push
pop
inc
mov
mov
pop
ss
inc
jle
push
shrl
mov
xchg
repz
xor
lcall
sub
loope
dec
mov
jno
inc
cmp
add
push
and
or
dec
sbb
(bad)
nop
(bad)
gs
add
and
or
push
aad
mov
out
repnz
daa
mov
nop
sub
dec
xlat
mov
out
es
mov
and
test
imul
and
hlt
(bad)
test
pop
cmc
mov
pusha
add
inc
jmp
bound
jle
fstp
pop
insl
daa
pop
inc
lahf
push
and
mov
push
out
adc
cmp
inc
in
cmc
es
daa
jmp
outsb
mov
dec
mov
jne
ljmp
dec
outsb
mov
mov
pop
insl
mov
mov
pop
call
rcrl
lds
xor
adc
jle
aaa
add
adc
jae
or
xlat
outsl
leave
adc
filds
cwtl
in
test
ja
adc
fwait
dec
inc
mov
incl
stos
pop
sub
and
xchg
sub
xor
or
in
ret
xchg
sub
pop
xchg
xchg
push
mov
fdivs
mov
sbb
cmp
insb
push
in
aaa
pop
clc
loopne
jg
sub
add
aas
mov
sbb
push
int3
mov
pop
dec
jne
sub
pop
test
pushf
fmuls
xor
mov
out
push
push
mov
pusha
fs
bnd
dec
es
xchg
mov
loope
sbb
sbb
mov
cmp
daa
mov
push
das
pop
jmp
add
cmpsb
aas
cmp
outsl
stc
push
mov
push
inc
inc
pushf
pusha
xor
js
movsb
mov
loope
repnz
cmp
pop
cmp
fimull
hlt
inc
lock
ds
push
std
xchg
loop
add
pop
xor
out
sub
dec
add
aas
mov
inc
inc
notl
imul
dec
fwait
gs
ja
adc
popa
shrl
lea
call
xor
cmc
fbstp
sub
xchg
lahf
adc
and
(bad)
out
outsl
jnp
cmp
aad
pop
out
sbb
aad
xor
mov
cs
(bad)
lods
mov
test
sub
inc
inc
roll
popa
sbb
or
adc
sub
(bad)
push
cs
ss
lcall
jg
push
cmp
push
test
addb
xor
cmp
nop
and
insl
stc
jbe
xor
mov
jecxz
sub
les
rcrl
or
cld
pop
xchg
mov
roll
adc
or
push
loop
pop
call
mov
inc
orl
cli
cltd
in
cmp
or
push
dec
call
int
lret
sub
inc
leave
sub
sub
scas
hlt
cmc
push
ret
jecxz
jl
push
cmp
mov
pop
repnz
imul
push
mov
dec
xchg
dec
mov
sub
push
lcall
mov
mov
mov
jle
pop
cmpsb
movsw
adc
