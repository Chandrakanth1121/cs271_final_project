xor
add
dec
add
add
add
add
fldl
add
add
add
add
push
xor
add
mov
add
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
incl
add
add
add
add
add
add
add
add
add
add
(bad)
(bad)
incl
add
add
add
add
(bad)
(bad)
incl
add
add
add
add
(bad)
(bad)
incl
add
add
add
add
add
add
add
add
add
add
(bad)
(bad)
incl
add
add
add
add
add
add
xor
pop
pop
aad
jge
xchg
push
lods
movb
aas
cmpsb
insb
sti
lds
in
push
int1
pushf
add
mov
scas
outsb
int3
lods
das
in
xor
xchg
in
push
cmpsb
mov
xor
je
into
insl
xchg
mov
add
outsb
out
inc
testl
push
cli
lret
cmp
pop
rorl
mov
imul
(bad)
and
mov
add
push
test
es
xor
sbb
xor
mov
cmp
scas
cs
movsl
test
xor
lea
adcb
or
cld
(bad)
and
fcompl
push
jne
cmp
add
push
sahf
bound
inc
mov
mov
push
xchg
shrl
mov
loopne
out
fcoml
jb
movsl
sbb
insl
push
jnp
in
stos
push
mov
into
or
sahf
xchg
mov
mov
inc
leave
xchg
and
push
or
jmp
(bad)
mov
cs
push
loopne
call
jbe
rorb
imul
xchg
cltd
push
xor
repnz
mov
lock
inc
(bad)
sbb
stos
fnstenv
sbb
mov
ret
pop
repnz
push
call
mov
scas
cwtl
pop
pop
xchg
or
push
cltd
loop
and
pop
dec
std
nop
pop
or
push
pushf
(bad)
in
jl
dec
mov
cmp
inc
mov
movaps
mov
ficoms
sub
aas
push
pop
out
jle
cltd
popf
in
and
outsl
cwtl
mov
jne
lret
in
stos
jg
ds
mov
movb
xchg
sahf
and
or
push
shlb
dec
ja
fsubs
popa
mov
int1
cltd
inc
pop
jg
jl
push
mov
ret
sub
pop
rolb
and
push
jae
test
out
cmp
pop
or
iret
sbb
mul
loopne
mov
fisubrs
fwait
movsl
jg
dec
lea
ds
pop
in
das
stc
scas
jae
pusha
repnz
scas
out
fadd
mov
push
xchg
fdivrl
in
adc
imulb
mov
inc
cli
mov
mov
es
jne
out
inc
pop
shll
cwtl
test
mov
js
aas
enter
jle
xchg
pop
es
test
add
mov
fistps
mov
fidivrl
sbb
lea
or
int3
decb
(bad)
das
out
jae
xchg
push
sbb
push
cmp
pop
and
or
xchg
inc
dec
sub
das
loop
orl
ljmp
mov
sub
add
and
cli
mov
mov
xchg
shll
cmp
inc
jl
jmp
mov
and
or
je
dec
lock
jns
inc
dec
pop
ja
adc
sbb
fwait
xchg
outsl
sti
push
dec
add
loopne
bnd
mov
pop
insb
out
mov
inc
dec
mov
mov
adc
mov
pop
mov
xor
addb
sub
adc
sbb
adc
ja
rcll
hlt
ret
cvtdq2ps
sbb
fildll
addb
add
in
mov
xchg
sbb
mov
gs
scas
inc
dec
ror
xor
out
adc
adc
(bad)
gs
shlb
cmpsl
das
mov
push
adc
lock
inc
into
incb
stc
xchg
aaa
cmp
push
inc
outsl
mov
push
xor
roll
mov
jecxz
jge
lock
bound
mov
xor
adc
out
aas
sbb
xlat
jb
mov
mov
cmp
mov
stos
out
add
xor
fwait
in
sub
imul
imul
(bad)
xor
ss
cmpsb
and
cwtl
decl
cmpsl
mov
mov
cmpsb
fs
jo
movsl
mov
aaa
cmp
xor
mov
pop
loope
std
inc
int1
or
leave
mov
(bad)
mull
jo
xlat
cmp
andl
cli
outsb
test
pop
cwtl
push
inc
cmp
aaa
stc
int3
mov
shr
repnz
xor
dec
outsb
in
insb
sahf
jo
mov
sbb
pop
pop
fsubrl
negb
sub
(bad)
bound
aad
rorl
(bad)
dec
adc
sub
add
push
or
fdivl
repz
repz
inc
push
(bad)
mov
cmpsb
ret
cmp
js
sbb
jnp
hlt
cmpl
ds
popf
push
pop
es
test
mov
popa
mov
repz
mov
test
les
and
sarb
test
dec
or
rolb
add
add
mov
incb
shlb
mov
xchg
or
mov
(bad)
adc
sub
jae
cmc
out
jl
ds
dec
mov
dec
mov
popf
push
ror
xor
dec
cmp
push
mov
std
mov
add
cmp
pop
lret
test
or
lds
(bad)
sub
pop
cs
popf
add
xor
jle
addr16
or
insb
inc
mov
xchg
cmp
push
adc
add
or
dec
or
in
movsb
pop
dec
pop
pushf
stos
inc
sbb
rcrb
xor
xchg
aas
cli
lods
and
lahf
stos
or
cmp
lcall
(bad)
push
popf
sbb
sti
mov
mov
add
lods
dec
push
add
adc
mov
sbb
dec
push
rep
jge
cmc
sbb
mov
sti
shll
xor
add
incl
std
jne
cmp
out
lds
in
int
into
pop
pushf
inc
dec
insl
stos
dec
popf
enter
and
cs
fs
push
in
ficomps
mov
(bad)
or
rorl
cmpsl
xor
in
rol
push
dec
stos
mov
fnsave
push
jns
jle
cmpsl
pop
repz
dec
cltd
ret
es
ljmp
xchg
sub
movsl
jle
gs
jecxz
popa
mov
mov
dec
data16
cmpsb
push
hlt
push
push
outsl
insb
shrb
scas
loop
lods
jo
in
push
xchg
loope
shrl
test
test
dec
sti
fwait
mov
clc
rorb
push
pop
mov
lcall
outsl
push
cwtl
lods
lods
or
mov
nop
jg
mov
cmc
gs
xchg
in
loope
test
(bad)
xor
dec
or
in
xacquire
bound
orl
mov
aad
in
jecxz
lea
xlat
sbb
or
scas
push
fnstenv
loopne
jl
ror
fsubr
cs
arpl
dec
jo
nop
xchg
inc
ss
scas
sbb
jo
lret
cwtl
push
or
clc
insl
cmp
repz
sbb
pop
or
sub
push
in
and
fcoms
and
jns
jns
mov
test
out
popa
lds
rorl
in
gs
inc
xchg
out
lahf
lahf
ss
pop
mov
int1
addr16
addr16
dec
dec
xchg
(bad)
and
je
xor
and
arpl
inc
test
sbb
lock
push
aaa
and
shr
scas
mov
inc
in
and
push
ret
fsubrs
outsl
mov
stc
insb
ficomps
or
sahf
and
mov
outsb
cmp
nop
aad
inc
in
rol
cmpsl
negb
subl
push
or
setle
push
cmp
roll
sub
xchg
nop
mov
sub
pop
xchg
xchg
ljmp
mov
dec
add
inc
push
out
jle
pusha
xchg
int1
pushf
out
sbb
adc
pop
mov
cli
(bad)
add
and
stos
xor
jnp
scas
cs
dec
fwait
pop
cmp
adc
lret
(bad)
push
(bad)
mov
insb
jge
mov
xchg
adc
xor
inc
mov
(bad)
sbb
