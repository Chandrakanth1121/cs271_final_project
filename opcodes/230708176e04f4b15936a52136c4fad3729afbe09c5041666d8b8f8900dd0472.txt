mov
dec
imul
xchg
repz
push
cmp
jg
xchg
add
xchg
xor
or
ds
mov
push
in
sub
mov
cmp
or
faddl
push
aam
cli
sbbl
fmuls
fstpl
jns
pushf
add
mov
push
sarb
adc
pushf
into
mov
mov
mov
mov
push
xor
push
xchg
stc
sbb
lock
test
shll
jl
imul
pop
fcmovbe
mov
xor
and
test
push
push
xchg
mov
push
ja
fcompl
mov
(bad)
stc
lret
push
ficoms
jl
pop
fisttps
(bad)
push
loop
stos
push
and
addr16
leavew
test
or
fdiv
rclb
or
mov
pop
lcall
cmpsl
mov
(bad)
adc
mov
fdivp
shlb
dec
pop
jle
iret
sub
add
jns
in
sahf
mov
jl
inc
and
push
lds
mov
jge
in
call
das
xchg
stc
popf
sti
out
pop
jae
(bad)
mov
les
out
jg
mov
es
push
ret
popf
jg,pn
test
inc
roll
iret
cli
dec
out
cltd
xchg
rorb
push
ror
lds
lahf
dec
xchg
add
adc
push
mov
dec
xor
insl
(bad)
cmp
rcll
mov
andb
xchg
xor
mov
outsb
stc
gs
xchg
xchg
jno
testl
lahf
push
cmp
(bad)
mov
xchg
aas
mov
adc
hlt
(bad)
cmpsl
inc
mov
aas
popa
mov
jo
xchg
and
push
sub
enter
jle
fs
jno
inc
enter
stos
repz
out
mov
call
stos
add
mov
cli
fldl
lea
dec
dec
sbb
pop
push
popa
xchg
or
fcom
jge
push
add
xor
les
into
faddl
dec
lret
(bad)
mov
jge
in
dec
add
nop
popf
sbb
jb
lea
ds
xchg
push
and
lods
cmp
orl
adc
and
xor
clc
mov
jmp
movsl
pushaw
sub
hlt
mov
leave
test
jl
scas
mov
mov
add
cwtl
aam
pop
faddl
in
out
adc
pop
lea
jo
push
loope
popf
int
(bad)
je
sbb
out
into
and
mov
push
push
xchg
mov
daa
adc
stos
ljmp
jl
imul
test
and
pop
mov
gs
sub
call
push
lock
shl
ficoml
or
enter
mov
sti
test
xlat
sub
cmp
scas
scas
dec
loopne
push
aam
sub
arpl
mov
mov
aaa
adc
adc
arpl
dec
push
rolb
jnp
jb
sbb
lahf
pop
mov
lahf
pop
cmpb
lds
test
sarl
mov
mov
mov
push
xchg
dec
push
mov
pop
xchg
mov
xor
dec
fcompl
xor
mov
lret
sbb
push
xchg
cld
out
stc
dec
add
push
and
xchg
mov
pop
(bad)
mov
(bad)
mov
inc
dec
dec
jle
mov
outsl
imul
xlat
xor
xchg
(bad)
pop
xchg
xor
or
mov
lods
imul
lahf
(bad)
fsts
xchg
int1
aas
in
mov
cmpsb
test
arpl
(bad)
push
inc
or
data16
or
sti
scas
or
mov
xlat
push
jecxz
jmp
hlt
std
or
jae
pop
outsl
add
xor
lock
ja
adc
nop
stos
pop
leave
shl
xor
jle
cld
inc
shlb
clc
(bad)
adc
cmpsb
lret
and
push
jle
ror
mov
sbb
add
dec
mov
push
jmp
inc
adc
fistpll
out
xchg
mov
mov
or
fcoms
int1
and
cmpsb
hlt
mov
cmp
sub
xchg
pop
addr16
movsb
ss
scas
cmc
xchg
mov
pop
jecxz
adc
fsts
int1
inc
fnstenv
mov
sub
mov
jnp
xchg
push
pop
push
mov
jno
xchg
mov
ja
addl
into
adc
cs
dec
jae
dec
push
in
rorl
cmp
mov
scas
ds
outsb
xchg
call
mov
repz
push
mov
inc
mov
push
inc
clc
xor
xchg
nop
mov
data16
nop
jbe
cli
xchg
push
mov
or
xor
inc
nop
into
adcb
xchg
shrb
and
sub
stc
popa
in
inc
fdivrl
rorl
in
push
loop
addr16
adc
xor
jnp
lock
out
inc
mov
shr
adc
ror
(bad)
and
inc
repnz
scas
add
push
cmpsl
int
rcl
roll
push
push
clc
and
pusha
adc
and
xchg
loope
lock
push
jg
rorb
mov
iret
mov
popf
lods
jp
sbb
shr
xor
mov
pusha
int3
ljmp
dec
sbb
add
lcall
test
in
movsl
xor
push
in
push
daa
push
adc
pop
xchg
fs
stos
fs
xor
xlat
inc
js
aad
sub
push
pusha
cmpsb
sbb
mov
mov
mov
clc
pop
or
xlat
inc
jl
daa
mov
aas
in
mov
aaa
push
sbb
jbe
in
add
outsl
adc
test
fldl
subb
push
sar
pop
mov
pop
cmp
fdivl
shll
sub
inc
je
in
fsts
mov
xchg
jle
inc
aam
loope
call
or
imul
sbb
jg
ret
je
mov
add
lock
pusha
pop
sub
pushf
incb
fsub
enter
aam
or
or
push
aam
loope
xor
es
(bad)
push
mov
aas
or
rcrb
or
pop
push
or
add
cmp
pop
mov
and
sub
call
loope
call
mov
inc
cmpsb
int1
xchg
scas
jbe
insb
pop
jbe
fsubs
sub
and
pop
add
pop
int3
xchg
pop
nop
insb
repz
push
cwtl
test
ret
and
inc
push
pop
std
or
imul
dec
mov
scas
in
push
pop
lret
or
push
mov
movsb
mov
fistl
and
stc
sub
sahf
insw
jb
or
loopne
pop
jecxz
mov
xchg
pop
scas
(bad)
nop
add
mov
dec
mov
pop
call
and
xor
pop
jecxz
rclb
imul
out
add
push
pop
es
xchg
sahf
repnz
repz
inc
fs
mov
mov
push
jnp
leave
push
pop
push
lret
int
and
sarb
jmp
sbb
das
or
lret
out
stos
and
xchg
pusha
push
sahf
fcompl
xchg
pop
into
bound
pushf
mov
dec
pop
cmc
cwtl
fucomp
bound
cmc
push
add
scas
rolb
insl
mov
ret
data16
cmpl
xchg
sbb
fimuls
mov
mov
sbb
outsb
vdivps
pinsrw
cmp
dec
fisttps
sbb
push
fcompl
push
nop
repz
int
shlb
and
dec
inc
cltd
mov
mov
clc
mov
add
loopne
push
and
hlt
sbb
sbb
std
sbb
xor
into
and
pop
out
mov
cmp
or
cmp
inc
xorl
push
nop
cltd
cwtl
or
sub
mov
fdivrs
push
fs
cmp
sahf
mov
hlt
stos
popf
dec
ror
fwait
inc
adc
ret
mov
mov
(bad)
in
fmul
mov
rcrl
sbb
(bad)
mov
push
and
scas
dec
and
or
mov
outsl
pop
fldl
dec
push
inc
cmp
add
mov
cmp
popa
and
cmc
sub
sbb
dec
div
sbb
sub
mov
mov
subl
jne
add
mov
pop
xchg
add
mov
(bad)
cltd
nop
push
iret
xor
or
sub
xor
fucomp
pop
adc
pusha
into
cltd
jp
pop
fisubrl
aaa
daa
mov
movb
add
subb
int3
push
and
