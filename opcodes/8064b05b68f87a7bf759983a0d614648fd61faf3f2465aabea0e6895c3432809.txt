push
scas
lret
pop
xor
xlat
sbb
out
das
jmp
or
inc
xchg
int1
shlb
js
mov
daa
or
insl
push
push
fistl
lret
je
sbb
(bad)
xor
mov
mov
ja
(bad)
xchg
sub
data16
sub
sti
mov
into
clc
push
imul
pop
cmpsl
xor
outsb
cmp
fcmovbe
adc
dec
sti
sahf
imulb
ja
into
(bad)
pop
lea
mov
dec
sub
movsl
adc
iret
dec
xchg
jbe
data16
divb
ja
sbb
sti
inc
fwait
pop
mov
pop
dec
jle
test
adc
imull
xor
sub
shlb
mov
js
or
pop
nop
mov
fucomi
imul
jne
sbb
push
jecxz
mov
scas
mov
xor
mov
xor
xchg
testl
cmpsb
rorb
jo
das
pop
xor
fsubs
dec
pop
cmpsb
jo
cmp
push
movsb
mov
ret
(bad)
or
inc
sbb
push
push
popf
push
pop
push
aam
adc
sbb
dec
jl
xchg
adc
mov
mov
cmc
inc
pop
inc
xor
lcall
imul
fnstenv
mov
negl
xchg
int1
jae
das
ror
jecxz
pop
add
inc
imul
sub
shr
inc
ss
loopne
rcrl
mov
fildl
lods
push
int3
lea
ja
lods
inc
lcall
(bad)
push
ret
dec
push
dec
sbb
ds
mov
dec
jge
pop
adc
stos
pop
hlt
jbe
ja
jge
dec
int
dec
sub
decb
cmpsl
test
repz
inc
xor
leave
cmpsb
xor
out
in
mov
pop
add
mov
or
sbb
ud1
fcompl
mov
lods
repz
pop
and
repz
inc
decb
pop
jno
(bad)
sub
hlt
mov
jnp
aad
das
dec
ret
cmpsb
pop
dec
add
or
mov
jg
movsl
add
fisttpl
aam
sahf
fcoml
mov
xchg
ss
cli
test
mov
xchg
inc
adc
sbb
xor
lret
dec
and
mov
repz
xlat
xor
and
mov
or
sub
shrb
lcall
cmpsb
jns
fdivrs
sub
test
cli
push
mov
dec
jae
dec
and
or
mov
xchg
jmp
insb
lcall
ss
pop
scas
ret
nop
dec
lock
hlt
test
lods
or
stos
jmp
adc
jl
adc
sub
pop
ss
sub
es
mov
mov
jecxz
and
mov
test
pop
pop
or
shll
jmp
sbb
insb
xor
xchg
test
ja
test
out
adc
sbb
clc
cld
push
sahf
in
test
gs
incl
fcmovne
int3
mov
leave
pop
clc
testl
sub
out
inc
rolb
xrelease
mov
stos
mov
test
into
fildl
cmp
call
mov
pop
(bad)
dec
sub
cltd
mov
stc
js
scas
in
insb
(bad)
jmp
jecxz
js
js
xor
sbb
xchg
xor
(bad)
notb
jo
stc
fnstcw
sbb
ja
lret
mov
mov
xchg
fcompl
dec
pop
dec
(bad)
sub
sub
mov
xchg
sub
lock
sub
dec
cmp
push
xchg
and
mov
sbb
nop
imul
(bad)
aas
xor
jnp
loope
(bad)
push
pop
add
orb
xchg
dec
xor
out
aam
sbb
xor
je
pop
dec
mov
push
outsl
pop
(bad)
insb
sbb
dec
or
xor
dec
sub
jo
adc
(bad)
shr
mov
(bad)
rolb
rcll
inc
cld
adc
mov
popf
sbb
mov
inc
jmp
fstpl
ss
push
lcall
inc
cmp
inc
test
pop
mov
push
dec
cmp
mov
subb
add
add
jp
out
fstpt
sbb
pop
mov
je
(bad)
jnp
mov
fmulp
aas
sub
push
pusha
cli
xchg
pcmpgtb
add
addl
lock
aaa
mov
dec
xor
stos
sbb
scas
enter
pop
(bad)
jp
cmp
pop
movsb
jg
mov
xchg
lods
pop
rol
aam
push
mov
sub
mulb
jmp
repnz
mov
mov
hlt
pushf
loop
aam
add
fadds
inc
mov
repnz
lret
and
ret
jbe
pushf
es
lcall
xchg
adc
cli
dec
dec
stos
push
mov
nop
(bad)
mov
xlat
jmp
lahf
fwait
movsb
sbb
(bad)
fcmovnb
leave
dec
stos
movsb
jle
or
mov
out
jo
dec
or
ss
hlt
int3
dec
mov
out
dec
jbe
aas
sti
mov
dec
push
roll
adc
(bad)
or
sub
lock
push
sbb
repz
mov
push
push
push
dec
outsl
dec
mov
pop
stos
sub
(bad)
sub
push
xchg
pop
xchg
push
repnz
jle
int1
call
dec
jmp
lods
cmp
lods
inc
(bad)
mov
or
bound
negb
addr16
frstor
daa
int3
and
fndisi(8087
mov
xchg
mov
hlt
stos
into
jge
adc
sbb
das
or
or
das
loope
xlat
stos
es
in
mov
js
sahf
repnz
das
shl
iret
xchg
cmp
into
mov
add
mov
movsl
mov
pop
jmp
fnstsw
adc
cwtl
scas
jbe
sub
mov
xchg
movsl
movsb
fdivs
jge
mov
push
push
mov
sub
in
cltd
scas
and
and
mov
cltd
dec
lds
pop
scas
or
adc
into
jae
jl
inc
test
fsts
pushf
mov
lret
add
jmp
jo
repz
call
negl
(bad)
in
pop
dec
push
stc
cmp
mov
fwait
std
or
in
(bad)
test
mov
mov
mov
xchg
ja
mov
popa
mov
or
mov
inc
or
pop
in
neg
push
sbb
cmp
aas
(bad)
and
fildll
dec
enter
ret
ds
mov
add
aaa
lock
repnz
scas
cwtl
enter
add
cmp
outsl
js
lods
dec
sbb
sahf
enter
xchg
jmp
xlat
int3
add
in
pop
rcrl
sub
adc
in
nop
dec
test
xchg
addb
mov
jae
(bad)
hlt
lret
inc
out
mov
cltd
and
dec
mov
jg
andl
mov
mov
(bad)
lfs
mov
xorb
jne
out
sbb
pmullw
popa
and
aad
ret
lea
xor
out
movb
out
pop
in
inc
and
out
sbb
int1
ret
pop
dec
adc
jne
ss
mov
xor
mov
testb
mov
mov
pop
mov
adc
jbe
test
out
inc
xorb
sbb
adc
push
nop
sub
pushf
addl
adc
xchg
mov
and
mov
and
mov
sub
shll
mov
push
jp
xlat
push
jne
out
out
es
dec
mov
test
dec
pop
mov
leave
sbb
out
in
daa
ljmp
outsb
and
repnz
aas
(bad)
cltd
sbb
fimuls
xchg
xor
ja
mov
pop
mov
fsub
lret
cmp
daa
mov
sub
lret
fcompl
(bad)
mov
dec
sbb
call
cmp
jmp
ret
mov
int3
lret
dec
mov
cli
or
cmp
dec
decb
shll
fsts
divb
pop
mov
lds
leave
ret
fsts
xchg
std
das
das
lods
jns
insb
shl
pop
mov
cmp
lock
stos
xor
shl
pop
shl
sub
push
mov
rcrb
mov
mov
leave
pop
loop
jne
xchg
in
pusha
push
es
scas
hlt
lock
aam
mov
lret
xor
mov
cmpsl
push
push
fmuls
std
mov
jecxz
popf
dec
jp
push
mov
and
xlat
mov
add
addr16
inc
xor
mov
mov
jge,pt
mov
