dec
jmp
xchg
push
out
sub
cmpsb
sub
add
nop
jbe
aas
shll
cmp
and
and
xchg
sahf
sahf
divb
je
cmp
xchg
es
cld
in
xchg
dec
mov
or
int1
xor
add
cmpsb
mov
imull
mov
mov
xor
scas
adcb
fsts
inc
shrb
or
push
mov
xor
lret
cld
push
xchg
pop
cmp
push
xchg
paddsw
push
dec
mov
jne
lods
int3
movsb
xor
mov
inc
popf
nop
testb
arpl
cli
lods
test
clc
rclb
inc
test
int3
lcall
lahf
mov
jle
add
adc
jb
stos
in
es
adc
adcl
mov
out
sbb
lea
call
sbb
popf
scas
xor
sbb
fs
mov
adc
dec
aas
imul
and
fwait
sbb
pop
movsb
inc
xor
je,pn
mov
add
mov
clc
pop
add
xor
xchg
push
cmp
test
dec
jns
fisubrl
cmp
and
xchg
sub
mov
imul
in
mov
clc
jb
cld
lods
nop
stos
loopne
push
mov
push
cmp
sub
fcomps
pop
mov
jo
inc
stc
mov
loop
push
cmp
cmp
(bad)
bound
mov
xor
add
fmuls
inc
xor
xchg
aad
jmp
add
cmpsl
cld
add
in
sahf
dec
pop
adc
call
adc
sub
push
and
push
clc
add
lahf
lock
lcall
adc
xchg
pop
inc
mov
pop
push
add
jmp
add
pushf
hlt
add
adc
cmp
xchg
stos
or
adc
int
dec
int
push
xchg
or
jge
mov
pop
mov
lret
lret
fsubs
xchg
cs
mov
push
imul
mov
fsubrl
pop
ja
rorb
push
ja
fidivrl
fsts
cmp
enter
mov
xchg
mov
mov
lahf
inc
add
add
push
xor
xchg
test
or
lahf
mov
(bad)
mov
scas
test
mov
mov
enter
cmc
fcoml
pop
dec
mov
rorb
or
mov
dec
sub
faddp
mov
daa
xor
inc
xchg
int
inc
or
inc
mov
push
sahf
or
or
jne
push
cs
jnp
xlat
cmp
lcall
add
cmp
imul
inc
xor
movsb
cmp
mov
pop
cmovl
inc
xchg
inc
push
(bad)
clc
push
inc
mov
loop
outsl
mov
or
imul
mov
jne
dec
jb
loop
mov
and
out
dec
xchg
lea
fdivr
shl
dec
clc
adc
in
lods
xchg
repnz
add
int1
mov
xchg
push
mov
nop
jge
fsts
sbb
pushf
enter
xor
outsb
ficoms
movsb
into
repz
sub
and
test
push
adc
push
cwtl
andl
mov
loop
push
enter
ret
add
sbb
ss
scas
dec
mov
enter
mov
lret
imul
xor
jg
xchg
cmc
adc
sti
sbb
test
int
sub
or
sbb
dec
shll
faddl
ret
rcll
nop
shlb
int3
mov
lcall
inc
push
sti
sbb
sarl
mov
add
sub
push
inc
popf
mov
xor
xorl
and
nop
scas
xchg
or
jle
inc
dec
stc
addr16
pop
int
jp
popf
and
(bad)
repnz
loope
jno
dec
jnp
in
adc
add
stos
sub
data16
jne
jle
ficomps
xchg
mov
dec
push
sbb
ds
nop
shll
adc
mov
pop
lods
sub
jo
lret
ds
pusha
or
(bad)
pop
outsb
and
cld
sub
int
mov
mov
addr16
xchg
lret
push
xor
jnp
mov
jl
andl
call
mov
fadds
inc
xor
repz
xchg
mov
cwtl
push
xor
repnz
outsl
lcall
sti
fimull
cmpsb
inc
imul
or
and
or
pop
xorb
jecxz
shll
xor
mov
jmp
inc
lock
mov
lods
pop
xchg
scas
add
repnz
pop
mov
popf
es
xchg
pop
jns
mov
mov
rcll
ja
adc
cltd
pop
decb
mov
dec
xchg
xor
mov
pushf
or
xlat
psubq
mov
scas
mov
test
jb
bound
and
push
std
jle
repz
push
and
xor
mov
lret
sub
lahf
repz
mov
and
jle
mov
aad
or
fidivrl
je
lods
xchg
and
and
lret
add
das
push
cwtl
jmp
xchg
fs
int
mov
adc
lcall
cmp
mov
or
pop
int1
pop
jo
inc
cmp
pop
or
xorl
xchg
inc
mov
lret
push
sbb
fldcw
sub
mov
dec
loop
repnz
dec
cmp
stos
rcl
lea
ret
push
mov
filds
test
mov
adc
xchg
pop
mov
jo
dec
out
mov
dec
test
aas
or
ja
imul
lods
inc
jmp
dec
lds
sti
push
pop
adc
(bad)
sahf
rcll
sub
or
lret
loop
sbb
and
push
scas
jmp
xchg
div
leave
jp
push
sbb
jmp
adc
adc
cmp
shrb
(bad)
ficoml
cld
inc
sub
adc
loope
xor
test
aad
mov
scas
mov
popf
push
gs
test
inc
pushf
negl
pop
or
inc
dec
jge
xchg
lret
insb
shlb
movsl
out
jnp
cs
sub
xor
mov
repz
push
jl
bound
mov
mov
push
popf
sub
cmpl
or
xchg
inc
test
mov
out
sub
movsb
mov
pop
adc
pop
imul
and
pop
lods
xchg
dec
(bad)
(bad)
pop
or
imul
dec
pop
test
lcall
pushf
or
adcl
cmp
push
fs
dec
mov
jnp
xchg
lret
fnstsw
loopne
inc
(bad)
push
jnp
mov
(bad)
adc
incb
cmc
shrb
dec
jnp
adc
sbb
sti
lret
outsl
lret
jae
sahf
(bad)
cmp
mov
scas
clc
pop
adc
jnp
sub
or
adc
cli
jge
(bad)
xchg
lahf
jne
sbb
add
gs
dec
jl
dec
mov
cltd
mov
push
xchg
shl
popf
addl
adc
inc
adc
cmp
repz
fs
adc
or
and
(bad)
loope
sbb
mov
xor
mov
cmp
xchg
dec
jae
mov
rclb
scas
cmp
sti
sbb
push
dec
cld
mov
mov
inc
cs
xchg
rolb
fistpll
pop
pop
xor
push
(bad)
enter
pop
or
xchg
cmp
xor
test
xor
or
mov
mov
lea
lods
cmp
push
push
lahf
fbstp
adc
pusha
out
popf
fidivrs
xchg
movsl
movl
mov
mov
fistpl
pop
sbb
pop
push
sbb
js
or
push
mov
sbb
dec
xchg
das
mov
dec
pop
lea
mov
repz
sbb
jp
mov
inc
inc
mov
lds
mov
cmp
sbb
dec
std
rorb
pop
dec
xor
cmp
and
push
mov
push
mov
adc
ror
pop
sub
xchg
mov
push
adc
addb
xchg
call
add
cltd
int3
aam
push
xchg
jo
stos
(bad)
mov
std
andb
in
push
mov
sbb
inc
rolb
test
sub
push
pop
fwait
cmp
pushf
in
jnp
dec
cmp
adc
mov
mov
dec
sbb
push
fmulp
add
cmpsl
test
hlt
lods
add
fdivs
outsl
nop
jae
mov
inc
ret
pop
out
add
arpl
cmp
out
mov
negl
arpl
xchg
inc
and
stos
or
or
test
addr16
loop
pop
mov
movsl
stos
mov
int3
in
inc
cli
