push
jno
test
mov
(bad)
data16
das
aad
cmp
aaa
bound
dec
daa
or
sub
xor
or
insb
and
cmp
push
ds
sarl
xor
adc
inc
adc
lahf
mov
shl
mov
mov
movsb
and
jp
jge
test
stos
mov
mov
in
push
mov
sbb
or
cmp
jle
scas
mov
test
sub
push
sbb
inc
sub
daa
cmpsb
mov
adc
in
call
and
gs
js
cwtl
adc
popf
cmp
or
xlat
addr16
pop
mov
cmp
mov
adc
sub
leave
jbe
lea
xor
pop
mov
adc
push
les
fsub
shlb
push
and
mov
lcall
mov
lret
push
pop
mov
cmp
cmp
push
cmpl
cltd
xchg
loopne
popf
sahf
int
push
add
jo
add
pop
mov
(bad)
(bad)
inc
aad
loope
mov
ficomps
mov
test
and
jo
push
cmpsl
jmp
adc
and
cmpsl
inc
pop
pop
mov
mov
push
jno
inc
out
sub
dec
jle
ficomps
jecxz
push
adc
aaa
jmp
mov
dec
sar
cld
aad
pushf
pop
xchg
xchg
insl
add
stos
pop
sbb
xor
push
in
cld
repz
and
xor
add
fs
imul
add
add
xlat
mov
pop
mov
sub
out
push
stos
loop
adc
mov
add
enter
lods
mov
jne
pushw
mov
dec
mov
rcr
into
xlat
es
out
ret
sub
jp
jns
xchg
lods
cli
and
aam
jae
test
mov
fdivp
aam
lock
jae
int1
pop
dec
xor
jbe,pt
and
add
sbb
imul
sbb
or
lahf
jo
ss
insl
or
adc
jg
mov
rcrb
js
pop
repz
sbb
sbb
shlb
addr16
jnp
daa
mov
insb
mov
mov
sbb
adc
or
fadd
scas
(bad)
sbb
sbb
push
add
lods
jp
cmp
int3
xlat
lock
sub
call
mov
imul
cwtl
test
mov
dec
lret
dec
add
sbb
js
inc
adc
xchg
xchg
xor
fwait
insb
in
jg
mov
into
push
cmp
imul
or
dec
mov
fdiv
cmc
leave
out
divl
fcmovb
ds
outsb
aad
jp
xor
addl
(bad)
xchg
push
cmc
dec
jg
xor
push
rcr
(bad)
aad
cmp
pop
xor
mov
dec
cmp
sub
faddp
xor
in
xchg
ficompl
lods
repnz
fwait
aad
int
pop
fwait
xlat
adc
xor
or
sub
xorl
push
jae
movsb
(bad)
mov
push
fnstenv
lods
and
or
and
or
fmuls
mov
dec
movsb
fwait
addb
jbe
lods
and
xor
loopne
sub
int1
(bad)
push
fadds
insl
jecxz
xor
jecxz
xor
(bad)
mov
or
repz
scas
das
rcrb
lea
add
jne
les
sbb
cwtl
faddl
in
(bad)
fistps
int3
adc
dec
sub
test
xor
lea
stc
cld
cmp
repz
push
mov
dec
or
or
std
push
mov
cmp
mov
into
xchg
stc
arpl
push
(bad)
jmp
stos
dec
inc
aad
inc
jns
push
push
cmc
mov
cmc
call
rolb
(bad)
mov
adc
push
xchg
fistpll
out
add
mov
and
jp
adc
ss
mov
adc
pop
mov
xchg
jo
jge
ja
test
lods
fcmovnbe
xor
ja
xor
loope
cwtl
mov
push
jl
mov
add
hlt
pop
shrb
jbe
cld
test
jno
(bad)
outsl
shr
dec
or
data16
dec
dec
stc
pop
rcrb
adc
push
pushf
pusha
pushf
pushf
lea
jmp
sbb
sub
xchg
sbb
adc
jns
mov
std
cld
mov
in
repz
repz
push
int3
faddl
jb
jle
lcall
cmp
xor
sub
(bad)
sub
std
pop
(bad)
lea
mov
jnp
sbb
testb
adc
mov
leave
push
movsl
or
loopne
xor
imul
add
xchg
sbb
xchg
push
popf
int1
fdivs
push
mov
xlat
mov
scas
xor
sbb
mov
xor
adc
pop
dec
dec
frstor
cmpsl
fistl
mov
out
out
enter
xchg
sahf
pusha
jmp
mov
into
adc
leave
lea
jmp
enter
add
pop
fcmovnu
mov
movsl
push
sti
inc
and
xlat
fstpl
sbb
inc
inc
in
jp
hlt
(bad)
jle
pusha
(bad)
or
and
repz
scas
dec
mov
xor
cltd
cmp
aam
adc
arpl
cmp
rorb
dec
dec
mov
sub
repz
mov
and
mov
or
(bad)
(bad)
mov
aaa
jno
add
xor
bound
or
or
adc
add
or
jmp
cwtl
fisubrs
mov
call
mov
ja
cltd
mov
mov
and
pop
add
and
fldenv
dec
or
mov
dec
xor
mov
add
shll
xor
(bad)
stc
mov
add
(bad)
insb
mov
je
xchg
test
movsl
jno
inc
enter
xchg
imul
sbb
fcmovnb
inc
cwtl
rorl
sbb
or
or
or
(bad)
pusha
adc
jne
push
into
pop
loope
notb
xchg
pushf
pop
push
add
fst
jb
and
bt
mov
pusha
cmp
push
cmp
push
pushf
lea
jbe
shr
ror
push
sub
sar
movzbw
or
mov
lea
push
sbb
or
movzbw
mov
test
add
shl
bsr
ror
sub
shr
pusha
mov
sar
inc
bsf
shr
add
call
pusha
pushf
lods
call
cmpsl
add
lods
pushf
mov
xchg
out
lcall
negb
inc
ja
stos
mov
mov
xchg
fnsetpm(287
cmp
mov
cli
insb
lret
ds
dec
dec
mov
lods
jp
insb
or
push
cmp
loop
mov
lods
shr
sub
jecxz
lock
ja
xchg
xchg
repz
push
shll
pusha
xchg
mov
pop
lods
mov
ret
orb
repnz
sub
mov
push
test
cli
lret
mulb
leave
movsb
sbb
loop
(bad)
cmp
cs
into
outsl
jmp
mov
mov
in
add
pop
mov
movl
call
call
jge
dec
inc
fwait
mov
jg
jnp
inc
xor
or
je
subb
sbb
ds
jp
ds
cs
add
test
xor
pcmpeqd
sub
test
addr16
std
xchg
in
ljmp
push
dec
shrb
or
pop
int1
cmc
pop
and
push
and
cmp
or
pop
mov
cmp
rclb
repz
sub
roll
inc
and
lcall
in
pushf
test
pop
in
das
mov
jo
mov
mov
push
dec
test
sbb
loopne
add
or
clc
add
bound
xchg
add
lods
mov
ljmp
lahf
inc
rclb
add
xchg
(bad)
loopne
push
jmp
in
xor
xor
cmc
xlat
mov
cmp
mov
push
sub
out
arpl
pop
mov
ljmp
cmpsl
and
out
lcall
mov
subl
test
imul
pusha
clc
inc
iret
inc
clc
sub
out
mov
and
sub
outsb
hlt
popa
testb
sub
rcrb
scas
je
(bad)
movsb
inc
add
mov
or
pop
xchg
xor
push
sbbb
repnz
mov
rolb
jno
inc
movsl
arpl
sbbl
jns
lcall
mov
shll
clc
add
jo
out
inc
lret
pop
adc
out
je
stos
or
shlb
lock
ss
fwait
lock
push
add
xchg
out
inc
xor
xchg
mov
movsl
mov
cmp
arpl
ret
mov
int
