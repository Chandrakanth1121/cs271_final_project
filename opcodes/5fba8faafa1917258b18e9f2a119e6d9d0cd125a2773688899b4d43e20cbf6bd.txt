pop
repnz
loop
mov
jmp
add
and
lock
je
test
loopne
inc
pop
pop
arpl
xchg
cmc
mov
in
mov
sub
dec
inc
cli
jo
mov
(bad)
cld
imul
(bad)
cld
imul
je
test
loopne
inc
pop
pop
gs
xchg
jo
xlat
jecxz
sub
mov
add
jae
popf
or
cmp
cmpsb
pop
clc
push
sub
std
repnz
or
jecxz
int1
adc
jae
dec
adc
shlb
cld
xchg
mov
ss
imulb
jns
(bad)
stc
outsl
jo
dec
mov
ja
cltd
jns
xor
adc
clc
das
and
(bad)
cld
imul
(bad)
cld
imul
repz
aas
jl
test
insb
(bad)
push
pop
std
xchg
loope
mov
imulb
mov
and
or
(bad)
enter
mov
jo
add
cli
jo
mov
(bad)
(bad)
outsb
or
add
das
loope
int3
scas
jl
add
xchg
js
dec
xchg
mov
imulb
mov
and
push
outsl
insb
(bad)
enter
mov
flds
dec
jno
loop
nop
in
(bad)
(bad)
(bad)
es
add
das
loope
int3
scas
jl
add
xchg
js
pop
xchg
fists
jbe
scas
or
bound
xchg
in
shlb
int1
es
outsl
insb
pop
nop
mov
in
das
loope
mov
nop
loope
outsl
insb
(bad)
mov
stc
outsl
jo
aas
mov
ja
cltd
jns
xor
adc
clc
mov
or
out
insb
imul
(bad)
cld
imul
je
test
loopne
dec
pop
pop
arpl
xchg
in
rolb
outsl
insb
pop
mov
fists
jb
adc
outsl
insb
pop
xorl
mov
ljmp
outsl
insb
pop
xorl
mov
xor
mov
stos
outsl
(bad)
(bad)
fimull
outsl
insb
pop
leave
ja
lcall
ja
add
fstpt
push
jb
flds
hlt
arpl
add
aam
pop
bnd
(bad)
jecxz
(bad)
fcomp
mov
push
or
outsl
out
popf
or
lods
jmp
lret
scas
test
out
fisubrs
add
ljmp
outsl
insb
pop
xorl
mov
outsl
flds
jle
jg
outsl
insb
pop
lret
jae
stos
adc
mov
add
imulb
ret
add
das
loope
int3
scas
jl
add
xchg
sub
(bad)
mov
in
xor
cltd
jns
stc
sub
mov
nop
loope
fisubrs
add
sub
mov
scas
int1
mov
insb
pop
add
(bad)
cld
imul
push
mov
add
int1
cltd
adc
jne
add
(bad)
cld
imul
and
lock
sub
dec
pop
pop
push
(bad)
cld
imul
jmp
in
jecxz
fs
xchg
mov
cli
mov
mov
insb
flds
cli
sar
hlt
xor
loop
cmp
fisttpl
jne
ss
cmp
add
xchg
test
adc
add
add
ja
imul
lock
repz
insb
jmp
pop
outsb
insb
(bad)
push
arpl
clc
enter
inc
dec
or
mov
and
dec
arpl
mov
push
pop
faddl
repz
fiaddl
jnp
sbb
jns
stc
sbb
sub
out
cltd
sbb
sub
clc
xchg
(bad)
cld
imul
mov
ret
fildl
repz
add
(bad)
cld
imul
jle
and
test
jle
lods
ja
neg
sub
gs
hlt
dec
fiaddl
and
lock
sub
inc
pop
pop
push
(bad)
cld
imul
jae
(bad)
sar
push
dec
aad
outsl
int1
cltd
adc
adc
add
(bad)
cld
imul
data16
sub
dec
pop
pop
push
(bad)
cld
imul
jmp
in
jecxz
fs
xchg
xchg
fs
xchg
mov
jnp
sub
nop
mov
xor
or
cli
mov
nop
ret
nop
std
mov
loope
mov
jne
iret
clc
outsb
fs
xchg
je
inc
mov
or
cmc
or
dec
cli
sar
(bad)
cld
imul
(bad)
cld
imul
repz
insb
jmp
in
insl
insb
(bad)
push
sub
sub
dec
adc
std
and
jae
outsl
out
popf
or
std
or
outsl
out
popf
or
ror
arpl
(bad)
ss
and
outsl
clc
xor
add
cmpsb
sarl
cmp
or
cli
jb
(bad)
fs
jae
daa
or
repnz
je
pushf
xchg
mov
ret
cmp
loopne
xor
int
jo
lds
js
aad
insl
(bad)
jnp
flds
outsl
insb
flds
outsl
insb
fxch
jne
flds
cld
mov
mov
dec
and
mov
mov
loope
nop
fbstp
imulb
add
xor
mov
iret
jp
lret
ret
insl
(bad)
outsb
jecxz
in
ljmp
arpl
jb
outsl
cmp
ss
repnz
adc
imul
enter
sarl
cmp
sub
cltd
mov
loope
mov
jl
jp
testl
cli
call
imul
fiaddl
das
loope
nop
in
pop
sti
in
or
pop
outsl
(bad)
pop
ret
mov
fs
stos
sti
adc
aam
add
xchg
mov
pop
xchg
test
jecxz
inc
push
push
xlat
jno
outsl
out
popf
or
das
arpl
repnz
mov
lock
jp
cmc
(bad)
les
flds
outsb
lock
loope
arpl
repnz
push
ret
popf
outsl
insb
pop
leave
ja
cltd
jns
insl
mov
xchg
lret
nop
add
ja
mov
jae
cltd
mov
sbb
or
dec
and
xchg
test
jecxz
lahf
dec
outsl
insb
fs
xchg
jl
or
mov
std
mov
jo
add
clc
dec
lds
(bad)
cld
imul
xchg
testl
jns
cli
daa
push
clc
js
inc
lret
loope
xchg
mov
bound
xchg
jnp
dec
jo
and
repnz
add
sbb
add
(bad)
cld
imul
insb
(bad)
push
sub
add
repz
faddl
cld
mov
call
mov
dec
push
jmp
int1
add
xchg
mov
cwtl
push
arpl
repnz
xchg
movsb
cs
cld
imul
(bad)
cld
imul
imul
sub
sub
outsl
out
popf
or
jo
arpl
jl
lret
clc
loopne
and
outsb
insb
fsts
jnp
push
jo
in
sub
jecxz
mov
loope
mov
outsl
les
shrb
xchg
jnp
push
divl
dec
sbb
das
fucomp
fsubrs
add
mov
adc
clc
push
ret
imull
fsts
jo
in
jle
fimull
jae
sbb
or
adc
outsl
insb
mov
add
insb
jmp
lret
inc
int3
mov
jecxz
outsb
shll
add
jbe
daa
clc
push
faddp
aad
push
sub
flds
fsubrp
mov
js
ss
adc
insb
push
or
sbb
outsl
insb
call
dec
xchg
sbb
stos
jbe
sub
mov
sbb
inc
int3
mov
jecxz
outsb
test
sbb
imul
std
nopl
jle
in
outsl
insb
call
(bad)
out
sub
std
or
insb
inc
int3
mov
loope
outsb
in
rorb
loope
(bad)
imul
std
or
jne
out
mov
in
lcall
adc
call
add
clc
ss
(bad)
aas
in
rorl
loope
(bad)
cs
imul
std
or
insb
pop
push
out
mov
in
fwait
movsb
aad
push
sub
flds
add
and
adc
jmp
mov
jl
dec
xchg
jbe
aad
sub
les
mov
mov
xchg
je
aad
push
jmp
adc
sar
jo
fwait
in
insl
fwait
xchg
mov
bound
xchg
cmc
test
add
outsl
jnp
shrb
fsts
xchg
in
push
or
jnp
sub
insb
fsts
xchg
in
