mov
push
in
in
repnz
inc
add
jnp
xchg
cmp
or
dec
lahf
xchg
aad
movsl
lock
cmpsl
int3
out
push
inc
mov
mov
xor
jno
dec
fs
repz
lods
lea
cld
fstp
test
mov
jmp
jno
fldcw
test
xlat
sbb
sahf
push
insl
mov
(bad)
sub
inc
or
iret
mov
subl
inc
aad
mov
mov
nop
dec
dec
sbb
fnstcw
call
xor
and
es
cs
(bad)
push
jno
xchg
shrl
repnz
pop
inc
xchg
pushf
js
sub
inc
mov
popa
mov
jbe
popa
xor
adc
outsb
mov
push
mov
arpl
or
jno
cmp
push
xchg
mov
dec
sbb
sub
(bad)
push
cmp
leave
add
movsb
xor
call
(bad)
mov
mov
and
std
adc
push
sti
or
cld
adc
or
push
pushf
out
out
movsb
and
adc
push
loop
mov
jnp
inc
cmp
mov
rolb
aad
mov
(bad)
ljmp
xor
daa
bound
lock
int
mov
dec
dec
sbbb
dec
pushf
int1
(bad)
mov
test
fdivr
or
out
push
(bad)
mov
push
or
add
arpl
test
das
push
rol
mov
gs
add
daa
int
rolb
jle
xlat
lret
pop
cwtl
push
push
lahf
add
pop
push
and
add
outsb
xchg
(bad)
int1
lret
push
ss
lea
into
in
xor
push
in
lock
loope
inc
mov
int3
cmp
aad
and
xor
lret
mov
in
fmul
xchg
fnsave
lcall
mov
mov
xchg
xchg
int
cmp
or
int3
xor
sbb
and
aam
out
fprem1
cmpsb
cli
stos
in
lret
push
fmuls
aam
lds
dec
mov
sbb
(bad)
hlt
movsb
jg
addl
sub
sbb
inc
pop
cmp
and
xchg
fdivp
imul
cmp
lahf
daa
mov
scas
mov
pop
xchg
mov
lret
stos
mov
sub
in
cmovnp
add
jne
loopne
pusha
mov
xchg
jecxz
sub
fdivl
out
dec
xlat
sub
test
lret
and
outsb
out
loop
fs
out
and
rorb
in
and
mov
mov
mov
pop
jle
and
ss
push
and
scas
andl
jne
lods
xor
ja
add
xchg
sub
mov
sbb
cmp
mov
add
dec
enter
mov
adc
jno
mov
dec
push
dec
push
lret
mov
or
imul
ja
mov
rcr
(bad)
out
mov
cwtl
int3
adc
sbb
add
sub
sbb
inc
mov
push
(bad)
ror
jne
lock
mov
aad
inc
aas
fsubs
mov
int3
or
xor
stos
jne
sub
je
cli
sbb
fsubrl
iret
xchg
mov
fists
xchg
(bad)
sub
adc
add
sub
push
mov
iret
xchg
in
mov
out
pop
push
xor
mov
cmp
int3
sar
add
cwtl
sbb
int3
aam
xchg
inc
cltd
inc
add
xchg
shlb
call
jmp
bound
xor
adc
cs
sub
push
shrb
add
xor
gs
lea
pop
leave
cmp
es
lock
testb
push
iret
or
pushf
xor
inc
dec
cwtl
sub
mov
mov
or
xchg
movsl
add
adc
jb
in
and
ss
cltd
mov
mov
into
or
shrl
sub
xor
in
jne
ljmp
cli
add
and
mov
iret
outsl
dec
push
push
daa
mov
aam
push
xchg
cmp
daa
loop
cmp
aad
add
test
fsubp
inc
inc
jo
push
and
fpatan
bound
loop
scas
and
ret
push
es
dec
dec
leave
add
push
lea
decl
pop
mov
fsubs
dec
lds
xlat
shrb
dec
dec
lret
lds
fldl
inc
fsubl
or
pop
mov
or
das
addb
daa
add
shll
ds
int3
in
or
frstpm(287
cmp
aam
aaa
jo
lcall
test
push
clc
push
jp
pop
idivl
and
fcoml
or
leave
dec
xor
(bad)
int3
enter
shl
insl
rclb
test
adc
jnp
stc
cmpsb
in
lret
jnp
out
lea
jae
leave
pop
arpl
add
fwait
iret
lock
dec
testb
movl
adc
lahf
loopne
dec
out
(bad)
or
call
sahf
jmp
pop
cmp
add
aaa
xchg
lcall
or
fstl
leave
into
enter
hlt
dec
pushf
cwtl
inc
loopne
push
test
add
inc
jmp
mov
mov
adc
cmp
les
mov
adc
lock
ret
or
mov
push
mov
and
insl
pusha
test
inc
in
fdivl
dec
call
and
(bad)
add
xchg
iret
repz
shlb
fidivrl
scas
dec
lret
mov
jbe
in
fcmovnbe
subb
and
insl
shll
iret
call
mov
rclb
mov
lret
jge
add
cltd
jne
sub
mov
sub
cwtl
es
pop
pop
imul
pop
xor
and
leave
fwait
push
jl
pop
in
add
scas
mov
dec
sbb
in
fdivl
or
dec
shrl
je
adc
cwtl
push
pop
imul
orl
cmc
mov
sub
push
push
cmpsb
movsl
dec
movsb
and
inc
mov
mov
loopne
sarb
xchg
repnz
(bad)
xchg
mov
test
imul
scas
int
add
sahf
fmull
add
in
pop
push
sub
lods
push
sbb
lock
cmp
sub
sbb
mov
and
or
out
sub
clc
xor
inc
sbb
mov
test
inc
or
leave
adc
cmp
xchg
mov
roll
push
sbb
xchg
or
mov
or
add
cwtl
inc
and
pop
cmpsb
addr16
test
adc
xlat
nop
mov
loopne
sub
jbe
inc
xchg
loope
dec
fs
test
int3
es
lds
lea
andb
inc
(bad)
sbb
xor
out
loopne
outsl
sub
ds
popa
mov
fmul
mov
scas
mov
fisubrs
dec
adc
lods
fisttpll
ljmp
or
pop
sub
pop
push
pusha
rol
jp
cmp
dec
xlat
push
ja
test
mov
nop
das
pop
jl
(bad)
push
rorb
cmp
in
xchg
test
pop
or
dec
add
call
ljmp
iret
lahf
jbe
outsb
fmuls
or
jo
cltd
push
je
idivb
pop
and
cmp
push
or
lret
mov
das
pop
and
aam
leave
xchg
push
adc
mov
stos
daa
and
insl
dec
sbb
out
rorb
dec
enter
(bad)
pop
cmpsl
les
(bad)
int
adc
mov
repnz
adc
push
mov
scas
aas
jo
push
push
mov
sbb
sbb
sub
sbb
lahf
int
inc
scas
aas
cld
ficoms
iret
movl
arpl
and
sar
sbb
pop
popa
pushf
mov
mov
int3
in
pop
out
cmc
sbb
call
test
in
cmc
lret
outsb
mov
jle
out
ja
xor
mov
lods
sbb
mov
pop
out
das
cwtl
jg
mov
out
sub
aad
sbb
inc
loopne
aas
subb
sbb
xchg
roll
ljmp
cmc
sbb
pop
mov
cmp
jecxz
sub
mov
push
cmpsb
dec
mov
rcll
xchg
(bad)
mov
movsl
in
sub
sub
js
ja
mov
mov
push
fsub
sahf
mov
xor
lret
pop
imul
lea
loope
xorl
addr16
xchg
mov
lret
add
stos
add
push
push
ljmp
pop
sbb
dec
push
inc
cmp
mov
dec
mov
