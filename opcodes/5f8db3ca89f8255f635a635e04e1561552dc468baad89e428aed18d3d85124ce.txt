jne
mov
fcomps
cmp
xchg
imul
or
and
ror
rorl
daa
mov
mov
push
into
daa
sbb
out
sbb
loopne
aas
mov
mov
jbe
push
mov
jne
bound
xchg
ret
push
cltd
jp
add
xorl
mov
fisttps
pop
test
and
lods
and
loop
mov
lcall
pop
fcmovnb
es
xchg
jo
popf
andb
jno
clc
jmp
dec
fs
jecxz
and
pop
cs
mov
ljmp
mov
dec
xor
xchg
mov
imul
or
xchg
fisttpl
push
je
ja
stc
repnz
adc
and
outsb
mov
push
sarb
jae
in
mov
insl
mov
ds
cmp
dec
dec
imul
jle
orl
aad
push
arpl
mov
outsl
sub
ret
ficoms
loop
jecxz
decb
mov
jbe
mov
push
daa
xchg
scas
std
arpl
fsubrl
in
es
mov
inc
fstps
mov
add
mul
pop
jnp
(bad)
aas
insl
adc
jge
mov
mov
dec
lahf
lods
nop
call
push
fnstsw
testb
into
inc
daa
lret
shll
xchg
lods
stos
push
push
mov
sub
cmp
xchg
inc
insb
inc
pop
stos
iret
add
mov
outsb
fistpl
cs
mov
inc
cmp
mov
iret
dec
leave
add
lods
lret
(bad)
and
arpl
and
mov
push
xchg
mov
mov
aam
popf
pop
dec
mov
sub
addr16
sub
gs
push
int1
mov
bound
mov
ss
cmpsl
sti
ret
out
pop
in
lret
push
loopne
mov
sti
or
push
in
mov
push
mov
arpl
mov
lods
sub
cmp
mov
pop
bound
jne
(bad)
data16
dec
adcl
push
pop
xor
xchg
orl
loop
dec
add
mov
cmpsb
nop
add
nop
outsb
adc
mov
in
scas
in
out
(bad)
cli
addr16
adcl
pop
fwait
lods
adc
incb
dec
mov
mov
sub
in
outsb
lret
mov
iret
notl
xor
pop
std
mov
div
xlat
fistl
jecxz
pop
mov
aad
cmpsb
jo
lock
in
adc
fwait
cli
lret
mov
fstpl
pop
fimuls
inc
fstpt
test
or
dec
jecxz
push
jae
mov
shl
retw
sub
jmp
insl
sbb
out
pop
lret
pop
loopne
jb
sub
int3
das
int
addl
add
cmpsb
imul
mov
lahf
std
mov
pop
(bad)
adc
or
imul
pop
xchg
jnp
xchg
xchg
popf
cmp
test
scas
shll
sti
es
jb
xor
jo
in
data16
sub
out
addb
mov
cld
jmp
(bad)
mov
mov
jecxz
cmp
enter
adc
jae
in
(bad)
iret
fbstp
jecxz
iret
pop
fwait
xchg
in
stos
nop
sti
mov
lret
xor
mov
inc
(bad)
shll
mov
ret
insl
adcl
sbb
outsb
add
inc
or
(bad)
in
aam
ret
mov
insl
or
sub
aad
sub
jnp
pop
test
adc
jae
outsb
jecxz
sub
mov
push
cmpsl
imul
cld
xor
xor
or
mov
in
insl
jecxz
addl
rclb
enter
xor
mov
subl
enter
mov
es
(bad)
stos
rcrb
test
ret
movsb
test
(bad)
lea
jecxz
into
sti
lods
push
out
ret
jne
out
bound
(bad)
jae
xchg
mov
jae
cmp
cmpb
ret
jecxz
push
pop
rorl
(bad)
push
inc
jecxz
es
or
insb
xor
xchg
je
repz
fcomps
and
mov
dec
mov
in
jecxz
aad
jecxz
sub
adc
int
cli
dec
inc
ss
sub
mov
iret
adc
mov
inc
ficompl
outsb
sub
ret
inc
xlat
lcall
insb
dec
popf
xchg
jmp
cmp
pop
mov
pop
pop
leave
inc
and
sub
inc
or
ljmp
ljmp
faddl
arpl
xor
aad
nopl
and
gs
je
mov
(bad)
fucom
repnz
add
and
xchg
cmc
aaa
jnp
je
adc
mov
push
outsb
add
jb
sub
ret
mov
aas
test
rorl
daa
lret
iret
loopne
cmpsb
cld
pop
inc
imul
jb
cmp
(bad)
mov
mov
inc
push
dec
aad
lock
cwtl
pop
popa
cli
pop
xchg
dec
ret
insb
out
(bad)
out
fsubs
je
loope
push
out
stc
jb
lods
xor
in
dec
fisttpll
push
sarb
jae
insl
bound
sahf
in
pop
pop
jecxz
xor
xchg
lods
ds
nopl
mov
lods
mov
add
mov
fwait
rorb
movsb
cmp
mov
dec
movsl
pop
out
es
lea
(bad)
lock
jmp
sbb
push
pop
shrl
xchg
int
ds
fs
push
and
repnz
loopne
and
add
xchg
jae
cmp
testb
ss
cmp
pop
add
xchg
xchg
shr
test
cmp
mov
mov
repnz
pop
mov
shll
add
int
rcrb
mov
hlt
mov
sti
xor
repz
(bad)
jecxz
push
(bad)
(bad)
enter
test
inc
negl
shrb
mov
inc
dec
std
mov
mov
repnz
add
and
ja
movsb
mov
sbb
out
mov
cld
or
push
andb
mov
jl
hlt
movsl
inc
jnp
mov
sarl
push
je
mov
imul
cld
sbb
dec
dec
pcmpeqd
incb
sbb
clc
pop
aas
xchg
push
or
dec
push
test
sbb
je
mov
push
push
pop
orb
mov
lret
xchg
stos
push
sub
lcall
insl
adc
cmp
pop
(bad)
shll
sub
enter
inc
sti
aam
(bad)
or
and
clc
push
pop
jb
cwtl
loop
push
inc
imul
pop
into
ret
pop
into
jnp
pusha
jg
int1
cld
cmpsl
xlat
hlt
int3
out
pushf
jg
iret
insl
imul
mov
mov
dec
stc
cmc
inc
push
outsb
push
ds
hlt
adc
sub
mov
xor
lcall
aad
and
mov
or
adc
and
xchg
mov
fidivl
sti
rcrb
lods
sbb
inc
mov
jecxz
fstps
(bad)
(bad)
mov
or
push
dec
mov
sti
add
mov
adc
add
mov
push
cs
mov
je
inc
out
scas
sti
jle
outsb
test
jo
fdivrs
pop
push
inc
pop
std
dec
pop
div
inc
mov
pop
sub
adcl
test
test
fwait
sbb
(bad)
out
movb
add
test
rcrb
imul
dec
mov
or
data16
cmp
(bad)
jbe
int3
mov
xchg
nop
push
in
and
xchg
adc
and
pop
aaa
ret
dec
cmp
lods
mov
dec
fstpt
push
lods
sub
pop
pop
inc
mov
push
cmp
xor
rcr
pop
or
mov
mov
cmp
pop
xchg
push
in
imul
fs
movsb
test
arpl
add
jge
xor
aad
test
adc
sti
(bad)
outsl
inc
(bad)
adc
jmp
and
xor
daa
gs
adc
out
and
pop
lea
dec
pushf
and
mov
test
pop
fsubp
push
lds
out
push
fidivrs
and
dec
inc
aam
pop
mov
setne
push
mov
sub
adc
stos
fcomp
sub
outsl
mov
xchg
pop
ffree
mov
sti
cmp
xor
sub
and
out
mov
or
and
stos
mov
xchg
push
sub
rclb
adc
outsl
aaa
sub
xlat
and
and
push
mov
stos
les
movsl
push
add
ja
