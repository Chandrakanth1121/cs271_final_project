mov
cmp
add
in
imul
mov
add
mov
daa
inc
(bad)
inc
adc
and
xor
push
je
add
dec
or
add
(bad)
jbe
cmp
cmp
add
mov
pop
adc
inc
mov
cmp
mov
add
test
inc
mov
sub
lods
ss
dec
inc
xchg
mov
ljmp
add
pop
js
sbb
mov
push
ljmp
or
cmp
ret
nop
movsl
mov
sbb
push
clc
ret
and
das
lahf
sahf
orl
fwait
into
push
fs
cmovbe
dec
fwait
std
lahf
xchg
mov
xchg
(bad)
or
test
adc
inc
loop
leave
pop
out
xor
push
cmc
sub
push
xor
push
loop
push
fcoms
es
adcl
(bad)
lods
jae
in
xchg
ret
mov
jp
mov
cli
shl
push
insl
cmp
das
pop
sti
lds
jno
xchg
std
push
ljmp
xchg
fimull
dec
arpl
push
mov
repnz
popa
(bad)
cld
das
int
(bad)
test
dec
adc
push
imul
adc
xchg
je
scas
in
pop
add
cld
jbe
mov
dec
leave
mov
stos
xor
mov
js
mov
mov
inc
mov
sbb
and
pop
sahf
sub
ret
loopne
pushf
sbb
mov
mov
xor
add
or
and
xlat
pushf
fimull
and
fsubs
xchg
daa
pop
test
jmp
loopne
adc
jo
shl
mov
sbb
xchg
dec
add
sbb
dec
inc
aam
push
mov
jae
(bad)
dec
cmp
in
xor
int
je
cmc
mov
ss
negb
cmp
jns
and
rolb
pop
addl
push
dec
mov
inc
pop
cmp
repnz
mov
cmp
je
add
negb
aad
or
cmp
inc
or
mov
or
xor
inc
popa
mov
sub
mov
rol
aas
push
aas
and
push
jg
shll
aas
xor
int3
clc
xchg
das
in
jg
and
jl
lahf
aam
mov
test
and
xchg
mov
sbb
pop
dec
call
dec
cmp
xorl
sbb
and
outsb
inc
mov
xchg
lods
push
leave
cmp
jne
sbb
lods
or
jb
ja
or
and
movsb
test
bound
sub
ljmp
jb
sbb
mov
es
push
push
push
jnp
shll
push
fmuls
push
jno
sub
popa
sub
sar
sbb
repz
(bad)
es
arpl
jge
fwait
push
sub
mov
test
insb
mov
or
pop
or
stos
test
fadds
mov
push
dec
stos
xchg
lock
call
and
mov
out
inc
sbb
outsl
es
test
pop
movb
pop
xchg
mov
xchg
addb
xor
xchg
xchg
xor
jge
add
cli
repnz
div
jae
mov
jp
mov
xchg
add
ds
dec
subl
mov
jb
shll
cltd
lret
dec
mov
fs
(bad)
mov
mov
in
or
mov
cld
shll
push
pushw
je
hlt
and
mov
sysenter
jmp
xchg
push
shr
jmp
ret
jbe
int
push
cmpsl
mov
call
cmp
xor
xchg
dec
inc
cmp
insl
and
mov
leave
xchg
and
xchg
and
sbb
xchg
mov
and
add
pop
sbb
inc
mov
inc
and
int1
loop
xor
jns
cmpsl
sub
or
dec
js
stc
out
cltd
movsl
mov
mov
aam
add
inc
pop
incb
pop
xchg
fs
in
jle
int
jne
push
push
jns
jle
insl
push
cmp
add
cs
pop
jb
fsts
pop
and
sbb
dec
pop
outsl
roll
xchg
lcall
dec
push
mov
pusha
inc
push
int
xchg
div
mov
and
push
int
or
cld
xchg
lahf
mov
dec
out
adc
imul
or
ret
div
(bad)
or
fdivs
push
in
jae,pn
aad
int1
jg
mov
sti
jno
push
shlb
mov
pop
push
ss
jns
cmp
sub
fs
aad
(bad)
adc
push
rclb
je
inc
inc
clc
pop
insb
das
aad
iret
fwait
insl
pop
call
dec
stos
dec
mov
mov
push
(bad)
and
xchg
inc
(bad)
in
cmp
inc
daa
lret
(bad)
cwtl
sbb
cld
fldl
out
out
sub
cwtl
shll
inc
repnz
js
mov
or
fwait
outsl
add
sbb
jnp
pop
cmp
mov
out
orl
adc
es
push
test
hlt
or
lods
pop
fisubl
(bad)
push
mov
push
inc
fistps
xchg
lcall
mov
adc
mov
sti
sub
adc
insl
pop
mull
adc
ljmp
and
dec
dec
jecxz
sbb
adc
xchg
add
inc
lods
cltd
mov
fstps
pop
add
sbb
adc
daa
push
rep
and
jnp
daa
jb
mov
pushf
push
aaa
xor
loop
cltd
sub
lods
(bad)
das
cmpsl
test
adc
and
movsl
and
add
lods
(bad)
pop
dec
adc
add
pop
cmp
fbld
addr16
lods
les
mov
push
inc
aad
pop
inc
xchg
xchg
mov
mov
sbb
or
sbbl
push
xor
add
test
jnp
sub
xchg
and
inc
xor
ficoml
je
sub
pop
xor
int3
pop
inc
push
adc
push
data16
sub
js
(bad)
outsb
js
in
mov
fistpll
push
out
or
and
std
mov
sbb
js
xchg
stc
sti
cmp
nop
dec
sbb
repnz
dec
mov
add
pop
pop
cmp
jno
mov
jecxz
mov
xchg
sbb
loope
sub
addb
xlat
push
jg
ficomps
jb
sbb
(bad)
pop
scas
fisttpl
inc
mov
push
jns
xor
rorl
movsb
pop
sbb
mov
(bad)
sbb
mov
or
mov
and
mov
jae
add
push
fnstcw
xorl
xor
add
rorl
lea
sub
or
lds
out
push
mov
mov
aaa
mov
pop
mov
shl
push
add
pop
imul
in
test
nop
jne
xor
hlt
enter
aam
aad
shrl
jnp
mov
scas
xchg
cs
cs
cmc
dec
jge
iret
jno
jp
gs
out
jmp
cs
mov
xchg
scas
and
pop
ss
xchg
xor
lahf
and
mov
addl
daa
sub
sbb
xor
cwtl
mov
daa
dec
dec
inc
neg
and
fisubrl
pop
mov
pop
mov
cld
mov
outsb
mov
das
hlt
mov
xchg
ffreep
punpckhbw
jl
imul
xchg
(bad)
stc
stc
dec
fisubrl
sbb
sub
adc
push
push
movsl
ds
sbb
bound
test
jg
test
inc
xchg
adc
pop
imul
int3
jge
addr16
xchg
adc
adc
sub
js
cwtl
xchg
fs
push
lcall
push
inc
rol
sub
js
hlt
int
push
push
mov
inc
mov
pop
mov
int1
lcall
adc
xchg
jmp
xchg
jnp
jle
push
jnp
enter
cmp
mov
cltd
sbb
push
mov
mov
pop
fildl
cmc
idivb
cld
insb
jg
repnz
and
nop
and
neg
dec
mov
xchg
sub
mov
insb
sub
call
arpl
push
(bad)
jg
aam
mov
dec
gs
addl
dec
pusha
sti
mov
sbb
mov
xchg
mov
jns
jb
xchg
sub
and
xor
sbb
inc
sub
das
xor
loopne
pop
xchg
jo
pop
mov
test
xchg
ret
mov
shl
mov
adc
sbb
data16
dec
push
shrb
dec
