fisttpll
leave
js
hlt
ja
push
cs
repnz
xchg
push
outsl
rorl
and
push
jmp
adc
lcall
jno
pop
jae
mov
dec
push
lea
enter
enter
gs
pop
cli
lea
or
and
(bad)
push
xchg
jmp
ja
es
rcrb
shr
cmp
mov
pushf
ja
cmp
lea
mov
repz
mov
mov
jo
lods
mov
sbb
stos
or
xor
js
cmp
sbb
into
lcall
pop
fldenv
dec
out
gs
push
cld
jl
lahf
int
sbb
mov
xor
adc
push
ss
inc
jo
sbb
inc
(bad)
xchg
push
mov
mov
sub
jne
sbb
je
xchg
sbb
xchg
in
pop
and
sub
std
mov
push
jmp
dec
or
jl
pop
jns
pushw
adc
mov
cmp
sti
jle
sub
loopne,pn
mov
and
jge
pop
sub
fildll
inc
imul
or
mov
pop
push
xor
lock
and
dec
dec
ret
dec
push
es
xor
xor
and
fcompl
(bad)
mov
daa
push
xor
jnp
xor
stos
mov
(bad)
sub
mov
jg
or
movsb
adc
out
cmc
lcall
inc
pop
cmp
andl
push
cmpsl
cmp
or
and
out
dec
add
repz
inc
fs
imul
dec
add
imul
xor
(bad)
ljmp
mov
faddp
mov
and
sbb
xchg
adc
sbb
sbb
out
sub
ss
jae
fcoms
and
inc
mov
adcb
std
js
mov
mov
data16
sbb
jb
cli
push
pop
inc
cli
cwtl
cltd
call
pop
xor
rorb
sbb
push
add
mov
sahf
or
pop
out
in
sarb
xchg
prefetch
xchg
push
repnz
and
jno
and
or
sbb
sub
push
and
cli
rcrl
lods
xlat
push
or
pop
cmp
xchg
push
int1
push
jb
cmp
(bad)
jb
call
and
jmp
sbb
pop
pop
mov
sbb
ret
lret
std
lods
jae
pop
int1
nop
push
or
jne
stc
cwtl
scas
dec
adc
dec
jge
je
aas
fistpl
xor
mov
ret
jecxz
xorb
mov
dec
cmp
movsl
jae
out
xchg
pop
jo
(bad)
out
hlt
mov
pop
je
test
ret
call
rolb
push
in
push
ja
out
popf
dec
jge
pop
pop
cmp
xor
test
or
rclb
xchg
movsl
sbb
bnd
popf
aas
repz
test
cltd
rclb
arpl
adc
push
arpl
addr16
sub
mov
in
xchg
aam
sub
lock
popa
subl
push
jbe
push
(bad)
adc
inc
jb
fisubl
loopne
pop
pop
pop
mov
inc
xor
push
(bad)
cmp
data16
std
in
sbb
jmp
es
lret
shlb
inc
mov
fs
pop
adcb
fidivs
push
aas
and
jle
int
pop
and
(bad)
nop
rorb
jge
lahf
lea
in
jge
and
mov
bound
sub
lret
or
pop
(bad)
divb
clc
call
js
cmp
fisubrl
mov
xchg
push
test
imul
lea
clc
fwait
outsl
shll
xchg
add
int
and
lock
jo
dec
stc
mov
fwait
add
es
ret
movsl
push
sti
or
mov
nop
jmp
in
je
test
pop
mov
sbb
push
lods
std
push
push
pop
jmp
aad
adc
push
das
jecxz
mov
cmp
pushf
push
int1
mulb
sub
out
push
xlat
outsl
xchg
clc
sub
cli
repnz
or
into
hlt
repnz
or
leave
sub
lahf
adc
inc
aad
clc
dec
insl
(bad)
aad
outsb
lds
daa
out
insl
mov
jae
popa
dec
mov
cmp
incl
adc
dec
xor
mov
push
testl
(bad)
push
jnp
clc
cmp
xlat
or
push
stos
jb
dec
xorb
sbb
dec
cmc
int1
jno
inc
sub
jg
mull
adc
xor
enter
inc
aaa
jns
mov
push
popa
cld
pop
movlps
fadds
imul
mov
push
add
lock
add
mov
and
inc
dec
ds
jbe
pop
pop
enter
jo
add
pop
inc
js
push
xor
or
xchg
outsl
mov
adc
jns
add
and
mov
das
mov
adc
pop
stc
es
xchg
inc
push
imul
xchg
(bad)
fmuls
insl
popa
sbb
sbb
shlb
add
out
jns
jmp
sub
out
stc
cwtl
lods
js
and
jo
data16
mov
mov
sub
or
adc
pop
test
dec
ljmp
mov
fimuls
add
fwait
dec
mov
push
bound
or
loopne
adc
or
inc
sub
or
and
lods
dec
cmc
aam
push
popf
insb
sbb
bswap
pop
xor
inc
xchg
subb
outsl
into
out
nop
mov
or
test
idivl
lods
ss
mov
adc
cmpsl
sbb
pop
pop
and
gs
jne
sbb
cmpsl
xor
imul
call
push
insb
push
and
test
and
mov
mov
gs
call
xchg
inc
or
dec
outsb
mov
xor
int1
mov
mov
xor
sub
repnz
call
mov
aaa
sub
stc
mov
push
xor
out
and
lock
and
dec
jne
sub
testb
mov
(bad)
xor
jno
dec
push
fidivrl
jle
stos
cs
inc
mov
test
lea
push
loope
insl
push
cmpsl
pop
jl
xchg
inc
outsb
in
dec
jno
out
push
adc
pop
ljmp
pop
out
push
stos
add
mov
mov
scas
xor
mov
pushf
cmp
mov
adc
push
shl
test
lea
jmp
in
nop
lds
pop
sub
or
lock
cmp
lahf
pusha
xlat
jbe
cmpl
cmp
in
lods
pusha
xor
cmc
adc
or
pop
mov
dec
iret
pop
xor
dec
popa
iret
mov
movsb
adc
enterw
es
cltd
pop
xor
cmp
rorb
sbb
xor
dec
inc
xchg
jg
sub
pusha
leave
andl
sub
rcrb
xchg
xchg
daa
inc
add
cmp
pop
nop
cmp
xadd
adc
dec
popa
outsb
cmp
ret
or
ret
jmp
je
xor
test
push
frstor
pop
or
jb
push
pop
cs
xchg
shr
loope
enter
pop
dec
sbb
or
cmp
and
imul
sub
std
test
adc
repnz
ds
popf
in
dec
test
xor
cs
test
out
aam
and
mov
in
outsl
adc
mov
ljmp
adc
(bad)
test
test
repz
sbb
sub
push
js
adc
fisttpl
add
test
or
cmpl
(bad)
(bad)
outsb
jo
mov
popf
daa
jb
cmp
imul
lea
mov
xchg
ljmp
xchg
jae
repnz
jle
xchg
mov
adc
in
inc
cli
insl
xchg
repz
clc
pusha
loope
in
pop
out
lahf
cmp
(bad)
insb
outsb
js
cmp
sub
push
aas
aas
cmpsl
mov
cmp
jo
inc
mov
push
sub
inc
bound
test
aaa
insb
jne
push
xchg
inc
xor
jg
fsubs
jecxz
inc
add
mov
outsl
cld
pop
add
sbb
je
adc
aas
data16
rclb
into
nop
subb
jg
dec
mov
mov
add
scas
pop
pop
lea
cmpsl
inc
push
repz
fs
cmp
sbb
flds
xorl
incl
movsl
pop
cs
adc
xchg
test
in
hlt
addr16
mov
in
lret
jl
dec
