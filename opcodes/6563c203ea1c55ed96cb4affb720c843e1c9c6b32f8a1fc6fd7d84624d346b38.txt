sbbb
add
add
add
add
add
add
test
add
add
add
push
pusha
cwtl
add
call
add
add
lcall
xor
cmpsl
sbb
sbb
in
inc
mov
punpcklbw
pop
fildl
mov
inc
into
add
in
enter
jbe
push
inc
add
cli
hlt
jg
out
dec
sub
and
les
push
jl
cmc
outsb
inc
sbb
mov
stos
lods
or
cltd
bound
and
ret
sbb
cmp
std
sub
xor
xchg
cmpb
and
push
sbb
ds
rolb
jno
imul
into
jge
sbb
push
inc
pop
jns
xor
dec
jae
cltd
int1
stos
rorb
lret
test
repz
jmp
loop
inc
pushf
push
push
mov
cmpsb
xchg
stc
or
add
cmp
pushf
mov
lcall
mov
rorb
lods
in
aaa
inc
jbe
xchg
in
pop
push
jl
call
imul
aaa
mov
jne
das
loope
or
nop
dec
inc
cmp
das
scas
or
inc
jne
fisubrs
xor
mov
fadd
movsb
(bad)
mov
movsb
je
sbb
sub
sti
lods
adc
popf
fcoms
rcll
imulb
or
int3
repz
push
push
out
(bad)
push
dec
mov
hlt
adc
adc
shlb
jne
push
pushf
jno
adc
xchg
outsb
aaa
jl
and
data16
sub
inc
stc
push
cmpsl
mov
xchg
insl
lods
jne
popf
lret
mov
jb
(bad)
pop
dec
sub
scas
add
ja
push
push
add
mov
pop
fnstenv
adc
xchg
jae
lods
xchg
es
pop
setge
in
clc
jl
adc
cwtl
push
or
scas
fistpll
xchg
pop
cmc
dec
inc
inc
bnd
fdivl
mov
cmp
loop
popf
xchg
fsubrl
pop
mov
push
lret
scas
aad
or
pop
or
pop
out
daa
imul
lods
repz
ret
mov
inc
jp
mov
push
dec
jge
ja
pop
into
stc
push
sbb
push
dec
aad
cmc
lock
ds
out
lock
leave
ja
in
lea
faddl
sbb
popa
repz
out
movsl
sub
imul
mov
js
(bad)
push
mov
xor
hlt
adcl
inc
pop
popa
cmp
ds
jae
insb
mov
fnop
pop
pop
pop
loop
lea
clc
hlt
fcmovu
add
enter
xor
xchg
iret
js
add
pop
rcl
ret
rcll
mov
sti
fcmovb
sti
jb
les
push
mov
xchg
roll
xchg
lods
pop
js
lods
out
out
paddb
push
fisttpll
cmp
jg
int
pop
adc
xor
fwait
into
mov
stc
lcall
dec
and
jp
aaa
inc
or
mov
pop
pop
mov
cwtl
cmpsl
mov
cmp
cmpsl
stc
(bad)
(bad)
mov
in
xchg
aad
ret
pop
inc
push
jmp
test
ljmp
aam
pop
inc
and
dec
adc
inc
push
xlat
mov
mov
cmp
push
and
(bad)
mov
mov
outsl
adc
in
fisubrl
or
ret
pop
and
movsl
and
aam
subb
add
(bad)
adc
test
dec
mov
mov
push
jge
daa
daa
mov
leave
sub
out
push
js
fstpl
add
(bad)
or
mov
sub
cltd
(bad)
push
pop
xorl
xchg
cmc
or
mov
loop
jmp
mov
and
(bad)
pop
bound
xchg
push
or
pop
sub
mov
xchg
aaa
repz
dec
fcompl
jmp
mov
adc
in
add
jo
mov
fcompl
fistl
pop
push
mov
dec
repz
sbb
cmc
pop
fucomip
nop
xor
(bad)
(bad)
out
add
adc
or
ret
int3
into
ret
xor
dec
pop
in
adc
push
inc
iret
in
push
or
(bad)
in
les
sub
lret
push
ret
jp
lret
sub
clc
push
scas
not
andnps
aam
mov
shlb
jae
ret
xchg
inc
add
bound
xor
push
mov
fsubrl
inc
xor
xchg
xchg
mov
sahf
loop
jl
js
shlb
imul
int
ret
and
pop
data16
pop
jecxz
scas
inc
ret
negl
adc
lock
(bad)
out
push
sbb
(bad)
scas
jo
rcl
dec
jnp
xchg
jne
mov
pusha
cmc
mov
push
or
(bad)
dec
shlb
int
das
inc
adc
fdivs
inc
aaa
repnz
into
push
jecxz
incl
shrl
loope
dec
jmp
outsb
jg
sbb
or
add
or
das
sub
fucomi
jno
ret
adc
sub
jp
stos
div
xchg
adc
les
movntq
cmpsl
jns
stos
mov
and
daa
int1
adc
cmp
mov
hlt
in
dec
popa
xor
inc
(bad)
mov
out
int
cs
les
fimull
aaa
push
push
je
bound
ret
addr16
movsl
jo
cmp
mov
xchg
arpl
out
xor
xchg
push
and
(bad)
cltd
test
mov
sub
lods
lcall
stos
xchg
mov
xchg
shll
xchg
push
cmp
xchg
adc
imul
cmp
iret
pop
scas
mov
xor
dec
fsts
and
adc
arpl
cmp
inc
push
adc
cs
fidivl
pop
stos
lea
xchg
cld
xchg
dec
mov
fisttpl
stc
lret
cmp
xchg
int1
mov
ficoms
out
sarl
movsb
cs
addb
xchg
add
sub
sbb
xor
jae
stc
mov
rcrb
add
mov
dec
xor
jg
std
sub
sahf
jge
xor
jmp
adc
push
sahf
rorb
jbe
and
add
idiv
les
iret
loopne
jecxz
lret
pop
scas
xchg
inc
popf
popf
pop
mov
mov
xchg
lahf
iret
xchg
add
in
and
sub
mov
jg
ficoms
int3
scas
adc
or
bound
(bad)
jno
adc
push
std
pop
sti
loopne
(bad)
out
mov
inc
lds
pop
and
fstpl
jbe
ss
movl
arpl
cmc
popa
popf
push
iret
push
repnz
stos
fwait
cs
jne
lea
inc
fs
mov
lea
cmp
lret
shrb
lods
lds
sahf
stos
test
int
lcall
out
push
dec
push
adc
aam
mov
nop
xchg
mov
lea
or
adc
sbb
mov
mov
jmp
in
xlat
shrb
(bad)
fsubl
mov
sti
mov
and
mov
xchg
dec
(bad)
cmpsb
mov
stos
es
stos
sbb
pop
mov
rcrb
(bad)
lahf
(bad)
aas
jle
sub
fdivs
mov
dec
repnz
pop
in
adcb
das
mov
mov
lods
imul
fdivs
ja
mov
lods
shlb
(bad)
repnz
push
scas
lea
cld
arpl
add
in
and
and
in
push
pusha
xor
inc
int
jnp
jnp
jmp
ja
rorb
inc
jae
scas
mov
mov
ljmp
pop
in
mov
cli
pop
dec
mov
cld
lea
push
test
push
fmuls
pop
repz
mov
std
cld
es
and
sbb
and
stc
(bad)
cmp
lds
or
mov
adc
ja
aas
and
xchg
loopne
xchg
inc
aad
js
lea
ss
fwait
movsb
add
mov
das
adc
and
roll
clc
inc
adc
jecxz
fdivrl
sub
pop
pop
adc
mov
aad
mov
movsl
jle
lea
jge
daa
adc
push
xor
ret
adc
cld
cltd
into
fscale
xor
push
subb
mov
in
push
push
xchg
call
mov
push
push
and
mov
sbb
adc
loop
jle
sub
mov
mov
fists
lret
