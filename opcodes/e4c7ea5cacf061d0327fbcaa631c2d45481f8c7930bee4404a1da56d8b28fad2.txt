xchg
(bad)
or
xchg
mov
in
lahf
sub
daa
fildll
push
pop
cmp
daa
repz
xor
sbb
pop
mov
cmp
iret
pushf
sbb
mov
jnp
add
adcl
fsubrp
cmpsb
adc
dec
outsl
xchg
sbb
popa
xchg
daa
add
das
pop
cs
mov
(bad)
shll
daa
pop
xchg
es
jmp
hlt
rcl
xor
cmpsl
adcb
popa
(bad)
xor
sub
sub
daa
aad
lcall
sbb
into
or
shlb
sbb
push
(bad)
cmp
inc
fmulp
or
jmp
inc
xchg
int1
push
and
ja
cmp
ja
sub
xor
sub
lods
sub
pusha
push
dec
je
mov
inc
xchg
pop
mov
ss
jmp
push
fs
push
pop
repz
daa
push
sbb
pop
fwait
or
pop
adc
and
pop
shr
push
movsl
sub
or
stos
cli
jno
pop
sbb
repnz
imul
inc
xor
xchg
pop
scas
adc
negb
movsl
rolb
sub
inc
mov
popa
out
shl
dec
(bad)
jnp
sub
arpl
shll
arpl
dec
jecxz
(bad)
(bad)
inc
leave
xor
nop
lods
das
and
adc
stos
call
(bad)
mov
pop
scas
(bad)
jns
cs
(bad)
lods
int3
scas
fldcw
sbb
and
lods
push
movsl
cltd
or
cmp
cmp
lret
add
pop
mov
jle
adc
push
push
adc
mov
iret
xchg
mov
pop
popf
in
add
push
and
rorb
or
jne
(bad)
or
pop
rcr
adc
xlat
adc
pop
mov
imul
adc
in
imul
cmp
lea
inc
popf
pop
inc
mov
mov
or
lea
iret
sub
movb
test
es
add
xor
pop
lock
imul
notb
mov
jne
subb
fsubrs
das
mov
jb
es
xchg
and
lcall
cmp
push
int3
pushf
jns
lahf
dec
mov
mov
jge
xchg
scas
(bad)
clc
dec
(bad)
cmp
xchg
cmp
filds
adc
mov
adc
loopne
jl
std
fdivrp
pop
mov
and
mov
js
jg
sti
xchg
inc
adc
bound
rcll
jecxz
test
xor
xor
and
rclb
mov
cmp
into
fbld
sbb
repnz
mov
adc
lea
sbb
mov
push
jmp
arpl
push
pop
add
or
xor
dec
repz
mov
mov
dec
adc
and
adc
(bad)
and
ret
add
xchg
sub
mov
(bad)
pop
mov
adc
xor
inc
mov
scas
(bad)
pop
je
or
stos
je
out
pop
add
hlt
and
and
roll
repnz
cltd
xchg
scas
fbstp
movsb
or
mov
popf
lahf
adc
punpcklwd
fldenv
dec
adc
adc
filds
insl
push
xchg
lock
push
or
movsl
js
repz
cs
push
push
mov
sbb
sbb
push
insl
inc
mov
inc
nop
hlt
fisubs
test
mov
sub
fsubl
xor
or
or
mov
cmp
xchg
test
lock
mov
mov
scas
movsb
neg
outsb
lahf
and
pop
dec
mov
mov
pop
sbb
mov
lcall
mov
cmpsl
xor
lea
negb
jne
or
adc
bts
movaps
das
movsb
in
outsl
loop
les
push
mov
lcall
int
rorl
jp
lret
cmpsb
roll
fadd
adc
retw
nop
ds
jge
cmp
shll
faddl
mov
inc
xchg
push
jl
(bad)
ret
insb
mov
in
push
cmp
mov
outsl
and
push
movsb
jp
aam
jae
in
pop
pop
lods
outsl
cwtl
cmp
cmp
and
xchg
in
sahf
push
pop
fidivl
xchg
insb
mov
push
roll
push
and
xchg
sub
sbb
bswap
jne
cmp
mov
cs
into
add
add
out
ret
xchg
in
ja
mov
adc
ja
or
push
xchg
(bad)
push
jnp
cmpsl
out
push
test
push
mov
or
xor
pushf
mov
sbb
add
jns
inc
push
sahf
(bad)
pop
jl
pop
negl
xchg
cwtl
fistl
push
mov
mov
aam
lahf
negl
push
in
dec
cmpsb
add
lods
(bad)
fst
stos
es
inc
lods
dec
jecxz
lea
ljmp
adcb
sahf
data16
out
push
(bad)
sbbb
pusha
xchg
pop
xlat
sbb
cmpsb
cmp
int1
test
ds
jp
push
out
cli
dec
or
cli
cld
inc
adc
mov
inc
lods
mov
sbb
lcall
adc
and
mov
fisubrl
ds
scas
cltd
cmp
mov
dec
mov
xor
xorb
inc
pop
xor
std
dec
xchg
mov
pop
outsb
mov
(bad)
nop
sub
dec
push
push
cli
lods
mov
out
fsubs
outsb
cmpsl
repz
mov
cli
lcall
(bad)
cwtl
(bad)
data16
lahf
xor
stc
das
pusha
gs
(bad)
sub
mov
js
bound
pusha
dec
jne
outsl
or
fidivl
push
sahf
in
inc
cmp
lods
popf
xchg
xchg
(bad)
push
push
dec
mov
mov
xor
jae
fistpll
sbb
fiaddl
jno
push
adc
mov
xor
addr16
mov
mov
push
popa
cld
add
inc
push
mov
imul
adc
mov
mov
sbb
lcall
js
mov
cmc
adc
add
xlat
test
movsl
iret
xrelease
jb
repnz
fidivs
loopne
xchg
in
add
lcall
das
and
fwait
jbe
mov
add
mov
adcb
int1
push
cmpsl
les
add
mov
xchg
jecxz
(bad)
mov
sarb
insb
or
scas
cltd
jl
orl
(bad)
adc
push
cmp
mov
(bad)
out
mov
and
push
cmpsl
jg
push
dec
pop
mov
sub
add
adc
cmc
jno
lret
add
mov
add
dec
retw
sub
dec
jp
dec
aam
lock
sub
out
mov
sbb
fwait
mov
mov
xchg
jge
test
dec
lods
and
inc
in
inc
and
fsubrs
(bad)
mov
push
popf
outsb
jp
jo
adc
sarl
pop
test
lret
adc
call
ret
jge
adc
sub
lret
or
imul
mov
inc
add
clc
xor
addr16
js
pusha
sbb
shll
mov
push
mov
xor
jno
dec
jo
jle
sbbb
dec
ljmp
imul
int1
jb
push
lea
add
jb
addr16
cli
xchg
mull
cmpsl
(bad)
dec
rorl
add
sub
xchg
xor
fwait
or
daa
mov
mov
dec
int
aad
xor
lods
mov
cmpb
in
xchg
mov
jb
pop
syscall
addb
mov
push
jmp
lahf
lahf
add
cs
ret
push
divb
inc
push
sub
out
pushf
mov
popf
dec
(bad)
sbb
dec
mov
xlat
fs
adc
mov
lret
mov
sbb
outsl
das
push
mov
out
and
xlat
jp
mov
cltd
stc
cs
xor
and
cmpb
pop
sub
mov
xchg
push
xchg
mov
mov
lret
jbe
lods
add
xchg
mov
outsb
mov
sub
fisubl
test
stc
ss
jae
pop
(bad)
insb
adc
jne
jp
inc
push
lret
rcll
fwait
pop
test
nop
jb
cmc
aaa
jo
sub
mov
xor
cmp
push
xor
leave
cmp
jbe
push
repz
mov
loop
test
in
aaa
mov
lods
rcrb
inc
ja
jo
and
xchg
inc
(bad)
lret
out
int
sub
ljmp
sub
jle
mov
and
xlat
inc
dec
pop
rorb
outsl
push
inc
