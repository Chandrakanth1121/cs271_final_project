xchg
and
or
hlt
je
dec
inc
sbb
das
mov
sbb
xchg
dec
dec
cmp
xchg
or
inc
ret
sub
pop
push
cs
mov
fcomip
pop
or
xchg
sahf
sub
adc
std
jne
cmp
je
mov
add
mov
sbb
push
movsb
sbb
cmc
cmp
pop
xchg
std
out
adc
cmp
and
pop
rcll
pop
cmc
dec
mov
js
lds
mov
lods
xchg
(bad)
jb
rolb
repz
pop
adc
mulb
sub
dec
ljmp
sbb
jge
inc
adc
push
test
cmp
ss
movl
push
imul
cmp
cmp
push
(bad)
sub
arpl
sarl
inc
fsub
ljmp
hlt
adc
xchg
adc
data16
cmp
ljmp
fbld
sbb
xchg
test
jne
cmc
mov
mov
(bad)
lahf
sbb
enter
inc
dec
or
pop
test
sub
lea
cmp
subb
lahf
push
lahf
mov
mov
dec
dec
mov
dec
mull
shrb
xorl
or
in
cmp
fidivrl
sub
dec
nop
cld
xor
outsb
hlt
push
lahf
inc
in
imul
push
mov
dec
sub
outsl
pop
(bad)
sbb
push
push
cmp
push
ficompl
jecxz
push
push
hlt
mov
ret
mov
test
mov
(bad)
dec
gs
out
pop
cmp
jb
pusha
sub
jle
aaa
push
sbb
ss
lds
lahf
int1
mov
(bad)
mov
mov
or
test
jae
sarl
mov
and
pop
sbb
(bad)
mov
pop
jmp
aas
test
push
(bad)
ljmp
adc
dec
int
pop
pop
fdivp
arpl
movsb
out
inc
movsl
loop
dec
pushf
dec
or
hlt
add
jl
loop
iret
sbb
sbb
fiadds
pop
shl
push
hlt
in
cmp
dec
mov
mov
lods
in
movsb
fistpll
sbb
push
mov
daa
sarl
xchg
lcall
aad
xchg
shll
cmpsb
sub
adc
fld
(bad)
xchg
cmp
cwtl
adc
dec
push
adc
ds
sbb
lods
dec
xlat
cltd
xor
stos
and
lods
stc
shll
dec
inc
inc
in
mov
or
mov
sbb
dec
inc
cmpsb
dec
cmp
shrl
idivl
xlat
sbb
dec
and
mov
insb
data16
shrd
mov
sbb
dec
mov
pushw
sbb
jge
pusha
enter
and
pusha
and
js
mov
cmp
lods
test
xchg
adc
xchg
int1
sub
push
outsl
loopne
lods
jbe
lret
cltd
lds
movsb
loopne
jmp
push
sub
sbb
add
enter
subb
insl
mov
(bad)
scas
ljmp
fbstp
lcall
sbb
add
notl
cltd
int3
out
xor
fstp
add
jle
jecxz
push
pusha
cmp
adc
xor
jo
xor
inc
adc
xchg
mov
movsl
rcl
mov
popf
into
dec
lahf
(bad)
in
lret
jle
mov
jo
loope
into
mov
faddl
ror
into
fnsetpm(287
and
addr16
mov
inc
mov
add
push
dec
in
pop
outsl
lea
insl
out
push
sbb
mov
pushf
mov
roll
pop
repnz
sub
or
adc
dec
aad
inc
push
les
push
ret
jl
jge
jle
(bad)
jnp
cli
enter
orb
(bad)
fisttps
in
arpl
jl
push
mov
inc
loop
enter
pop
cmp
loopne
or
push
stc
xor
mov
loopne
frstor
rorb
mov
add
imul
push
sbb
mov
outsb
in
and
repnz
cmp
xlat
xlat
loopne
aad
jp
mov
xchg
push
pushf
nop
lds
cmp
mov
mov
push
ss
pop
out
stos
mov
fldl
xchg
fistpll
cmp
addr16
out
popa
negl
push
fcoms
mov
ljmp
jmp
cmp
(bad)
fldl2e
adc
mov
jne
jp
jge
mov
cltd
sbb
int3
add
aas
lods
dec
lods
lds
mov
fcoml
inc
sbb
sbb
repnz
push
push
or
mov
xor
inc
or
mov
mov
or
or
sarl
pop
xchg
loop
fistpl
or
push
mov
andl
xor
int3
bound
shrd
fists
std
and
mov
test
cmpsl
ror
fwait
cli
mov
mov
enter
push
je
out
arpl
cmp
or
cmc
ret
mov
loope
enter
out
shll
or
pop
(bad)
xchg
pop
cli
cmpsl
(bad)
call
fimuls
es
leave
mov
aad
and
mov
cmpsb
xchg
aaa
outsl
jnp
inc
push
sarb
sub
nop
dec
dec
mov
adc
imul
pop
repnz
fdivl
or
dec
popf
jo
pop
pusha
pop
cmpsb
lahf
dec
(bad)
pushf
or
ja
repnz
push
rep
cmp
fwait
popf
cmpsl
add
jnp
mov
out
lcall
(bad)
dec
out
movsb
in
push
xlat
mov
enter
je
mov
sets
imul
mov
push
js
fisttps
pop
mov
(bad)
sbb
push
je
fstps
les
mov
fsubrp
mov
cld
ss
scas
les
push
leave
lock
and
addr16
lds
xchg
mov
f2xm1
jmp
push
xchg
ljmp
iret
or
jle
inc
dec
sbb
rcl
loopne
push
lea
sub
mov
daa
jo
and
or
repz
ret
cmpb
int
adc
daa
insl
adc
sbb
int3
test
cmp
mov
test
sbb
hlt
(bad)
push
cwtl
leave
pop
aad
cmp
outsl
shl
cltd
mov
xor
lea
sti
jge
ficoms
push
sbb
mov
std
rcll
int3
cs
mov
adc
movsb
jo
adc
fidivs
or
sahf
int1
or
mov
cs
pop
mov
push
jnp
cld
xor
repnz
sbb
es
stos
aas
mov
es
push
jae
mov
mov
daa
mov
sub
cmpsl
cmpxchg
int3
push
orb
cmpsb
dec
stos
nop
push
lahf
xlat
call
lds
inc
jge
(bad)
and
fimuls
cltd
sub
sahf
or
pop
adcb
mov
mov
ja
nop
cmp
dec
push
fcmovnu
xchg
lcall
aam
ffree
sbb
mov
pop
js
jne
shlb
or
je
adc
dec
dec
loop
pop
inc
lcall
push
loopne
dec
lret
mov
iret
pop
cltd
aam
sbb
cmp
outsl
sbb
dec
xchg
sub
pop
jl
popf
addr16
pop
inc
xlat
fwait
hlt
dec
sbb
mov
fsts
sbb
push
lret
jg
xchg
lods
cld
mov
lret
sub
mov
into
sbb
push
inc
inc
jg
fs
mov
in
imul
add
outsl
imul
fnstsw
push
scas
mov
xor
(bad)
xchg
pop
out
rcll
fs
cmp
push
test
cmp
outsl
cmp
inc
mov
inc
and
repnz
hlt
sbb
lret
pop
xor
ret
fwait
sbb
iret
addr16
mov
ret
xchg
outsl
mov
int
fmuls
popf
sbb
je
repnz
adc
fsubl
dec
cmpsl
push
stos
pop
dec
jnp
outsl
xor
jbe
jge
mov
aam
push
sahf
(bad)
in
enter
xor
clc
mov
repz
pop
int1
les
loope
jne
lahf
int1
sub
sub
ret
cmp
std
dec
cmp
shl
dec
ljmp
xchg
mov
pop
add
ret
in
cmpsl
or
or
lahf
sbb
(bad)
arpl
arpl
imul
add
lds
push
repnz
add
add
sbb
mov
imul
leave
es
or
inc
cmp
into
fisubl
mov
pop
das
pop
and
lods
xor
dec
xlat
sti
xchg
out
lea
push
repz
js
push
mov
rcll
