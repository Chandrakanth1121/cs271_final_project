xor
xor
add
pop
and
xor
idivb
(bad)
add
sbb
add
add
sbb
add
add
int1
or
add
rex.xb
scas
add
mov
movabs
rex.wrxb
mov
cmpsb
sub
xor
(bad)
jg
cmc
cs
push
mov
sub
push
sbb
rex.xb
loopne
or
in
nop
jne
lret
push
jo
rex.r
enter
cmp
(bad)
pop
rex.x
adc
cs
mov
jnp
(bad)
xchg
fwait
or
ss
movsb
pop
ret
xchg
jg
es
and
mov
hlt
sub
xchg
ret
in
cs
imul
pop
or
xchg
fstps
notb
jo
mov
rex.b
(bad)
and
mov
ret
jg
xchg
(bad)
cs
ret
bswap
(bad)
fnsave
int
(bad)
rex.xb
test
(bad)
mov
mov
cwtl
(bad)
stos
pop
sub
rolb
fstl
enter
push
rex.x
pop
loope
js
and
jnp
cld
lret
pop
sub
sub
add
shll
or
jno
in
hlt
sti
test
rex.b
and
in
lea
push
test
rex.rxb
std
rcrl
mov
mov
mov
or
jp
cltd
movsxd
sub
push
jnp
jl
jp
rex.r
rcl
sub
xchg
add
jp
rex.b
imull
in
mov
jge
(bad)
jns
lret
(bad)
(bad)
rex.b
rex.rxb
call
adc
outsl
loope
add
pop
lock
mov
shrb
movsxd
jno
(bad)
leave
xchg
rex.wrx
std
int3
adc
cmp
ss
push
jmp
xchg
jne
movsxd
imul
mov
stc
(bad)
in
or
pop
hlt
jns
jmp
jle
mov
adc
lret
rex.rb
scas
push
add
push
rex.rb
cmp
loop
mov
insl
jbe
ds
(bad)
loop
(bad)
rex
jmp
and
rex.rxb
adc
imul
rorb
mov
cmp
negb
adc
xlat
lods
sbb
rex.wrxb
rex.wb
outsl
jmp
iret
push
in
or
neg
jb
adc
cmp
lods
rex.r
rex.wxb
cmpsb
sbb
(bad)
push
or
(bad)
ss
loopne
pop
xor
cmp
jnp
mov
cld
(bad)
movsxd
mov
rex.rxb
(bad)
xor
sar
ss
movsb
movabs
(bad)
xchg
pop
sbb
sub
(bad)
jno
or
mov
push
movabs
lods
mov
cmpsb
(bad)
test
(bad)
pop
sub
rex.w
sub
mov
(bad)
(bad)
(bad)
rex.wrxb
jb
out
sub
cmp
test
add
and
(bad)
sub
movabs
int1
jge
xchg
rex.wx
ret
mov
loopne
xor
and
imull
sbb
mov
(bad)
xchg
or
mov
rex.b
data16
call
(bad)
sub
push
(bad)
mov
(bad)
xchg
add
(bad)
push
ss
and
(bad)
mov
mov
(bad)
adcl
adc
jno
sbb
adc
nop
(bad)
stos
rex.rb
mov
push
add
and
imul
jbe
rex.wx
(bad)
jo
cmp
ds
and
and
xor
call
(bad)
test
fucom
mov
mov
scas
rex.wxb
and
jp
int
lock
cmp
mov
(bad)
and
cmpl
lea
or
rex.wrxb
pop
xor
sub
(bad)
push
shrl
rcll
xchg
andl
xor
(bad)
(bad)
jns
add
or
(bad)
cwtl
(bad)
jnp
rcrb
sbb
sbb
xor
in
js
mov
movsl
(bad)
mov
and
sbb
(bad)
in
lods
lods
cmc
add
jae
outsl
rex.rb
add
jne
nop
mov
rex.wx
adc
movabs
add
and
fs
adc
sub
(bad)
mov
fsubs
sbb
cmpsl
wrmsr
(bad)
mov
(bad)
call
(bad)
sub
leave
lods
lea
cld
(bad)
(bad)
(bad)
filds
subb
xor
test
mov
and
in
adc
jbe
add
sahf
fidivrl
adc
cmp
fstl
rex.x
jns
loop
ds
lea
cli
pop
lock
lock
repnz
(bad)
scas
mov
mov
movsb
out
imul
imul
outsl
sbb
jle
shlb
adc
addr32
or
xor
mov
enter
xchg
push
(bad)
iret
jb
cmp
xchg
sub
stos
jae
sub
cmp
sub
pop
(bad)
fsubrs
sub
gs
lock
add
jnp
out
test
test
cmp
sti
cmpsb
jmp
cs
mov
outsb
and
sub
loope
add
loope
test
jle
xor
mov
fdivrp
mov
scas
(bad)
(bad)
(bad)
outsl
xor
rex
sub
push
or
out
(bad)
rex.xb
push
jle
movabs
adc
scas
fisubl
(bad)
fildl
xor
(bad)
outsb
in
xchg
ficomps
xor
rex.rxb
rcll
pushf
test
pop
or
(bad)
imul
in
out
xor
jns
adc
fldl
leave
(bad)
mov
lahf
mov
je
jle
adc
lret
rex.wxb
(bad)
mov
nop
mov
sbb
int3
(bad)
and
(bad)
insl
lahf
int
(bad)
(bad)
rex.wxb
int
jge
pop
xchg
jnp
sbb
xchg
rex.rx
(bad)
test
mov
mov
ss
mov
outsl
mov
movabs
sbb
fsubs
xor
xor
(bad)
sub
mov
lret
adc
(bad)
outsl
(bad)
xchg
out
out
sbbb
add
test
nop
test
rcll
movabs
ret
test
fisubrl
movabs
fwait
test
stos
or
test
rex.r
and
jnp
cmp
rex.rxb
jo
test
xor
(bad)
enter
out
sub
jae
pushf
xor
pop
push
cs
sbb
add
and
xlat
push
and
fidivrs
(bad)
rex.rxb
repnz
stos
(bad)
movabs
sub
sarl
movsxd
out
push
cwtl
movabs
adc
sbb
mov
fisubrl
jl
pop
gs
rorl
lret
rex.rxb
pushf
or
out
rex.rb
mov
and
mov
movabs
movabs
jbe
(bad)
(bad)
loop
push
mov
lock
cld
rcl
jp
scas
add
xor
es
out
and
cmp
cwtl
fsub
and
rex.wrb
imull
xchg
int1
test
fsubl
repz
xchg
rex.rb
(bad)
xlat
rex.rxb
int1
rex.wr
sub
in
push
adc
std
pop
sub
jae
movabs
sub
rex.wrb
xchg
lret
ret
rex.wrb
rex.rxb
mov
lcall
xor
mov
sti
sbb
(bad)
out
mov
jle
stc
jrcxz
(bad)
sub
notb
frstor
movsl
movsxd
repnz
(bad)
int
pushf
sub
sbb
fsubrs
mov
gs
vpsllw
leave
sub
cli
cltd
and
test
(bad)
sub
push
ss
fbld
adc
in
fsubrl
mov
push
jb
outsl
lods
jg
es
pop
out
push
movabs
mov
rex.rb
rex.wxb
rex.wr
in
int3
call
pop
ficomps
movabs
ja
(bad)
xchg
fs
rex.r
push
xchg
xchg
int1
xchg
(bad)
(bad)
(bad)
jbe
push
repnz
jmp
(bad)
clc
ret
cmpl
sti
fsub
xor
jbe
ret
sbb
add
leave
cwtl
sbb
adc
(bad)
xor
sbb
rex.wrb
rex.wrx
mov
sub
push
out
stc
rex.wxb
in
jp
and
rex.rb
leave
fiaddl
mov
addb
mov
lods
lods
mov
sbbb
adc
loop
and
outsb
hlt
xor
repz
mov
in
rex.rxb
sub
insb
shll
nop
and
push
stc
jmp
in
sahf
mov
xchg
push
call
xchg
add
push
cmp
cli
mov
cmp
mov
lea
(bad)
xor
push
or
loope
adc
fnstsw
cld
cmpb
cmpxchg
add
(bad)
(bad)
push
in
rcl
test
repz
mov
mov
jnp
cmpsl
rex.x
mov
rcr
or
xchg
xlat
jno
sub
test
push
int1
mov
mov
fstl
out
jne
neg
stos
pop
cli
and
mov
add
and
loope
test
push
push
in
ds
out
(bad)
outsl
addr32
xchg
jbe
mov
cmp
sbbb
movabs
loop
(bad)
stc
jns
jbe
rex.wrxb
mov
rex.wxb
jo
movsb
idiv
(bad)
and
test
cmp
cwtl
(bad)
