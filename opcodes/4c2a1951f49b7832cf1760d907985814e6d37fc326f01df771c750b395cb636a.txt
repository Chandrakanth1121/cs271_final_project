sbb
or
jle
notl
aas
test
aam
movsl
jno
sahf
pop
pop
(bad)
sub
xchg
dec
mov
jmp
enter
push
sbb
jnp
and
cmpsl
dec
cmpsb
cmpsl
int
sahf
(bad)
loopne
jno
cs
adc
sahf
lahf
out
pop
imul
mov
xchg
in
repz
sahf
jmp
lret
sbb
int1
cli
pop
inc
adc
jge
(bad)
push
or
int3
loop
xor
mov
add
fadds
hlt
aaa
repz
mov
cmpsl
loop
es
dec
in
or
mov
mul
aaa
loopne
into
leave
sti
mov
or
sbb
xlat
es
push
push
xor
cltd
in
outsb
cmp
fstpt
sbb
xor
mov
mov
out
fnclex
dec
add
(bad)
jp
pop
inc
xor
bound
jg
dec
lea
sbbb
movlps
adc
dec
in
dec
jno
push
rcl
push
mov
call
sbb
daa
movsl
push
insl
add
mov
hlt
ja
lods
sbb
push
add
int
sub
push
dec
mov
cmp
push
inc
dec
sub
and
or
popf
add
ss
sub
mov
loop
mov
adc
xlat
mov
pop
push
xor
mov
cli
cltd
dec
push
xchg
jns
cmp
mov
xchg
inc
or
push
div
xchg
cli
adc
sub
jecxz
jp
je
xchg
enter
out
cmc
xchg
adc
(bad)
pusha
into
push
aad
rol
xchg
iret
lods
dec
div
aad
(bad)
or
sbb
cmp
xor
inc
pop
imul
dec
aad
sti
push
fucom
sub
pushf
test
mov
mov
jg
or
xor
mov
(bad)
fsts
mov
push
xorb
pop
cmp
add
loopne
aas
sub
sbb
sub
int
gs
mov
outsl
mov
mov
lret
pop
inc
xchg
aas
and
inc
ret
xchg
adc
leave
call
scas
or
sub
aas
xor
fisttpll
jl
mov
sti
pop
sub
call
lods
insb
andl
adc
(bad)
test
addr16
jge
cmc
push
xor
sub
pop
push
sbb
pop
mov
stc
lea
sbb
ds
data16
dec
arpl
js
pop
addr16
das
or
jns
enter
or
test
sbb
xchg
mov
out
filds
ret
dec
xchg
in
sbb
lea
rol
daa
pop
push
sbb
mov
jno
pop
shll
movzbl
sarl
xchg
shlb
pop
mov
aam
lds
imul
arpl
inc
fs
pop
inc
data16
or
lret
adc
sbb
xchg
cwtl
jg
and
push
jp
repnz
lret
(bad)
or
adc
aad
dec
in
out
mov
sti
in
imul
jb
mov
cmc
dec
leave
imulb
pop
in
cmpsl
mov
dec
test
cmp
push
pop
adc
dec
(bad)
call
xchg
push
cmp
mov
cmc
int1
xchg
ljmp
lods
push
fldt
imul
outsb
jecxz
in
xor
outsl
cmpsb
mov
aad
mov
jg
loopne
clc
movsl
adc
jns
idiv
aas
out
adc
fnstcw
or
lock
ljmp
into
les
xchg
mov
arpl
mov
xchg
pop
testb
(bad)
fcoml
or
dec
cmp
addr16
add
ljmp
js
arpl
or
mov
jne
lret
push
xchg
mov
or
stos
fcomps
dec
xlat
fidivs
mov
insb
insl
push
jae
push
out
xor
(bad)
or
dec
push
lea
jb
add
adc
push
pop
sahf
mov
sbb
jg
lock
cld
sbb
fadds
insb
or
lods
test
mov
scas
ja
aas
push
repz
outsl
lock
cli
mov
sbbl
cwtl
xchg
push
jmp
jb
jecxz
fcmovnu
ret
and
aaa
fs
mov
mov
dec
mov
sbb
scas
or
push
sbb
and
push
loope
xchg
movsl
fcmovne
pop
arpl
mov
call
pop
adc
loopne
mov
inc
jbe
inc
cmp
cmp
nop
fldl
xchg
cmp
or
sub
xor
or
ds
sti
mov
movsb
mov
out
xor
mov
xchg
jmp
lods
fs
sbb
dec
push
iret
enter
fcomp
cmp
jle
jae
pop
cmpsb
jg
and
jno
iret
mov
mov
adc
sub
cmpb
lods
add
arpl
pushf
insb
jbe
xchg
jl
int1
movsl
or
xchg
mov
test
jns
sub
inc
out
jns
jg
in
stos
mov
jl
(bad)
xchg
das
jnp
lods
shl
cltd
mov
dec
psadbw
mov
xchg
xchg
fs
cmc
mov
inc
inc
xchg
inc
daa
sub
(bad)
repz
out
pop
xor
jo
mov
aam
mov
cmp
lahf
int3
dec
sbb
push
mov
adc
ljmp
xor
mov
outsb
aam
nop
jno
sarl
test
(bad)
ljmp
enter
jp
ficoms
and
xchg
fwait
xchg
jns
hlt
xchg
sarb
lock
mov
std
push
je
(bad)
dec
int3
int3
stos
xor
mov
jl
nop
add
test
mov
(bad)
arpl
mov
adc
xchg
push
insb
arpl
out
cmpsl
mov
scas
cmp
mov
lcall
negl
loopne
dec
rcll
in
dec
jae
cltd
xchg
fcmovu
movsb
in
das
les
cmp
inc
lea
rcr
xchg
sub
aas
push
fwait
shl
mov
sbb
insl
cmc
in
jmp
iret
sbb
(bad)
nop
inc
cmp
push
xorb
mov
mov
inc
add
mov
lret
sbb
into
pop
xor
ss
xchg
insb
xlat
inc
lret
jb
xchg
jp
leave
(bad)
int3
mov
mov
xor
xchg
mov
xchg
popf
insb
add
jmp
insl
and
int
adc
fs
push
xorl
rcrb
inc
inc
and
in
lea
frstor
or
mov
cmp
or
add
test
sub
(bad)
sbb
mov
push
out
lods
xchg
push
sub
inc
arpl
pop
int1
dec
fs
sbb
lea
or
cli
movsb
sub
mov
mov
movsl
pop
xor
push
adc
fsubl
push
push
mov
xor
jae
pop
pmovmskb
xlat
xor
pop
dec
cmp
pop
mov
mov
notb
std
jne
(bad)
fmulp
(bad)
std
xchg
fs
and
jmp
cmc
orl
jno
mov
push
sahf
pop
fldt
gs
pushf
mov
sbb
outsl
rcrb
mov
in
sti
lret
sub
sub
adc
repnz
sti
aaa
dec
mov
mov
aam
xor
dec
cmpsl
mov
(bad)
shrl
cmpsl
test
inc
and
imul
sbb
loopne
jbe
fnstcw
jns
fwait
lods
lcall
cwtl
jl
xlat
pop
loop
enter
testl
int3
jno
dec
sahf
mov
(bad)
xchg
comiss
es
les
popa
jno
cmp
movb
pop
loopne
loop
fidivs
jmp
cld
dec
mov
sbb
fbld
insb
mov
jl
cmpsb
in
mov
jnp
dec
(bad)
dec
out
ja
dec
out
xlat
mov
subb
xlat
mov
pop
push
cli
add
imul
lcall
mov
add
mov
imul
mov
adc
push
adc
xor
or
sahf
(bad)
dec
in
sbb
scas
sahf
push
push
lods
dec
int
mov
lods
and
or
adc
(bad)
or
out
es
push
adc
lock
test
decb
xchg
xor
std
or
stc
rclb
dec
andb
push
cmpsl
clts
vfmadd213sh
outsb
int
jb
xchg
cmp
je
test
push
push
ds
aaa
fs
cwtl
inc
add
scas
inc
outsb
test
adc
adc
stc
insb
push
mov
cmc
