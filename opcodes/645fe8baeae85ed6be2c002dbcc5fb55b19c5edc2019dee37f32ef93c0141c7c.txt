outsb
(bad)
(bad)
mov
call
push
adc
sbb
add
jo
xchg
xchg
push
arpl
scas
imul
jae
test
js
and
imul
jg
mov
mov
add
xchg
popf
movsb
xchg
xor
xchg
lret
pushf
add
mov
xchg
push
add
arpl
mov
add
(bad)
call
push
push
push
mov
push
pop
lea
sub
mov
fs
add
cs
std
dec
jns
lea
adc
(bad)
sub
mov
fwait
std
(bad)
pop
pop
ret
jb
xor
push
push
pop
orl
dec
mov
mov
dec
repz
add
mov
mov
sbb
and
(bad)
ficompl
add
cmp
cmp
shll
dec
push
push
pop
pop
outsb
das
js
pusha
fs
push
mov
mov
cld
or
jl
or
out
sub
push
pop
push
mov
adc
mov
fidivl
rclb
or
ror
imul
jo
pop
js
cs
xchg
jl
mov
repnz
cs
data16
cs
lret
in
lods
mov
enter
pop
int3
dec
pop
movb
loop
pop
ret
push
call
mov
mov
pop
push
sti
push
mov
je
mov
or
adc
mov
xor
fcomip
call
inc
pop
ret
push
mov
pop
jmp
sub
mov
sbb
jne
push
push
ja
or
cmp
das
mov
outsl
(bad)
cmp
je
inc
adc
mov
or
shl
adc
or
std
incb
fistl
xor
and
in
pop
pop
mov
pop
mov
clc
outsb
mov
pop
inc
jmp
lds
jge
cmp
idivb
and
int3
adc
cmp
mov
adc
test
jne
gs
add
cld
add
or
jle
mov
clc
cmpsb
add
push
add
dec
hlt
push
push
jmp
or
sbb
mov
push
loope
movb
cmpl
pop
je
or
push
xor
push
push
jne
adc
mov
mov
ud2
in
into
mov
jmp
js
je
jnp
mov
inc
fdivrs
(bad)
lahf
sub
mov
xor
push
jne
cwtl
(bad)
jge
andl
mov
pop
shll
jmp
or
pop
shl
lock
jmp
popa
and
pop
or
leave
sub
add
movb
dec
lock
jle
mov
js
rcll
xchg
push
push
add
cmpl
jle
mov
lea
lea
enter
lods
push
or
orb
test
adc
bound
and
subb
sar
jmp
or
dec
dec
sbb
pop
cmp
mov
hlt
mov
sar
iret
jge
add
mov
push
or
movsl
mov
cmp
lock
test
jp
incl
jnp
lods
mov
int3
mov
(bad)
push
sbb
pop
aaa
pusha
or
and
imul
mov
test
xchg
xchg
sub
push
jmp
push
lock
adc
int3
clc
sbb
mov
cld
(bad)
aad
pop
lock
or
sbb
pop
jmp
test
inc
push
or
add
push
sbb
cmp
cld
lea
add
neg
mov
cmpb
jae
lock
mov
es
shll
inc
fstps
jl
mov
cmp
dec
sub
push
ja
push
mov
lea
push
push
in
and
jbe
test
jne
fcoms
out
adc
jecxz
rcrl
sub
lea
in
mov
cmpl
(bad)
jge
push
or
cltd
int1
pop
mov
add
cmp
je
or
jne
cs
fdivs
int
stc
or
and
stos
dec
popa
push
add
inc
add
push
je
lret
dec
inc
cld
insb
lock
push
push
stos
in
fcmovne
push
cmp
sbb
jmp
mov
or
ljmp
(bad)
jmp
or
sbb
cmp
cwtl
sbb
movsl
movsl
mov
push
adc
ldmxcsr
push
push
scas
push
add
push
(bad)
jg
jb
sarb
xlat
mov
popf
divb
les
adc
shr
out
mov
jmp
je
xchg
stos
or
mov
add
push
cmpb
clc
sbb
mov
mov
mov
pop
(bad)
dec
and
out
push
hlt
mov
insl
in
in
pop
push
fisttps
loope
sbb
mov
push
pop
fmull
mov
mov
fidivrs
scas
inc
stos
adc
fiadds
or
adcb
or
test
xchg
outsb
mov
js
mov
xchg
add
scas
pop
or
or
sub
mov
push
adc
jne
repz
sbb
push
pop
xor
fwait
ret
fld
jo
je
pop
push
xor
fcoms
pop
dec
loop
lret
ljmp
in
pop
push
push
int1
add
sar
and
fcoms
add
mov
(bad)
ss
sahf
lret
mov
inc
fisttpll
aas
lds
lahf
cld
ret
jmp
orl
(bad)
shl
lods
jb
leave
cmp
adc
imul
fdivr
jo
add
adc
sbb
fwait
push
adc
insb
sub
scas
xor
dec
jmp
mov
mov
loopne
push
ret
push
inc
or
test
lcall
cmp
test
(bad)
adc
ss
ja
dec
add
pop
sub
xchg
stc
jbe
fstps
lahf
push
jbe
test
push
pop
andb
mov
(bad)
scas
or
cmp
push
push
mov
jmp
mov
cmp
test
mov
decl
scas
jge
or
jo
(bad)
xchg
push
arpl
(bad)
dec
lret
shrl
xor
mov
imul
jnp
imul
push
ds
push
fistpll
or
inc
pop
xor
shr
rcrl
out
inc
mov
rolb
or
cli
mov
fwait
ss
jne
push
test
imul
xor
jle
mov
mov
shrb
xchg
sub
insb
add
jmp
jbe
dec
nop
lcall
sub
or
inc
push
pop
or
sahf
or
jle
ss
jae
sahf
lods
or
push
punpckhbw
cmpsb
test
push
hlt
jne
mov
push
in
push
pusha
or
je
mov
jne
mov
xchg
push
pop
jns
adc
push
push
ret
push
sub
xchg
out
out
mov
ret
loop
mov
or
xchg
lods
mov
(bad)
es
inc
stos
sbb
call
cmova
les
pop
bound
push
ljmp
mov
pop
add
push
mov
push
fisubs
fidivs
mov
shll
rcll
call
mov
add
sub
sbb
add
cmp
je
addb
shrb
lds
adc
lcall
pop
test
cmp
sub
fdivs
sbb
and
mov
and
les
cmpsl
or
push
stos
loop
xchg
(bad)
pushf
push
push
push
push
jne
sub
popf
es
adc
dec
(bad)
test
dec
pop
mov
sbb
or
add
sahf
mov
mov
bound
mov
js
clc
scas
xor
(bad)
shlb
mov
mov
cmp
stc
cmpsb
add
jne
nop
push
push
mov
or
xor
orb
mov
and
testb
push
fisttps
jmp
mov
add
cmp
push
add
cmp
lea
lock
xchg
mov
push
sbb
je
fs
(bad)
adc
adc
inc
add
push
cmp
adc
and
inc
das
dec
rcrl
adc
adc
enter
add
xchg
leave
xchg
rcrb
jne
and
add
or
add
into
cwtl
push
push
push
aaa
dec
push
cld
loop
mov
mov
pop
xor
push
push
dec
into
cmpl
push
push
sub
mov
mov
adc
add
cwtl
mov
inc
inc
or
adcl
cmp
insl
jo
push
loop
cmp
mov
ss
xor
mov
fmuls
jbe
push
sbb
pop
push
clc
mov
cwtl
lcall
test
loopne
outsl
jae
mov
cmp
sub
cmpsb
std
mov
shrb
rol
call
in
lock
in
mov
pop
mov
