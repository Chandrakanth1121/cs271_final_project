mov
or
add
add
dec
add
add
add
add
add
mov
jge
add
mov
add
mov
sbb
pop
aam
movl
or
fs
push
ss
sbb
scas
push
pop
mov
cli
out
aam
dec
(bad)
cmc
inc
pop
jne
scas
in
add
and
flds
mov
andb
push
or
jb
(bad)
push
pop
mov
xor
cmp
jno
and
sbb
dec
pop
or
sahf
out
sub
ret
or
jae
arpl
sarb
sahf
je
mov
and
loop
dec
jge
pop
mov
(bad)
pop
and
in
loope
xor
mov
fistpl
add
push
out
jne
sbb
and
push
jnp
cmp
roll
jmp
lock
loop
fs
push
loop
jle
inc
lods
(bad)
(bad)
cmc
call
ret
insl
out
mov
cmc
js
and
ds
call
leave
mov
jle
mov
adc
mov
int1
lods
testb
mov
adc
cltd
rcr
fcomp
pop
arpl
mov
cmp
dec
sbb
imull
rorb
out
rorb
pop
add
sbb
mov
gs
cs
push
mov
pop
fsub
push
add
scas
push
or
int1
rorb
repz
xchg
jno
stc
imul
sbb
rclb
(bad)
cmp
fisttpl
push
roll
jge
push
add
jb
sbb
mov
push
push
pop
cmp
xchg
leave
adc
cltd
cmp
pop
outsl
int
and
adc
loop
ds
fbld
dec
enter
cs
mov
and
mov
cltd
sub
jo
lock
push
dec
ds
in
push
mov
and
fmuls
sub
jmp
arpl
add
out
aad
std
cmp
and
mov
xor
(bad)
adc
sahf
mov
sbb
outsl
mov
mov
das
dec
sbbl
repnz
lods
mov
dec
and
ss
jg
fimuls
cmp
(bad)
sarb
jge
inc
ds
(bad)
and
aad
mov
dec
aam
lock
mov
cmp
in
cmp
push
push
nop
dec
lret
and
xchg
sti
mov
lcall
aas
mov
repz
data16
sarl
mov
and
add
call
push
ljmp
hlt
push
cmpsl
jge
aas
clc
mov
push
fldl
mov
inc
lahf
pop
aad
aad
addr16
jg
and
popa
sahf
cmp
movsl
push
sbb
push
ret
testb
sbb
lcall
pop
hlt
(bad)
popa
enter
push
(bad)
(bad)
mov
pop
mov
out
push
xchg
mov
int
pop
filds
(bad)
jno
repnz
cmc
pop
inc
pop
mov
(bad)
cmp
test
jp
add
test
into
ja
or
dec
ret
add
data16
jne
inc
hlt
dec
push
xor
jo
in
or
xchg
repnz
rorb
push
fidivs
mov
jae
test
pop
roll
out
cmp
mov
lock
lock
fs
test
push
mov
loope
cs
inc
mov
outsb
fsubrs
mov
xchg
ror
jp
fsubl
xchg
addl
and
hlt
mov
test
jae
xchg
mov
jo
std
lahf
imul
xchg
(bad)
xor
daa
out
sub
sbb
je
pushf
cmp
ror
out
sbb
mul
adc
enter
out
mov
sub
mov
sub
mov
pop
jbe
loop
jb
or
inc
popf
int3
iret
jbe
dec
mov
inc
arpl
jmp
push
inc
xor
cmp
xor
mov
adc
push
sub
cli
loop
sbb
cmc
xchg
jg
and
sbb
xorb
aad
adc
pushf
inc
sbb
inc
push
mov
mov
mov
jno
mov
sbb
mov
mov
(bad)
daa
sbb
inc
iret
aaa
fsubl
shrl
pop
sahf
scas
add
xor
fisubl
mov
push
aad
imul
push
(bad)
mov
add
or
push
mov
shll
xchg
pop
pop
ret
inc
mov
inc
outsb
sbb
inc
inc
pop
aad
xchg
pop
xchg
mov
mov
fs
pop
loopne
stos
sbb
fcomps
imulb
insb
push
xor
cld
stc
or
push
pop
lock
pushf
insl
mov
push
lods
rolb
dec
push
mov
in
lret
les
(bad)
repz
cmpb
or
push
jns
fs
test
mov
scas
mov
sti
es
sbb
stc
push
std
push
jecxz
pop
jecxz
dec
aam
jno
push
jnp
insb
fdivrs
gs
ficoms
iret
mov
jecxz
mov
xchg
aaa
bnd
in
rcrl
adc
hlt
mov
mov
bound
and
xrelease
pop
sbb
cmpsb
push
push
xchg
dec
adc
sbb
lods
cmp
dec
mov
mov
loope
movsl
cs
and
or
out
enter
jb
mov
in
pop
jp
stos
(bad)
jo
movsb
sahf
fcmove
sti
data16
int3
jo
push
inc
inc
sbb
rcll
and
xor
imul
popa
jmp
ret
lea
ljmp
dec
cmp
mov
xor
inc
mov
gs
push
sub
mov
repz
iret
(bad)
inc
cmpl
cmpsb
mov
xlat
fcomi
loopne
aaa
lcall
movsb
jmp
pop
xchg
jae
ja
add
ja
push
pushf
sub
add
dec
int3
mov
sbb
lcall
(bad)
loop
daa
cmp
jecxz
pop
cmp
xorps
add
xor
repnz
pop
adc
mov
sbb
lods
out
inc
int
sbb
mov
dec
xor
adc
mov
lods
lret
or
lahf
out
rclb
pop
mov
sub
imul
xchg
mov
cmp
out
jmp
pop
dec
ljmp
incb
movsl
or
mov
dec
add
jbe
pop
into
mov
inc
(bad)
cmp
lret
cmc
stos
dec
bound
cmp
in
in
mov
ret
and
test
sbb
int1
jns
in
int3
pop
pushf
loope
rep
sbb
(bad)
andb
jb
ja
ljmp
add
fcomps
in
sub
xchg
and
jecxz
and
pop
mov
push
pusha
roll
lret
scas
iret
dec
aas
mov
push
js
es
and
ja
into
loopne
adc
push
dec
testb
(bad)
adc
fists
jecxz
test
push
push
jns
xchg
sbb
lods
lock
in
pop
mov
jl
shrb
push
jp
shrl
dec
loopne
push
push
or
lods
sbb
stos
lcall
sti
(bad)
push
(bad)
jae
pusha
cltd
mov
loop
sbb
xchg
stos
mov
xor
mov
sbbb
mov
cltd
cmpsb
addr16
xchg
fdivs
lret
xchg
mov
fbld
pop
in
out
rcrb
iret
dec
or
ljmp
aam
lods
in
out
fwait
sub
lods
mov
adc
fsubrl
arpl
dec
mov
push
(bad)
sub
ljmp
mov
pop
jb
adc
int3
pop
xchg
inc
mov
call
stos
fs
out
mov
push
js
push
xor
jmp
out
repz
adc
sti
pop
cs
dec
popf
fistl
and
push
mov
insb
or
xchg
das
arpl
movsb
inc
insl
fstps
sahf
mov
xchg
outsl
arpl
xchg
fs
sbb
fistpll
jg
pop
les
cmp
xchg
push
int1
test
xor
(bad)
pop
jnp
leave
sub
movsl
mov
or
inc
addl
js
cmpsb
std
scas
in
adcl
cmp
out
mov
adc
sub
push
fistpll
repnz
inc
xor
mov
cmp
adc
cmpsl
mov
pop
fcomi
std
fs
dec
cltd
mov
(bad)
js
repz
or
and
and
cmpsl
push
(bad)
daa
lcall
test
pop
pop
lret
push
sbb
std
inc
ret
out
dec
push
stos
mov
mov
cwtl
outsl
das
lahf
ret
jb
test
scas
arpl
mov
