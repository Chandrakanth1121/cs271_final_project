inc
test
add
add
add
add
add
add
add
adc
add
add
add
add
push
dec
mov
addr16
dec
inc
pushf
fiadds
push
shlb
sbb
xchg
xor
cmp
fiaddl
add
test
mov
test
adc
xchg
push
imul
jns
lea
in
xchg
xor
sub
das
sbb
jp
mov
or
jmp
xor
fsts
push
cmp
orl
cmp
outsb
fstpl
popf
in
out
cltd
jo
and
and
sti
scas
test
int3
sub
and
cmpsb
sbb
stos
(bad)
cmp
cli
ret
mov
xchg
rorb
nop
arpl
mov
out
inc
scas
xchg
adc
jg
xchg
pop
call
mov
inc
daa
inc
ret
imul
addb
mov
stos
inc
pop
stc
insl
mov
mov
test
pushf
pop
add
jg
mov
mov
(bad)
fsubl
mov
mov
push
int3
(bad)
dec
mov
xchg
out
xchg
stos
ja
jne
jmp
mov
or
sub
int1
call
mov
inc
sbb
les
lea
cld
lcall
jmp
and
xor
dec
add
cltd
or
in
jge
aas
mov
sub
pop
lods
cmp
cli
jo
std
mov
xchg
add
(bad)
dec
aam
fs
call
lock
pusha
xchg
cmp
shll
popf
sbb
jns
outsb
mov
dec
test
mov
pushf
cmp
jbe
mov
fnop
scas
loope
add
lods
fisttps
(bad)
movsb
or
mov
cmp
mov
ljmp
fidivrs
jns
addr16
ja
or
ljmp
adc
rcrb
fdivrs
rcrl
mov
adc
or
xor
insb
ja
int3
or
jmp
in
mov
pop
es
jp
cmp
xor
mov
mov
sub
push
and
mov
cmp
imul
sbb
add
jp
cmpsl
and
dec
jmp
repnz
ret
js
cli
inc
call
fcmovnu
xchg
scas
mov
sahf
sahf
xchg
sti
mov
adc
mov
lock
ja
ljmp
or
nop
push
mov
pop
lret
ja
int3
sbb
stos
test
dec
dec
fwait
cld
xor
insl
lret
enter
jns
in
sbb
mov
or
ljmp
fstp
cmp
out
jb
sub
jns
(bad)
int1
sbb
jns
xchg
das
jecxz
mov
dec
lea
lock
mov
shl
mov
jb
inc
in
xchg
mov
scas
and
jge
loope
rclb
jl
dec
xchg
cmp
fldl
aam
cmp
in
or
jp
movsb
dec
jmp
ss
outsl
xlat
push
push
pop
dec
repnz
hlt
leave
movsl
sbb
nop
test
or
lahf
push
decb
(bad)
out
mov
mov
outsl
jl
xor
bound
aad
(bad)
jo
aam
sub
add
mov
xor
ret
rcr
mov
or
mov
fwait
xchg
iret
mov
jne
mov
cmpsl
aam
and
int
xchg
fistpl
mov
or
adc
loop
xor
sub
xchg
mov
sub
shrb
add
clc
ret
or
push
sub
pop
pop
inc
test
xor
pop
cmp
mov
movsl
cmp
push
jno
insl
mov
call
(bad)
fildl
adc
sub
(bad)
iret
sub
add
pop
mov
push
jno,pn
stos
jmp
fs
mov
and
mov
test
scas
xchg
ret
test
aam
lahf
loop
dec
sub
mov
std
aad
cmpsb
sub
push
iret
push
mov
out
lea
fistps
(bad)
and
lcall
cltd
xchg
and
lods
sub
adc
or
jnp
push
xchg
clc
shl
xlat
les
dec
jmp
(bad)
fisttpll
or
sub
cmp
xchg
push
mov
sub
xchg
mov
lods
stos
lret
cmp
or
in
push
mov
cs
es
xorb
stos
xchg
in
jnp
sub
dec
add
push
and
pop
adcb
mov
add
test
mov
mov
add
(bad)
loop
pmulhw
repnz
(bad)
insb
and
adc
sbb
shl
hlt
xor
or
ds
out
xchg
xor
and
punpckldq
mov
aaa
dec
mov
inc
(bad)
mov
es
bnd
add
and
stc
test
popf
cmc
and
cli
hlt
stos
shrl
mov
mov
add
adc
or
out
xchg
fnstcw
mov
fdivrl
mov
xor
dec
popf
and
xchg
and
out
out
insb
cli
popa
mov
push
xor
and
and
fldenv
add
dec
push
mov
jge
lods
xor
sbb
adc
fnstenv
mov
sub
pop
sbb
cli
push
sbb
sbb
push
into
mov
or
test
xchg
lret
jp
ja
dec
cmp
loope
mov
pop
mov
sti
insl
movsl
lret
jo
push
adc
mov
pusha
stos
addr16
xor
ret
sarb
(bad)
push
push
aad
dec
cwtl
mov
movsb
adc
int1
sahf
push
add
stc
mov
mov
dec
iret
xchg
mov
pop
popa
dec
push
and
rcrl
push
jle
xor
and
test
mov
ret
test
sub
scas
push
add
xchg
dec
int3
lods
or
loopne
ljmp
jle
jecxz
adc
jae
mov
push
or
xorb
scas
bound
adc
jb
inc
jg
inc
jb
push
mov
cmp
inc
inc
and
aam
sbb
mov
add
mov
or
sub
dec
push
ljmp
push
dec
test
and
stos
sar
lock
in
sub
and
ja
or
cwtl
mov
adc
mov
and
imul
cmp
sbb
imul
and
jns
jbe
sub
in
jnp
stc
pop
rol
sbb
and
push
(bad)
lret
pop
(bad)
jae
mov
dec
lret
xor
subl
cli
mov
push
jnp
mov
outsb
and
popf
mov
cmpsl
insb
je
xchg
push
cmpsb
pop
xor
in
lods
fs
mov
pop
adc
mov
sub
movsl
fidivl
pop
(bad)
mov
add
add
jo
das
jo
sub
push
sub
pop
mov
sbb
xor
pop
out
roll
mov
mov
stos
mov
pushf
mov
mov
rcll
fdivl
mov
ret
fpatan
cmp
notb
adc
cli
test
pop
and
lods
out
jnp
out
pop
add
cmp
inc
lret
xor
pop
int1
into
sub
and
lcall
frstor
negl
mov
test
xchg
cmpsb
lret
xlat
fdiv
xchg
outsb
add
fwait
sub
lea
movsb
dec
(bad)
call
xor
clc
jo
inc
dec
or
xorb
adc
in
scas
out
dec
or
add
sub
cmc
cld
mov
nop
dec
das
push
mov
in
pop
lods
outsb
int3
enter
mov
pushf
jl
jne
in
test
mov
mov
lock
xchg
xchg
cmp
in
std
jp
dec
jl
xor
adc
jae
pop
cmp
sub
xor
xchg
in
add
jno
mov
xor
dec
jg
sub
jmp
sub
out
jne
test
and
dec
inc
or
mov
and
call
push
adc
rcll
cltd
sub
mov
jnp
int
cltd
scas
(bad)
dec
jno
cmp
cmp
hlt
inc
ds
jne
stos
dec
out
dec
sbb
mov
push
lods
dec
add
ret
jmp
sub
cmp
dec
sub
push
and
call
jecxz
inc
cs
adc
cmp
xor
psrld
mov
rorb
hlt
stos
enter
lret
lea
cmp
data16
sbb
dec
and
hlt
bound
mov
es
je
cmp
adc
and
adc
inc
mov
es
call
(bad)
imull
insb
pusha
loopne
inc
data16
push
dec
aas
(bad)
aaa
out
jle
cmp
and
