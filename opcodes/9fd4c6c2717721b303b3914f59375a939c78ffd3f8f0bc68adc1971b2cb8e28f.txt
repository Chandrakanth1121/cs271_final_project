mov
mov
xchg
sub
dec
and
jecxz
xchg
mov
mov
mov
mov
mov
dec
mov
sub
push
ds
iret
lock
push
xchg
(bad)
std
mov
push
mov
adcb
sub
push
push
ret
pop
clc
aam
mov
or
mov
sub
xchg
cmp
pop
movsl
aas
scas
push
jmp
inc
repz
mov
aas
cmp
iret
sbb
mov
push
xchg
mov
daa
pop
dec
clc
jmp
inc
faddp
adc
call
shrb
repz
ljmp
testb
adc
das
pop
js
and
shll
or
dec
inc
jle
inc
test
js
(bad)
dec
pop
inc
jns
or
jns
xor
xor
xor
addr16
arpl
dec
imul
fnstsw
cld
rcr
mov
mov
cmpsb
out
sub
dec
push
and
push
je
loop
out
mov
frstor
dec
popf
push
hlt
loope
jge
negb
addl
imul
roll
inc
loop
mov
shr
insl
hlt
mov
lret
ljmp
push
into
lods
and
xchg
jae
xor
pop
js
adc
aam
pop
inc
dec
rcll
fcomps
inc
(bad)
mov
daa
jp
mov
shl
inc
das
inc
mov
ror
cld
call
or
mov
rorl
inc
mov
test
xor
notl
loope
in
sti
xor
adc
dec
mov
adc
push
aad
inc
dec
inc
inc
adc
negl
dec
gs
imul
mov
dec
mov
pop
pop
mov
push
xchg
pop
pop
push
adc
mov
add
xchg
mov
sub
and
jmp
into
push
shlb
mov
push
sub
dec
pop
dec
fwait
xchg
mov
adc
ja
stos
test
(bad)
inc
int1
(bad)
int3
pop
in
int
arpl
push
lcall
clc
mov
mov
imul
sub
ficoms
test
inc
mov
cmp
and
push
jmp
mov
loop
sahf
mov
cli
stos
and
imul
mov
mov
inc
mov
dec
(bad)
sub
clc
pop
lds
scas
out
cmp
inc
adc
mov
ss
jecxz
push
test
dec
es
inc
test
dec
lea
fisubrs
pop
xor
outsb
jno
xchg
mov
add
aam
sbb
loopne
mov
mov
fwait
arpl
lea
jmp
cmp
cmp
xor
int1
mov
mov
pop
outsb
dec
mov
pop
or
lea
enter
cmpsl
ficoml
inc
outsb
xor
shrl
subb
enter
iret
jo
mov
int
shll
mov
out
dec
jnp
pop
xchg
pop
sub
call
mov
push
outsb
mov
jnp
mov
mov
mov
sbb
movsl
stc
mov
mov
mov
dec
inc
cmp
inc
iret
push
negb
add
pop
pop
sub
mov
ss
sbb
or
or
lret
inc
pushf
ret
sub
dec
mov
ds
out
dec
int
aam
mov
stos
inc
lcall
xchg
or
and
pop
fdivr
or
shl
fnstenv
jecxz
loopne
dec
fnstcw
jae
inc
jp
mov
push
mov
adcb
in
mov
ljmp
xlat
inc
je
cld
push
dec
jl
or
mov
dec
ljmp
sbb
stos
dec
out
inc
ss
out
xor
jl
xor
outsl
dec
test
in
adc
jg
cmpsb
mov
insb
repz
aaa
out
push
pop
scas
pop
cmpsb
(bad)
test
hlt
push
das
mov
ja
add
imul
push
subb
cmc
lods
xor
cmp
or
call
cmp
jecxz
decb
cs
negb
andl
mov
outsb
aam
in
jle
repnz
sbb
and
mov
cmp
inc
mov
jo
xor
and
add
ss
xchg
aad
out
addr16
(bad)
rcll
lcall
mov
pop
pop
js
dec
lock
lahf
lock
loop
xor
jb
add
in
mov
lods
or
xor
mov
xchg
aaa
test
jb
lcall
(bad)
xchg
fstps
jnp
fwait
jle
dec
inc
addr16
xor
aam
imul
hlt
pop
das
fiadds
scas
add
mov
xor
jl
sbb
mov
lahf
idivl
das
adc
(bad)
jbe
pop
xor
pop
adc
mov
push
ds
jns
enter
out
cld
xor
xchg
dec
push
jbe
fistl
test
movsl
mov
or
scas
int
roll
cs
pop
sub
or
cmp
lahf
inc
mov
cmp
lret
mov
into
jnp
xor
mov
dec
or
out
mov
stos
les
push
outsl
fadds
dec
scas
aam
jmp
push
dec
popf
pop
aam
scas
test
fs
jge
or
insb
(bad)
mov
xor
imul
add
mov
cmp
jp
imul
data16
jne
jbe
add
mov
jle
and
jae
rclb
add
xchg
enter
pop
xor
imul
xchg
pop
pop
push
stc
or
inc
aaa
les
rorb
cs
push
test
outsl
scas
xlat
sub
dec
jl
and
xchg
xchg
imul
inc
aaa
pop
xchg
add
inc
dec
inc
pop
lock
lock
add
stos
xor
add
sbb
xchg
out
inc
int1
(bad)
popf
push
mov
mov
dec
leave
mov
stc
dec
andl
xorl
pop
mov
jns
sti
lods
cmp
pop
jb
sub
sub
pop
pop
lods
sbb
iret
out
iret
mov
lret
ja
jae
xchg
mov
sbb
xchg
mov
dec
fwait
xlat
adc
test
mov
jnp
mov
inc
xchg
pusha
pop
jne
xchg
loop
in
xchg
stos
cmp
mov
add
adc
xchg
push
mov
adc
jne
inc
rolb
inc
in
push
jns
stos
push
and
ret
push
in
lret
jnp
jbe
sbbl
mov
(bad)
stc
out
pop
sti
dec
out
dec
push
mov
xor
(bad)
push
xor
dec
inc
xor
adc
pop
push
aam
std
mov
lret
outsb
pop
push
or
pop
into
das
xlat
scas
sti
dec
(bad)
xor
jo
test
popf
add
jb
pushf
and
jle
push
sbb
inc
(bad)
push
xor
add
inc
push
nop
adc
imul
pop
inc
mov
out
scas
lcall
add
imul
imul
sbb
dec
xchg
dec
mov
push
sbb
sub
jae
movsb
scas
inc
test
stc
sti
shll
arpl
andb
aam
mov
ljmp
inc
imul
fidivs
es
movsb
orl
push
stos
into
sub
sti
imul
outsb
or
push
mov
xchg
gs
gs
add
push
inc
dec
mov
loopne
inc
imul
and
(bad)
dec
mov
setnp
(bad)
sub
pusha
stc
cltd
into
mov
mov
cli
pushf
arpl
dec
sbb
adc
scas
inc
xlat
(bad)
xchg
std
subb
dec
lea
js
jg
or
sar
aam
iret
dec
dec
pop
enter
xchg
adc
fwait
lea
jne
sub
push
pop
mov
(bad)
mov
in
fisubrs
mov
push
cmp
xor
jae
outsb
lret
test
es
scas
outsb
mov
jecxz
push
and
frstor
stos
cmp
push
fs
dec
jnp
pop
fldcw
pusha
imul
cwtl
into
les
jle
pop
ss
xorl
js
mov
sub
xchg
xchg
in
xor
pop
idivl
aam
ficoml
sub
ror
sti
shlb
dec
pop
lcall
test
idivb
xchg
xor
dec
rolb
sub
jmp
mov
mov
imul
jg
cmp
dec
decb
arpl
inc
xor
inc
sti
(bad)
push
aaa
out
mov
test
cmp
lds
sbb
lahf
