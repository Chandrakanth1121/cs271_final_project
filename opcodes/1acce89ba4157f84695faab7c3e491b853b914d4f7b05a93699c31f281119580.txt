dec
lods
fcomi
sti
aaa
popf
sub
leavew
pop
arpl
push
fnsave
push
jmp
lret
outsl
jnp
insb
cld
aad
mov
out
add
cmp
inc
xor
mov
sbb
jle
mov
test
sahf
(bad)
lods
(bad)
addr16
xor
jne
pusha
bound
ss
inc
add
call
jmp
cmp
sub
xor
std
xchg
int
pusha
jno
dec
sub
ret
fidivs
out
xor
mov
jb
adc
pop
in
cmp
cltd
jle
sbb
addr16
inc
add
stos
mov
inc
push
sub
jp
add
and
insb
dec
ficoms
(bad)
dec
cmpsl
stc
cs
pushf
cmp
jo
clc
dec
ja
int3
adc
add
(bad)
fwait
(bad)
iret
rcll
in
pop
mov
lahf
mov
xor
mov
pusha
gs
dec
testb
lea
stc
testl
lock
pop
popa
add
cmpsb
add
jg
ret
lea
lret
adc
shlb
decl
or
bound
add
int1
sub
jo
(bad)
into
dec
mov
mov
pop
xor
or
fdivr
add
mov
scas
les
mov
dec
pop
xor
push
repz
mov
push
loope
fisubrs
divl
pop
sti
lock
or
inc
mov
mov
xchg
imul
jb
hlt
mov
inc
je
xchg
gs
adc
add
pop
xchg
ss
sahf
mov
sbb
daa
lds
aam
adc
test
mov
xchg
or
inc
jne
ror
gs
sbb
aas
cmp
(bad)
cwtl
cmp
test
pusha
out
push
pop
add
dec
sbb
popa
outsb
jle
mov
or
or
or
and
jae
fdivrl
mov
xchg
out
or
mov
mov
xor
insl
mov
pop
sub
fldenv
mov
leave
testl
mov
sti
jmp
stc
xrelease
push
sti
fs
xchg
push
add
das
xchg
and
pop
add
xor
(bad)
into
pushf
mov
int3
(bad)
fildl
mov
cmp
pusha
into
ds
cmp
decl
adc
repnz
adc
cwtl
sbb
pop
xlat
gs
sub
or
std
cmp
mov
daa
adc
out
cmp
mov
mov
sub
leave
fimuls
adc
div
outsl
jo
cmp
pop
push
imul
sbb
outsl
push
ja
fsubs
dec
add
outsl
(bad)
fld
stos
rorl
not
shl
jmp
testb
sbb
push
fldl
or
popa
mov
xrelease
xchg
jle
addr16
test
add
scas
stc
push
inc
mov
mov
mov
or
sti
sub
mov
scas
or
sbb
and
pop
int3
fidivs
push
movsl
nop
push
mov
jmp
notl
pop
cmp
subl
data16
int1
sbb
jo
loopne
mov
push
xor
addr16
pop
in
inc
arpl
add
mov
cs
cs
and
xchg
stos
test
(bad)
int1
into
inc
add
dec
inc
cmp
fisubrs
lods
jbe
leave
mov
inc
das
lds
pop
pop
popf
push
dec
xor
lods
mov
cmp
loope
inc
sub
test
inc
or
cmp
lds
and
jl
sti
pop
cmp
xchg
cli
lods
cwtl
outsb
add
xchg
mov
mov
mov
int
(bad)
test
fld
or
pop
jbe
ss
repz
xchg
mulb
mov
in
loop
fbstp
inc
in
jnp
push
aad
push
daa
push
std
test
push
stos
adc
adc
sbb
repz
mov
lock
ljmp
pop
ds
lahf
out
(bad)
push
scas
jle
call
bound
sbb
mov
loop
add
test
pop
inc
add
dec
sub
mov
jno
sbb
stos
lods
arpl
inc
movsl
clc
mov
testl
cmp
or
repz
sbb
sub
mov
cmpsb
cmp
enter
js
jae
stc
adc
rcr
stc
mov
repnz
adc
sti
clc
packsswb
push
pop
aad
outsb
sub
and
repnz
xchg
xorl
mov
fwait
sbb
ljmp
out
movsl
insl
sbb
je
subb
lahf
hlt
cmp
pshufw
xor
dec
idivl
or
cmc
lahf
adc
mov
adc
or
loop
int1
jo
test
testb
or
pushf
or
push
bswap
push
dec
mov
or
xor
scas
add
pop
add
rcll
arpl
hlt
test
lds
or
jno
test
adc
ds
(bad)
inc
sbb
mov
pushf
int3
cs
jmp
add
out
xor
scas
jmp
adc
cmc
mov
int
mov
out
sbb
test
sti
aaa
inc
lock
dec
(bad)
pop
jl
leave
and
das
jg
call
(bad)
cmp
outsb
xor
aaa
int
setl
sub
mov
imul
fs
(bad)
in
aaa
pop
int1
dec
mov
add
and
mov
mov
int
scas
jne
fsub
js
adc
xor
popa
push
adc
int3
adc
jmp
int3
imul
int3
sub
pop
mov
mov
int
in
popa
xchg
sub
pop
cmp
jp
push
mov
mov
cmc
sti
fprem1
xor
in
xor
insb
(bad)
jae
adc
in
leave
cmc
data16
and
adc
movsb
test
sbb
jb
add
adc
pop
mov
mov
iret
mov
pop
mov
and
cld
mov
xchg
jns
into
into
(bad)
xchg
scas
ss
je
inc
adcl
cwtl
cwtl
nop
insb
or
flds
cld
addb
test
sub
xchg
out
pop
sbb
dec
fucom
movsb
insb
addb
js
pop
push
or
mov
xchg
leave
aam
jne
test
push
cmp
cmp
in
ljmp
loope
ds
mov
mov
xchg
neg
fs
push
jecxz
inc
insb
inc
in
js
sbb
lods
lret
and
rcrl
dec
fdivl
mov
stos
fdivl
and
jmp
ja
ljmp
cmpsl
cwtl
fadds
pop
das
sti
scas
adc
mov
test
mov
or
lcall
push
loopne
in
xor
inc
movsb
xchg
daa
outsb
cmc
and
insl
lcall
out
sahf
and
in
popa
mov
mov
lret
(bad)
stos
pop
lea
in
insb
xor
insb
inc
sbb
test
and
xor
and
es
mov
dec
fdivrs
push
adc
pop
pushf
lea
jb
and
cwtl
push
ljmp
in
(bad)
shll
in
pushf
std
add
push
xor
arpl
cmc
cmpb
or
lahf
fisubrl
fldl
jns
imul
int
cmp
dec
addr16
rcll
mov
pop
fidivs
ds
and
mov
mov
jae
(bad)
sbb
call
ds
adc
mov
or
not
(bad)
mov
in
xor
mov
iret
fs
and
(bad)
out
xchg
stos
xor
imul
bt
and
jmp
stos
sbb
(bad)
jl
mov
dec
cmp
jbe
or
add
es
aam
rcr
mov
pop
ja
jno
push
sub
fsts
imul
adc
nop
das
lods
jl
push
sub
mov
xchg
or
repz
add
or
mov
test
pop
subps
sbb
arpl
mov
cld
sbb
push
pop
fwait
pop
hlt
outsl
ljmp
pop
pusha
ss
sub
pop
fistps
xor
xchg
pop
or
shll
jp
les
shrb
aaa
xor
xor
xchg
mov
aam
js
push
testb
push
cltd
pop
add
add
imul
outsb
adc
jnp
es
jo
jmp
mov
cmp
cltd
xchg
shll
cmpb
and
les
jl
jp
inc
cmp
cld
in
and
arpl
push
es
dec
dec
xor
xor
xor
das
das
ds
ret
aaa
cmc
outsl
(bad)
push
mov
setnp
cmpsb
ds
mov
js
