(bad)
data16
arpl
dec
sahf
je
mov
ss
mov
repnz
les
lcall
pop
mov
mov
addr16
rcrb
mov
in
inc
fmulp
(bad)
dec
popa
xor
and
mov
mov
cwtl
and
mov
pop
mov
pushf
mov
xor
shl
aaa
sbb
adc
stos
scas
test
mov
cmp
fcoms
inc
loope
inc
aaa
repnz
jae
setae
sahf
pop
mov
mov
je
sar
gs
test
dec
push
xor
outsb
jnp
mov
pop
fs
lds
push
pop
cmp
fistl
inc
jns
dec
inc
es
call
mov
cmp
mov
mov
xlat
mov
fbld
aaa
(bad)
lods
xchg
les
fldenv
rorb
shll
adc
xor
into
cwtl
push
cltd
int3
nop
mov
inc
sbb
das
rorb
xchg
pop
xor
pop
fists
stos
xchg
fnsave
ss
jbe
xchg
or
push
inc
jns
jl
jb
xchg
mov
mov
les
xorl
xchg
sti
dec
shll
ss
sub
adc
dec
xchg
aaa
negl
xor
fldenv
js
xchg
pcmpeqd
push
sbb
jg
mov
push
shll
gs
inc
mov
xlat
mov
mov
outsb
pushf
jae
inc
shl
xchg
data16
xchg
fidivl
push
jns
pop
jg
xchg
(bad)
push
das
jae
push
test
call
mov
cmp
mov
jbe
xlat
mov
fldenv
gs
push
les
jp
cmp
mov
aaa
stc
popa
clc
ss
dec
cwtl
push
cltd
test
das
mov
xor
xchg
jl
mov
popa
adc
push
sarb
popa
sbb
das
jns
inc
add
xchg
js
push
push
les
jg
les
out
jmp
outsl
xlat
rcll
out
mov
fs
xchg
cmpsl
bound
sbb
inc
xchg
mov
ss
xchg
arpl
cmpsl
(bad)
stc
cld
roll
push
pop
mov
xchg
(bad)
(bad)
fsubrl
movsl
xor
shll
cwtl
dec
push
mov
push
shlb
(bad)
scas
xchg
fwait
mov
jecxz
fildl
arpl
mov
xchg
mov
or
mov
inc
cs
add
fwait
xor
mov
cld
xchg
mov
aaa
stc
pop
int3
gs
cwtl
push
cltd
jge
out
jecxz
and
xor
fwait
out
mov
mov
aad
adcl
xchg
fwait
mov
mov
push
xor
sbb
lods
ret
lock
scas
enter
loopne
pop
cld
lret
mov
mov
divl
xchg
sarl
jae
xchg
sbb
arpl
cmpsl
xor
mov
je
push
cld
fsub
push
mov
xor
mov
pushf
rorb
xchg
inc
inc
jp
dec
dec
mov
or
mov
cmp
fs
gs
pushf
shlb
test
arpl
(bad)
arpl
ds
mov
cmp
pop
jnp
js
testl
cmp
push
pop
xchg
mov
adc
popa
stc
(bad)
mov
mov
push
jg
gs
mov
xor
daa
je
ja
repz
mov
cwtl
mov
fsts
pushf
out
bound
je
aaa
pushf
hlt
mov
jb
addb
jns
out
mov
ljmp
enter
pushf
cmpsl
push
rcrl
ljmp
(bad)
mov
mov
inc
push
mov
arpl
pop
mov
xchg
adc
rcll
popa
sarl
ja
xchg
call
mov
jns
pop
test
out
jae
jae
cmpsl
add
push
push
mov
adc
push
pop
mov
mov
dec
xchg
adc
(bad)
push
push
negl
or
push
cmp
dec
sbb
das
adc
hlt
dec
shlb
mov
mov
mov
mov
cmp
pushf
xor
xchg
cmp
and
mov
xor
repz
das
hlt
adc
xchg
xchg
cmpl
mov
sbb
gs
jns
pop
jmp
ss
fcoml
mov
bound
xchg
inc
cwtl
test
imul
rcll
pop
loop
cmp
scas
sbb
push
xor
xchg
addr16
sbbb
xlat
hlt
addr16
dec
js
push
pcmpeqd
push
fcoml
mov
cmp
jns
pop
xor
adc
xchg
or
ret
cs
pushf
lahf
push
mov
gs
xchg
out
jl
xchg
out
fwait
and
cmp
cmp
jbe
scas
scas
inc
inc
repnz
sub
xchg
adc
push
scas
mov
xchg
fwait
aam
mov
std
ja
repz
pop
aam
jbe
popa
rorl
inc
cltd
stc
adc
inc
push
dec
mov
rorb
jbe
cmp
sbb
xchg
push
sub
cmp
popa
pop
je
pop
xchg
xchg
xchg
xor
jmp
xchg
mov
scas
add
test
mov
push
enter
cld
outsl
push
ss
shll
mov
fists
idivl
push
outsl
shrb
js
mov
sbb
jle
iret
hlt
and
mov
mov
je
dec
cld
mov
out
jne
scas
push
fwait
adc
mov
lcall
xchg
xchg
mov
jp
inc
dec
mov
pop
jp
pop
cltd
jl
lods
pushf
mov
decb
ficomps
push
jbe
xor
inc
adc
xchg
sti
mov
iret
cmp
mov
aaa
fldenv
aaa
data16
mov
cmp
(bad)
nop
fs
(bad)
mov
shll
lods
mov
push
sbb
mov
aas
scas
gs
js
pop
xor
wrmsr
pop
scas
jbe
insl
xchg
mov
cs
nop
aaa
(bad)
iret
cmp
mov
hlt
aaa
sbb
sub
cs
inc
push
inc
(bad)
out
pusha
data16
jns
lock
push
mov
push
cmp
and
mov
mov
shrl
ss
xchg
push
cltd
and
dec
mov
inc
ror
jnp
pop
mov
testl
js
pop
adc
inc
dec
pop
je
inc
sbb
sub
repz
inc
jns
mov
push
sub
dec
iret
mov
sub
xchg
inc
cmpsb
int
enter
inc
cmp
pushf
pop
push
fwait
cmp
push
cmp
scas
cmp
ja
mov
gs
xchg
pop
arpl
sub
jbe
inc
push
cltd
leave
in
pop
repz
outsl
stc
mov
(bad)
out
sarb
loop
fsubs
xchg
cltd
sub
mov
arpl
mov
sub
mov
scas
xor
fistpl
dec
dec
std
in
xor
(bad)
in
out
adc
int3
leave
sti
push
xor
test
xorl
jl
pop
pop
testb
js
rcll
mov
sub
rcrl
cmc
push
xor
sub
ficoms
rolb
mov
inc
outsb
fwait
add
aaa
mov
(bad)
lea
pop
push
stc
push
mov
movsl
cmp
mov
mov
iret
inc
xchg
arpl
sub
mov
clc
out
dec
ja
fwait
or
scas
xor
addb
shlb
pop
mov
es
lret
(bad)
xchg
cltd
xchg
ja
loopne
dec
sbb
lock
std
push
inc
in
push
adc
jne
inc
and
jp
inc
push
insl
aam
jmp
push
xchg
mov
inc
sub
mov
fdivl
mov
insl
jl
mov
jno
les
jno
inc
sbb
push
pop
imul
push
jge
enter
nop
mov
or
leave
addl
scas
inc
push
sti
popa
dec
mov
(bad)
jb
lahf
mov
jecxz
mov
cmp
push
mov
aaa
adc
movsl
out
enter
push
xlat
rol
or
xor
or
lock
xchg
mov
lcall
les
and
mov
push
insb
js
ret
pop
aas
pushf
je
dec
nop
out
jge
out
jne
fdivrs
ffree
xorb
fildl
shr
pop
lret
inc
inc
call
add
jno
and
rep
in
xlat
bound
jp
add
test
and
jo
sti
es
out
std
push
or
adc
fcomi
lods
or
