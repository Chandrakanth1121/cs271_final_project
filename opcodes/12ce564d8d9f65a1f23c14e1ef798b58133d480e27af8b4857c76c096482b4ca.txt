cli
inc
sub
(bad)
sub
and
sub
loopne
notb
mov
test
mov
mov
sub
mov
inc
mov
rcr
(bad)
lock
lea
cltd
sarl
(bad)
fldt
cld
scas
out
fcoml
mov
dec
add
(bad)
sbb
repnz
push
mov
dec
mov
cmpsb
jne
scas
popa
dec
mov
adc
sub
outsb
mov
push
dec
insb
cmp
repnz
or
mov
aam
out
shrb
sbb
(bad)
sbb
(bad)
(bad)
fbstp
stos
rorl
(bad)
(bad)
je
in
mov
adc
jno
mov
popa
xchg
test
mov
xor
mov
xchg
cltd
popa
cmp
jnp
ret
(bad)
insb
mov
cmpsl
dec
cmp
sahf
mov
cmpsb
mov
mov
in
shrb
mov
pop
adc
mov
movsl
rcll
imul
movsl
jecxz
or
enter
mov
leave
rcr
fisttpl
shl
cmp
xchg
xchg
fmull
mov
mov
mov
(bad)
sub
push
insb
or
jnp
in
ret
cli
fst
test
mov
xchg
int3
xchg
xchg
pop
(bad)
rorb
lret
ficompl
aad
ljmp
(bad)
push
dec
mov
xchg
push
xchg
xor
insl
mov
leave
insb
test
xchg
sub
mov
lret
test
cmp
sub
mov
fs
repnz
push
popf
xor
enter
cltd
popa
cmp
jnp
rorl
insb
mov
cmpsl
push
cmp
cmpsb
aam
pop
lret
aad
fistl
dec
xor
or
cwtl
insl
addr16
dec
mov
dec
mov
xchg
push
lcall
(bad)
(bad)
lea
iret
mov
push
ds
inc
aad
lcall
lret
popa
dec
or
jnp
rcll
fcmovu
mov
xchg
fldt
mov
outsb
addr16
stc
(bad)
fmull
(bad)
push
mov
xchg
mov
mov
into
imul
cmp
or
stos
shrd
insb
mov
mov
popf
sbb
mov
push
push
insl
jo
js
test
xor
iret
fldcw
in
insl
push
jbe
outsb
jg
mov
cmc
dec
bnd
test
mov
rcll
dec
movsb
xchg
bound
push
jp
cmpsl
xchg
insl
mov
fistl
je
fidivrl
lcall
mov
jecxz
mov
pushf
sbb
fsubl
push
push
lea
shll
pop
inc
push
adc
les
outsb
cmpsl
pop
insl
adc
(bad)
mov
outsb
pop
mov
xor
addr16
mov
inc
push
dec
mov
(bad)
pop
dec
mov
push
dec
insb
iret
movsb
pop
pop
daa
lcall
xchg
jnp
pop
adc
mov
jne
jno
dec
push
movsl
aam
pop
mov
push
scas
xor
or
pop
insb
ss
dec
insb
push
aam
and
int3
sarb
cmc
push
dec
dec
add
mov
pop
adc
fwait
(bad)
shrb
int1
pop
lret
mov
pop
insl
daa
cmpsb
jb
cmp
cmp
pop
cmp
popf
mov
xor
mov
push
jns
cmp
(bad)
sbb
push
inc
push
push
xor
shll
scas
outsb
cmpsl
pop
insb
adc
fwait
push
insb
fldt
pop
outsb
mov
cmp
sbb
outsb
jmp
imul
rorb
pop
mov
leave
mov
dec
cmp
popa
insl
jne
pop
insb
push
into
mov
pop
lods
repnz
mov
mov
dec
or
jnp
mov
and
jno
leave
mov
jo
mov
dec
loopne
sbb
cmc
pop
push
inc
add
outsb
push
out
cmpsl
sbb
insb
mov
mov
(bad)
shrb
int1
sbb
xchg
mov
leave
outsb
shlb
outsl
pop
or
aad
loope
insl
xlat
cmpsb
pop
lods
lds
xor
divb
cmp
and
aam
aam
mov
cmpsl
mov
xor
repz
push
inc
int3
cmp
test
mov
adc
mov
mov
jmp
fwait
test
std
pop
lock
cwtl
inc
rorb
int3
rcrl
leave
xor
out
xchg
je
sbb
mov
mov
push
bound
push
or
pop
jbe
cmp
or
ret
aam
sbb
add
sti
or
fmul
xchg
insl
jo
mov
pop
xor
dec
jo
sbb
aad
loop
lods
cmpsl
int
xchg
leave
loope
mov
xchg
mov
lcall
mov
leave
ror
fcomi
orb
mov
outsb
mov
sub
mov
fadd
mov
cmp
into
cmpsl
es
pop
jo
rorb
orb
fimull
(bad)
mov
fstl
ljmp
aam
je
mov
cmc
pop
fcmove
add
aad
mov
adc
dec
nop
inc
xchg
dec
clc
(bad)
mov
insb
dec
mov
or
push
daa
push
insb
xchg
push
into
dec
dec
cmpsl
cs
xchg
xchg
loopne
daa
sbb
dec
fmul
(bad)
sbb
repnz
push
ret
xor
shll
mov
lret
pop
jo
mov
shll
cmpsl
outsb
jb
add
mov
mov
add
sub
aam
and
aad
fwait
(bad)
rolb
(bad)
inc
in
lods
mov
and
daa
(bad)
jb
(bad)
push
dec
and
aam
mov
out
jb
inc
iret
insl
cmp
imul
adc
insb
inc
mov
out
mov
mov
nop
ss
sub
cmpl
andl
fcmovnb
push
dec
cmc
lock
dec
lock
outsb
sub
sbb
cmp
xor
shr
mov
mov
nop
sarb
addr16
leave
aam
mov
sub
pop
imul
cmpsl
mov
mov
lcall
xchg
mov
pop
lock
test
imul
mov
cmc
ret
loop
outsb
cmp
imul
pushf
imul
push
xchg
cmpsb
jg
stos
insb
fidivl
xor
mov
dec
pop
scas
mov
lret
(bad)
cmp
xchg
movsb
mov
mov
outsl
fcoml
ljmp
ja
es
pop
ljmp
sbb
cmpsb
push
ret
xlat
into
push
xor
sub
int1
shll
nop
lret
mov
mov
dec
sahf
int1
loop
mov
adc
mov
data16
mov
push
insb
fsubrl
inc
(bad)
fsubr
leave
mov
mov
sub
stos
nop
mov
push
(bad)
xor
aad
stc
rcrb
(bad)
jle
cwtl
shl
add
inc
stc
imul
push
cwtl
adc
adcb
or
and
rorl
jp
scas
dec
mov
loop
rorl
dec
cltd
adcl
sbb
ss
xchg
cmpb
jae
lea
(bad)
dec
pop
(bad)
popa
insl
xor
mov
push
shrb
insb
insb
(bad)
xor
mov
out
pushf
test
call
inc
pop
out
fimuls
cmp
inc
rcl
sbb
push
jnp
(bad)
jl
and
pop
pop
repz
fisubl
outsl
scas
cvtps2pd
ljmp
mov
out
xorb
adc
lods
test
mov
or
sub
push
mov
mov
inc
jmp
fidivrs
mov
fdivrl
pop
xchg
lret
orb
roll
nop
cli
push
xchg
cmp
fisttpl
out
push
insb
pushf
out
stos
xchg
sub
repz
sahf
enter
cltd
rsm
mov
int
adcl
pop
jle
scas
inc
mov
sbb
sbb
addb
push
pushf
xor
push
push
es
xchg
mov
fiaddl
xor
push
xchg
inc
cmpl
pop
mov
mov
xchg
dec
sbb
movsb
(bad)
lcall
stos
push
inc
stc
add
push
xchg
xchg
fldcw
daa
sbb
and
inc
or
sbb
jo
lcall
cmp
out
mov
mov
push
scas
sbb
and
jg
lock
es
aam
xchg
or
(bad)
add
push
xlat
ss
and
shrb
mov
jo
pop
(bad)
lret
push
stos
mov
mov
insb
pop
sub
stos
bound
sub
fldt
fisttpll
dec
cmp
into
dec
mov
dec
outsb
push
inc
