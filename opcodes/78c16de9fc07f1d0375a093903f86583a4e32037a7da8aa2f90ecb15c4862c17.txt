xor
xor
add
pop
and
rex.wr
(bad)
add
and
cmpsl
lods
mov
add
add
ret
data16
sub
mov
xor
fdivrs
leave
movl
sbb
push
(bad)
cld
nop
cmpw
jne
movslq
add
(bad)
(bad)
jns
push
rex.rb
push
(bad)
mov
mov
test
je
mov
jg
call
test
adc
(bad)
fmuls
(bad)
xor
rcr
cmp
je
xor
xor
sub
nop
mov
insl
outsl
lock
pop
movzwl
(bad)
cli
or
mov
jne
cmpl
incl
mov
out
(bad)
xchg
test
setne
jmp
adc
movabs
mov
rex.r
jmp
mov
jns
mov
repnz
ds
(bad)
(bad)
push
xchg
lea
jg
or
add
(bad)
mov
rex.w
rex.wr
fwait
mov
call
std
or
(bad)
cmp
cmovno
push
push
stos
and
mov
mov
sbb
insb
push
in
jmp
add
xor
xadd
push
jo
jmp
outsl
cmp
je
fcomi
mov
{rex2
cmpxchg
rex.w
rex.w
jbe
mov
test
cmp
rex.wrx
adc
sbbl
add
cmpsl
jge
cmp
gs
mov
test
or
es
jg
call
call
(bad)
mov
adc
or
(bad)
adc
sub
call
test
data16
sbb
fisubrs
add
xor
out
cmp
call
and
jbe
sbb
test
jle
or
fisttpl
or
call
fiaddl
jo
mov
call
lock
sbb
(bad)
mov
adc
push
ret
or
clc
fbstp
int1
sti
ret
cmp
out
movq
cmpsb
call
stc
(bad)
push
orl
out
xor
(bad)
rex.wxb
push
add
sbb
(bad)
adc
leave
(bad)
mov
add
shlb
and
pop
pop
pop
sub
mov
mov
mov
test
or
mov
mov
cmp
fstl
or
in
jo
movl
(bad)
fbstp
rolb
mov
test
test
(bad)
pop
std
(bad)
cmpsb
test
xchg
pushf
add
jmp
out
(bad)
(bad)
mov
jmp
or
jg
lea
(bad)
rex.r
nop
sub
(bad)
test
jp
xor
call
sbb
cltd
ffreep
fiaddl
out
push
(bad)
lcall
cmp
push
push
push
push
(bad)
mov
cmp
imul
outsb
lods
and
out
mov
add
mov
test
jle
and
or
adc
test
jns
fsubl
add
test
cmp
addb
(bad)
cmp
js
(bad)
(bad)
ja
(bad)
mov
insl
(bad)
xor
ficoms
fisttpll
adc
mov
lods
cmp
mov
adc
push
fstpl
rex.wrb
push
nop
lahf
xbegin
push
{rex2
mov
(bad)
and
lret
movsxd
cld
cmp
xor
rex.wx
pushf
rex.wr
mov
cltd
jno
out
fisttpll
xor
and
mov
adc
mov
sbb
rex.rb
jbe
add
fsubr
ficoms
push
cmp
je
sub
(bad)
xchg
mov
andl
and
movabs
cld
rex.rb
es
movsxd
rex.rx
in
loope
notl
xchg
lfs
movabs
out
mov
scas
pop
rex.wxb
jnp
rclb
fs
imulb
(bad)
rex.wr
insl
outsl
mov
add
adc
fs
and
scas
leave
mov
xchg
imul
(bad)
add
or
(bad)
(bad)
frstor
mov
cmp
cmp
lea
leave
rex.wr
fs
xor
fimuls
sar
(bad)
fmulp
negb
popf
push
rex.xb
rex.w
mov
cs
(bad)
mov
mov
call
sbb
xor
movabs
stc
mov
(bad)
loop
jmp
(bad)
(bad)
mov
push
adc
mov
rex.w
pop
jns
push
fsubl
xchg
test
fdivs
(bad)
in
movsxd
movabs
add
adc
or
or
cmp
insb
test
ret
adc
hlt
jmp
loope
leave
movsxd
mov
(bad)
adc
mov
jo
mov
rex.wr
cmp
movl
add
loop
repnz
sbb
(bad)
cmp
xor
test
test
mov
(bad)
jmp
add
mov
lret
add
test
{rex2
(bad)
movabs
pop
add
jbe
insb
in
sbb
sbb
add
mov
rex.wrb
add
cmp
sbb
divb
cmpsb
and
ds
je
movsl
(bad)
sbb
sub
loopne
sbb
lods
fnstenv
pop
sbb
add
enter
or
ss
loopne
xchg
mov
jmp
ret
and
xchg
jmp
adc
add
movsb
xor
jl
push
loopne
lahf
{rex2
movabs
push
ds
movabs
or
xor
push
test
jae
sub
cmp
lock
clc
add
add
sub
mov
sub
add
rex.rxb
sbbl
(bad)
lock
pushf
data16
jge
in
adc
sub
rex.rx
cmp
rex.wr
(bad)
ror
out
movsxd
rex.w
(bad)
fs
cmpsl
add
rorl
(bad)
mov
sarl
cltd
xchg
imul
cmpb
xchg
(bad)
(bad)
loopne
jl
add
lcall
test
xchg
(bad)
sub
loop
mov
es
cmpl
ffree
cmp
movsb
(bad)
subl
addr32
rex.wrb
mov
shlb
fistpll
ret
shr
or
lock
imul
mov
neg
(bad)
or
movsxd
enter
fisubs
rex.xb
movsl
mov
xchg
mov
fsubs
lods
cld
sarl
xchg
and
and
pop
jle
(bad)
pop
in
xchg
add
sbb
in
ds
push
mov
adc
movsl
sub
sbb
fsts
push
rex.w
rex.wxb
adc
or
push
scas
add
push
jnp
xchg
test
out
and
xor
sbb
rex.b
(bad)
rcll
or
jns
rex.wrx
rex.rxb
(bad)
jns
mov
mov
jb
setno
cltd
adc
rex.wb
rex.rxb
out
pop
(bad)
jo
sub
fiadds
jno
push
cmp
(bad)
xor
xorb
xor
movsl
out
sbb
(bad)
push
(bad)
add
cmp
sbb
push
rex.wrxb
cs
in
add
fsubs
and
cmp
nop
je
(bad)
andl
pushf
xlat
and
fwait
outsl
or
fisttpll
notb
pop
add
ss
or
add
std
test
and
sbb
add
rex
or
imul
add
fcmovnu
pop
mov
mov
mov
(bad)
rorl
and
rex.wrx
sbb
out
rex
ds
in
jb
(bad)
jo
jo
enter
cmp
test
sub
and
push
add
adc
(bad)
sahf
movabs
sarl
rex.wxb
insb
adc
mov
(bad)
lret
out
(bad)
jns
xlat
je
xor
lahf
(bad)
push
(bad)
mov
ds
jle
repnz
jmp
rex.w
and
add
(bad)
rex.b
xchg
(bad)
adc
(bad)
(bad)
xchg
rex
repnz
pop
mov
add
lods
jle
rex.rx
rex
adc
rex.rb
add
add
push
jae
(bad)
(bad)
sub
mov
pop
sub
jmp
adc
mov
mov
sub
cmpl
je
cs
mov
ja
sub
loopne
js
(bad)
or
pop
mov
xchg
push
cmpl
jns
rex.wrxb
(bad)
add
add
sub
mov
data16
jl
add
roll
movsb
xchg
stos
rex.x
jle
mov
insl
add
insb
and
outsb
and
(bad)
jge
sub
in
jmp
cmc
lea
(bad)
xchg
insb
rcrl
and
(bad)
cmpsl
xchg
(bad)
es
push
push
(bad)
cmp
mov
(bad)
movsb
(bad)
out
enter
push
movb
add
adc
jns
std
in
pxor
movq
lea
cs
push
addr32
repnz
rex
popf
push
sub
movabs
push
outsl
sbb
mov
rorl
js
je
adc
js
rex.rxb
sub
rex.xb
rex.x
(bad)
mov
mov
add
lock
fisubrl
sbb
or
(bad)
xchg
fstpl
sub
mov
(bad)
stos
mov
jle
cmpl
loopne
fsts
xchg
push
mov
mov
xor
pushf
add
rex.wrx
stos
ja
(bad)
sarb
enter
sub
mov
outsb
mov
xor
in
rex.r
xor
push
xchg
mov
rex.rb
sbb
cs
cmpsl
mov
(bad)
cmp
(bad)
shlb
sub
(bad)
rol
(bad)
mov
add
