cli
jecxz
bswap
cli
std
aaa
rcrb
pusha
fs
hlt
(bad)
jbe
sub
xor
fiadds
fbstp
gs
repz
fsub
push
xor
popf
out
add
iret
sti
add
in
mov
push
lahf
dec
cwtl
pop
dec
pop
repz
pop
mov
(bad)
and
in
xor
cld
xor
stos
in
jno
gs
out
cmp
mov
cwtl
test
add
mov
lock
clc
int
mov
lods
(bad)
xlat
test
jg
in
cmp
iret
(bad)
stc
andb
fmuls
push
jnp
test
std
arpl
stos
call
fs
movsb
shl
jmp
scas
sub
inc
adc
lock
mov
scas
inc
xchg
xchg
in
iret
jb
ss
rcrb
aad
push
dec
cmp
pop
out
rcrl
jo
xchg
fisubl
mov
int3
adc
cmp
out
outsb
js
fwait
mov
insb
jns
(bad)
jns
xsavec
repnz
xchg
sbb
lret
sbb
out
lcall
gs
arpl
adc
jns
inc
(bad)
fidivl
in
mov
roll
inc
cld
jbe
jns
push
adc
xor
aas
add
bound
in
sbb
pop
xchg
cmpsl
mov
push
in
mov
arpl
(bad)
fcompl
mov
arpl
(bad)
push
sbb
mov
mov
jnp
mov
orb
fisttps
or
mov
pop
jae
inc
push
push
out
mov
(bad)
repz
mov
in
ret
je
(bad)
mov
shll
push
lods
(bad)
add
xor
jae
cmp
mov
adc
mov
push
push
lock
pop
call
and
push
mov
(bad)
imul
imul
dec
lcall
nop
mov
inc
imul
mov
mov
mov
ds
subb
push
dec
gs
push
xor
in
fwait
mov
mov
iret
fs
sbb
insb
call
pop
ret
and
or
lcall
(bad)
cmp
lock
test
xor
sar
(bad)
int3
test
or
or
or
or
outsl
daa
loope
mov
push
mov
xchg
push
test
shlb
xchg
jbe
xor
data16
leave
movsb
xor
loop
inc
sahf
mov
adc
pop
in
cmp
imul
or
iret
jo
cmpsl
mov
cmp
mov
je
cmp
mov
or
jge
pop
jne
push
sbb
jp
pusha
(bad)
mov
bound
(bad)
sub
dec
mov
call
jge
mov
mov
or
mov
repnz
lock
xchg
int3
and
js
sbb
jb
pop
jg
xor
(bad)
dec
fistpl
fs
mov
shrb
loopnew
in
out
xor
and
cmp
xchg
adc
pop
roll
out
add
pop
adc
ja
push
and
push
ror
bound
js
cmp
scas
lods
divl
adc
cmp
adc
mov
gs
push
addr16
push
cmp
gs
mov
jle
fstpt
inc
jecxz
mov
inc
sub
mov
imul
insl
loop
out
std
sbbl
sub
das
scas
addr16
cmp
pop
dec
pop
mov
xor
sub
mov
pop
pop
sti
jbe
cmp
rorb
popa
adc
or
sub
jbe
inc
add
xchg
cmp
lds
int
in
aas
mul
sbb
sub
cmp
or
and
xor
xlat
sti
lret
sub
mov
int3
mov
pop
mov
roll
sbb
loope
cltd
je
loopne
inc
arpl
inc
filds
(bad)
dec
popa
pop
adc
cmp
inc
rolb
incb
imul
pusha
push
push
daa
cmc
mov
div
lods
iret
or
dec
leave
mov
scas
scas
pop
jnp
lods
arpl
pusha
nop
imul
imul
jecxz
mov
(bad)
jo
sahf
mov
aas
addr16
cld
stc
das
cmp
addr16
sbb
enter
pop
addl
mov
daa
int3
dec
adc
add
add
repz
dec
mov
or
je
mov
lods
call
sbb
(bad)
push
mov
stos
lds
xchg
leave
mov
nop
into
sbb
repnz
dec
arpl
test
mov
fcomi
adc
xchg
int3
sbb
adc
xor
aad
ds
jmp
jns
enter
xor
or
mov
(bad)
aas
xor
in
push
jno
test
xchg
ss
cltd
pop
xchg
adc
shr
imul
addr16
adc
mov
aad
addl
push
push
fnstsw
mov
and
out
sbb
cmp
paddsb
mov
paddsb
inc
subb
mov
test
add
lahf
dec
xlat
xor
addr16
mov
push
inc
mov
test
(bad)
pop
movb
nop
outsb
jecxz
stos
(bad)
xchg
aad
andb
jno
mov
mov
lock
push
mov
mov
jge
push
xor
xor
out
dec
mov
movsl
outsl
mov
pop
int3
gs
cld
sbbl
test
(bad)
pusha
insl
data16
fcompl
dec
rclb
aad
mov
mov
mov
shl
ficoms
jae,pt
loop
insl
popa
sbb
jmp
inc
sbb
imul
in
repnz
fs
jns
fs
(bad)
outsb
inc
in
stc
(bad)
gs
adc
insb
outsl
pop
pop
js
add
mov
mov
lret
inc
mov
nop
lods
push
or
movsb
into
cli
pop
cmp
bound
gs
enter
sub
pop
scas
cmc
dec
mov
gs
insl
les
mov
insb
cmp
inc
inc
jl
ljmp
cld
lret
and
lods
(bad)
addr16
repnz
f2xm1
call
xchg
sbb
push
add
or
fs
jb
int
xchg
mov
lods
iret
mov
inc
mov
xlat
addr16
mov
inc
stc
cmp
ror
mov
sub
sbb
push
outsb
cmp
rcrb
aad
adc
fsts
xchg
mov
cmp
movsl
shll
mov
xor
and
je
lea
mov
xchg
and
jmp
stos
ja
mov
add
mov
pop
or
sqrtps
decb
(bad)
push
adc
mov
out
jmp
(bad)
push
sbbl
vpaddd
fs
inc
mov
inc
pop
jbe
sub
cli
jb
int3
daa
aad
outsl
jns
ss
mov
push
push
xorb
fidivs
sub
aam
sub
add
dec
mov
jo
push
mov
jl
xchg
scas
dec
fs
outsl
sarl
cmp
or
jp
and
les
mov
test
pop
adc
nop
lret
push
inc
lock
lds
dec
mov
jmp
mov
dec
or
mov
out
and
add
es
cmpsl
push
adc
push
clc
out
pusha
xor
sub
std
hlt
cmp
stc
aaa
stc
mov
or
sahf
lock
xchg
sbb
gs
xchg
bound
int1
pop
push
imul
sarl
into
and
and
lret
inc
dec
dec
dec
jecxz
xlat
out
fs
arpl
popf
add
imul
clc
leave
push
jo
dec
loopne
repnz
inc
js
ret
popa
mov
cmc
adc
xchg
arpl
and
test
and
nop
xor
push
ja
fs
in
pop
push
mov
mov
inc
cmp
les
cli
lcall
mov
xchg
inc
add
pop
pop
mov
xor
repnz
mov
addr16
add
xlat
adc
push
jo
push
cli
jae
aad
xchg
sarl
dec
add
fs
adc
addr16
cmc
add
shll
inc
mov
in
pop
sub
repz
xor
lret
cmp
mov
jb
fildl
call
xchg
jecxz
fisubs
sub
or
inc
sbb
in
pop
(bad)
dec
jmp
pop
jecxz
dec
roll
sub
xchg
and
out
xchg
test
sbb
stos
andb
or
mov
fisttps
insb
cltd
aad
aas
fcomps
mov
push
mov
pop
cmp
lret
dec
imull
movsl
jb
mov
jle
lods
jne
scas
jno
stos
lea
push
cmpsb
into
aas
adc
