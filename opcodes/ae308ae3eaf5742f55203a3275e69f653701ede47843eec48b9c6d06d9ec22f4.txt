imul
sbb
pop
mov
test
jle
pop
insl
roll
(bad)
xor
sbb
popa
pop
lcall
cld
cmp
or
cmp
(bad)
(bad)
(bad)
(bad)
dec
in
mov
pop
mov
lods
fisttpll
outsb
sbb
orl
loope
scas
xchg
and
push
add
gs
xchg
gs
movsb
fisttps
cs
cmp
(bad)
shrl
cmpsb
shlb
jg
or
push
pusha
cltd
in
negb
pushf
in
xor
xor
cli
repz
mov
loopw
and
movsb
outsb
movsl
push
sub
add
mov
test
and
cmc
add
aaa
rorl
pop
pop
dec
(bad)
fbld
arpl
mov
or
mov
out
jo
add
mov
out
das
jg
movsb
imull
out
mov
push
cmp
or
add
clc
jbe
mov
cmp
lock
jb
gs
xchg
mov
or
imul
cmp
xorb
into
sbb
inc
xchg
xor
lods
mov
adc
cmc
daa
dec
sub
cmpsb
(bad)
jmp
pop
cmpw
jg
ljmp
movsb
mov
xchg
into
mov
inc
push
loope
lcall
dec
xchg
adc
push
aam
push
out
add
loop
mov
adc
sahf
mov
jp
or
xchg
arpl
mov
pop
loope
sub
pop
push
push
push
rcl
repnz
mov
push
aas
movsb
add
xor
push
fucomip
rcrl
xchg
popa
xor
daa
pop
mov
cmp
jbe
es
mov
int
add
dec
loope
jmp
(bad)
cmpsl
mov
pop
lcall
add
ds
xcrypt-ctr
cmpsl
sbb
push
mov
sub
sbb
and
inc
pop
ljmp
scas
pop
dec
bound
pop
lcall
das
filds
xor
mov
popa
insl
or
inc
sahf
xor
mov
cwtl
push
imul
outsl
mov
div
out
xchg
dec
iret
outsl
sbbb
mov
arpl
sbb
pop
andb
sti
dec
mov
xchg
push
adc
pop
push
jl
sub
jge
mov
das
pop
hlt
cmpsb
jo
and
sbb
xchg
xor
mov
aad
sbb
add
mov
fstpt
addr16
negl
adc
out
out
dec
out
adc
ljmp
or
push
jb
mov
mov
mov
inc
sbb
rcrl
xor
into
or
adc
sub
in
add
cltd
and
and
inc
xchg
bound
fldenv
adc
scas
in
jmp
mov
cmp
cmpsl
xor
inc
inc
stos
mov
push
cli
loop
ret
jno
jbe
dec
les
lods
push
add
aad
and
xlat
push
jb
sbb
mov
cwtl
sbb
pop
aas
adc
push
fidivl
movsb
in
xchg
jns
and
sbb
cld
push
push
sub
push
pop
pushf
mov
les
lds
into
and
std
in
loopne
mov
cmp
push
and
pusha
int1
jo
inc
mov
loop
aad
sub
negl
in
push
adc
mov
add
lods
loope
mov
xchg
jg
mov
jb
lcall
addl
jle
ja
push
call
js
cli
push
sub
xchg
pop
fisttps
les
mov
mov
es
jne
cmpsl
shll
push
sbb
ficoms
(bad)
jne
les
bound
and
call
imul
push
pop
adc
ret
adc
ret
loop
int1
cltd
ret
and
mov
sub
outsl
notl
and
cmpl
bnd
mov
popa
mov
pusha
cs
inc
cmp
inc
fyl2xp1
movsb
or
ds
and
mov
cli
mov
mov
lret
mov
jp
movsb
jno
dec
movsl
(bad)
mov
sub
add
jnp
lods
pop
inc
inc
shll
cwtl
mov
lahf
push
mov
xchg
and
popf
jmp
sub
imul
nop
fnsave
cmp
mov
sahf
sti
xchg
gs
and
loop
addr16
das
movl
push
xor
out
int1
push
fcompl
push
mov
cs
clc
xlat
loope
sbb
aad
addr16
mov
out
je
ds
mov
in
insb
jle
int3
mov
inc
push
or
stos
inc
mov
sub
int1
sub
sub
dec
mov
cmp
(bad)
jne
jge
mov
adc
mov
mov
rcl
pop
popf
nop
(bad)
pop
pusha
mov
mov
pop
ljmp
imul
mov
rcrl
mov
push
js
subl
cwtl
sbb
cmp
js
jg
and
and
pop
xor
add
pusha
mov
xchg
inc
std
sub
das
(bad)
movsl
int
xchg
pop
sub
pop
data16
push
addr16
enter
addr16
shlb
(bad)
ret
sbb
movsl
shrl
mov
push
xor
push
inc
les
xor
(bad)
shll
cmp
xor
les
xor
dec
inc
roll
xor
xor
or
push
imul
insl
inc
testl
xchg
dec
mov
sbb
cmp
ja
into
mov
mov
sti
inc
addr16
movsl
mov
sub
pushf
add
lods
mov
xchg
fisttpl
push
dec
ja
mov
popa
mov
add
stos
pop
pop
push
push
cmp
call
inc
mov
mov
sub
sbb
mov
in
ficomps
cmp
mov
jne
test
fwait
repz
mov
mov
mov
and
imul
(bad)
int3
cmp
ljmp
mov
push
lea
std
int
and
leave
jae
inc
nop
push
movsb
add
push
mov
mov
popa
(bad)
push
loope
push
bound
or
shlb
repz
sbb
lock
fcmovu
and
pop
cmp
xor
fs
inc
imul
inc
pusha
sub
fidivrs
addr16
dec
mov
call
paddsw
lea
out
pop
xlat
push
aad
cmc
jp
arpl
nop
cmp
ja
nop
loop
js
inc
inc
and
and
dec
outsl
ja
fbld
pusha
ret
push
testl
out
pop
outsl
xchg
scas
jo
mov
cld
bnd
loope
int1
push
mov
xor
ja
and
xor
repz
jbe
mov
arpl
mov
sbb
roll
sub
dec
push
inc
push
cmp
je
add
popf
push
and
dec
out
aam
inc
bound
push
stos
rcll
loope
or
mov
pop
xchg
push
lds
add
dec
or
mov
push
push
ret
mulb
cmp
mov
xor
mov
outsl
mov
cmpsb
sbb
xchg
lea
loop
test
pop
test
or
and
xchg
adc
daa
fsubrl
or
inc
and
cmpl
push
imul
mov
inc
sub
fidivs
and
test
pop
fucomip
ds
jle
or
adc
scas
inc
adc
jo
in
push
xchg
pop
dec
aas
movsl
mov
sub
lea
fdivp
jno
xchg
pop
sti
sbb
cmpsl
inc
pop
cs
and
inc
ja
gs
fmull
arpl
sbb
cmp
dec
cs
sbb
lods
rorb
nop
mov
or
insl
xchg
mov
sti
xchg
loopne
ss
push
pop
pop
mov
pop
fsubr
out
shlb
psllq
popa
cli
daa
push
mov
popa
push
lock
nop
ror
insb
leave
xchg
jmp
nopl
adcb
daa
inc
mov
ret
pop
jecxz
pop
sbb
mov
push
outsb
cmp
xor
in
mov
and
and
aas
sub
push
dec
and
cmpsb
leave
xlat
iret
pop
sub
push
test
xchg
push
cld
cmp
movl
sbb
in
fbstp
pop
stos
sub
push
inc
mov
inc
and
push
add
loopne
xchg
fisttps
lock
lahf
sub
popa
dec
jmp
pop
adc
xchg
lahf
pop
pop
(bad)
inc
sub
add
rol
movsb
(bad)
and
lea
sub
cmpsl
sbb
ss
lock
idivl
in
sbb
mov
push
xchg
push
pop
or
