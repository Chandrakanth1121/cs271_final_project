jecxz
xor
adc
(bad)
std
sbb
mov
mov
inc
enter
pop
adc
lahf
std
int3
sbb
push
mov
ficompl
popf
push
dec
dec
jb
push
add
add
cwtl
or
rcll
into
nop
adc
in
leave
sub
jbe
(bad)
nop
mov
dec
test
push
frstor
aaa
lret
sub
add
(bad)
xor
cwtl
push
pop
push
add
lds
fwait
inc
push
cmp
dec
pop
iret
int3
sbb
stos
xchg
call
mov
sar
pop
mov
adcl
loope
popf
lret
fdivr
(bad)
les
js
push
add
mov
fisubrs
add
imul
push
push
cwtl
push
inc
into
mov
shll
sub
stos
add
int
jne
lock
sbb
(bad)
loopne
outsb
imulb
unpckhps
push
notl
hlt
adc
ja
(bad)
rorl
push
adc
mov
scas
adc
and
xchg
dec
cli
addl
(bad)
in
subl
xor
call
iret
scas
push
cmp
das
xchg
imulb
and
mov
dec
lods
pop
bound
sarl
mov
ss
(bad)
push
sbb
add
je
or
push
pop
repnz
xchg
pushf
leave
and
mov
mov
adc
push
das
or
lock
(bad)
jbe
xchg
mov
cmp
mov
or
dec
test
adc
sti
cli
fwait
out
outsl
je
and
movsb
mov
lcall
and
into
lock
ficoms
xor
nop
bound
sbb
sub
jae
aad
out
sahf
xor
scas
sub
mov
xchg
mov
int1
cmp
pop
cmpsb
nop
pushf
pop
stos
int3
es
add
mov
imul
dec
xchg
jle
call
movb
cmp
jp
iret
xor
add
fwait
stc
iret
and
sahf
divb
int3
adc
xor
push
repz
sub
out
cmp
or
neg
add
int3
fwait
fs
sbb
sbb
or
leave
mov
shl
and
mov
outsb
jl
xchg
jp
lds
or
aad
and
loope
mov
(bad)
jb
sbb
adc
or
(bad)
jg
sbb
xchg
mov
or
adc
ja
nop
mov
decl
clc
sub
push
xchg
imul
aad
push
or
(bad)
call
in
push
imul
adc
and
sbb
push
push
and
and
ss
orl
imulb
loop
std
int
rclb
fs
and
loope
pop
inc
into
xor
rcrl
xchg
(bad)
sbb
ja
cwtl
lcall
dec
push
sbb
adc
mov
(bad)
out
cmpb
xchg
ljmp
sub
(bad)
mov
dec
fucom
sub
insb
jno
(bad)
sub
insb
jle
sbb
lods
mov
adcl
call
pushf
push
mov
add
mov
xlat
(bad)
jnp
cmp
xchg
fldenv
push
xorl
aam
add
and
xlat
(bad)
hlt
push
or
xor
jne
stos
cltd
lods
push
fsubrl
hlt
or
sbbb
jecxz
dec
in
rclb
ret
loop
or
bound
xor
ljmp
pop
mov
je
mov
rcll
gs
inc
imul
pop
mov
sahf
xchg
xchg
rorb
aam
or
enter
std
dec
sbb
sti
mov
push
inc
jne
push
push
xlat
adc
add
jge
pop
cmp
mov
add
mov
das
jecxz
pop
mov
xlat
mov
push
xor
int3
or
push
jns
pop
clc
mov
dec
int1
popf
test
bound
mov
lds
mov
sbb
mov
xchg
pop
rcrb
mov
int
add
bound
or
mov
call
adc
pop
cmp
out
das
bound
cmp
mov
sbb
push
xchg
arpl
outsb
clc
addr16
rorb
imul
scas
or
push
push
sbb
adc
in
push
jns
aam
lock
shlb
imul
rclb
ret
out
and
test
and
outsb
xor
adc
mov
jo
repz
lea
frstor
out
test
or
mov
(bad)
lock
and
or
cmp
and
mov
out
dec
xor
cmpsb
scas
mov
or
mov
push
add
movsl
cmpsb
push
sti
scas
sub
adc
push
rcll
cmc
and
jno
call
sub
or
adc
push
add
and
sub
int1
add
cs
(bad)
mov
xor
pop
popa
dec
push
jae
and
xor
das
or
lods
sub
sbb
dec
testl
xchg
push
in
sub
mov
xor
ljmp
sbb
testb
pop
inc
sbb
adc
cmpsb
mov
xchg
xchg
(bad)
sbb
sub
repz
push
dec
mov
add
jmp
pushw
popa
mov
fsubrl
sar
adc
push
rcll
jp
sub
add
xchg
sbb
popa
(bad)
dec
mov
push
push
lea
xor
pop
cmp
cli
(bad)
sbb
push
jecxz
inc
notl
imul
lahf
jp
aaa
popf
sahf
jecxz
inc
xchg
mov
mov
stos
xlat
xor
xlat
sub
add
xchg
adc
(bad)
dec
movsb
ss
daa
cmpb
dec
popf
rorl
lret
nop
cmpsl
adc
mov
stos
push
push
sbb
aad
xor
int1
fisttpll
push
mov
lcall
lret
xchg
add
mov
dec
adc
jmp
les
xor
(bad)
jae
xchg
in
inc
or
fs
jmp
xchg
sub
dec
mov
adc
sub
push
inc
test
lods
femms
das
jg
out
imul
xchg
xor
out
push
mov
pop
std
js
pop
(bad)
psubsb
pushf
xor
adc
dec
xor
xor
or
mov
adc
ss
mov
mov
mov
mov
inc
mov
in
sbb
lret
pop
(bad)
scas
add
xor
cvtps2pi
leave
jnp
push
subl
roll
clc
cld
sub
cmp
mov
cmp
jo
outsb
je
cmpsb
out
dec
mov
mov
int1
add
lahf
aam
lret
jg
cwtl
int1
xchg
pusha
in
movsl
jo
mov
adc
push
loop
push
add
aad
lock
xchg
popf
inc
std
lea
add
out
jmp
xor
repz
pop
hlt
xor
ljmp
in
movsl
aad
mov
mov
jl
cmpsb
add
xchg
les
shl
imul
cmp
pop
ds
mov
dec
xor
das
sub
mov
cmp
aam
jbe
outsl
enter
sub
(bad)
adc
mov
lret
or
test
ldmxcsr
ds
test
lods
(bad)
pushf
add
sbb
inc
and
sbb
sbb
std
lods
mov
out
movsb
lret
and
ret
jns
shlb
cld
add
pop
stos
cmp
aam
bound
inc
pcmpgtb
add
xchg
xchg
adc
xchg
push
aas
sub
iret
jl
aam
insb
mov
xchg
xchg
les
fisubrl
fbstp
push
inc
pop
mov
imul
sub
mov
push
add
jae
jne
lods
arpl
lock
dec
inc
sbb
aad
cs
lahf
xor
data16
ljmp
xchg
ds
aad
mulb
rcl
fildll
cmp
inc
or
into
add
jmp
jae
sbb
(bad)
sahf
mov
cltd
xchg
fsubrs
sub
faddl
cmp
lea
std
leave
in
lods
sub
ss
cmp
fbld
rorl
inc
lea
and
lea
cmp
ja
js
sub
jbe
stos
xchg
jmp
inc
std
out
push
aad
add
adc
push
xchg
jp
push
insb
test
lds
mov
in
cmp
call
xchg
dec
insb
cmp
push
and
fsubrl
loop
aad
repnz
pop
add
push
rcrb
push
jge
mov
xchg
adcl
mov
je
jg
push
sub
inc
adc
inc
adc
imul
fs
push
movntq
mov
push
in
add
int3
pop
test
add
pop
movsb
or
repz
(bad)
