lock
add
add
add
add
add
add
add
add
add
push
out
scas
aad
xchg
add
mov
inc
mov
das
popa
sti
mov
mov
iret
jnp
movsl
adcb
inc
test
pushaw
dec
mov
xchg
mov
fldl
sbb
fwait
out
stos
aam
movsl
push
pop
stos
scas
sbb
jno
dec
dec
ret
nop
cmpsb
shl
hlt
cli
dec
data16
in
lds
jns
pusha
inc
push
les
addr16
cli
mov
jae
jns
(bad)
je
push
push
movsl
imul
sti
jp
mov
outsb
mov
pop
(bad)
in
sbb
cmp
pop
pusha
aaa
(bad)
fnsave
push
fwait
dec
dec
and
push
(bad)
xchg
rcrl
cmp
fcomps
roll
mov
mov
jmp
or
xor
in
jle
int3
aas
or
mov
add
mov
out
or
mov
or
pop
bound
mov
jae
mov
jl
out
imul
xor
scas
push
dec
pop
fsts
sarl
jnp
sub
add
pop
lahf
jo
daa
mov
cmp
sbb
loop
int3
lea
cli
cltd
dec
sbb
jmp
loopne
and
and
add
cwtl
sarl
insb
xor
fs
pop
lahf
xor
mov
inc
ljmp
sub
(bad)
fldl
jl
xchg
pop
pop
outsb
mov
ljmp
inc
xor
inc
add
cmpsb
mov
add
mov
rol
mov
jmp
push
push
aas
test
pop
mov
std
(bad)
mov
cmp
aam
incb
mov
pop
jle
call
rclb
js
fsubrp
int
fldt
adc
push
pop
repnz
mov
ja
xor
call
lahf
pop
nop
lret
subl
xorl
repnz
cmp
xor
or
mov
rorl
inc
xor
jns
test
(bad)
fidivrs
sti
mov
rcll
sub
push
js
movq
shll
dec
cmpsl
xchg
aam
lahf
inc
mov
xor
jne
cwtl
mov
(bad)
into
ss
out
enter
xor
add
jl
and
lahf
and
push
xchg
jg
or
and
popf
andl
lfs
mov
and
popf
xor
(bad)
jle
sub
in
or
dec
xchg
push
outsb
pop
iret
shrl
lcall
add
in
or
jns
jge
and
aad
inc
dec
popa
cmp
push
stos
pop
shl
shll
push
jge
enter
mov
dec
pop
imul
cmpsl
lods
mov
dec
adc
fdivrs
push
mov
and
or
inc
inc
push
mov
jae
std
lods
inc
loopne
xor
pop
enter
add
mov
daa
or
cmpsb
or
out
(bad)
pop
subb
es
add
jne
mov
mov
outsl
xchg
loopne
sti
inc
aaa
jo
daa
sub
pandn
and
jge
lcall
stos
inc
inc
cli
adc
fistps
lret
subb
sub
pop
adc
ja
cmc
mov
lea
insb
aad
push
pop
das
jne
or
iret
ja
cmp
pusha
fdivp
out
jp
ret
ds
sbb
mov
loopne
fwait
and
pop
and
mov
fadds
shlb
mov
jb
shl
pop
push
mov
push
es
add
pop
js
std
inc
in
cs
push
push
mov
bnd
xor
inc
jmp
mov
add
jecxz
lea
lds
mov
or
xchg
and
(bad)
sti
mov
lcall
pop
lods
sarb
adc
out
mov
cli
ljmp
fistl
nop
clc
ds
adc
sbb
xor
dec
or
outsl
sbb
xlat
mov
sbb
or
pop
fistpl
movsb
sbb
addr16
movsb
mov
inc
insb
xlat
dec
xchg
push
ja
test
jns
lds
dec
movd
adc
in
jb
jle
test
push
out
push
jns
iret
aad
pop
jmp
ret
adc
inc
clc
arpl
pop
out
xor
xor
cs
movsb
sub
cmpsb
cmpsb
arpl
out
pushf
dec
mov
or
mov
or
mov
cwtl
fstl
lock
or
mov
pop
pop
mov
jmp
out
push
lods
ja
xor
mov
out
add
enter
sub
gs
mov
push
test
test
pop
inc
xchg
adc
int1
popa
or
mov
sbb
jmp
sub
(bad)
clc
dec
add
jge
jae
int1
cmp
gs
cmp
pop
out
dec
(bad)
cmp
fldcw
call
cmc
test
sub
bt
mov
xchg
ss
nop
lcall
ljmp
push
lods
iret
shlb
daa
cmp
shrb
int3
daa
mov
push
mov
mov
mov
jl
out
ficoml
pop
xchg
fcoml
mov
inc
jo
rclb
pop
in
out
adc
repnz
cwtl
ja
lahf
cmp
mov
push
add
lret
lods
movsb
cmp
cwtl
sbb
arpl
xor
jp
push
je
sti
adc
loop
adc
(bad)
repz
or
xchg
mov
and
cli
addl
jne
cmp
inc
test
xbegin
jnp
in
or
negb
push
lock
inc
mov
cmp
sub
push
push
lcall
inc
jae
in
out
pop
xchg
sahf
bound
fs
push
xchg
sbb
xor
mov
rcrb
ljmp
lea
cmovl
cmp
repnz
push
push
dec
insl
loopne
insb
push
push
mov
enter
xor
adc
and
hlt
push
(bad)
add
iret
pushf
int3
int3
fsubr
adc
adc
cmp
sti
push
fwait
push
or
ss
adc
xchg
mov
lahf
dec
out
mov
lret
and
jno
pop
andb
mov
pop
hlt
and
mov
inc
les
arpl
pusha
push
loopne
imul
leave
inc
stos
pop
xor
add
xchg
sahf
xor
sub
xor
adc
loopne
testb
jo
mov
mov
leave
int1
in
sbb
jo,pn
jnp
fldenv
cld
pusha
cmc
and
xchg
or
out
fucomp
dec
lods
inc
lea
test
js
(bad)
stos
sahf
lods
not
pop
pop
mov
lods
pop
das
mov
test
fwait
mov
(bad)
mov
and
add
(bad)
xchg
cmc
test
xchg
cmp
aaa
inc
data16
mov
stos
daa
cmp
pop
jnp
mov
and
scas
aas
push
and
cmp
in
push
adc
cmp
stos
dec
cwtl
mov
lahf
sub
out
push
dec
cmp
rolb
xchg
psubsw
inc
sbb
adc
pop
(bad)
xor
push
into
mov
and
add
sbb
jp
into
or
mov
je
lahf
(bad)
jp
insb
mov
lahf
cmpsl
add
sub
and
insb
mov
std
fwait
inc
lock
dec
(bad)
fistpll
dec
inc
int3
aad
mov
sbb
scas
lret
addb
add
push
add
sbbl
mov
cmp
in
das
or
fwait
lahf
push
(bad)
aaa
out
pop
mov
add
mov
jmp
mov
repnz
ret
sahf
or
ja
jns
je
adc
arpl
adc
adc
fdivrs
push
or
jmp
rcll
andb
stos
adc
loop
loopne
jge
pop
dec
loopne
cmp
dec
mov
call
mov
stos
aad
lds
popa
sub
loopne
push
mov
add
sub
cmpsl
scas
call
jnp
rolb
mov
xchg
in
test
shlb
lea
pushf
enter
push
cld
or
cli
orl
cmp
(bad)
mov
xchg
inc
mov
in
cmc
inc
mov
subl
pop
outsb
or
(bad)
jle
ficompl
cmp
jbe
ds
mov
pop
mov
cmpsb
(bad)
stc
nop
gs
insb
leave
mov
ja
test
jp
call
xor
jae
popf
push
testb
sub
and
mov
ds
cmc
ror
rcl
pop
