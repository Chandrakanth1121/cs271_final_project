add
or
and
add
jb
lock
sbb
sbb
(bad)
jo
(bad)
adc
add
add
(bad)
jb
xor
stos
sti
push
rex.w
hlt
xor
and
clc
(bad)
mov
sbb
stos
jmp
andl
lret
divb
(bad)
test
rex.wxb
mov
rex.b
lock
lcall
add
movsb
jge
cmp
ds
cmp
(bad)
and
sbb
in
jnp
loope
cmp
in
rex.x
adc
mov
outsl
(bad)
ds
(bad)
std
(bad)
stos
fcmovu
pop
(bad)
ss
jbe
sahf
lock
and
in
xor
call
and
enter
loope
xchg
xchg
(bad)
rex.wrx
pop
je
outsl
sbb
mov
adc
popf
add
(bad)
stc
mov
jp
rex.rxb
ds
cmp
cmp
stc
(bad)
or
xchg
xchg
mov
(bad)
cwtl
jge
xchg
outsl
mulb
(bad)
fwait
or
adc
jbe
loopne
mov
jmp
(bad)
shl
insl
jl
jmp
(bad)
shl
insl
jl
jmp
(bad)
shl
insl
jl
cmc
jb
(bad)
in
out
(bad)
outsb
js
(bad)
and
sbb
in
xor
cmp
stc
(bad)
scas
(bad)
sub
scas
pop
or
repnz
je
xor
loopel
mov
cwtl
mov
ficompl
fucomip
test
mov
or
add
push
fiadds
mov
sbb
(bad)
xor
(bad)
and
(bad)
xchg
jne
int3
adc
mov
int
rex.rxb
lock
sahf
cmc
rex.rb
pushf
(bad)
cmpsl
(bad)
sub
repz
cmc
rex.rb
pushf
(bad)
cmpsl
(bad)
xchg
int1
cwtl
call
{rex2
sbb
in
cs
rex.wrxb
push
sbb
rex.wr
movsl
sub
xor
rex.wrxb
repz
repz
xor
sbb
xor
jp
hlt
js
cld
mov
sarb
add
(bad)
mov
xor
pop
cld
pop
outsl
invd
jb
push
(bad)
ret
(bad)
jg
rex.rb
fistps
sar
cmp
(bad)
add
pop
loop
mov
sub
sahf
cmc
pop
push
(bad)
(bad)
mov
jb
sub
repz
cmc
jge
and
mov
mov
sub
sahf
cmc
xor
sbb
lock
sahf
cmc
movsxd
xchg
lret
div
ss
repz
cmc
adc
or
(bad)
shrb
sahf
cmc
(bad)
movabs
addr32
sahf
cmc
pop
push
(bad)
(bad)
mov
jb
sub
repz
cmc
mov
(bad)
jrcxz
sub
addr32
sahf
cmc
in
add
sub
lock
sahf
cmc
jge
and
mov
mov
(bad)
scas
fcmovnb
lcall
fcmovne
cmp
mov
repnz
pop
jno
push
add
mov
(bad)
mov
xor
outsl
rex.rx
rex.wr
lahf
out
rex
and
xor
or
sub
adc
fcmovnb
mov
mov
scas
cmp
test
lret
rex.xb
inc
jrcxz
nop
jnp
rolb
add
rex.rx
add
(bad)
add
add
add
push
add
add
lret
push
add
add
add
jno
add
push
(bad)
add
add
add
(bad)
add
(bad)
xor
xor
(bad)
or
(bad)
xor
add
push
sbb
sbb
(bad)
rclb
adc
(bad)
adc
movabs
(bad)
add
add
add
(bad)
push
add
push
push
add
jb
add
add
add
or
pop
(bad)
push
add
add
add
clts
add
fs
add
xor
add
xor
jo
add
add
add
test
push
add
rex.rx
add
add
add
mov
lea
add
add
add
fcoml
push
fcoml
push
add
add
add
add
add
add
add
add
call
clc
push
add
fcoms
add
add
pop
xor
add
add
test
add
add
add
add
add
add
and
add
cs
add
add
add
add
add
add
add
(bad)
add
sub
adc
add
add
add
jo
add
add
add
pop
push
add
push
add
xor
add
add
add
(bad)
add
(bad)
xor
xor
push
add
pop
(bad)
add
add
add
notl
test
(bad)
add
add
add
add
add
add
add
or
sbb
sbb
add
jb
lock
(bad)
rorb
push
jbe
stos
sti
push
rex.w
jb
xchg
(bad)
out
sub
(bad)
rex.rxb
push
xor
sub
pop
jns
sbb
jle
sti
sub
lahf
(bad)
(bad)
lods
push
pushf
movabs
(bad)
adc
xor
jb
{rex2
push
cmc
enter
insb
mov
pushf
and
mov
pop
(bad)
rex.xb
int
movsl
jb
sbb
push
jns
add
mov
xchg
cmpsl
call
or
jge
(bad)
add
rex.rxb
cmpsl
add
sub
sbb
xchg
pushf
es
sub
repz
rex.rxb
xor
popf
jmp
sbb
lock
mov
test
in
(bad)
popf
(bad)
and
sub
xchg
mov
test
fdivs
(bad)
xchg
add
jp
jle
rex.wrb
adc
(bad)
hlt
push
rex.rxb
in
{rex2
and
js
add
int1
add
imul
(bad)
test
pop
loopne
lea
incb
pushfw
(bad)
adc
ret
and
or
popf
out
divl
pop
repz
in
int1
add
std
cmpsl
fucomip
push
jns
and
leave
cmp
xchg
xlat
lods
sub
lods
repnz
js
push
(bad)
jbe
mov
frstor
mov
test
or
shl
sub
repz
cmc
and
or
shl
fldcw
rorb
rclb
cs
stc
(bad)
nop
push
(bad)
or
movabs
jne
adc
or
mov
movabs
jge
in
push
movabs
ds
sub
and
rex.w
sub
gs
rex.xb
xor
in
mov
cltd
adc
adc
jns
push
rex.x
gs
rex.wx
pop
push
(bad)
(bad)
mov
jb
sahf
jne
and
pop
pop
(bad)
int1
rex.b
movsb
mov
out
pop
xor
in
mov
cltd
adc
mov
(bad)
imul
rcrl
std
rcrl
lret
cs
lods
(bad)
sub
push
mov
rex.wr
movsl
jrcxz
or
sub
mov
jae
(bad)
jbe
movabs
pop
(bad)
subb
call
cmp
mov
mov
rorb
rolb
sub
movabs
jge
cmp
xchg
jno
shll
xor
pop
mov
sti
lea
add
ret
mov
jno
fldcw
rorb
shrb
movabs
addr32
sahf
cmc
mov
adc
push
push
jns
cwtl
lea
pushf
and
mov
mov
rorb
rclb
add
and
ret
pop
in
jp
push
gs
sbb
xor
mov
repnz
push
mov
test
cmc
rex.wxb
push
jmp
(bad)
cmpsl
push
cmp
lods
add
lret
mov
leave
adcl
lea
cmp
and
rcl
fidivrs
and
lods
stc
add
add
adc
sbb
adc
rorb
rorb
add
or
(bad)
xor
add
mov
lock
(bad)
rclb
adc
(bad)
adc
(bad)
add
(bad)
xor
xor
sbb
add
je
add
fs
add
push
add
add
lock
loopne
rolb
add
add
add
add
(bad)
loop
add
movabs
push
add
add
add
push
add
jae
add
add
add
mov
(bad)
add
add
add
or
add
adc
or
or
(bad)
(bad)
push
xor
add
push
add
(bad)
add
add
add
stos
sti
push
rex.w
out
(bad)
push
rex.b
rex.wxb
fs
rex.rxb
add
cmp
lods
lods
(bad)
sti
rex.wx
xchg
out
adc
mov
rex.wrx
rex.rx
(bad)
jb
(bad)
(bad)
cmpsb
mov
sub
lahf
(bad)
(bad)
lods
push
pushf
movabs
rex.x
jno
jmp
add
cwtl
pop
outsl
cmova
int3
vshufps
lahf
lret
pop
iret
(bad)
cmc
cld
(bad)
(bad)
movsb
xchg
or
cmp
(bad)
int
(bad)
call
gs
rex.wx
lods
lods
