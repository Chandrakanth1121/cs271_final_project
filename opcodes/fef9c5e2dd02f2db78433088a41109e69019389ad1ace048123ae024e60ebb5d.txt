mov
(bad)
push
rol
rex
sub
mov
add
call
(bad)
mov
or
leave
je
adc
add
andq
xchg
nop
mov
lea
rex.xb
jmp
or
sbb
neg
mov
xor
and
or
mov
push
lcall
fildll
xchg
xor
jns
(bad)
js
mov
lea
mov
sbb
xlat
mov
stos
sbb
lea
cmp
jge
mov
(bad)
mov
(bad)
(bad)
adc
add
mov
or
mov
rex.wr
adc
(bad)
rex
mov
or
xor
add
push
in
cmpsb
insb
int3
jnp
stc
test
js
xor
rcrb
div
rorb
mov
(bad)
(bad)
outsb
cmp
lret
sub
push
je
cmpb
std
mov
jmp
add
jg
jmp
sub
cmp
jne
call
divl
fucomp
fcomps
rolb
enter
test
rcrl
cmp
rex.x
and
xor
in
push
not
call
xor
xor
xor
xor
xor
xor
xor
lea
(bad)
pop
(bad)
xor
mov
psrad
and
iret
xbegin
cmp
rex.wrb
je
xor
mov
out
insb
jo
jmp
(bad)
(bad)
add
jbe
pop
jbe
add
cmpl
or
lods
jmp
mov
sbb
cmp
add
rex.wxb
fnstsw
adc
or
cwtl
clc
or
mov
and
jae
adc
call
xor
addr32
movl
imul
mov
(bad)
adc
sarl
or
stos
cmp
jne
mov
jge
rorl
and
sbb
out
(bad)
mov
rex.wrx
int3
rex.rx
sbb
mov
rex.r
rex.wrxb
add
and
rex.wx
insl
nop
(bad)
rex.wr
ja
mov
incl
(bad)
movsl
mov
xor
in
insl
fistps
and
data16
(bad)
(bad)
incb
test
je
cmp
add
mov
sub
and
(bad)
(bad)
adc
in
xchg
or
cmp
and
ja
(bad)
xor
add
test
add
mov
nop
(bad)
xor
(bad)
xor
cs
mov
jbe
clc
sub
push
jne
mov
outsb
fwait
lods
(bad)
rolb
cmpl
or
pop
int3
(bad)
pop
(bad)
test
popf
(bad)
xchg
and
jne
mov
add
mov
fdivr
hlt
lock
pop
ret
mov
shr
jl
negb
add
roll
insb
cmp
xor
mov
and
(bad)
add
mov
cld
or
lods
sbb
xchg
mov
subl
and
shll
sti
(bad)
push
jnp
push
xor
mov
rex.wr
outsl
(bad)
movsl
fdivrs
pop
sub
incb
jno
(bad)
pop
scas
fildl
jmp
jb
ljmp
xlat
sar
mov
shr
add
cmp
out
lods
(bad)
xor
and
lret
xchg
imul
clc
mov
fstl
xor
clc
mov
mov
rex.r
xor
leave
mov
ss
(bad)
int1
cmp
and
(bad)
push
add
and
cmp
movsxd
(bad)
sbb
(bad)
mov
pop
ret
sbb
or
data16
fxch
divb
sbb
out
mov
rex.x
push
fsubs
mov
pop
pop
jno
pop
notl
mov
and
or
rex.r
jp
(bad)
ja
xor
int3
sub
outsb
leave
insl
lret
rex.x
push
pop
rex.w
(bad)
(bad)
pushf
mov
movabs
(bad)
out
(bad)
cmp
jl
and
or
cmp
jge
mov
mov
rex.wrb
sub
adc
mov
or
jbe
fabs
in
mov
jno
in
in
outsb
rex.wx
andl
push
and
(bad)
outsb
outsl
fldt
rex.wr
cmp
rex.wb
pop
rolb
js
and
mov
xor
jne
sbb
or
es
es
rex.wr
and
sbb
mov
jg
xchg
sbb
movabs
rex.wr
adc
rex.xb
sar
sbb
outsl
(bad)
stc
mov
cmp
mov
sub
mov
mov
(bad)
lcall
pushf
stc
mul
mov
sub
shr
add
shr
add
cmp
rex.w
je
rex.xb
rex.xb
jbe
jnp
or
rcrb
xor
(bad)
lock
std
testb
cmp
mov
scas
sbb
int
add
rex.wx
rex.rxb
rex.wx
rex.wxb
loope
cwtl
lods
cmp
sub
cmp
je
jmp
cmp
or
adc
cmp
outsb
or
or
jge
mov
outsb
mov
add
test
jle
ds
test
mov
cmpsl
(bad)
cmc
rex.wrx
push
scas
sbb
rorb
xor
lret
xor
xor
xchg
fucomi
movb
or
fldenv
andl
xor
ds
(bad)
sar
push
or
shrb
mov
sti
pop
(bad)
comiss
(bad)
cwtl
rex.rx
decb
mov
(bad)
add
pop
fiadds
je
adc
(bad)
loopne
(bad)
or
loopne
ret
add
cmp
xchg
clc
ss
movabs
mov
xchg
(bad)
call
(bad)
{rex2
(bad)
loop
or
rcl
(bad)
sbb
je
popf
jb
lods
stc
cmp
adc
xor
rex.r
or
in
addr32
insl
imul
mov
or
movabs
adc
rex.b
repz
jno
xchg
out
(bad)
roll
shlb
nop
out
outsl
mov
fmuls
jmp
rex.rxb
es
(bad)
loopne
pop
lods
mov
add
fidivrl
mov
(bad)
add
ds
in
mov
add
or
or
cmpw
(bad)
out
mov
or
ret
or
rex.rx
(bad)
adc
and
std
mov
sbb
call
shrb
out
adc
mov
sar
cmp
movabs
enter
adc
mov
pop
jp
add
scas
(bad)
sahf
rex.w
repz
rex.b
and
(bad)
(bad)
sbb
add
xchg
loop
cld
test
js
lahf
in
cmpxchg8b
(bad)
leave
push
mov
or
insb
(bad)
rex.wrx
mov
push
(bad)
xor
lods
or
test
jne
jne
cmp
fistl
(bad)
xor
rex.wrx
pop
iret
adc
cmc
es
cmpsb
pop
(bad)
mov
mov
je
cmp
ficoms
or
sub
in
addr32
roll
jmp
add
out
mov
cmp
jle
out
es
and
int3
sti
or
iret
pop
and
scas
cmp
add
rorb
or
(bad)
rex.wx
es
jne
movsxd
movabs
sub
(bad)
jmp
enter
in
mov
push
push
or
and
stos
mov
ja
rex.rxb
loopne
je
sbb
add
out
(bad)
sbb
mov
sub
sub
data16
(bad)
and
xchg
fimull
xchg
(bad)
pop
rex.wrx
ret
pop
and
in
mov
xor
jrcxz
pop
pop
pop
or
pushf
(bad)
push
test
je
(bad)
fcmovb
add
test
fwait
je,pt
fnstcw
rex.wrb
add
add
stc
call
rex.wb
add
sbbb
(bad)
imul
xor
in
int1
rex.rxb
sbb
mov
xor
adc
xor
(bad)
sub
je
jb
sub
int1
clc
jne
or
test
(bad)
mov
sub
out
mov
cmp
add
sub
mov
(bad)
(bad)
mov
vmwrite
(bad)
adc
fcomps
mov
jae
mov
(bad)
jg
clc
adc
(bad)
adc
adc
fucomip
add
(bad)
add
jo
data16
mov
add
cmp
rex.rx
(bad)
stos
cs
mov
mov
cmp
je
rex.rb
cmp
jae
add
xor
enter
sbb
out
rex.x
xor
sbb
out
sub
scas
(bad)
fmul
sti
sahf
rex.x
adc
sub
adc
insb
in
adc
movsb
or
adc
xor
int1
addr32
(bad)
test
nop
nop
adc
jge
mov
mov
rex.rxb
fstps
pop
sbb
imul
iretw
imul
rex.rb
(bad)
xor
mov
xchg
mov
iret
xor
sbb
xchg
rorb
rex.r
lock
jg
shll
rex.wxb
cmp
jbe
xor
xchg
(bad)
and
mov
(bad)
adc
or
(bad)
setge
cli
adc
adc
outsb
testl
xor
jo
js
in
test
xchg
jae
lcall
cmp
xor
xchg
(bad)
jbe
movsl
imul
jo
es
out
jne
(bad)
mov
adc
xchg
mov
rcrl
jmp
cld
movabs
sbb
and
