jo
or
add
add
dec
add
add
add
add
add
add
push
lock
add
shlb
add
mov
ljmp
iret
cmpl
mov
mov
fnstsw
sbb
scas
pop
sti
mov
dec
xor
lahf
adcb
xchg
es
dec
dec
outsl
push
sbb
in
(bad)
(bad)
shrl
lea
mov
mov
cmp
in
mov
outsb
pop
aas
in
mov
push
pop
scas
dec
scas
mov
in
les
ja
mov
mov
movsb
enter
cmpsl
cmp
lcall
(bad)
jmp
add
mov
adc
add
jnp
or
pop
push
xlat
xor
rcl
(bad)
xchg
orl
mov
add
inc
push
mov
inc
int3
and
subb
jecxz
cmp
adc
adc
add
sbb
subl
fiadds
(bad)
mov
xchg
sbb
add
push
enter
sub
test
inc
mov
sub
daa
gs
mov
clc
rcrb
jnp
or
in
jp
pop
xor
fsubr
pop
mov
test
sub
aam
dec
inc
dec
mov
sbb
ds
xchg
jmp
cmp
mov
and
sub
(bad)
mov
mov
ficomps
repz
xor
or
test
outsl
imul
mov
es
mov
in
jecxz
mov
sub
add
das
cmpsl
cmp
adcl
jbe
or
push
mov
cmc
ror
pop
sbbl
sub
rcll
inc
repz
mov
mov
push
adc
mov
leave
dec
xor
(bad)
mov
stc
sub
ss
pusha
xor
out
push
push
pop
jg
sub
leave
call
aad
or
dec
mov
cs
sti
(bad)
or
call
dec
mov
(bad)
add
ja
cld
push
sub
out
int
fcmovnbe
int1
loop
cld
inc
int1
repnz
data16
outsl
sbb
aaa
cwtl
inc
and
jp
xchg
push
shrl
cltd
mov
jne
pusha
ds
cltd
or
push
gs
shrl
mov
sahf
push
sbb
push
mov
imul
push
cmovo
jecxz
lea
rclb
cmp
lods
or
cmc
pop
lcall
cmp
shll
mov
inc
imul
jecxz
leave
xor
movsb
shll
call
ljmp
inc
cmp
imul
sahf
fldcw
jns
sbb
or
pusha
and
mov
shlb
js
test
sub
xor
adc
pop
and
jmp
jno
in
int1
fdivrs
xor
lock
push
cmp
arpl
jnp
fsubl
movsb
imul
or
loop
sbb
pop
ljmp
jge
jns
arpl
mov
sbb
in
(bad)
(bad)
rorl
lods
data16
jmp
sub
lea
or
add
repnz
pop
mov
lea
jne
xchg
mov
cmpsb
xchg
mov
xor
out
xchg
sbbl
in
push
outsb
jo
lea
and
add
std
cmpsb
dec
jb
xchg
cmp
insl
mov
push
push
sub
mov
sbb
decb
popa
and
loop
cltd
mov
sub
xor
loopne
cwtl
ret
sub
dec
xchg
dec
mov
fimull
cmp
xlat
mov
leave
lea
stos
stc
std
testb
jbe
les
dec
fsub
cmp
pop
inc
ret
lea
stc
xchg
xor
sbb
mov
xchg
xor
lds
sti
cmp
int1
enter
mov
push
pop
ljmp
(bad)
xorl
test
nop
sub
ret
cmpsb
test
pop
mov
and
jg
ret
jb
cmp
pop
orl
jl
scas
lea
(bad)
jb
push
jae
add
or
(bad)
cmp
test
xor
dec
(bad)
mov
mov
dec
insl
xchg
lret
les
(bad)
out
add
mov
sbb
jmp
sbb
stos
fldt
sub
push
pushf
imul
aaa
lods
add
or
out
mov
insl
sahf
mov
adc
cmpsb
mov
fsubrl
xchg
loop
iret
jbe
pop
imul
addr16
out
test
(bad)
shr
and
xor
xchg
pop
fbstp
sub
add
lock
fldenv
test
and
mov
in
lock
fisubs
arpl
mov
or
lahf
fbstp
ror
xchg
idiv
xchg
mov
mov
pop
je
jnp
fisubrs
sub
xchg
pop
or
iret
fdivrl
(bad)
roll
inc
mov
out
inc
push
arpl
inc
gs
pushf
movsb
outsb
std
sub
sbb
cmp
call
inc
or
outsl
or
jb
mov
fsub
dec
fistps
shll
mov
roll
pop
cwtl
xchg
pop
dec
sub
(bad)
pop
mov
push
shl
gs
aad
cmp
jns
cwtl
in
push
cmp
std
sahf
ljmp
std
lock
xor
hlt
mov
xchg
mov
mov
add
test
(bad)
sahf
ds
jle
and
push
jecxz
push
dec
xchg
dec
stc
add
repz
mov
cmpb
cmp
xchg
xchg
xchg
adc
in
inc
pop
adc
push
ret
in
sti
or
rclb
addr16
insl
repz
sub
dec
rorb
pop
xor
movsb
test
push
in
cmpsb
inc
gs
add
popf
xlat
lret
and
or
mov
aas
or
push
jl
scas
pusha
call
in
jno
into
xchg
stc
add
mov
or
sub
(bad)
push
push
xchg
lods
idiv
or
imul
ss
sub
add
add
pop
rep
jb
jecxz
add
sti
push
fs
mov
mov
repz
inc
fstl
or
jbe
popa
jmp
pop
xor
sbb
xor
sti
push
sub
rcrl
fisttpll
inc
inc
xchg
mov
adc
std
jg
cmp
out
rdtscp
mov
fcomip
mov
and
add
adc
xchg
xchg
pop
push
jbe
mov
mov
dec
sub
and
inc
pop
sub
inc
ss
mov
dec
mov
mov
lret
mov
pop
inc
pop
lcall
sub
repnz
jbe
push
es
(bad)
dec
pushf
imul
or
xor
in
stos
dec
xchg
and
xor
xor
mov
push
leave
cs
mov
mov
xchg
mov
jmp
repnz
sar
fists
mov
loop
fdivrs
clc
fcomip
inc
pop
pop
dec
fs
in
xorb
push
mov
gs
sbb
repz
xor
jo
lea
add
adc
stc
jmp
sahf
push
mov
dec
sub
out
lock
sub
cmp
test
push
pusha
xor
jge
int3
fcmovnb
mov
xor
inc
xor
sbb
(bad)
sbb
sbb
mov
stos
test
fmuls
and
xchg
inc
rclb
out
xchg
aaa
(bad)
sub
dec
or
mov
inc
sub
inc
cmp
out
xchg
sub
cmpw
(bad)
mov
inc
pop
insl
xchg
int
add
mov
push
mov
pop
mov
and
inc
jne
add
repz
setne
xchg
pusha
scas
and
sbbl
dec
pop
addl
pop
pop
jae
mov
or
add
rorb
inc
mov
stos
mov
sub
mov
mov
loope
(bad)
sbb
mov
insl
clc
out
inc
insl
sub
sti
test
mov
mov
inc
or
fldenv
repnz
mov
jb
pop
pushf
ffree
cmpsl
jl
dec
mov
addr16
mul
push
xchg
addl
mov
pushw
lods
movsb
push
orb
(bad)
mov
ret
xor
xchg
inc
add
pop
insl
push
stc
inc
cmpb
fidivl
mov
cmpb
and
insl
cmp
lods
in
pop
inc
dec
clc
(bad)
rolb
cmp
jge
(bad)
or
nop
repnz
stos
pop
and
paddw
mov
inc
ret
insb
in
xchg
mov
in
in
adc
inc
pop
mov
test
adc
(bad)
jp
and
adc
mov
jno
xchg
aam
lds
pop
pop
pop
clc
je
xorl
pushf
sbb
dec
test
adcb
jmp
out
call
xchg
mov
das
fistpll
dec
