ds
lock
mov
sbb
dec
or
lea
repnz
enter
cmpsl
loope
sbb
inc
out
push
(bad)
xchg
in
or
hlt
inc
imul
sbb
dec
pop
adcl
push
test
rcr
fisttpl
add
sbb
xor
sbb
mov
jge
jb
cltd
cmp
add
idivl
(bad)
imul
push
mov
test
ficoms
xchg
(bad)
or
push
call
ds
insl
jbe
(bad)
cmp
call
dec
stos
inc
xorl
xchg
sbb
mov
inc
lret
lock
js
je
cmp
cmpsb
(bad)
dec
(bad)
dec
jl
mov
pushf
stos
jno
mov
popa
adc
pop
repnz
sub
test
lea
lock
cmpsb
adc
sub
fcoms
mov
dec
or
jne
inc
xchg
or
stc
sbb
mov
push
lock
cmp
mov
hlt
lahf
testl
ljmp
push
cmp
lcall
mov
xor
cltd
ds
push
ja
push
sbb
int1
jle
shl
scas
shlb
jl
cmc
repz
aas
jne
mov
xchg
dec
mov
jb
jns
mov
dec
scas
sbb
pop
cld
orl
mov
rcrl
aam
add
sbb
in
sbb
in
add
or
lret
push
dec
aaa
lcall
cmpsb
sbb
mov
sbb
xchg
sub
xchg
lods
push
mov
inc
imul
rorl
lock
ss
pop
enter
bnd
mov
dec
xchg
cmp
hlt
mov
mov
int
ljmp
inc
cwtl
insb
test
test
adcl
insl
cmp
jp
pop
enter
out
repz
cld
add
push
loope
jnp
or
js
mov
outsl
cwtl
(bad)
pop
jb
and
add
nop
mov
daa
jecxz
mov
lock
xchg
inc
(bad)
jge
inc
jns
mov
lea
jnp
mov
add
ret
insl
cmp
or
ficomps
inc
imul
cmpsb
aaa
movsb
test
and
(bad)
into
mov
push
test
stos
cmc
fstpl
or
mov
jo
(bad)
in
mov
mov
jg
scas
scas
push
xchg
inc
maskmovq
testl
(bad)
mov
or
fcoml
popa
cwtl
or
push
jns
(bad)
sub
mov
push
sbb
cvtdq2ps
pop
dec
sbb
movsb
cmp
call
push
insl
cmp
push
js
lods
dec
sub
shlb
add
popf
hlt
pop
outsl
ja
dec
xlat
mov
pop
int3
dec
pop
and
int1
popa
ds
call
push
xchg
push
xchg
mov
mov
rolb
xchg
ja
cmpsl
mov
ljmp
add
mov
test
or
jge
stos
stc
adc
aad
mov
lods
push
xbegin
or
cwtl
mov
inc
push
clc
inc
xchg
xor
enter
lret
cwtl
or
insb
call
xchg
mov
inc
dec
or
scas
mov
lock
cmc
sub
jge
or
jg
xchg
loope
mov
sbb
(bad)
or
mov
pop
sti
stos
lcall
push
xor
pop
gs
xchg
add
adc
mov
pusha
adc
je
cmp
gs
popa
xorl
in
sub
jmp
imul
andb
sbb
xchg
xor
cmp
into
data16
stc
pop
cmpsb
popa
and
sub
orb
daa
je
in
push
sbb
sub
std
dec
(bad)
arpl
inc
idivb
push
sbb
into
fildl
cmp
(bad)
inc
jo
adc
xchg
sbb
popa
push
test
cmpsl
(bad)
addr16
pop
test
movb
adc
mov
iret
mov
sub
sbb
xchg
push
adc
loopne
cltd
push
mov
mov
enter
mov
cli
loopne
sbb
add
aad
sub
xor
loope
push
inc
inc
aad
push
cltd
shrl
cmp
inc
lock
push
cmp
or
mov
int1
lods
xchg
mov
mov
add
(bad)
cmp
mov
fs
imul
pop
sbb
les
inc
push
sbb
cmpb
sarb
add
aad
emms
dec
xchg
pop
jp
mov
ljmp
lret
sbb
in
stc
pop
ljmp
into
pop
sbb
enter
imul
xlat
jnp
rcl
pop
in
cmp
mov
pop
or
inc
rcrl
xchg
jo
push
xlat
jecxz
inc
dec
in
xchg
arpl
push
dec
daa
iret
inc
loopne
xlat
rcl
cmpsb
add
jo
cltd
dec
jg
shrb
or
jge
movsl
mov
sbb
add
int
jle
outsl
jbe
sub
subb
xor
jne
pop
mov
xbegin
in
js
dec
xchg
pop
and
cmpsb
xlat
bound
cmp
xchg
mov
xor
inc
ja
fdivl
ret
sbb
jl
dec
scas
and
dec
scas
jg
mov
cmp
or
aad
push
lods
mov
xchg
lock
lds
mov
(bad)
arpl
mov
mov
lods
adc
call
cwtl
mov
mov
mov
(bad)
mov
lock
je
mov
or
xchg
int1
je
clc
shrb
or
mov
xor
sub
add
xor
xchg
add
add
xor
pop
pop
or
jge
punpckldq
xor
pop
push
mov
cmp
stc
sbb
(bad)
(bad)
int1
xchg
out
loopne
push
jb
mov
sarb
imul
out
dec
or
mov
cwtl
mov
out
int1
cli
cbtw
test
jno,pn
adc
test
cmp
shl
mov
mov
lret
mov
inc
mov
inc
(bad)
es
xacquire
add
lret
loopne
jnp
call
push
int
cmp
mov
dec
lret
jp,pn
js
mov
pushf
push
ret
lock
mov
(bad)
out
adc
sbb
(bad)
cmp
outsl
cwtl
loope
and
push
int
mov
or
inc
jl
lock
in
call
dec
xchg
subl
add
int1
(bad)
test
dec
mov
push
xchg
push
setae
mov
gs
lret
jbe
mov
pop
addr16
ljmp
movsl
sbb
in
test
(bad)
arpl
popa
pop
int3
cld
push
add
adc
sub
jecxz
or
ja
jne
sbb
mov
imul
daa
(bad)
jo
adc
(bad)
cmp
aas
(bad)
jp
xchg
push
xlat
mov
mov
andb
lods
in
in
mov
imul
xchg
std
push
pop
js
cmpl
add
xor
mov
test
jmp
push
ret
push
mov
adcl
sub
loopne
mov
mov
push
enter
xchg
rclb
jnp
scas
push
jne
pop
dec
mov
jmp
adc
jae
inc
ljmp
lahf
cld
mov
fistl
enter
cmp
inc
(bad)
dec
mov
mov
out
adc
push
out
jae
adc
addb
lock
push
add
push
fldcw
sub
fsubs
lcall
(bad)
loopne
jae
in
inc
dec
je
aas
mov
lock
dec
xchg
jae
push
ljmp
aam
jnp
lret
mov
cmc
ret
cmpsb
out
xchg
shlb
pusha
adc
rcrb
xlat
or
sbb
sbb
andb
push
inc
adc
leave
rcrl
pushf
pop
cmp
adc
scas
cwtl
push
imul
cmp
pop
call
push
sbb
pop
and
shll
fmul
cmp
push
lret
dec
mov
pusha
insb
lds
and
jg
cld
adc
mov
cmp
add
cmpsb
(bad)
mov
hlt
pushaw
sbb
pop
xchg
into
lcall
testb
in
test
xor
cld
shll
xchg
xchg
add
clc
xor
popa
sbb
das
mov
testb
lds
cmp
or
out
xchg
in
inc
add
jb
or
sbb
hlt
insb
dec
ret
std
je
add
sbb
lret
fldl
inc
pop
int
cmpsl
jecxz
push
mov
mov
insb
mov
dec
sti
pop
sbb
mov
test
stos
mov
test
xchg
mov
pusha
inc
lea
sub
fdivl
or
jle
aad
