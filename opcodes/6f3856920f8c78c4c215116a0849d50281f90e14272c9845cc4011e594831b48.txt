fidivs
int1
call
add
jnp
stos
xchg
pop
cld
enter
lret
dec
(bad)
fiadds
lods
(bad)
xor
push
lret
jp
jne
or
add
in
test
hlt
pop
or
or
or
imul
cmp
lods
jge
lods
mov
movsl
mov
enter
push
dec
xchg
jae
fcmovu
or
or
std
ljmp
push
movsl
or
xchg
leave
movsb
(bad)
rcll
jnp
xor
push
jno
adc
ret
sbbl
jmp
jns
and
mov
or
cmpsl
cmc
enter
daa
sti
sti
add
pop
lahf
shrl
jbe
test
adc
mov
popf
and
repnz
add
lock
xlat
lret
clc
jno
cmp
cmp
mov
es
rorl
stos
sti
daa
and
leave
orl
je
xor
je
cmp
push
xor
es
adc
push
jl
cs
call
cld
mull
shr
lock
fldl
dec
aad
shr
mov
fildl
or
pop
dec
movsl
ret
adc
and
pop
mov
pusha
or
hlt
and
insl
dec
jo
inc
add
add
std
mov
ret
movl
add
xor
lods
mov
and
test
jnp
loop
rorl
ret
pusha
insb
add
mov
mov
int1
push
test
push
ds
inc
push
and
cmpsb
fdivrs
mov
popf
adc
outsl
xor
xor
inc
jge
push
bound
jmp
xchg
movsl
or
jne
pop
aad
outsl
mov
test
stc
xor
test
mov
test
(bad)
je
stc
and
mov
arpl
cmc
pop
inc
dec
sub
cltd
popa
cmp
jb
or
lret
mov
inc
popf
mov
das
movsl
jmp
or
add
ret
mov
sbb
mov
imul
popa
adc
adc
push
add
loop
jecxz
push
(bad)
pop
dec
cmpsb
aam
mov
fsubrl
xchg
ljmp
shrl
jle
loop
pop
rcrl
sti
jo
pop
jmp
pusha
pop
and
sub
out
test
fcompl
and
jmp
out
add
pop
test
mov
push
jno
and
add
gs
mov
int1
fwait
int3
xchg
jno
push
xor
xchg
xchg
mov
lcall
jb
jns
mov
mov
cmp
out
out
outsb
add
mov
push
in
stos
xor
fwait
adc
das
and
jo
mov
jp
mov
mov
add
mov
sub
lea
outsl
xor
adc
xchg
out
mov
inc
adc
inc
out
add
fdivrp
jmp
mov
push
mov
pop
jno
pop
or
int
or
inc
out
imulb
test
jl
ficoms
repz
mov
and
push
pop
xchg
jns
rdmsr
mov
push
ret
stos
sub
jne
shll
(bad)
out
dec
mov
jecxz
sbb
stc
insb
add
and
outsl
std
stos
movsl
iret
and
mov
push
mov
andl
sub
ljmp
and
pop
jp
es
push
sub
xchg
nop
cmp
insl
and
jmp
mov
insl
cli
push
fsts
push
pushf
(bad)
push
cmp
dec
push
stos
repnz
xorb
out
jmp
insb
out
aaa
sarl
mov
loopne
add
sbb
inc
loope
cmc
andb
mov
jno
pushf
fcom
inc
jne
cmc
imul
movsl
and
push
pop
mov
iret
test
add
sti
jno
fwait
rcrb
mov
pop
jne
aad
or
flds
mov
addr16
fcmovnbe
enter
out
add
jo
loope
lahf
in
adc
hlt
(bad)
ljmp
loop
push
cmp
pop
jno
jns
or
gs
pop
and
cmp
ja
out
out
sub
test
jp
call
fisubrs
sub
xchg
or
or
std
imul
shll
popa
pop
add
test
mov
cmp
xor
imul
mov
mov
or
scas
mov
dec
mov
mov
outsl
out
and
xchg
movsl
je
push
adc
or
out
(bad)
sub
decl
mov
sbbl
nop
and
adc
sbb
mov
inc
push
inc
or
pop
inc
add
(bad)
xchg
pop
and
or
push
dec
mov
and
and
or
addr16
aas
call
aas
aam
insl
xchg
sub
mov
(bad)
cmp
sarb
ds
scas
aam
lods
fnstcw
inc
fcompl
int3
lret
push
xchg
add
push
jge
cmp
js
dec
jmp
fsubr
mov
out
sahf
mov
push
sub
in
es
mov
dec
push
mov
add
les
jp
jmp
sub
sbb
fnsave
xchg
jae
lods
inc
int1
inc
rorb
lahf
push
pop
dec
in
cld
cmp
test
push
sub
pop
xorl
sub
and
mov
mov
sub
mov
(bad)
or
pop
xchg
xor
mov
dec
sbb
inc
xchg
ja
lods
cld
pop
add
and
mov
xchg
pop
leave
ljmp
aam
and
jae
xor
inc
int3
aad
xor
vmread
imul
lret
call
sub
(bad)
sti
fstpl
mov
rcr
jns
fidivrs
(bad)
cmp
add
pop
(bad)
pop
or
add
hlt
ja
mov
leave
pop
les
pop
adc
pop
cmp
inc
and
cmp
fs
(bad)
pop
les
mov
and
add
adc
ljmp
push
test
mov
in
out
inc
imul
daa
js
sar
jmp
bound
inc
mov
ds
cmp
cld
jns
sbb
pusha
pop
sub
mov
pop
cmp
or
lcall
sti
and
cmp
sub
daa
enter
int3
mov
cs
jo
in
out
sbb
fiaddl
lcall
ss
test
pop
repnz
dec
xlat
pop
sbb
mov
adc
fsubr
in
(bad)
ljmp
fs
jo
adc
fs
mov
in
mov
mov
xchg
xor
mov
jl
jge
jp
push
push
call
mov
push
shll
mov
test
inc
dec
inc
cwtl
stos
mov
sti
ljmp
mov
xor
cmp
popa
dec
mov
jmp
pusha
adcb
push
xchg
mov
and
popa
sbb
pusha
jnp
fwait
jne
push
repz
call
mov
cmp
loop
pusha
ja
xchg
jmp
dec
and
pop
cmpsb
inc
imul
inc
loopne
arpl
aas
mov
add
rclb
ds
out
addr16
add
in
(bad)
cmpsl
loopne
andl
mov
mov
popf
and
(bad)
stos
fs
mov
lea
imul
cmpsb
dec
or
in
adc
call
adc
lahf
mov
cmp
jb
jle
sub
lods
jmp
jle
je
or
popa
andb
xchg
mov
push
pop
pop
test
fwait
shl
mov
inc
shl
jmp
cmp
mov
mov
xchg
pop
mov
nopl
mov
push
test
std
inc
push
xchg
outsb
push
push
add
sbb
cmp
scas
pop
rcrb
fsub
ljmp
push
dec
adc
stos
mov
imul
xlat
xchg
pop
inc
arpl
and
jp
in
push
sub
out
mov
mov
or
adc
lret
out
lcall
xor
cmp
mov
cltd
jmp
mov
dec
(bad)
push
sbb
int1
pop
adc
into
stos
mov
push
add
call
push
xor
mov
(bad)
(bad)
or
or
popaw
add
and
dec
mov
sub
daa
leave
mov
stos
dec
int3
rorl
cli
in
sbb
mov
ja
call
ss
jnp
jno
mov
push
sahf
stos
mov
adc
jns
or
xchg
push
scas
cld
pop
jl
inc
loope
xchg
rorb
push
bound
lock
jne
fstpl
addl
sub
xlat
scas
mov
inc
or
pop
out
mov
mov
subb
test
sub
dec
mov
test
