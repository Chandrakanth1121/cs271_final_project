push
xlat
testb
or
add
fistpl
add
add
sub
or
sbb
fcmovnbe
int3
scas
movsb
pop
push
jnp
fistps
mov
or
repz
inc
push
mov
inc
pop
daa
js
pushf
ud0
push
aam
imul
rcl
add
xor
fwait
push
xor
rcrb
aas
roll
pop
shrl
mov
add
cltd
or
sub
mov
out
lret
ds
cmp
(bad)
lret
push
add
ja
push
pop
cmpsb
repnz
cmp
cli
or
adc
lahf
push
mov
push
inc
mov
cmp
outsl
imul
jo
cmp
das
addb
js
loope
adc
xchg
jmp
mov
push
xchg
xlat
mov
inc
(bad)
fistpl
or
arpl
dec
int3
jo
in
pop
cwtl
cwtl
sbb
jbe
add
dec
adc
dec
scas
ljmp
daa
aas
sbb
outsl
aas
mov
jmp
repz
sub
sub
mov
push
dec
(bad)
cmpsb
mov
or
or
adc
sbb
jo
adc
ja
fstp
and
mov
js
fiadds
inc
adc
aas
inc
or
mov
jo
es
ret
imul
lock
add
push
int1
fcompl
xchg
jae
imul
js
cli
add
popf
inc
sbb
push
std
cmp
aad
cmp
call
std
sub
out
testl
cmp
daa
xchg
cwtl
daa
cmc
xchg
inc
repnz
pop
jns
lret
filds
inc
iret
addr16
jnp
fmull
cmpsb
inc
rorb
hlt
into
mov
enter
pop
int
push
jl
addb
sbb
add
sbb
mov
call
push
js
and
jmp
xorl
lret
imul
adc
ja
data16
xor
aaa
js
and
das
test
rorl
(bad)
lock
mov
aas
or
mov
xorl
dec
repz
insb
or
sub
jbe
sarb
cmpl
cmp
push
xor
add
jle
pop
adc
lcall
in
add
inc
push
add
jb
mov
push
inc
daa
and
inc
test
cmp
mov
jl
loope
out
mov
ja
pusha
mov
dec
data16
pop
in
into
testb
clc
jbe
jbe
cmpsb
aas
shl
aaa
push
cli
ja
fidivrl
out
jge
mov
jae
push
fldl
js
jb
movsl
sub
outsl
pusha
or
or
push
mov
inc
or
sbb
js
pop
stos
cmpl
loopne
push
pop
sbb
xchg
ljmp
fstps
lret
repz
daa
out
push
mov
negb
push
xor
push
or
std
push
adcb
sub
or
outsb
scas
push
xchg
imul
das
mov
sub
leave
sti
xor
push
mov
pop
inc
adc
les
cmp
dec
add
outsl
lea
mov
jmp
aaa
mov
js
je
movsl
mov
int3
dec
dec
mov
out
into
dec
sub
xchg
add
shll
test
jp
test
(bad)
cltd
mov
sahf
dec
in
in
cltd
(bad)
ja
pop
(bad)
mov
adc
xorb
add
push
sarl
xchg
out
xchg
loopne
idiv
addr16
rorb
add
rorl
int1
imul
int3
xchg
mov
fldl
pop
jecxz
cmp
ja
sbb
andl
push
pop
cmp
sbb
testb
pop
test
fsubrp
(bad)
scas
jmp
sub
js
(bad)
aas
inc
lock
fcompl
ja
je
cltd
cwtl
cmp
mov
fcomip
inc
test
(bad)
iret
sub
adc
loopne
call
adc
cld
int1
lock
pop
lds
mov
adc
xor
cmpb
in
xchg
rcrl
push
mov
sbb
(bad)
sbb
int
add
xchg
cmc
pop
pop
repz
mov
xchg
dec
jge
add
clc
jae
scas
out
add
pop
data16
(bad)
push
xchg
add
ljmp
adc
jnp
mov
nop
fs
cmp
fists
das
mov
dec
jg
cmpsb
or
(bad)
pushf
or
push
stos
dec
jl
inc
push
or
mov
std
push
out
inc
dec
pop
jl
inc
cmovs
testl
sub
and
mov
mov
adc
xchg
jae
cs
sub
ret
mov
mov
ffreep
mov
adc
and
sbb
sub
and
in
mov
pop
(bad)
in
xor
mov
fwait
(bad)
pop
pop
loope
cld
rcll
nop
inc
inc
arpl
sbbb
hlt
push
jge
push
pop
adcb
pop
mov
shrb
je
ret
fcomip
cmp
aad
lcall
cmp
sarb
sbb
adc
cmp
lock
incb
lods
push
mov
mov
mov
pop
dec
negl
repz
sbb
test
and
add
add
or
fiadds
aas
shrl
jle
mov
ret
dec
(bad)
xor
cmp
mov
rcr
xchg
test
lret
cmp
je
or
and
sbb
mov
dec
nop
xchg
repz
lahf
adc
adc
sti
clc
adc
push
jb
fsubrp
ds
int
sub
jo
ja
stos
lahf
add
xchg
cmp
daa
faddp
js
loope
je
mov
mov
jmp
mov
(bad)
pop
xor
push
push
out
push
jne
es
pop
cmp
mov
mov
sahf
imul
cmpsb
sub
or
xor
sbb
dec
call
fwait
dec
push
sbb
pop
xor
out
loope
jp
mov
pop
mov
sbb
cmpl
cmp
add
fsubr
inc
mov
xor
les
xor
and
mov
xchg
movsl
fistpl
pop
shlb
cmpsl
sub
pop
int
shrb
das
loope
mov
inc
and
repz
add
cld
pop
mov
lods
and
xchg
sti
fidivrs
sbb
adc
scas
int
lea
jnp
push
lahf
ljmp
pusha
inc
cmp
scas
sbb
dec
jl
dec
jp
(bad)
adc
neg
cmp
test
ja
push
xchg
(bad)
insl
cld
xchg
imul
pop
sarl
pop
sub
add
pop
xor
in
cmp
dec
push
or
je
mov
mov
ret
jnp
pushf
jne
dec
cmp
je
clc
rcrb
sub
stc
push
imul
push
cmpsb
mov
cmp
mov
nop
cmp
daa
push
or
out
test
xchg
mov
fsubs
push
andl
jns
insb
cld
inc
or
and
mov
imul
sub
aad
fwait
or
ja
sbb
movsl
imul
mov
cmpsb
dec
sub
aas
lea
call
(bad)
adc
jp
inc
addr16
xchg
xor
ja
sbb
xchg
enter
inc
inc
mov
dec
and
inc
xor
rorb
sahf
mov
cmp
adc
inc
jg
das
mov
stos
xchg
insb
and
call
xchg
xchg
mov
dec
sub
arpl
(bad)
dec
xor
mov
xchg
dec
sbb
mov
lods
add
adc
es
mov
jge
mov
stos
pmullw
dec
scas
shr
testl
jl
or
jne
jecxz
and
push
inc
or
mov
pop
js
push
xorb
and
cmc
push
pop
push
jecxz
jp
arpl
or
adc
imul
aas
xor
nop
jo
lock
arpl
push
mov
hlt
popa
(bad)
sbb
cli
cmc
pop
mov
les
inc
inc
out
insb
outsl
data16
mov
fnstsw
outsl
jecxz
ljmp
inc
iret
xlat
inc
mov
jg
adc
pop
inc
push
aaa
jecxz
inc
sub
and
cmc
ss
aaa
pop
mov
adc
adc
leave
out
push
cmc
and
aaa
mov
or
loopne
jge
xchg
xor
cmp
push
in
push
or
lahf
and
inc
gs
repz
pop
mov
add
mov
rorl
mov
int
sbb
pop
and
lret
(bad)
adc
adc
cmp
adc
adc
adc
jp
jbe
xchg
js
