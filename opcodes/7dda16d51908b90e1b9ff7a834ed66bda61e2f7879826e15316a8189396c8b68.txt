xchg
jo
andl
stc
or
add
(bad)
or
mov
xor
sbb
jae
testb
add
push
sbb
push
sbbl
pop
push
cmp
(bad)
pop
data16
popa
aad
sbbb
inc
ficoms
call
cmp
pop
jecxz
xor
imul
dec
cmpsb
repnz
jmp
daa
(bad)
push
rolb
mov
pop
mov
repnz
cmp
aad
aam
mov
cmp
in
stos
outsb
mov
push
ja
adc
adc
(bad)
push
pop
inc
inc
mov
and
adc
(bad)
pop
dec
ret
imul
fildll
bound
out
loop
(bad)
push
pop
jns
add
dec
and
push
fists
xor
testb
dec
int3
add
pop
dec
dec
ret
lahf
and
popf
cmp
enter
(bad)
aam
pop
pop
ljmp
pop
test
mov
daa
pop
das
and
lret
mov
filds
call
add
lret
cmpsl
xchg
loopne
or
xchg
jo
jg
jp
dec
jb
aad
pop
imul
xchg
push
mov
xchg
push
pop
dec
imul
and
rcrl
jmp
fistps
mov
mov
xor
or
aaa
scas
repz
mov
in
jbe
jne
xchg
mov
dec
mov
xor
stos
dec
mov
sub
and
and
outsl
mov
mov
and
xor
push
int
adc
pop
jecxz
sahf
dec
push
adcb
mov
rcl
fs
adcl
scas
jge
hlt
addl
jl
xor
cltd
inc
iret
int1
jle
mov
cld
dec
out
enter
adc
mov
aad
mov
xor
xor
movsl
pop
jecxz
lahf
xor
int1
mov
add
mov
or
aad
lcall
lods
mov
xchg
add
dec
outsl
repz
outsl
xlat
xlat
push
fcmove
xchg
cwtl
push
cmpsl
ficompl
clc
push
lock
mov
inc
xchg
jmp
jns
pop
bound
mov
enter
adcb
xor
push
loope
movl
mov
outsl
mov
ss
rep
and
ljmp
cmp
imul
js
aam
cmc
sub
div
lea
stc
cmc
je
mov
or
xor
fildl
inc
xor
dec
or
pop
inc
rcll
movsb
mov
mov
push
scas
pop
push
fisttps
in
jno
dec
jne
push
mov
test
lods
sbb
dec
jecxz
and
xchg
in
flds
jle
mov
mov
testl
xchg
cs
ss
test
int3
je
test
stc
lret
sub
mov
pop
rcrb
data16
sbb
fstps
ret
test
dec
jle
js
mov
and
and
js
add
sbb
arpl
stc
enter
loopne
pop
sub
imul
stos
or
repz
das
call
pop
(bad)
sbb
xor
add
in
lea
clc
xor
xlat
cld
iret
cld
and
inc
jns
jp
stc
mov
xor
shrb
sub
mov
lcall
andl
cmp
mov
cmp
inc
mov
lock
sub
stos
daa
xor
cmp
ficoms
xlat
dec
hlt
in
shll
mov
orl
mov
cmp
sbbl
jbe
(bad)
faddp
repnz
shll
scas
pop
repz
sbb
adc
pop
inc
mov
jnp
sti
mov
int3
lret
dec
pop
lods
sbb
cli
jp
and
popa
xor
fmuls
pcmpgtb
ror
push
push
jnp
push
ja
ret
sbb
push
dec
outsb
fsts
sahf
and
inc
xlat
and
cmp
int1
into
scas
out
into
jo
xor
test
pop
jae
push
imul
leave
mov
lods
mov
test
js
mov
adc
add
sbb
ss
test
pop
fnsave
ret
cmc
lret
mov
in
fisubrs
roll
aam
nop
dec
outsl
dec
adc
adc
psadbw
inc
sahf
and
enter
pop
out
sbb
gs
(bad)
xor
xchg
pusha
sti
cmp
ds
mov
pop
out
cltd
add
loope
mov
pop
fsubl
std
ds
addr16
aaa
mov
mov
mov
inc
cs
es
inc
ret
jl
lods
jg
out
mov
leave
mov
inc
(bad)
or
arpl
push
pop
mov
jg
jg
or
je
pop
dec
xchg
call
xchg
lret
or
inc
xor
xlat
in
push
movsl
sbb
mov
lcall
lods
data16
gs
adc
(bad)
fistpll
xchg
shrb
push
add
cmp
pop
xorl
push
pushf
or
inc
addr16
sbb
jg
rorb
ss
repz
dec
cmp
push
xchg
mov
in
lock
sub
and
inc
inc
mov
dec
add
mov
xor
jno
loop
dec
test
and
fldenv
adc
cmpsb
pop
jae
push
and
inc
pop
subl
enter
rcrb
pop
jl
jnp
mov
add
mov
mov
(bad)
loope
(bad)
shll
leave
call
mov
pusha
add
sbb
loop
out
insl
xor
dec
lea
sbb
mov
test
mov
stc
xchg
sub
push
sahf
(bad)
pop
push
dec
mov
test
adc
std
mov
(bad)
aad
cmp
pop
jo
sub
mov
xor
xlat
insl
fwait
add
gs
(bad)
xchg
cmp
in
cwtl
rcll
xchg
jmp
shll
loopne
test
pop
imul
sub
ret
and
push
movsl
ja
ljmp
addr16
bound
mov
push
ret
push
mov
mov
shrl
lock
mov
mov
mov
mov
out
or
xor
es
mov
scas
xor
add
loop
into
fisttpl
xor
mov
mov
mov
add
pop
xlat
mov
xchg
push
mov
(bad)
or
jae
xchg
psrlw
push
inc
jge
bound
inc
xor
loopne
nop
aam
cltd
aad
and
mov
lret
dec
dec
cmp
shll
arpl
push
mov
cmpsb
inc
sub
outsl
fldz
sbb
and
lods
or
fdivr
loop
and
pop
inc
rorb
pushf
mov
imul
mov
pop
adc
into
lods
out
push
or
mov
jle
(bad)
shlb
lea
data16
mov
adc
push
bound
outsl
hlt
push
mov
push
inc
repz
mov
fstp
fwait
popa
xchg
aad
cmp
mov
aad
shrb
mov
or
jnp
mov
fidivrl
fistpl
mov
es
xlat
pop
lock
push
xchg
les
xchg
pop
push
push
cltd
or
movsb
xchg
adcb
loop
cmpsl
movsl
mov
xor
(bad)
mov
out
jb
pop
mov
cvtps2pi
idivb
incb
fstpl
sahf
imul
test
pop
addb
popf
jno
push
and
xchg
std
inc
fisttpl
ds
pop
fadds
adc
sbb
mov
in
popa
test
insl
or
loope
aaa
out
orl
subl
sub
inc
das
fisubs
cmp
popa
lods
jb
lcall
mov
pusha
jge
scas
loop
adc
andb
and
cmp
sub
dec
dec
enter
pusha
jl
cmp
jne
push
les
cmpsb
je
and
pushf
xchg
lret
cs
flds
ljmp
outsl
push
inc
add
inc
filds
mov
and
mov
adc
ss
sub
mov
xor
pop
dec
adc
subb
aad
push
mov
mov
int3
mov
adc
push
gs
pop
(bad)
cld
ljmp
mov
add
mov
(bad)
imul
xchg
xchg
push
cmp
and
sahf
movsb
xchg
je
lods
cmp
mov
les
imul
inc
out
mov
mov
scas
leave
loopne
and
pusha
mov
adc
insb
cmp
inc
pop
pop
fnsave
pop
lods
xchg
mov
mov
das
popa
cmp
sub
out
lcall
insb
mov
inc
mov
push
jne
cmp
arpl
dec
int1
adc
mov
fisubs
lret
adc
inc
xchg
push
imul
test
jle
fists
