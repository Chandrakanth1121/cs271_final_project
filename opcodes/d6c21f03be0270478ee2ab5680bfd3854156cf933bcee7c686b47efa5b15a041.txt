and
loopne
(bad)
jle
pop
fisubrs
(bad)
rolb
adc
push
mov
push
enter
(bad)
mov
or
popf
and
loopne
cmp
push
aas
lds
mov
jge
(bad)
and
xchg
je
and
imul
in
pop
data16
xor
shl
loope
inc
ljmp
mov
push
cli
gs
xchg
rcr
and
mov
dec
jecxz
push
in
out
(bad)
(bad)
jg
pop
out
fs
pop
cmp
mov
dec
repz
pusha
(bad)
fsubs
and
jbe
mov
out
adc
rcll
push
cmp
and
fdivp
in
iret
xchg
cmp
les
cwtl
sub
or
ret
jge
fstps
xor
push
xor
shl
inc
push
dec
stc
std
adcl
or
mov
mov
(bad)
insl
or
mov
add
jg
fisubs
pop
(bad)
jne
psrlw
xchg
ljmp
decl
dec
jbe
aam
mov
(bad)
inc
or
pop
fldcw
jae
xchg
fnstsw
cmp
(bad)
lcall
(bad)
(bad)
out
adc
jmp
cmp
rcll
push
fidivrs
incb
dec
cmp
ss
add
cmp
mov
inc
test
fidivs
pop
(bad)
pop
mov
push
and
mov
outsl
adc
bound
mov
cwtl
dec
ljmp
pop
xor
cs
push
fs
stc
out
outsl
push
enter
pop
iret
inc
and
out
inc
cmpsl
int
pusha
fiaddl
pop
cmp
ds
out
mov
je
jae
(bad)
mov
ds
jp
call
jnp
pusha
adc
xchg
test
int
push
scas
xor
xor
test
push
cltd
jmp
out
mov
inc
mov
dec
inc
jle
sbb
adcb
push
outsb
dec
(bad)
ret
jns
les
inc
pop
pop
and
sbb
(bad)
push
pushf
jbe
dec
push
mov
cmp
cmp
mov
out
jp
or
or
in
jp
mov
push
and
into
cmpsl
push
mov
das
aaa
aam
lea
dec
xor
aam
maskmovq
negl
mov
cmp
fdivr
xchg
sbb
data16
bound
xchg
sbb
inc
repz
or
into
fdivs
hlt
repz
pop
sbb
lret
arpl
dec
loope
clc
mov
fnstcw
sbb
adc
add
xor
cmp
pushf
pop
pushf
outsl
fdivrl
push
sub
adc
test
push
orl
imul
addr16
in
int3
mov
movhps
pop
int
dec
push
mov
xchg
shrb
add
xchg
mov
int1
mov
repnz
sub
andl
and
out
cld
cmpsb
add
xchg
sub
xchg
pop
lret
data16
loop
inc
add
lea
ja
lret
dec
mov
fsubrs
push
mov
lea
rcll
pop
pop
inc
clc
push
fsubs
xor
adc
fbld
out
into
pusha
inc
int
push
push
test
(bad)
adc
cmpsl
sbb
add
rcrb
outsb
(bad)
enter
lock
cmp
testl
cld
jo
mov
mov
inc
jge
clc
shrb
mov
int3
rcrl
imul
mov
cli
cmp
outsb
inc
xchg
add
mov
or
xor
pusha
mov
mov
mov
pop
sarl
gs
sahf
sbb
pop
xor
mov
hlt
shll
ret
shll
xchg
push
dec
cmp
xchg
ja
and
jmp
pop
and
cmp
rolb
mov
dec
inc
dec
sti
popf
mov
addr16
rclb
cmp
out
sbb
ficoml
das
out
mov
roll
mov
and
lock
or
lods
ret
iret
aad
pop
inc
pop
dec
sub
mov
add
cmp
ficomps
out
mov
inc
mov
jnp
call
lock
inc
lahf
nop
sbb
jmp
iret
out
rol
adc
push
idiv
jns
iret
pop
jle
sbb
pop
cmpsb
and
repnz
nop
movsb
cli
in
adc
push
mov
insl
mov
mov
faddl
xor
mull
dec
add
push
int
sbb
dec
out
dec
addr16
shrb
jne
cmpsl
bound
pop
fsubs
shl
fdivrl
aas
mov
lcall
faddp
in
scas
mov
mov
les
xchg
fsubs
js
scas
data16
mov
inc
xchg
mov
cmp
ficompl
cmp
inc
popa
xorb
rolb
xor
or
dec
adc
popa
call
xchg
xchg
cli
and
cld
movsl
inc
mov
xchg
inc
pop
cmp
push
xor
cltd
enter
out
adc
jecxz
xchg
cmp
int1
xchg
push
pop
adc
cmp
aad
cmp
pop
in
jle
push
inc
mov
add
(bad)
scas
clc
daa
or
pop
outsb
popa
out
sti
pop
add
stc
inc
add
mov
scas
stos
ljmp
movb
jp
hlt
imul
dec
ficoms
rclb
lods
sahf
jle
mov
adc
adc
mov
in
mov
pop
lock
sahf
dec
rolb
fldl
jnp
cmp
push
cwtl
jne
dec
lret
or
cmp
ja
push
mov
out
cmpsl
(bad)
std
movsl
xlat
jbe
lcall
mov
dec
shl
push
sub
pop
ja
adc
mov
adc
fs
or
(bad)
lock
jo
decl
mulb
mov
add
pop
das
dec
(bad)
sbb
jecxz
test
notb
lea
cmc
sub
or
mov
xlat
std
fidivs
cld
fisubrs
sti
cld
sub
fnstcw
add
out
xor
pop
repnz
sbb
inc
out
pop
mov
push
outsb
mov
sub
xchg
out
gs
fadds
in
in
mov
jg
enter
lcall
int1
pop
cmp
jne
push
in
pop
inc
out
cmpsl
mov
jbe
dec
fisttpll
or
in
popf
jnp
and
int1
sarb
lods
and
(bad)
mov
push
pop
cld
cmp
cmp
mov
pushf
mov
in
clc
cmp
jmp
dec
and
xchg
pusha
jno
stc
pop
(bad)
arpl
xchg
push
jo
popa
cmp
inc
dec
push
filds
push
hlt
pop
rcrb
sub
dec
gs
loop
xchg
repz
mov
push
insl
(bad)
sbb
(bad)
lret
(bad)
(bad)
pop
inc
or
in
jo
pop
rol
add
pop
inc
inc
data16
dec
mov
lock
xchg
adc
fnstsw
and
jno
add
add
mov
fiadds
int
sbb
push
pop
pop
xchg
(bad)
cli
inc
repz
cmp
lds
scas
jl
pop
out
mov
mov
sti
sub
or
testb
mov
rolb
push
adc
fwait
in
and
pop
out
and
lods
jg
cmp
into
fisubrs
add
dec
xchg
adcl
ds
pop
mov
xlat
andl
insb
mov
in
out
dec
mov
dec
inc
push
and
(bad)
inc
outsb
movsb
sbb
fwait
addr16
adc
popf
adc
call
call
out
arpl
std
adcl
mov
push
mov
iret
dec
ds
je
push
ret
and
sahf
push
push
cmp
iret
fisubs
stos
into
test
jle
out
jno
ret
lods
fmul
add
mov
push
loopne
sbb
dec
fcoml
outsl
or
add
mov
into
push
stos
lods
js
dec
xor
push
fsubs
mov
inc
loopne
fistl
xor
call
cmp
sub
jmp
xchg
inc
push
loope
mov
lock
jle
lods
ficompl
mov
xor
mov
(bad)
hlt
cmp
sbb
xor
int
inc
int3
sbb
xor
or
addr16
sub
pusha
clc
rclb
inc
(bad)
xor
xorb
nop
inc
mov
xor
imul
inc
dec
mov
xchg
sbb
xchg
hlt
or
int3
mov
and
push
lods
or
shlb
(bad)
stc
jle
jae
test
xchg
jbe
loope
push
cltd
pop
js
sbb
arpl
