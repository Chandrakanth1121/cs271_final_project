insl
push
(bad)
jecxz
push
pop
cmp
das
ror
or
nop
cwtl
jns
jo
or
cmpsl
cld
inc
lcall
hlt
stc
orl
sbb
xor
mov
fiaddl
mov
pop
sbb
and
fistpll
daa
mov
push
int3
mov
and
cmp
mov
sbb
jb
mov
dec
add
enter
jmp
xor
xchg
dec
(bad)
and
cmp
push
dec
lea
in
hlt
dec
movsb
fwait
loop
mov
movsl
and
sbb
sar
scas
cmp
sbb
xchg
add
xchg
xor
push
mov
lock
out
push
cmp
and
dec
fs
shll
daa
add
and
aam
andps
adc
fdivrs
mov
shll
sub
mov
out
rorb
sahf
sbb
sub
push
add
(bad)
aad
jo
cmovle
loope
add
cmp
loope
ss
add
addr16
sub
fwait
jno
mov
and
add
push
inc
mov
mov
jl
leave
les
push
sbb
aad
add
sub
sbb
dec
loopne
ret
dec
mov
filds
daa
mov
xchg
flds
pop
cmp
push
(bad)
xchg
int
test
popf
scas
notl
mov
adc
pop
inc
xor
cld
test
(bad)
aam
rorb
nop
sbb
push
cld
and
lea
roll
orl
in
push
sub
sti
sub
push
or
popf
sub
and
rep
push
inc
push
fildll
sub
cmp
jge
arpl
or
call
cmp
gs
(bad)
js
adc
mov
mov
xor
jmp
cltd
flds
sbb
push
dec
jecxz
pop
mov
sti
xlat
scas
nop
dec
sbb
nop
lcall
mov
mov
enter
push
mov
adc
hlt
(bad)
pop
jo
test
popa
lahf
sbb
sarl
mov
add
dec
dec
mov
mov
shlb
sbb
aaa
or
mov
jg
gs
loope
add
adc
aad
mov
(bad)
rol
sub
call
repz
ljmp
fwait
sub
sbb
ja
push
int1
lock
mov
lea
pop
xor
cld
mov
xchg
fst
rorb
dec
dec
or
movl
sbb
jnp
sbb
cmp
sbb
adc
dec
(bad)
call
cmc
push
daa
shlb
cmp
jle
jno
test
int3
pop
and
and
and
bnd
dec
stc
test
xor
or
cmp
cld
push
sbb
scas
std
mov
in
dec
repz
out
jge
adc
fldcw
push
scas
dec
aam
dec
sub
push
int
xor
(bad)
cmp
out
ss
fsubl
sub
lds
(bad)
aam
xor
xlat
bound
out
xor
lods
inc
xchg
lods
aaa
cmp
and
in
sub
or
jne
shl
sbb
int1
pop
and
aad
test
sub
cmp
cvtpi2ps
and
lea
ficoms
aas
push
fdivr
sub
cltd
pop
cltd
jb
inc
pusha
pop
pop
and
(bad)
lods
pop
pop
in
sbb
int3
add
xor
and
add
inc
inc
lods
xchg
mov
or
cmp
pop
test
shlb
inc
xor
int3
push
pop
mov
repnz
jl
int1
and
mov
lods
pop
mov
shl
(bad)
jb
inc
dec
inc
add
stc
stos
xlat
add
push
imul
pop
mov
sbb
rorl
xchg
inc
sbb
das
mov
jl
pop
inc
je
lods
mov
and
inc
mov
dec
roll
lock
xchg
test
pop
mov
rclb
xchg
inc
int1
cmp
xlat
pop
xor
rcrl
lret
fcompl
fs
pusha
sub
into
int
lret
sti
call
mov
ljmp
ret
int
(bad)
stc
mov
in
adc
insb
cmp
out
cs
or
add
mov
xor
ret
mov
inc
and
dec
mov
out
test
lcall
or
stc
lods
and
mov
pop
mov
data16
xchg
enter
push
sbb
sti
scas
push
xlat
rorb
sub
xchg
fwait
xchg
pop
(bad)
and
jp
sub
ljmp
pop
lea
lahf
fnsave
sbb
leave
mov
dec
mov
sbb
fstl
lahf
sti
rolb
stos
(bad)
push
mov
fsub
lock
sub
aad
in
fnsave
fsubr
dec
cmp
push
push
add
cld
xor
cmp
mov
sub
pop
jns
sbb
rolb
(bad)
mov
add
sbb
mov
sbb
mov
sub
xchg
or
fs
inc
or
pop
mov
repz
add
cmp
pop
and
in
(bad)
mov
pop
xchg
and
mov
mov
addr16
ret
dec
mov
pop
movl
add
mov
ret
cs
jmp
jne
mov
das
or
push
cwtl
or
mov
daa
shlb
int3
cltd
sbb
loope
imul
xchg
inc
idivb
lods
lods
jb
sub
int3
mov
pop
mov
(bad)
dec
sub
sbb
movsb
or
fwait
jo
sbb
scas
and
and
sti
dec
sbb
push
sub
and
sbb
mov
sub
adc
push
jo
lock
push
or
cwtl
mov
out
outsb
outsl
xlat
lds
or
inc
or
pop
fldl
dec
iret
cs
leave
push
add
sub
adc
xchg
inc
(bad)
shrl
in
adc
enter
call
dec
int3
mov
loop
mov
sbb
test
out
mov
mov
insb
outsb
sub
(bad)
je
sbb
test
lock
sub
stos
cmp
(bad)
dec
scas
(bad)
pop
daa
add
outsl
cmp
sarb
push
lcall
push
inc
sbb
fs
ret
mov
jl
mov
adc
jg
rol
pop
aas
xlat
fiadds
pop
add
in
lods
xchg
mov
pusha
scas
adc
mov
mov
cmp
or
add
ret
xor
cmp
inc
dec
pop
out
pop
sbb
add
or
jge
out
adc
test
stos
popa
sahf
out
inc
imul
cmp
push
push
xor
xchg
xchg
pop
repz
cmpsb
cmp
sub
cmp
in
pop
push
ja
out
mov
pop
shll
cld
sub
stc
and
and
jl,pt
jl
add
mov
into
sbb
decl
xchg
lods
push
pop
mov
rorb
imul
ss
bound
lods
jl
dec
pop
jge
lods
jg
dec
cmp
les
jb
fadd
mov
(bad)
jp
scas
cmp
xchg
shlb
lret
(bad)
aas
xchg
dec
lods
or
adc
ljmp
mov
adc
loopne
aaa
or
push
lods
cltd
mov
inc
xor
lea
mov
add
cmp
xor
enter
add
mov
jl
mov
int1
imul
mov
adc
inc
repz
scas
adc
inc
ror
jmp
sbb
mov
cmpsl
jne
movsl
fdiv
sub
inc
sub
ret
mov
into
xchg
(bad)
pop
inc
fucomp
sbb
sbb
enter
and
mov
out
and
or
or
and
pusha
adcl
popa
cwtl
repz
in
es
mov
adc
lea
test
mov
jp
mov
aad
lret
sbb
(bad)
push
and
xor
mov
insl
dec
cmp
add
ror
cmp
iret
sarl
cmp
dec
xor
mov
movsl
jecxz
out
stos
dec
sbb
aaa
es
xor
(bad)
loope
sarb
mov
sbb
xchg
xchg
jno
xor
lret
ljmp
add
lods
test
bound
pusha
mov
push
lahf
fidivs
sbb
das
ljmp
lcall
sarl
add
push
stc
pop
sbb
sbb
sub
sub
adc
sub
bound
aaa
cmpsb
sub
inc
lock
ret
iret
add
adc
mov
and
adc
pop
ffreep
push
jge
ret
xlat
and
push
mov
inc
fstl
mov
cmp
pop
add
mov
jge
mov
