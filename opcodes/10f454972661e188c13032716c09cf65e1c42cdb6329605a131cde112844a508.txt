fdivl
fldt
xor
adcl
pop
sbb
fistpl
lahf
aad
mov
xchg
arpl
push
sub
aas
ss
(bad)
or
(bad)
into
test
jge
nop
lods
sbb
test
pop
in
ja
cmpsb
idivl
fiadds
loop
mov
xchg
pop
test
xchg
adc
or
xchg
cmp
dec
cld
xchg
test
movb
push
lcall
sub
iret
inc
lcall
sbb
jge
into
fwait
into
frstor
lret
add
loop
mov
out
pop
jmp
popa
jp
mov
das
sub
mov
test
jb
mov
mov
loop
mov
pop
out
mov
dec
loopne
out
xor
jae
adc
(bad)
jne
in
mov
sbb
loope
lret
mov
cmpsb
cld
add
aaa
xchg
push
pop
xchg
in
or
inc
sbb
push
enter
jnp
lea
int
push
dec
fisubs
test
dec
xchg
test
lods
popf
sbbl
stc
shl
jne
daa
daa
fidivs
nop
dec
outsl
rcll
loop
lea
xor
mov
dec
scas
jmp
cwtl
shlb
jo
mov
and
popa
daa
and
push
cli
pop
xor
push
mov
movsl
add
and
in
add
or
mov
push
aad
out
in
popf
dec
mov
cltd
cwtl
ret
xchg
push
jg
mov
sbbb
jo
sub
arpl
jns
mov
xchg
xchg
sub
(bad)
adc
sti
(bad)
dec
push
sbb
loopne
hlt
sub
fistpll
les
sbb
inc
(bad)
cmp
mov
adc
mov
loop
push
mov
push
mov
ds
dec
roll
inc
movsb
cmp
xor
out
cmpsb
mov
jg
xor
mov
(bad)
loopne
arpl
js
xor
roll
loop
daa
sbb
popf
jne
cltd
mov
outsl
push
push
into
jmp
std
fists
or
pop
cmp
cmp
jo
lea
in
add
sub
repz
lret
fwait
cmp
lret
mov
jae
cmp
push
xor
mov
ds
adc
xor
cmp
xor
in
pop
push
leave
aad
arpl
mov
xchg
jo
in
xchg
jmp
push
in
dec
sbb
pusha
push
lds
jle
mov
xchg
xor
or
movsl
fdivrl
pop
and
xor
mov
jmp
or
or
or
lcall
jecxz
scas
pop
ds
sub
fs
push
cmp
repz
push
add
push
pop
inc
in
lods
cmp
cmp
nop
testl
pop
outsl
mov
movsl
or
mov
lret
jecxz
test
loop
ds
xchg
loop
dec
jmp
push
pop
in
add
and
adcb
shl
push
sub
mov
sbb
fcomps
ds
cmp
movaps
imul
orl
sub
mov
lods
ljmp
sbb
jmp
call
hlt
insl
add
sbb
mov
xchg
sub
mov
jno
sub
cmpsb
sbb
jne
(bad)
out
test
add
and
push
std
jbe
out
xchg
fistl
scas
notl
pop
adc
test
(bad)
or
xchg
ljmp
ljmp
jnp,pt
dec
push
sbb
or
in
xchg
fistl
cs
insb
cmp
cld
sbb
mov
dec
psubsb
or
jo
rolb
rolb
xor
aam
mov
mov
add
cmp
sbb
(bad)
movsl
mov
mov
movsl
imul
int
push
xor
pop
cs
fwait
mov
xlat
adc
add
inc
xor
rolb
xor
jmp
mov
call
movsl
jl
leave
int1
lods
xor
test
pop
pop
(bad)
(bad)
adc
adc
pop
sbb
imul
shrb
sub
cli
ror
shl
jp
sbb
jb
ret
sbb
add
xchg
xchg
es
int
push
add
sbb
cmp
jmp
push
pop
imul
iret
jmp
sbb
lahf
adc
inc
sarb
fsubrl
ret
popf
stos
inc
pop
call
pop
xor
movsl
push
xchg
ret
jb
or
in
jl
dec
xchg
(bad)
jns
mov
cmp
lcall
cmpl
mov
jmp
stos
cli
mov
mov
es
mov
mov
popa
xchg
sub
ja
cmp
pop
mov
cmp
mov
in
clc
jb
jne
movsl
sbb
jecxz
dec
add
xorl
fsts
jmp
add
mov
popa
sbb
add
rcrb
xchg
adc
incl
xlat
sarl
mov
into
pop
les
popf
add
movsl
mov
and
ljmp
test
sbb
cli
(bad)
jmp
jecxz
(bad)
mov
pop
leave
sahf
pop
ret
ljmp
cwtl
int1
mov
iret
mov
jb
add
iret
sbb
pop
and
pop
push
cmp
aas
jg
rorl
ljmp
adc
dec
mov
sub
movsl
test
mov
xor
xchg
jns
std
adc
cmpsl
sahf
and
out
and
push
mov
lsl
mov
cld
sti
xchg
cmp
sbb
mov
push
cltd
jno
stos
sub
mov
xor
fildll
jmp
add
test
jbe
cmp
cwtl
stc
add
lock
hlt
lock
scas
xor
jge
push
insl
cmpsl
lock
aas
jb
jno
addr16
mov
xor
popa
enter
inc
test
jnp
inc
cmp
aaa
xor
clc
jle
push
mov
movsb
cmp
fsubrs
xchg
aaa
pop
frstor
bndldx
sbb
je
xchg
repz
cmp
popf
pop
movl
jno
ss
lcall
sti
insb
xor
adc
or
lcall
sub
in
mov
fdivs
loop
rolb
loope
jg
push
jnp
pop
iret
jb
ja
outsb
aaa
pop
data16
je
int3
cmpl
sub
inc
inc
hlt
leave
push
sbb
ret
clc
lods
movsl
js
int3
lea
clc
push
stos
xor
aad
rolb
lea
sar
lods
pop
test
in
or
in
xchg
sub
inc
popf
mov
movsl
sub
movl
lret
or
pop
sub
or
pop
pop
clc
cmp
pop
xchg
rolb
out
xchg
jecxz
pop
rolb
jb
mov
adc
pop
adc
cwtl
jecxz
xlat
push
jge
mov
dec
add
push
in
mov
mov
dec
fisubrl
int3
idivl
xchg
sub
and
nop
cmpsl
ds
(bad)
pop
xchg
xor
push
test
add
stc
sub
scas
popf
(bad)
sbb
mov
rcll
aas
fbld
leave
sub
add
cmp
fwait
addr16
cmc
mov
and
lret
xchg
jbe
xchg
adc
cmp
fs
mov
inc
sahf
in
xchg
push
cmp
sbb
inc
xorl
mov
lret
or
sub
sti
dec
push
shl
xchg
add
push
dec
jno
ss
cmp
lcall
xchg
(bad)
add
lods
sub
fwait
lcall
loope
xor
ret
in
inc
movsl
pop
out
cltd
aaa
test
xchg
or
fdivrl
ret
pop
add
xlat
pop
(bad)
repz
movsb
rclb
jo
push
sbb
int1
hlt
xchg
adc
data16
pop
xor
sub
xchg
mov
sahf
ret
push
mov
cmp
sbb
pop
pop
lea
mov
jnp
aad
repz
jnp
xchg
test
sti
jbe
jmp
mov
cmp
jae
out
ja
shlb
stos
jmp
pop
push
pop
lahf
cmp
push
fnstcw
xor
js
cmp
and
aam
int1
mov
push
les
cmp
jge
outsl
mov
enter
lods
cmpsl
jge
sahf
sti
xor
inc
rol
ss
stos
jp
inc
dec
mov
mov
jmp
fcompl
in
xchg
push
stc
push
aad
pushf
push
sbb
sbb
sbb
dec
adc
jle
lds
mov
insb
and
cmp
mov
lcall
aam
loope
mov
xor
xchg
pop
mov
sub
out
pop
out
xchg
imul
add
mov
clc
jb
