push
or
add
add
add
add
add
add
add
add
add
add
add
push
mov
jmp
pop
(bad)
jp
inc
aaa
sub
jae
mov
and
sbb
mov
out
sbb
adc
add
mov
repnz
mov
cmp
imul
sbb
cmp
sub
push
push
xor
std
std
adc
sbb
push
lds
aas
test
fsubs
mov
push
inc
mov
xchg
pop
mov
mov
add
lods
or
mov
negb
adc
je
test
xlat
mov
pop
cli
lret
je
lret
xor
push
cmp
cmovne
repnz
(bad)
sub
or
out
ljmp
cmp
idivl
shrl
push
loope
ss
movl
mov
ficompl
pop
cwtl
call
add
mov
je
inc
and
imul
movsb
repnz
lods
mov
(bad)
pop
dec
rcll
and
pop
repz
mov
cli
inc
adc
and
xor
sub
jecxz
scas
mov
dec
mov
or
push
or
in
sarl
mov
pop
shll
sbb
pop
pop
dec
inc
test
fisubl
fiaddl
pushf
inc
push
lcall
jecxz
ds
jmp
push
dec
dec
xor
mov
sbb
jecxz,pt
scas
push
pop
shrb
movsl
jnp
cmpsl
pop
and
inc
loopne
xchg
sbb
push
(bad)
call
es
adc
div
mov
sahf
mov
lock
loop
cmp
inc
adc
scas
hlt
and
xchg
sbb
adc
int3
orb
insl
cmp
mov
mov
in
pushf
push
stc
cmpsl
jmp
pop
adc
test
inc
add
dec
cmp
dec
add
dec
inc
int1
xchg
dec
sub
roll
mov
lea
mov
cmp
lods
inc
sbb
bound
call
fs
hlt
cs
lahf
and
leave
push
mov
enter
mov
repz
sub
cmp
mov
jle
jae
lods
leave
addr16
or
jno
test
jb
stos
mov
outsb
xchg
out
fisubrs
adc
aad
mov
scas
xchg
divl
xchg
sbb
stos
js
(bad)
fldcw
jne
iret
insb
jl
xor
lds
ds
xor
out
mov
test
mov
dec
cmp
dec
sub
pop
ret
negb
nop
push
shlb
lahf
push
pop
or
flds
lea
lret
test
mov
lods
stos
push
les
jp
lds
sbb
ret
jecxz
xchg
pop
xchg
adc
sbb
cmp
call
inc
cmp
adc
int3
jl
jae
mov
decl
cmc
mov
cmpsl
jbe
sbb
inc
test
stos
mov
fsubr
mov
movsb
pop
mov
jp
pop
adc
cmc
(bad)
jne
inc
pop
ss
push
jle
xchg
sbb
push
shl
jo
in
jnp
mov
xchg
sub
xor
xor
rorb
stos
les
mov
xchg
add
dec
aaa
cwtl
mov
(bad)
push
popf
push
fdivs
inc
mov
pop
add
mov
je
sub
mov
jp
sahf
cli
(bad)
std
push
cwtl
in
cltd
(bad)
cwtl
les
lea
mov
and
loope
mov
cwtl
iret
ret
push
clc
pushf
call
test
add
mov
sbb
das
xchg
cmc
sbb
and
or
iret
cmp
inc
dec
pop
arpl
mov
jnp
cmpsl
ds
or
push
xchg
cmp
mov
test
jecxz
ds
mov
leave
dec
(bad)
outsb
mov
sbb
push
gs
xchg
adc
std
inc
sub
xchg
enter
mov
sbb
fstp
ja
mov
inc
lods
stc
sarl
fmull
or
insl
sbbb
jns
out
pop
or
repnz
inc
cs
ret
mov
jmp
sub
out
(bad)
cmp
cld
dec
xor
aas
stc
cmpsb
out
int3
jb
pop
leave
mov
and
mov
fld
inc
mov
xor
or
mov
inc
mov
inc
fwait
lea
jb
rcrl
and
ja
xchg
(bad)
in
push
jp
mov
std
push
mov
sbb
ret
(bad)
xchg
lods
popa
lock
addb
insb
xorb
(bad)
insl
push
jae
mov
mov
daa
(bad)
leave
scas
mov
inc
mov
sub
xchg
push
pop
jne
dec
mov
ds
mov
fwait
mov
mov
mov
cmp
in
pop
jmp
pop
test
scas
jo
imul
push
cmc
jp
add
xlat
push
test
mov
jp
jl
out
movsb
sub
push
insb
sarb
fucomp
repz
and
inc
lahf
daa
clc
add
add
fistpl
aam
sub
jecxz
je
push
or
add
or
out
or
xchg
clc
cli
cmp
adcb
xchg
xchg
cmp
subl
dec
imul
push
or
push
xchg
pushf
add
inc
add
or
jb
xchg
xchg
adc
or
cmp
jne
or
fwait
pop
les
es
mov
addl
(bad)
sub
jnp
push
xlat
aam
movsl
jb
sub
mov
sub
cmpsb
test
int3
std
inc
outsb
push
mov
jo
test
dec
dec
cmpsl
(bad)
pop
aaa
jae
int
andl
aaa
fildl
cmp
cmpsl
mov
bound
std
pop
sbb
cmpsl
lds
mov
scas
pop
mov
repz
adc
sarl
dec
inc
je
scas
inc
mov
jle
shll
std
add
cmpsl
push
into
daa
pop
mov
int3
sbb
mov
out
into
jp
pop
ja
adc
xchg
pop
mov
(bad)
mov
xchg
test
jne
leave
test
adc
dec
push
imul
outsl
(bad)
push
and
popf
mov
cmp
sbb
adc
sub
push
dec
repz
lods
lods
add
pop
aas
subb
push
in
orl
mov
movsl
hlt
sti
mov
int3
sub
fs
and
inc
sbb
xchg
test
push
and
divl
je
int1
(bad)
mov
pop
xchg
mov
das
aaa
mov
lods
or
cmp
mov
xchg
orl
test
inc
loop
or
or
sub
lea
in
sbb
stos
sahf
xchg
jb
(bad)
mov
leave
addr16
add
push
sbb
pop
outsl
in
jbe
mov
stos
xor
xchg
or
sbb
xchg
xchg
push
sub
xchg
xor
imul
lret
in
leave
jge
sub
sub
in
pop
shrb
mov
incb
dec
fs
mov
or
xor
lret
sahf
arpl
in
mov
pop
subl
cld
xlat
nop
pop
dec
movsl
sbb
xor
sbb
xor
cmp
movsl
jno
jp
les
cmp
and
xlat
arpl
ss
jo
outsb
adc
fwait
inc
add
cmpsl
mov
movsl
outsl
mov
jge
inc
jb
mov
jl
mov
and
imul
jno
int1
and
jl
xchg
xchg
push
mov
cld
inc
ljmp
pushf
int
cltd
pop
int3
mov
sbb
dec
add
mov
in
lods
enter
pop
xchg
push
sbbb
fisttpll
(bad)
xchg
mov
or
xchg
adc
fldcw
dec
(bad)
in
mov
sbbl
testl
mov
xchg
ds
jae
out
add
xor
xor
xorl
mov
outsb
sub
push
loopne
call
lds
test
mov
fnstcw
movsb
cld
in
bound
imul
xchg
outsl
jb
sbb
iret
cltd
stos
loop
(bad)
jge
repz
cmpsb
test
in
xchg
dec
lahf
int3
idivb
or
cmp
mov
aam
js
push
fwait
clc
lcall
xchg
jle
adc
sarl
fs
adc
movsl
outsb
jg
and
xlat
int3
enter
arpl
in
adc
cmp
popf
push
sbb
xor
stos
or
jg
or
orb
inc
jle
add
dec
pop
(bad)
imulb
mov
lods
fisttpl
leave
