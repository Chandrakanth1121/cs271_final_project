subb
stos
jecxz
cmp
sub
dec
sbb
inc
sahf
inc
test
push
es
dec
sarl
pop
sahf
adc
lcall
add
addr16
mov
sub
enter
enter
enter
dec
daa
pushf
push
mov
test
push
es
dec
cmp
cld
fwait
inc
ljmp
clc
sbb
xor
add
jg
sbb
jle
stos
and
mov
ret
lret
mov
pop
mov
fnstsw
daa
jb
mov
cltd
dec
mov
jg
daa
shrl
ret
xor
mov
leave
daa
cmp
sahf
xor
fidivrl
sub
lcall
cmp
sub
enter
enter
enter
inc
daa
jnp
mov
inc
sub
cmp
int
cmp
and
loop
test
pushf
mov
(bad)
out
aas
and
das
daa
cmp
in
stos
clc
test
sub
mov
xchg
inc
mov
lcall
lods
mov
sub
cmp
jb
and
mov
shll
lods
pushf
mov
(bad)
out
aas
and
daa
cmp
in
stos
clc
test
sub
mov
xchg
inc
mov
lcall
lods
mov
sub
cmp
dec
inc
ja
aas
shll
and
daa
cmp
pop
dec
mov
out
daa
cmp
mov
pop
cmpsb
scas
out
add
aas
and
int1
imul
cmp
sahf
inc
mov
add
daa
cmp
sahf
xor
fidivrl
sub
lcall
lock
sub
enter
enter
enter
inc
daa
jnp
mov
test
jo
es
dec
mov
sub
cmp
scas
add
mov
(bad)
and
sub
sub
lcall
mov
sbb
push
cmp
scas
stc
lods
insb
xchg
inc
mov
js
daa
cmp
stos
movsl
cmp
cmp
sbb
inc
pop
sub
cmp
cmp
sbb
mov
pop
sub
lcall
lret
and
xchg
pop
add
pmovmskb
xlat
aaa
sub
mov
push
xor
js
sub
cmp
adc
mov
pushf
ss
sbb
xlat
cmp
(bad)
ss
sbb
cmp
ret
inc
mov
lcall
lods
mov
sub
cmp
aas
cmp
mov
pop
mov
mov
mov
out
dec
inc
sarl
pop
mov
sub
lcall
pop
scas
jmp
adc
mov
sub
pop
pop
and
adc
sub
mov
pushf
sub
ret
into
dec
mov
sub
mov
sub
fnstsw
daa
jb
mov
test
jo
sub
mov
sub
mov
arpl
inc
mov
mov
outsl
cmp
push
cmp
inc
mov
mov
das
stos
stc
mov
mov
push
test
cmp
jle
pop
dec
je
cmp
out
dec
das
enter
enter
ds
inc
ss
stos
int
inc
sbb
jo
push
and
mov
mov
cs
mov
outsb
dec
pop
and
psrlq
stos
fwait
fwait
sub
ret
fimuls
rcr
cmp
fimuls
rcr
cmp
fimuls
mov
mov
stos
daa
and
mov
mov
sub
adc
pop
cmp
ret
sahf
dec
mov
sub
mov
sub
out
loop
mov
xchg
lods
and
das
fldt
adc
xor
cmp
sub
fldl
jmp
mov
test
push
sub
mov
sub
sub
mov
mov
sub
mov
lcall
enter
enter
ds
jb
mov
test
jo
sub
mov
sub
mov
jb
outsb
dec
pusha
and
jb
ret
out
dec
das
shrl
sub
fidivl
daa
cmp
mov
pop
mov
lods
call
cmp
imul
xor
push
xchg
insl
ror
arpl
mov
mov
mov
mov
sub
fnstsw
sbb
inc
ss
stos
int
inc
sbb
jo
push
out
adc
xor
push
ss
mov
sub
mov
mov
sub
mov
and
mov
mov
mov
mov
sub
(bad)
testb
pop
es
cmp
repz
xorb
(bad)
mov
pop
ljmp
call
xor
xchg
pop
mov
push
and
mov
lods
call
cmp
ljmp
sbb
cmp
jo
cmp
xor
cmp
sub
cmp
sub
ret
loopne
mov
xchg
lods
and
or
scas
out
lods
mov
inc
ljmp
cld
sahf
mov
mov
adcl
cmp
pop
daa
scas
mov
adc
sub
mov
daa
add
mov
pop
sahf
pop
out
arpl
stos
sbb
sub
repz
div
add
cmpl
pop
scas
lock
lret
lods
mov
ret
or
cmovle
enter
scas
cmpsb
adc
rcrl
scas
out
movsl
mov
inc
pop
and
cmp
sbb
(bad)
lock
adc
push
cmpsl
mov
dec
ss
and
dec
fbstp
stc
lods
ficoml
cmp
mov
mov
push
ljmp
lcall
mov
and
stos
add
daa
cmp
sahf
aaa
cmp
in
and
adc
sub
pop
mov
dec
push
ja
mov
and
mov
mov
xor
cmp
dec
mov
mov
sub
or
sub
rcll
xor
xchg
adc
mov
sub
mov
sub
cmp
(bad)
dec
ss
out
mov
sbb
dec
lods
dec
mov
cmp
inc
dec
mov
daa
ja
shll
mov
js
and
sub
pop
das
(bad)
or
lcall
cmp
mov
mov
sub
jns
lcall
cmp
mov
cmp
cmp
repnz
sub
cmp
and
dec
sbb
sub
lcall
cmp
stos
and
stos
scas
movsb
cmp
stos
and
fwait
sub
inc
pop
mov
and
test
sub
xor
xor
shrb
pusha
xor
jle
inc
sub
lcall
pop
movsb
adc
cmp
scas
idivl
lcall
shll
xor
sub
inc
pop
sub
cmp
jb
shll
lods
fistps
mov
mov
cmp
jnp
jnp
mov
sub
cmp
sub
cmp
sub
mov
test
mov
mov
lcall
adc
sub
mov
sbb
call
mov
lcall
cmp
cmp
add
jmp
inc
sbb
mov
fwait
jmp
aas
sbb
addr16
pushf
dec
inc
sbb
daa
cmp
mov
mov
test
sub
xchg
aaa
insl
and
sub
cmp
xor
inc
sub
lcall
cmp
cmp
inc
push
cmp
lock
lcall
xchg
scas
add
fldt
cmp
mov
dec
and
cmp
sub
cmp
sub
mov
sub
daa
cmp
or
mov
push
sub
cmp
sub
cmp
cmp
mov
sbb
lods
popf
fwait
sub
inc
push
ja
mov
sbb
lods
lea
sub
daa
roll
call
mov
and
sub
inc
and
stos
xor
mov
sub
mov
sub
sub
mov
ss
mov
and
lods
lahf
lods
in
cmp
mov
cmp
inc
dec
inc
push
xor
cmp
das
stos
(bad)
popf
adc
mov
fwait
mov
pop
test
sub
mov
sub
mov
sub
sub
test
sub
or
add
shll
pop
pop
mov
das
jno
add
popa
popa
mov
cmp
sub
jb
pushf
and
xchg
lods
lock
jp
xor
daa
mov
push
dec
sub
fwait
int1
mov
mov
clc
and
lcall
enter
and
daa
cmp
ljmp
lcall
cmp
xor
mov
sbb
daa
cmp
sub
cmp
mov
and
jmp
js
repz
shr
mov
push
sbb
imul
clc
sub
cmp
adc
lcall
cmp
sahf
xor
lcall
cld
mov
xchg
addr16
add
div
add
jge
mov
bound
in
mov
mov
fstl
and
xor
out
clc
sub
mov
and
daa
cmp
cmp
xchg
fwait
jo
pop
sbb
idivl
sbb
fstl
sbb
mov
sub
mov
sub
fstl
sbb
idivl
stos
loopne
mov
add
sub
sbb
cmp
xchg
pushf
lods
in
cmp
cli
