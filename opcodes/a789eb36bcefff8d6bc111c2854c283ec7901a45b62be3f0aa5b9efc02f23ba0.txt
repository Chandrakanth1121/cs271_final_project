stc
push
nop
outsb
mov
sub
xor
fadd
pop
test
add
repz
sbb
push
push
xchg
lods
mov
inc
mov
push
out
add
xor
add
jg
xchg
xor
or
popf
shlb
fsubrl
inc
sbb
xchg
fimull
mov
fidivs
xor
xor
jecxz
repz
or
pop
stos
mov
lret
xor
pop
dec
push
sti
mov
jns
nop
pop
rolb
jge
xor
cwtl
inc
sub
hlt
or
sbb
clc
outsb
sbb
dec
sub
lahf
mov
dec
addr16
adc
lock
lret
mov
adc
inc
mov
mov
lcall
cld
push
lret
xchg
ds
xchg
sbb
insl
shrb
ret
stos
dec
mov
movsl
pushf
adc
sbb
popa
mov
mov
clc
cmpsb
xchg
ljmp
adc
xchg
rorl
cmpl
sbb
ret
(bad)
inc
dec
int1
daa
xchg
dec
stos
insb
lahf
data16
ss
ljmp
cli
loope
xor
fldenv
std
and
or
xor
or
sbb
and
push
sahf
int1
cmp
mov
xchg
aas
in
adc
out
(bad)
adc
push
(bad)
cmp
lds
les
arpl
pop
loop
pop
jns
xchg
add
int1
outsb
push
movsb
pop
pop
fists
add
je
movsl
add
or
inc
sub
and
jno
popf
add
lods
jo
dec
daa
pop
mov
dec
and
and
dec
add
jne
xchg
mov
push
jl
and
cmc
pop
lret
es
dec
rol
aad
pushf
test
mov
outsb
or
xchg
sbb
fcomps
pop
imul
loop
sub
movsl
xchg
sbb
mov
mov
out
lds
pop
mov
mov
push
jg
rolb
pop
cmpsb
jg
fs
aas
rcll
pushf
mov
scas
daa
fcompl
jecxz
(bad)
cmp
and
mov
incl
pop
mov
loopne
lret
push
loope
ds
data16
mov
stos
sub
nop
inc
hlt
or
clc
daa
and
and
jne
jmp
xlat
mov
xlat
js
out
sbb
jae
xor
fs
push
xchg
xchg
inc
cmc
out
inc
sub
cltd
fs
push
push
(bad)
push
imul
cmp
in
xchg
xor
into
out
ja
push
cmp
lret
push
inc
pop
in
jbe
sbb
jg
pop
xor
mov
xor
push
add
dec
cmp
popf
clc
and
or
push
push
cmp
and
fcmovne
pop
sub
and
andl
or
decb
cmp
mov
adc
aam
in
and
stc
fistpll
jl
cmp
lods
cmp
sbb
mov
mov
or
inc
cmp
lds
jp
xchg
xor
pop
std
stos
aam
insb
jle
mov
loopne
(bad)
lret
and
or
or
imul
cmp
dec
mov
outsb
jge
pop
shrb
xchg
xchg
adc
sub
test
sbb
mov
cmp
fdivl
xchg
ret
in
cli
mov
push
add
js
int
mulb
in
popa
inc
xor
jne
push
ret
adc
dec
jae
adc
pop
call
push
xchg
jnp
inc
insl
cli
mov
xchg
je
(bad)
pop
clc
xchg
sbb
cmp
fs
mov
outsb
imul
scas
aad
popf
loopne
mov
test
rcrl
ss
sub
scas
rorb
fwait
mov
inc
enter
int
add
dec
add
lcall
ss
xor
js
or
xchg
push
rcll
add
data16
add
or
xchg
pop
outsl
outsb
movsb
sub
xchg
xor
cwtl
cltd
fldcw
arpl
inc
dec
mov
es
inc
popf
filds
stc
iret
repnz
inc
test
mov
shl
ret
mov
add
push
mov
jg
and
lret
(bad)
clc
inc
jmp
xchg
sarl
lahf
xchg
iret
jmp
sub
cmp
add
add
pop
cmpsb
xchg
cmp
jmp
js
dec
jle
ds
xchg
int
mulb
inc
enter
testb
cmp
sbb
mov
sub
mov
int
xor
repz
mov
sub
mov
out
hlt
mov
sbb
scas
and
mov
sub
sub
outsb
push
notb
xor
hlt
dec
sbb
add
and
mov
int3
dec
lahf
movsb
movsb
es
sbb
dec
das
call
imul
cmc
in
add
mov
(bad)
cmpsb
pop
mov
sbbb
fnstenv
jg
in
jne
out
daa
mov
mov
lahf
mov
loope
xchg
xor
lret
xor
xchg
cld
rcl
sbb
push
pop
adc
sahf
pushf
dec
xchg
mov
cmp
or
mov
xor
and
and
push
(bad)
lret
inc
sbb
add
rol
lods
xchg
popf
dec
mov
outsb
cmp
arpl
xor
leave
or
pop
lock
mov
insb
push
testl
mov
lahf
mov
fstpl
xor
push
cmp
into
scas
pop
sub
xchg
xor
pop
mov
movsl
inc
stos
push
dec
pusha
add
popa
inc
dec
jne
aad
fs
cwtl
int1
pop
push
inc
lods
(bad)
cwtl
mov
mov
out
mov
jnp
in
push
lret
mov
and
rorb
imul
lret
les
(bad)
or
repz
xchg
dec
out
lea
fdivrl
adc
int3
pop
out
out
cmp
xor
scas
or
jmp
(bad)
adc
int3
loop
in
lret
arpl
test
cmpsb
fmull
mov
test
mov
pusha
test
jno
out
cmp
cmp
xor
jbe
jl
dec
sar
and
sbb
dec
scas
pop
jns
arpl
movl
sbb
adc
xchg
cmpl
jns
clc
push
bound
punpckhbw
popf
movsb
scas
ss
ret
iret
fwait
xchg
jecxz
cmp
enter
lret
rcrb
das
lss
in
xchg
mov
cwtl
cmp
stos
mov
test
sbb
iret
fistl
cmp
jge
into
xor
xor
xlat
(bad)
add
aas
jmp
or
int1
sbb
dec
mov
stos
fldt
nop
cli
mov
sbb
inc
lcall
test
aas
(bad)
repz
and
xor
xchg
les
pop
(bad)
fdiv
sbb
ljmp
xor
roll
mov
xor
mov
shll
ds
and
xor
xchg
popf
lds
inc
add
in
out
lock
adc
cmp
pop
dec
test
sub
dec
lods
mov
jbe
mov
das
mov
add
or
(bad)
hlt
xchg
inc
add
push
ret
mov
das
sbb
adcb
xchg
sbb
les
test
pushw
test
(bad)
gs
daa
cld
lds
out
adc
test
adcb
pop
popf
gs
inc
xor
pop
fwait
imul
fs
outsl
lods
xlat
push
cmpsb
fisubrl
lds
xchg
mov
pop
cmp
adc
enter
sub
lock
sbb
pop
inc
inc
pop
jno
add
and
arpl
xchg
mov
or
int3
mov
mov
(bad)
lock
divl
stos
in
bound
mov
jb
sub
rcrb
dec
dec
mov
enter
imul
sbb
movsl
call
mov
(bad)
mov
sbb
dec
loop
decl
lock
negl
cmpsl
inc
mov
inc
push
bound
adcl
and
das
(bad)
push
xor
aad
shlb
test
add
cld
inc
inc
mov
into
mov
push
in
pop
(bad)
rorb
fwait
mov
xor
push
push
jnp
jl
ret
js
jmp
test
ja
pop
add
jb
std
xorb
loope
ja
adc
clc
sarl
mov
lea
int3
inc
push
xor
in
es
jp
sbb
mov
lock
and
xor
rolb
push
mov
sbb
popf
std
adc
pop
and
dec
cltd
dec
fdivr
cmp
pop
and
add
