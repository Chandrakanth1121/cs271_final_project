pop
loope
sub
rorb
movsl
test
mov
mov
dec
insb
cmp
test
in
mov
ljmp
sub
rorl
scas
push
jb
inc
jecxz
insl
into
lahf
dec
xchg
cltd
(bad)
dec
jp
push
push
jmp
cld
push
mov
and
mov
ficoms
popf
jle
push
pop
mov
mov
(bad)
pusha
ffree
test
sub
adc
mov
push
push
xchg
test
and
cmpsl
fucompp
imul
push
popf
sbb
jmp
sar
ja
fwait
sub
repz
adc
inc
push
(bad)
jp
in
inc
rcrb
push
fdivs
out
cmp
test
cltd
mov
sahf
sub
dec
mov
gs
inc
push
(bad)
add
jmp
in
out
mov
jns
clc
or
roll
or
(bad)
ljmp
add
push
and
imulb
lcall
cli
mov
in
jo
pusha
sbb
jno,pt
push
cld
cmpsl
cmpsl
cmpsl
jl
push
roll
mov
fimuls
js
or
xchg
mov
in
adc
nop
es
int1
scas
and
sbb
xchg
mov
sbb
adc
inc
out
mov
lds
addr16
imul
imul
pushf
add
push
lret
arpl
jne
test
jno
aad
out
pop
popf
aad
mov
dec
dec
push
dec
mov
mov
add
rcrb
cmpsb
xor
aaa
cmp
mov
fistpll
mov
pushf
adc
lods
lds
div
out
lea
(bad)
enter
imul
jecxz
repz
flds
in
(bad)
and
int
add
imul
push
lret
dec
sbb
adc
iret
lods
bound
jecxz
push
in
or
lods
shl
divl
addb
test
cmp
imul
imul
mov
(bad)
shrl
sub
lcall
fldt
push
adc
divb
dec
call
xchg
xor
and
(bad)
push
push
scas
adc
push
xlat
es
jmp
stos
mov
push
pop
add
pop
or
pop
mov
int
cmp
mov
out
xor
sub
mov
repnz
movsl
mov
sub
pop
movsl
xchg
add
cltd
xchg
test
jno
push
lods
mov
pusha
aaa
lock
push
pop
mov
sti
sub
lea
loope
mov
mov
rcrb
push
dec
flds
mov
adc
(bad)
enter
in
cwtl
mov
push
in
mov
pop
adc
xor
outsl
popa
ficoml
and
cli
sahf
push
dec
(bad)
jns
sub
or
das
repnz
in
jbe
test
je
mov
xchg
inc
dec
(bad)
int3
cwtl
mov
xor
mov
movsl
sbb
shll
popf
push
xlat
cwtl
cli
sbbb
or
inc
push
mov
push
add
mov
xchg
cmp
daa
(bad)
in
arpl
subl
pop
jno
pop
xchg
imul
popa
dec
hlt
pop
and
sub
out
mov
jne
dec
inc
rorl
shrl
add
data16
int1
movb
sub
jns
in
inc
cli
mov
xchg
pusha
fsubl
out
pop
loopne
mov
ret
cld
push
insl
ss
call
add
sub
push
cwtl
mov
scas
cld
push
mov
xchg
push
pop
(bad)
mov
mov
data16
jb
and
dec
xor
nop
push
cmp
lret
std
outsl
sub
jnp
fidivl
(bad)
repnz
push
in
inc
xor
fsubrl
fstpl
pop
pop
fistpll
xchg
push
idiv
pushaw
push
fstpl
jge
inc
xchg
in
arpl
mov
mov
movsb
shlb
jbe
sbb
mov
pop
je
lods
sbb
lcall
aad
inc
addb
jecxz
insb
mov
mov
mov
cli
push
test
test
sub
jae
outsl
test
mov
fisubs
xchg
lock
jmp
(bad)
gs
xlat
out
cli
adc
mov
push
and
or
fidivrl
int1
daa
mov
jle
idivb
jmp
mov
xor
popa
inc
push
jo
cmp
jb
imul
pop
into
sar
lods
jecxz
ret
mov
in
push
xchg
sbb
test
iret
clc
jmp
inc
inc
adc
dec
(bad)
push
sub
fcomps
and
jno
cmpsl
fadds
mov
push
gs
push
lahf
jnp
push
dec
and
ds
cli
mov
pop
lahf
pop
adcl
andl
pusha
xor
lods
aas
xor
ljmp
rcrl
or
in
add
clc
pop
imul
sahf
ja
(bad)
push
mov
test
clc
mov
loopne
inc
out
jnp
xchg
loopne
pop
cmp
(bad)
mov
inc
mov
xchg
bound
or
int3
inc
out
sbb
xchg
lods
mov
pop
cs
negl
js
in
or
jle
inc
sbb
test
(bad)
cld
sub
arpl
mov
nop
pop
sbb
mov
bound
jle
mov
cmp
add
jp
add
add
lock
xchg
cmpsb
hlt
mov
(bad)
dec
sub
popf
aam
adc
cmp
mov
cmp
lret
cmpsl
loopne
pop
sbb
or
xchg
aaa
and
sub
int
inc
cmp
fisubrs
mov
and
enter
mov
mov
rcrl
sub
mov
js
aaa
mov
mov
imul
or
movsb
insb
dec
es
cmp
fcomps
add
(bad)
(bad)
(bad)
clc
sub
scas
mov
pop
adc
xorl
stos
xchg
les
aaa
xlat
pop
addl
aaa
repnz
push
sbb
cmp
cltd
test
lock
cmp
sub
or
mov
mov
pop
dec
jb
mov
dec
dec
outsl
scas
les
lcall
jge
fcmove
dec
add
insl
dec
out
xor
insb
dec
pop
sub
jg
sbb
xchg
fstps
ljmp
mov
fxch
push
jp
dec
jns
push
into
cmc
cld
adcl
js
adc
das
stos
dec
adcb
bound
adcl
(bad)
aaa
outsl
in
cli
dec
lea
cwtl
nop
cmp
popf
shlb
lcall
(bad)
cmp
sbb
adc
fucomp
mov
push
mov
cwtl
push
sbb
mov
mov
lods
xchg
out
in
cwtl
pop
or
lds
dec
xchg
fs
fdivrl
mov
lea
mov
xchg
xor
mov
xor
add
stos
mull
jb
mov
shll
outsb
fisttps
cltd
jae
pop
jle
nop
addl
in
flds
xlat
mov
imul
lahf
outsl
xor
les
push
or
push
imul
cmpsb
pop
stos
mov
inc
push
cmp
int
enter
incl
jl
jg
cltd
mov
js
int3
cmp
testb
mov
mov
pop
enter
pop
nop
cld
add
pop
xchg
cmp
jmp
push
test
inc
movsl
fcoms
popa
xchg
add
sub
mov
push
popf
fs
es
inc
stos
mov
loop
sbb
mov
int
xchg
lret
dec
lahf
lock
and
push
stos
int
movsl
inc
jno
xchg
std
adc
test
lea
ret
out
ffreep
adc
adc
mov
mov
dec
pusha
push
lcall
in
and
cmp
sub
or
inc
stos
xchg
fucomip
cmc
xor
and
or
mov
inc
cltd
leave
dec
pop
xchg
fwait
xor
xor
stos
sti
in
lock
(bad)
jb
addr16
mov
mov
push
add
dec
inc
pop
jp
cwtl
clc
push
push
mov
push
and
jne
mov
sub
filds
push
es
mov
outsl
insl
mov
inc
loopne
jle
mov
lcall
xor
cmp
and
lods
pushf
cwtl
rcll
inc
mov
pop
xchg
xchg
pop
jne
inc
cmpsb
cmp
(bad)
mov
nop
fnstsw
pushf
mov
xchg
sbb
clc
pop
push
add
pusha
mov
pop
lfs
jb
pop
and
ja
add
test
test
les
mov
xchg
adc
in
frstor
or
