out
xchg
or
roll
imul
push
mov
(bad)
jrcxz
stos
shll
pop
rex.xb
(bad)
(bad)
(bad)
(bad)
movsxd
jp
jne
push
mov
movabs
and
outsl
adc
rex.wrxb
pushf
rex
(bad)
sarl
pop
push
in
(bad)
data16
movsxd
rorb
fstps
(bad)
sub
(bad)
rex.rxb
rorb
xor
mov
jg
(bad)
xchg
clc
stos
out
sbb
sbb
jmp
imul
cmp
(bad)
and
js
rex.wrx
repnz
scas
mov
sbb
and
xor
mov
cmp
movnti
cli
in
je
gs
sub
or
and
or
rex.rxb
{rex2
je
fcomps
mov
adc
or
loope
lods
(bad)
neg
(bad)
fisubs
rex.wrx
sub
(bad)
pop
lods
jbe
in
xchg
mov
sub
sub
jns
fstps
pushf
rex.rxb
jmp
lfs
mov
mov
sub
pop
in
imul
rex.wx
push
fsubrl
(bad)
sub
jno
sub
mov
cld
shrl
add
(bad)
(bad)
mov
(bad)
flds
mov
test
loope
int3
mov
push
push
rorb
subb
mov
loop
mov
push
mov
jne
jo
mov
xchg
ret
pop
(bad)
sarb
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
or
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
imul
rex.r
rex
rex
hlt
je
outsb
rex
int3
rex.w
or
xchg
push
enter
rex.rx
test
jo
pop
jg
mov
mov
rex.rxb
xchg
(bad)
in
{rex2
jge
jbe
andl
mov
xor
mov
and
test
sbb
out
imul
stos
and
(bad)
(bad)
jle
loopne
(bad)
movabs
nop
adc
xor
(bad)
(bad)
out
out
orb
adc
cmpsb
sbb
out
fmull
shlb
iret
mov
rex.x
shll
pop
es
ret
sub
(bad)
(bad)
mov
test
rex.wrxb
mov
imul
and
xor
add
fxch
rex.wrxb
mov
jg
(bad)
add
jnp
subl
or
push
enter
movsl
add
(bad)
shll
and
cwtl
push
add
ficoml
sbb
jge
shrb
xchg
mov
rex.wrx
mov
fisttps
adc
add
xor
imul
in
mov
lret
(bad)
movsb
xchg
adc
jp
rex.r
rex.rx
xor
shrl
add
xchg
push
jae
mov
rex.wrxb
imul
(bad)
mov
adc
sub
(bad)
test
mov
push
xor
mov
and
vmwrite
mov
rex.r
rex.r
jb
push
mov
mov
int1
fwait
(bad)
jno
push
sub
movabs
leave
movabs
mov
rex.wb
popf
sbb
movb
data16
jmp
(bad)
rex.wxb
xlat
pop
lret
{rex2
(bad)
(bad)
push
jrcxz
je
adc
scas
mov
rex.wb
fs
xchg
jl
fimull
lret
fwait
xlat
mov
lods
mov
mov
and
movabs
mov
adc
lods
push
push
je
cmp
jg
movsxd
xchg
xchg
pop
adc
movsb
{rex2
mov
xor
jae
test
div
(bad)
ja
mov
xor
push
rex.wrb
and
mov
mov
and
sub
cmp
loop
(bad)
cmp
stc
xor
lret
clc
scas
in
fstp
rex.wrb
rcll
jbe
shll
sub
push
cmp
xor
andl
jo
shlb
xchg
jl
cmpsl
(bad)
test
mov
{rex2
stc
sub
jns
scas
int
and
cmpsl
push
adc
repz
(bad)
or
and
sbb
(bad)
pop
fiadds
or
in
adc
(bad)
mov
ja
xchg
cmp
shlb
add
test
movsb
xchg
cmp
subb
out
push
jae
mov
rex.x
xor
ds
xchg
push
(bad)
xor
vpsadbw
cmp
clc
(bad)
(bad)
push
pop
clc
cmpsb
or
imulb
loope
cld
(bad)
(bad)
push
cmp
lea
adc
fwait
rex.x
(bad)
rex.wrxb
in
mov
(bad)
sbb
sub
jmp
mov
add
movabs
stc
rex.xb
repz
cwtl
lea
pop
lea
movabs
push
jnp
mov
clc
(bad)
rex.wrxb
gs
sub
sub
add
pop
jrcxz
and
insl
(bad)
adc
(bad)
fidivs
in
loopne
mov
or
jo
rex.r
nop
push
jns
(bad)
stos
std
pop
fxch
cltd
(bad)
fmull
stos
enter
(bad)
cltd
cmc
xchg
sub
or
push
sub
mov
scas
idivl
enter
rex.wrx
loop
or
or
movsxd
and
rex.x
rex.wrx
mov
stc
pop
xor
je
adc
(bad)
fildl
push
scas
loop
int
pop
adc
int
sub
xchg
rex.wrb
sbb
movabs
notl
in
in
movsl
adc
ret
(bad)
ret
movsl
mov
adc
call
xor
rex.wrx
mov
movabs
imul
sub
mov
cmovno
rex.wb
or
cli
int3
lods
xchg
(bad)
xorb
mov
hlt
xor
adc
xchg
(bad)
movabs
adc
call
push
rex.rb
cs
adc
rex.rxb
add
xchg
(bad)
je
jl
int
ret
(bad)
mov
movsb
xor
fcoml
jne
(bad)
movabs
movabs
pop
cmc
rex.rx
fcoms
(bad)
jp
cs
pop
mov
push
(bad)
cmp
js
(bad)
(bad)
mov
rex.rx
fwait
in
xchg
mov
ss
(bad)
jo
stos
rex.wb
repnz
jg
adc
and
xchg
mov
jo
(bad)
cmp
mov
mov
cmp
ret
jbe
in
fwait
ds
(bad)
(bad)
mov
rex.wrb
xor
cli
movabs
stos
rex.wrb
mov
or
adc
loop
sub
shrb
(bad)
shlb
add
movl
and
movsl
movabs
pop
mov
repz
jae
adc
test
out
sti
(bad)
add
push
jge
test
mov
adc
sub
sbb
push
out
or
cmp
xchg
xchg
leave
mov
es
imul
mov
and
jbe
movabs
push
jb
(bad)
adc
jnp
nop
subl
jnp
sub
push
cwtl
push
rex.xb
(bad)
mov
movabs
popf
or
shlb
sbb
sbb
(bad)
adc
lahf
add
mov
mov
push
push
rol
int3
iret
(bad)
(bad)
(bad)
xor
cmp
or
mov
sti
cmp
cmp
ds
sahf
or
fisttps
ds
rex.xb
stos
mov
loop
and
cwtl
imul
mov
sbb
add
outsl
ficoml
pushf
xchg
(bad)
add
fcoms
or
pop
test
(bad)
mov
push
ss
fs
sub
cli
cli
mov
mov
cwtl
rex.wrb
fdivp
xor
jns
in
jo
insb
mov
ret
(bad)
adc
(bad)
rex.wxb
xchg
xchg
(bad)
rex.wb
cmp
lock
leave
addr32
(bad)
rex.wrx
push
out
outsb
mov
push
rcrl
leave
rorb
cltd
and
add
mov
shr
(bad)
movups
js
lea
call
sbb
(bad)
cmp
scas
out
push
test
jle
xchg
movsxd
adc
mov
xchg
add
jp
faddl
call
pop
call
sub
ds
in
lret
rcrb
