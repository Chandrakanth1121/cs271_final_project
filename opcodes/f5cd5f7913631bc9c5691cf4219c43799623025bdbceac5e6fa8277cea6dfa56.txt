xchg
scas
lods
cmp
inc
lcall
xor
loop
mov
and
sub
inc
aaa
cmp
insb
stos
aas
into
mov
push
inc
push
dec
test
dec
inc
repnz
inc
cli
push
popa
std
mov
loop
inc
mov
rcrb
xchg
movsl
in
jl
push
out
inc
lods
fs
mov
hlt
lods
lods
roll
mov
sbb
insb
dec
bound
in
imul
inc
sub
movsb
sbb
loopne
jmp
add
or
mov
add
test
addl
movsl
ljmp
hlt
daa
cmpb
cmp
test
mov
dec
(bad)
and
(bad)
in
mov
in
add
rorl
int1
mov
out
or
xor
inc
daa
push
pushf
imul
andl
xor
inc
fwait
in
mov
dec
int3
jae
jns
repnz
mov
push
jmp
arpl
mov
inc
dec
aaa
sub
int
call
popa
lods
mov
xor
mov
xchg
dec
or
xchg
xchg
mov
adc
fidivl
(bad)
in
jno
dec
xchg
fadds
cmp
enter
add
xor
inc
aas
jmp
loopne
sbb
aad
mov
sbb
lret
cwtl
shlb
syscall
pop
fs
xchg
jno
outsb
roll
cwtl
and
push
xor
xchg
jmp
push
push
cmpsl
addr16
in
addl
dec
popa
push
xor
mov
out
ds
dec
je
jb
je
jne
test
jecxz
out
in
add
xor
push
or
fists
add
enter
sti
jns
pop
adc
jo
jns
inc
jg
and
in
mov
addb
add
sub
and
cmp
les
push
cmp
clc
sub
inc
xor
loopne
stos
dec
adc
jns
jno
scas
dec
cmpsl
jb
inc
inc
xchg
cmp
lods
fdivr
xchg
je
lret
cld
xchg
ds
(bad)
xor
jb
sub
into
scas
(bad)
xchg
inc
adc
cltd
popf
inc
int1
bound
fwait
insl
leave
hlt
mov
adc
push
push
push
jge
adc
jno
cmp
jl
je
es
aam
out
cmpsb
test
xor
jl
cmp
pop
scas
ror
cs
int3
dec
mov
shlb
movb
xor
es
aam
data16
stc
out
xchg
mov
inc
lds
xor
jno
fwait
out
loop
imul
sub
adc
xchg
xchg
jmp
clc
bound
push
push
int
cmp
add
gs
popf
cmp
cmp
cmpsb
inc
jno
push
stos
jge
mov
movsb
scas
test
sti
jg
dec
sub
test
ja
inc
push
mov
push
test
xchg
mov
inc
mov
dec
lret
movsl
lods
les
gs
jns
add
aad
out
push
sbb
les
xor
loope
add
repz
out
dec
sub
call
mov
cmp
cmpsl
in
adc
into
mov
movsl
ret
dec
xor
mov
inc
outsl
(bad)
ret
(bad)
(bad)
dec
movsb
aas
pushf
mov
sub
movsb
push
ret
and
pop
sbb
mov
sub
mov
mov
jmp
jae
int
pop
(bad)
hlt
or
cmp
int1
scas
mov
cmpsb
in
add
bound
jbe
inc
imul
cld
adc
jno
jne
clc
cmp
sub
pop
push
push
and
das
mov
in
sbb
pop
insb
push
inc
scas
in
andl
iret
sbb
xchg
dec
cmp
insb
sub
pop
xlat
jae
dec
negl
mov
int1
fadd
cmp
mov
xchg
incb
dec
cli
and
xor
imul
xchg
lret
lods
xor
clc
inc
mov
sbb
cmpsl
sbb
adc
and
mov
xor
jge
clc
jns
jmp
daa
addr16
in
jno
movsl
push
scas
push
and
and
xor
sbb
pop
sub
loop
fsubl
imul
(bad)
xor
inc
sahf
inc
xor
test
sub
push
jbe
addb
cmp
lretw
or
scas
sub
jmp
outsb
inc
cli
lock
jecxz
pop
xorb
or
inc
xchg
dec
xchg
out
hlt
neg
push
out
bound
cmc
inc
cld
repz
inc
jb
dec
shll
je
test
aaa
jmp
aas
int3
cmp
das
xchg
mov
std
sbb
jmp
push
xor
outsb
jg
in
cmc
jecxz
push
outsl
aad
cmpb
fsubs
jp
push
mov
mov
push
in
ror
clc
and
cmpb
imul
xor
out
enter
rclb
lock
leave
mov
das
movsl
into
inc
sub
jecxz
inc
pop
jno
sub
jecxz
push
adcb
call
out
add
lret
out
inc
inc
cmp
xor
bswap
cmp
in
xchg
dec
int1
int
cmp
adc
push
out
mov
jne
adc
arpl
mov
mov
jecxz
hlt
cmp
not
aaa
cmp
dec
enter
cld
negb
repnz
push
sbb
repnz
(bad)
push
iret
repz
or
or
cmp
imulb
into
insl
mov
mov
out
cli
xadd
add
cmpb
add
repnz
aas
inc
cld
shll
test
and
das
orl
inc
xchg
push
mov
jg
in
pop
loop
mov
sbb
dec
and
out
(bad)
ss
xor
shlb
hlt
mov
shlb
cmp
bound
mov
into
mov
and
inc
sub
cmc
sbb
scas
ss
pop
lret
loope
jecxz
xor
jno
mov
inc
mov
sbb
fstpl
pop
push
shr
pusha
out
in
fmuls
and
mov
fnstcw
mov
adcl
mov
sti
adc
jbe
xor
sbb
je
lock
mov
mov
xor
decl
jg
addr16
sub
fiaddl
dec
jecxz
ret
cmp
jle
mov
mov
xor
xor
mov
push
xor
xchg
sub
sub
cmp
or
xor
mov
jnp
pop
xchg
sub
dec
sub
mov
xor
jge
pop
jns
jo
lock
and
lret
xchg
mov
jbe
add
lods
xchg
(bad)
cmp
lahf
fbld
out
or
test
jg
cmc
lcall
ret
stos
inc
cmpsb
and
mov
push
cmp
jmp
jecxz
ret
cmc
sub
notb
enter
les
sub
dec
mov
sbb
jne
dec
mov
outsb
lock
dec
xor
or
push
jne
into
sbb
sbb
mov
loopne
dec
and
inc
out
cmpsb
or
add
mov
or
xor
sub
cld
loopne
inc
xchg
xor
les
mov
mov
lret
das
pop
lret
cmp
popa
sub
or
push
hlt
xchg
mov
mov
rcrb
aad
jo
dec
out
jne
stos
xor
out
fdivrs
lods
cmp
cmpsb
lahf
call
cmc
lock
les
ss
ror
xchg
push
mov
sbb
cmp
fwait
and
cmc
xchg
cmp
adc
das
xor
lock
es
outsl
shlb
call
stos
lret
jns
ret
add
ret
pop
ret
mov
pusha
orl
(bad)
cmp
or
jmp
into
sbb
lret
xchg
popf
push
xor
add
sbb
add
push
lahf
hlt
nop
insl
stos
dec
leave
repnz
in
inc
and
adc
jno
xchg
jbe
pop
pop
mov
inc
lea
xchg
xchg
stos
cmp
les
notb
les
imul
outsb
imul
inc
data16
mov
fwait
push
jmp
xchg
cs
lcall
ljmp
int1
mov
(bad)
movsb
mov
xor
les
out
xchg
mov
outsl
or
pop
dec
cs
and
mov
mov
mov
lea
ljmp
out
rcll
mov
mov
fimull
sub
lret
loope
int
rorl
inc
xchg
mov
sti
fisubrl
mov
pop
imul
mov
dec
insl
push
call
